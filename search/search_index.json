{"config":{"lang":["zh","en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"changelog/","title":"\u66f4\u65b0\u65e5\u5fd7","text":"<p>\u672c\u9875\u9762\u8bb0\u5f55EmailWidget\u9879\u76ee\u7684\u6240\u6709\u91cd\u8981\u53d8\u66f4\u3002</p> <p>\u9075\u5faa Keep a Changelog \u683c\u5f0f\uff0c \u7248\u672c\u53f7\u9075\u5faa \u8bed\u4e49\u5316\u7248\u672c \u89c4\u8303\u3002</p>"},{"location":"changelog/#unreleased","title":"[Unreleased]","text":""},{"location":"changelog/#_2","title":"\u8ba1\u5212\u529f\u80fd","text":"<ul> <li> \u6dfb\u52a0\u66f4\u591a\u56fe\u8868\u7c7b\u578b\u652f\u6301</li> <li> \u652f\u6301\u81ea\u5b9a\u4e49CSS\u6837\u5f0f</li> <li> \u6dfb\u52a0\u90ae\u4ef6\u6a21\u677f\u7cfb\u7edf</li> <li> \u652f\u6301RTL\u6587\u672c\u65b9\u5411</li> </ul>"},{"location":"changelog/#100-2024-01-15","title":"[1.0.0] - 2024-01-15","text":""},{"location":"changelog/#_3","title":"\u2728 \u65b0\u589e\u529f\u80fd","text":""},{"location":"changelog/#_4","title":"\ud83c\udfd7\ufe0f \u6838\u5fc3\u67b6\u6784","text":"<ul> <li>Email\u4e3b\u7c7b: \u5b8c\u6574\u7684\u90ae\u4ef6\u7ba1\u7406\u548c\u6e32\u67d3\u7cfb\u7edf</li> <li>BaseWidget: \u6240\u6709\u7ec4\u4ef6\u7684\u57fa\u7840\u7c7b\uff0c\u63d0\u4f9b\u7edf\u4e00\u7684API\u8bbe\u8ba1</li> <li>\u6a21\u677f\u5f15\u64ce: \u57fa\u4e8eJinja2\u7684\u9ad8\u6027\u80fd\u6a21\u677f\u6e32\u67d3\u7cfb\u7edf</li> <li>\u914d\u7f6e\u7cfb\u7edf: \u7075\u6d3b\u7684\u5168\u5c40\u548c\u5c40\u90e8\u914d\u7f6e\u7ba1\u7406</li> <li>\u9a8c\u8bc1\u5668\u6846\u67b6: \u5b8c\u6574\u7684\u6570\u636e\u9a8c\u8bc1\u548c\u7c7b\u578b\u68c0\u67e5\u7cfb\u7edf</li> </ul>"},{"location":"changelog/#widget-12","title":"\ud83c\udfa8 Widget\u7ec4\u4ef6\u5e93 (12\u4e2a\u7ec4\u4ef6)","text":"<ul> <li>TextWidget: 8\u79cd\u6587\u672c\u6837\u5f0f\uff0c\u652f\u6301\u81ea\u52a8\u7ae0\u8282\u7f16\u53f7</li> <li>TableWidget: DataFrame\u96c6\u6210\uff0c\u72b6\u6001\u5355\u5143\u683c\uff0c\u5f69\u8272\u6807\u8bb0</li> <li>ChartWidget: matplotlib/seaborn\u539f\u751f\u652f\u6301\uff0c\u81ea\u52a8Base64\u7f16\u7801</li> <li>ProgressWidget: 5\u79cd\u4e3b\u9898\uff0c\u52a8\u6001\u8fdb\u5ea6\u66f4\u65b0\uff0c\u767e\u5206\u6bd4\u663e\u793a</li> <li>CircularProgressWidget: \u5706\u5f62\u8fdb\u5ea6\u6761\uff0c\u591a\u79cd\u5c3a\u5bf8\uff0c\u52a8\u6001\u6548\u679c</li> <li>CardWidget: \u4fe1\u606f\u5361\u7247\uff0c\u56fe\u6807\u652f\u6301\uff0c\u5143\u6570\u636e\u7ba1\u7406</li> <li>AlertWidget: 5\u79cd\u8b66\u544a\u7c7b\u578b\uff0c\u81ea\u5b9a\u4e49\u56fe\u6807\uff0c\u6d88\u606f\u63d0\u9192</li> <li>ImageWidget: \u591a\u56fe\u7247\u6e90\u652f\u6301\uff0c\u5c3a\u5bf8\u63a7\u5236\uff0c\u63cf\u8ff0\u6587\u5b57</li> <li>QuoteWidget: \u5f15\u7528\u6837\u5f0f\uff0c\u4f5c\u8005\u4fe1\u606f\uff0c\u6765\u6e90\u6807\u6ce8</li> <li>StatusWidget: \u72b6\u6001\u9879\u7ba1\u7406\uff0c\u5e03\u5c40\u63a7\u5236\uff0c\u52a8\u6001\u66f4\u65b0</li> <li>ColumnWidget: \u54cd\u5e94\u5f0f\u591a\u5217\u5e03\u5c40\uff0c\u81ea\u52a8/\u624b\u52a8\u5217\u6a21\u5f0f</li> <li>LogWidget: \u65e5\u5fd7\u7ea7\u522b\u5206\u7c7b\uff0c\u8bed\u6cd5\u9ad8\u4eae\uff0c\u8fc7\u6ee4\u529f\u80fd</li> </ul>"},{"location":"changelog/#_5","title":"\ud83d\udee0\ufe0f \u5de5\u5177\u548c\u5de5\u5177\u7c7b","text":"<ul> <li>ImageUtils: \u56fe\u7247\u5904\u7406\uff0cBase64\u7f16\u7801\uff0cURL\u8bf7\u6c42</li> <li>Logger: \u9879\u76ee\u4e13\u7528\u65e5\u5fd7\u7cfb\u7edf\uff0c\u591a\u7ea7\u522b\u8f93\u51fa</li> <li>Cache: \u667a\u80fd\u7f13\u5b58\u7cfb\u7edf\uff0c\u63d0\u5347\u6e32\u67d3\u6027\u80fd</li> </ul>"},{"location":"changelog/#_6","title":"\ud83c\udfaf \u679a\u4e3e\u7c7b\u578b\u7cfb\u7edf","text":"<ul> <li>TextType: 8\u79cd\u6587\u672c\u6837\u5f0f\u7c7b\u578b</li> <li>AlertType: 5\u79cd\u8b66\u544a\u7c7b\u578b</li> <li>StatusType: 5\u79cd\u72b6\u6001\u7c7b\u578b  </li> <li>ProgressTheme: 5\u79cd\u8fdb\u5ea6\u6761\u4e3b\u9898</li> <li>TextAlign: 4\u79cd\u6587\u672c\u5bf9\u9f50\u65b9\u5f0f</li> <li>LayoutType: \u6c34\u5e73/\u5782\u76f4\u5e03\u5c40\u7c7b\u578b</li> <li>LogLevel: 5\u79cd\u65e5\u5fd7\u7ea7\u522b</li> <li>IconType: \u722c\u866b\u548c\u6570\u636e\u5904\u7406\u9886\u57df\u56fe\u6807</li> </ul>"},{"location":"changelog/#_7","title":"\ud83e\uddea \u6d4b\u8bd5\u4e0e\u8d28\u91cf\u4fdd\u8bc1","text":""},{"location":"changelog/#_8","title":"\ud83d\udcca \u6d4b\u8bd5\u8986\u76d6\u60c5\u51b5","text":"<ul> <li>\u603b\u6d4b\u8bd5\u7528\u4f8b: 537\u4e2a\uff0c100%\u901a\u8fc7</li> <li>\u4ee3\u7801\u8986\u76d6\u7387: 83%\uff0c\u4f01\u4e1a\u7ea7\u6807\u51c6</li> <li>\u6d4b\u8bd5\u6587\u4ef6: 11\u4e2a\u5b8c\u6574\u6d4b\u8bd5\u6a21\u5757</li> </ul>"},{"location":"changelog/#_9","title":"\ud83d\udd0d \u6d4b\u8bd5\u5206\u5e03","text":"<ul> <li>Email\u4e3b\u7c7b: 27\u4e2a\u6d4b\u8bd5 (\u6838\u5fc3\u529f\u80fd\u3001\u5bfc\u51fa\u6d41\u7a0b)</li> <li>TextWidget: 121\u4e2a\u6d4b\u8bd5 (\u6587\u672c\u6837\u5f0f\u3001\u7ae0\u8282\u7ba1\u7406)</li> <li>TableWidget: 37\u4e2a\u6d4b\u8bd5 (DataFrame\u96c6\u6210\u3001\u72b6\u6001\u5355\u5143\u683c)</li> <li>ProgressWidget: 49\u4e2a\u6d4b\u8bd5 (\u4e3b\u9898\u652f\u6301\u3001\u52a8\u6001\u66f4\u65b0)</li> <li>CircularProgressWidget: 30\u4e2a\u6d4b\u8bd5 (\u5706\u5f62\u8fdb\u5ea6\u3001\u5c3a\u5bf8\u63a7\u5236)</li> <li>\u5176\u4ed6\u7ec4\u4ef6: 273\u4e2a\u6d4b\u8bd5 (\u5b8c\u6574\u529f\u80fd\u8986\u76d6)</li> </ul>"},{"location":"changelog/#cicd","title":"\ud83d\ude80 CI/CD\u7ba1\u9053","text":"<ul> <li>\u591a\u5e73\u53f0\u6d4b\u8bd5: Python 3.10, 3.11, 3.12 \u00d7 Ubuntu/Windows</li> <li>\u4ee3\u7801\u8d28\u91cf: ruff\u683c\u5f0f\u5316\u3001mypy\u7c7b\u578b\u68c0\u67e5\u3001bandit\u5b89\u5168\u626b\u63cf</li> <li>\u81ea\u52a8\u5316\u6d41\u7a0b: GitHub Actions\u5de5\u4f5c\u6d41\uff0cPR\u81ea\u52a8\u6d4b\u8bd5</li> <li>\u6587\u6863\u6784\u5efa: \u81ea\u52a8\u5316\u6587\u6863\u751f\u6210\u548c\u90e8\u7f72</li> </ul>"},{"location":"changelog/#_10","title":"\ud83d\udcda \u6587\u6863\u7cfb\u7edf","text":""},{"location":"changelog/#_11","title":"\ud83d\udcd6 \u5b8c\u6574\u6587\u6863","text":"<ul> <li>\u5feb\u901f\u5f00\u59cb: \u5b89\u88c5\u914d\u7f6e\u3001\u7b2c\u4e00\u4e2a\u90ae\u4ef6\u3001\u57fa\u672c\u6982\u5ff5</li> <li>\u7528\u6237\u6307\u5357: 12\u4e2a\u7ec4\u4ef6\u8be6\u7ec6\u6559\u7a0b\uff0c\u914d\u7f6e\u7cfb\u7edf\uff0c\u6700\u4f73\u5b9e\u8df5</li> <li>API\u53c2\u8003: \u5b8c\u6574\u7684\u7c7b\u3001\u65b9\u6cd5\u548c\u53c2\u6570\u6587\u6863</li> <li>\u793a\u4f8b\u4ee3\u7801: \u6570\u636e\u62a5\u544a\u3001\u7cfb\u7edf\u76d1\u63a7\u3001\u722c\u866b\u62a5\u544a\u7b49\u5b9e\u9645\u573a\u666f</li> <li>\u5f00\u53d1\u6307\u5357: \u8d21\u732e\u4ee3\u7801\u3001\u73af\u5883\u914d\u7f6e\u3001\u6d4b\u8bd5\u6d41\u7a0b</li> </ul>"},{"location":"changelog/#_12","title":"\ud83c\udfa8 \u6587\u6863\u7279\u6027","text":"<ul> <li>Material Design: \u73b0\u4ee3\u5316\u7684\u6587\u6863\u754c\u9762</li> <li>\u4ee3\u7801\u9ad8\u4eae: \u8bed\u6cd5\u9ad8\u4eae\u548c\u4ee3\u7801\u590d\u5236\u529f\u80fd</li> <li>\u641c\u7d22\u529f\u80fd: \u4e2d\u82f1\u6587\u641c\u7d22\u652f\u6301</li> <li>\u54cd\u5e94\u5f0f\u8bbe\u8ba1: \u5b8c\u7f8e\u9002\u914d\u5404\u79cd\u8bbe\u5907</li> <li>\u4ea4\u4e92\u5f0f\u793a\u4f8b: \u53ef\u8fd0\u884c\u7684\u4ee3\u7801\u793a\u4f8b</li> </ul>"},{"location":"changelog/#_13","title":"\ud83c\udfd7\ufe0f \u67b6\u6784\u8bbe\u8ba1","text":""},{"location":"changelog/#_14","title":"\ud83c\udfaf \u8bbe\u8ba1\u539f\u5219","text":"<ul> <li>\u7b80\u6d01API: \u94fe\u5f0f\u8c03\u7528\uff0c\u76f4\u89c2\u6613\u7528</li> <li>\u7c7b\u578b\u5b89\u5168: \u5b8c\u6574\u7684\u7c7b\u578b\u6ce8\u89e3\u548c\u9a8c\u8bc1</li> <li>\u9ad8\u6027\u80fd: \u4f18\u5316\u7684\u6e32\u67d3\u5f15\u64ce\u548c\u7f13\u5b58\u7cfb\u7edf</li> <li>\u53ef\u6269\u5c55: \u57fa\u4e8eOOP\u7684\u63d2\u4ef6\u5316\u67b6\u6784</li> <li>\u517c\u5bb9\u6027: \u5e7f\u6cdb\u7684\u90ae\u4ef6\u5ba2\u6237\u7aef\u652f\u6301</li> </ul>"},{"location":"changelog/#_15","title":"\ud83d\udd27 \u6280\u672f\u6808","text":"<ul> <li>\u6838\u5fc3: Python 3.10+</li> <li>\u6a21\u677f: Jinja2\u6a21\u677f\u5f15\u64ce</li> <li>\u6570\u636e\u5904\u7406: pandas\u3001numpy\u96c6\u6210</li> <li>\u56fe\u8868: matplotlib\u3001seaborn\u539f\u751f\u652f\u6301</li> <li>\u9a8c\u8bc1: \u81ea\u7814\u9a8c\u8bc1\u5668\u6846\u67b6</li> <li>\u6d4b\u8bd5: pytest + coverage</li> <li>\u6587\u6863: MkDocs + Material\u4e3b\u9898</li> </ul>"},{"location":"changelog/#_16","title":"\ud83c\udfaa \u5e94\u7528\u573a\u666f","text":""},{"location":"changelog/#_17","title":"\ud83d\udcca \u6570\u636e\u5206\u6790\u62a5\u544a","text":"<ul> <li>\u4e1a\u52a1KPI\u76d1\u63a7\u90ae\u4ef6</li> <li>\u8d22\u52a1\u6570\u636e\u53ef\u89c6\u5316\u62a5\u544a</li> <li>\u7528\u6237\u884c\u4e3a\u5206\u6790\u62a5\u8868</li> <li>A/B\u6d4b\u8bd5\u7ed3\u679c\u5c55\u793a</li> </ul>"},{"location":"changelog/#_18","title":"\ud83d\udda5\ufe0f \u7cfb\u7edf\u76d1\u63a7\u62a5\u544a","text":"<ul> <li>\u670d\u52a1\u5668\u6027\u80fd\u76d1\u63a7</li> <li>\u5e94\u7528\u7a0b\u5e8f\u5065\u5eb7\u68c0\u67e5</li> <li>\u544a\u8b66\u901a\u77e5\u90ae\u4ef6</li> <li>\u8fd0\u7ef4\u72b6\u6001\u62a5\u544a</li> </ul>"},{"location":"changelog/#_19","title":"\ud83d\udd77\ufe0f \u722c\u866b\u4efb\u52a1\u62a5\u544a","text":"<ul> <li>\u6570\u636e\u91c7\u96c6\u7edf\u8ba1</li> <li>\u4efb\u52a1\u6267\u884c\u72b6\u51b5</li> <li>\u6570\u636e\u8d28\u91cf\u62a5\u544a</li> <li>\u5f02\u5e38\u60c5\u51b5\u901a\u77e5</li> </ul>"},{"location":"changelog/#_20","title":"\ud83d\udce7 \u5b9a\u671f\u4e1a\u52a1\u901a\u8baf","text":"<ul> <li>\u56e2\u961f\u5468\u62a5\u6708\u62a5</li> <li>\u9879\u76ee\u8fdb\u5c55\u6c47\u62a5</li> <li>\u4e1a\u52a1\u603b\u7ed3\u90ae\u4ef6</li> <li>\u5ba2\u6237\u901a\u8baf\u7b80\u62a5</li> </ul>"},{"location":"changelog/#_21","title":"\ud83d\udd04 \u8fc1\u79fb\u6307\u5357","text":"<p>\u8fd9\u662fEmailWidget\u7684\u7b2c\u4e00\u4e2a\u6b63\u5f0f\u7248\u672c\uff0c\u65e0\u9700\u8fc1\u79fb\u3002</p>"},{"location":"changelog/#_22","title":"\ud83d\ude4f \u81f4\u8c22","text":"<p>\u611f\u8c22\u4ee5\u4e0b\u8d21\u732e\u8005\u548c\u9879\u76ee\uff1a</p> <ul> <li>\u5f00\u53d1\u56e2\u961f: Python\u8c03\u5305\u4fa0</li> <li>\u6d4b\u8bd5\u8d21\u732e: 537\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\u548c\u7ef4\u62a4</li> <li>\u6587\u6863\u64b0\u5199: \u5b8c\u6574\u7684\u4e2d\u6587\u6587\u6863\u7cfb\u7edf</li> <li>\u793e\u533a\u53cd\u9988: GitHub\u7528\u6237\u7684\u95ee\u9898\u53cd\u9988\u548c\u5efa\u8bae</li> </ul>"},{"location":"changelog/#_23","title":"\u7248\u672c\u8bf4\u660e","text":""},{"location":"changelog/#_24","title":"\u7248\u672c\u547d\u540d\u89c4\u5219","text":"<p>EmailWidget \u91c7\u7528\u8bed\u4e49\u5316\u7248\u672c\u89c4\u8303\uff1a</p> <ul> <li>\u4e3b\u7248\u672c\u53f7: \u4e0d\u517c\u5bb9\u7684API\u4fee\u6539</li> <li>\u6b21\u7248\u672c\u53f7: \u5411\u4e0b\u517c\u5bb9\u7684\u529f\u80fd\u6027\u65b0\u589e  </li> <li>\u4fee\u8ba2\u7248\u672c\u53f7: \u5411\u4e0b\u517c\u5bb9\u7684\u95ee\u9898\u4fee\u6b63</li> </ul>"},{"location":"changelog/#_25","title":"\u53d1\u5e03\u5468\u671f","text":"<ul> <li>\u4e3b\u7248\u672c: \u6bcf\u5e741-2\u6b21\u91cd\u5927\u66f4\u65b0</li> <li>\u6b21\u7248\u672c: \u6bcf\u5b63\u5ea6\u529f\u80fd\u66f4\u65b0</li> <li>\u4fee\u8ba2\u7248\u672c: \u6bcf\u6708bug\u4fee\u590d\u548c\u5c0f\u6539\u8fdb</li> </ul>"},{"location":"changelog/#_26","title":"\u652f\u6301\u653f\u7b56","text":"<ul> <li>\u5f53\u524d\u7248\u672c: \u5b8c\u6574\u652f\u6301\u548c\u66f4\u65b0</li> <li>\u524d\u4e00\u4e2a\u4e3b\u7248\u672c: \u91cd\u8981bug\u4fee\u590d</li> <li>\u66f4\u65e9\u7248\u672c: \u4ec5\u5b89\u5168\u66f4\u65b0</li> </ul>   \ud83d\udce7 **EmailWidget v1.0.0** - *\u8ba9\u90ae\u4ef6\u62a5\u544a\u53d8\u5f97\u7b80\u5355\u7f8e\u89c2*  [\ud83d\ude80 \u7acb\u5373\u5f00\u59cb](getting-started/installation.md) \u2022 [\ud83d\udcd6 \u67e5\u770b\u6587\u6863](index.md) \u2022 [\ud83d\udc1b \u53cd\u9988\u95ee\u9898](https://github.com/271374667/EmailWidget/issues)"},{"location":"","title":"EmailWidget - Powerful Email Component Library","text":""},{"location":"#features","title":"\u2728 Features","text":"<ul> <li>Lightweight &amp; Compact: Quick installation with no complex dependencies (under 1MB)</li> <li>Easy to Use: Clear and simple API, create beautiful email templates with just a few lines of code</li> <li>Complete Documentation: Project has comprehensive documentation and type annotations for full IDE support</li> <li>Rich Components: Currently includes 15+ beautiful display components, all following Fluent design, viewable below</li> <li>Thoroughly Tested: Core functionality is completely tested to ensure project reliability</li> <li>Completely Free: Project uses MIT open source license, you can use it freely in any commercial project</li> </ul>"},{"location":"#why-choose-emailwidget","title":"\u2728 Why Choose EmailWidget?","text":"<p>Want to send alerts or logs to email but don't know how to beautify them and they look ugly? Use EmailWidget to complete the last step of sending emails!</p> <p>Want a beautiful email template but don't know HTML/CSS or just too lazy to write? Online templates are difficult to reuse after modification and don't support mobile? Then welcome to try EmailWidget - reusable, responsive, complete type hints, comprehensive documentation, lightweight email component library to help you quickly build your own report templates.</p> <p>EmailWidget is an email component library designed specifically for Python developers, allowing you to create beautiful HTML email reports with just a few lines of code without needing to understand HTML and CSS details for emails. The project is verified by 1000+ test cases with 100% test coverage for core code, ensuring stability and reliability.</p> <p>The email style below can be created with just 3 lines of code, and the generated content can be directly sent as email, recipients will also see beautiful emails.</p> Python<pre><code>from email_widget import Email\n\nemail = Email(\"\u6b22\u8fce\u4f7f\u7528EmailWidget\")\n\nemail.add_card(\"Python\u7248\u672c\", \"\u60a8\u9700\u8981Python3.10\u6216\u4ee5\u4e0a\u624d\u80fd\u4f7f\u7528EmailWidget\", metadata={\"Python\u7248\u672c\": \"3.10+\"})\n\nemail.add_quote(\"EmailWidget\u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u548c\u53d1\u9001HTML\u90ae\u4ef6\u7684Python\u5e93\u3002\", \"EmailWidget\")\n\nemail.export_html('welcome_email.html')\n</code></pre> <p></p>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"#installation","title":"\ud83d\udce6 Installation","text":"Bash<pre><code>pip install EmailWidget\n</code></pre>"},{"location":"#create-professional-reports-in-30-seconds","title":"Create Professional Reports in 30 Seconds","text":"Python<pre><code>from email_widget import Email, TextWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\ud83d\udcca \u4e1a\u52a1\u62a5\u544a\")\n\n# \u6dfb\u52a0\u6807\u9898\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u5b63\u5ea6\u4e1a\u7ee9\u603b\u7ed3\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\n    .set_value(92)\n    .set_label(\"\u76ee\u6807\u5b8c\u6210\u7387\")\n    .set_theme(ProgressTheme.SUCCESS)\n)\n\n# \u5bfc\u51faHTML\nemail.export_html(\"report.html\")\n</code></pre> \ud83d\udcca \u4e1a\u52a1\u62a5\u544a \ud83d\udcca \u4e1a\u52a1\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670801\u65e5 22:41:48 <p>\u5b63\u5ea6\u4e1a\u7ee9\u603b\u7ed3</p> \u76ee\u6807\u5b8c\u6210\u7387 92.0% <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"#use-cases","title":"\ud83c\udfaa Use Cases","text":"\ud83d\udcca Data Analysis Reports <p>Create professional data visualization email reports for data analysts</p> Business Analysis KPI Monitoring Trend Analysis <p>Core Components: ChartWidget, TableWidget, ProgressWidget</p> \ud83d\udda5\ufe0f System Monitoring Reports <p>Server status, performance metrics and system operations monitoring emails</p> System Ops Service Monitor Alert System <p>Core Components: StatusWidget, AlertWidget, LogWidget</p> \ud83d\udd77\ufe0f Web Scraping Reports <p>Scraping task execution status and data collection statistics email reports</p> Data Collection Task Monitoring Quality Reports <p>Core Components: ProgressWidget, TableWidget, LogWidget</p> \ud83d\udce7 Regular Business Communication <p>Team weekly reports, project progress, business summaries and other regular emails</p> Project Management Team Communication Business Reports <p>Core Components: TextWidget, CardWidget, QuoteWidget</p>"},{"location":"#component-gallery","title":"\ud83c\udfa8 Component Gallery","text":""},{"location":"#basic-components","title":"Basic Components","text":"Text ComponentTable ComponentChart Component Python<pre><code># 8\u79cd\u9884\u8bbe\u6837\u5f0f\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u5927\u6807\u9898\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u7ae0\u8282\u6807\u9898\")\n    .set_type(TextType.SECTION_H2)\n)\n\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u6b63\u6587\u5185\u5bb9\uff0c\u652f\u6301\u591a\u884c\u6587\u672c\u548c\u81ea\u52a8\u683c\u5f0f\u5316\u3002\")\n    .set_type(TextType.BODY)\n)\n</code></pre> Python<pre><code># DataFrame\u76f4\u63a5\u5bfc\u5165\ntable = TableWidget().set_title(\"\u9500\u552e\u6570\u636e\")\ntable.set_dataframe(df)\n\n# \u624b\u52a8\u6dfb\u52a0\u884c\ntable = TableWidget()\ntable.set_headers([\"\u4ea7\u54c1\", \"\u9500\u91cf\", \"\u72b6\u6001\"])\ntable.add_row([\"iPhone\", \"1000\", \"success\"])\ntable.add_row([\"iPad\", \"800\", \"warning\"])\n\nemail.add_widget(table)\n</code></pre> Python<pre><code># matplotlib\u56fe\u8868\nfig, ax = plt.subplots()\nax.plot([1, 2, 3, 4], [1, 4, 2, 3])\nax.set_title(\"\u8d8b\u52bf\u56fe\")\n\nemail.add_widget(\n    ChartWidget()\n    .set_chart(plt)\n    .set_title(\"\u6570\u636e\u8d8b\u52bf\")\n    .set_description(\"\u663e\u793a\u4e1a\u52a1\u6307\u6807\u53d8\u5316\u8d8b\u52bf\")\n)\n</code></pre>"},{"location":"#advanced-components","title":"Advanced Components","text":"Progress ComponentStatus ComponentNotification Component Python<pre><code># \u7ebf\u6027\u8fdb\u5ea6\u6761\nemail.add_widget(\n    ProgressWidget()\n    .set_value(75)\n    .set_label(\"\u9879\u76ee\u8fdb\u5ea6\")\n    .set_theme(ProgressTheme.PRIMARY)\n)\n\n# \u5706\u5f62\u8fdb\u5ea6\u6761\nemail.add_widget(\n    CircularProgressWidget()\n    .set_value(85)\n    .set_label(\"\u5b8c\u6210\u7387\")\n)\n</code></pre> Python<pre><code># \u72b6\u6001\u5361\u7247\nemail.add_widget(\n    CardWidget()\n    .set_title(\"\u7cfb\u7edf\u72b6\u6001\")\n    .set_content(\"\u6240\u6709\u670d\u52a1\u6b63\u5e38\u8fd0\u884c\")\n    .set_icon(\"\u2705\")\n)\n\n# \u72b6\u6001\u5217\u8868\nstatus_items = [\n    {\"label\": \"\u6570\u636e\u5e93\", \"status\": \"success\", \"value\": \"\u8fde\u63a5\u7a33\u5b9a\"},\n    {\"label\": \"API\", \"status\": \"warning\", \"value\": \"\u54cd\u5e94\u65f6\u95f4\u8f83\u957f\"}\n]\nemail.add_status_items(status_items)\n</code></pre> Python<pre><code># \u8b66\u544a\u6846\nemail.add_widget(\n    AlertWidget()\n    .set_content(\"\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\")\n    .set_alert_type(AlertType.WARNING)\n    .set_title(\"\u91cd\u8981\u63d0\u9192\")\n)\n\n# \u5f15\u7528\u6837\u5f0f\nemail.add_widget(\n    QuoteWidget()\n    .set_content(\"\u6570\u636e\u662f\u65b0\u65f6\u4ee3\u7684\u77f3\u6cb9\")\n    .set_author(\"Clive Humby\")\n    .set_source(\"\u6570\u636e\u79d1\u5b66\u5bb6\")\n)\n</code></pre>"},{"location":"#documentation-navigation","title":"\ud83d\udcd6 Documentation Navigation","text":"<ul> <li> Quick Start</li> <li> User Guide</li> <li> Component Preview</li> <li> API Reference</li> <li> Example Code</li> <li> Development Guide</li> </ul>"},{"location":"#community-support","title":"\ud83e\udd1d Community &amp; Support","text":""},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>\ud83d\udcda Documentation Center: Complete Documentation</li> <li>\ud83d\udc1b Issue Feedback: GitHub Issues</li> <li>\ud83d\udcac Discussion: GitHub Discussions</li> <li>\ud83d\udce7 Email Support: 271374667@qq.com</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We recommend using uv as the package management tool for project management and development</p> Bash<pre><code># 1. Clone project\ngit clone https://github.com/271374667/EmailWidget.git\n\n# 2. Install development environment\nuv sync\n\n# 3. Run tests\nuv run pytest\n\n# 4. Submit changes\ngit commit -m \"Feature: Add new functionality\"\n</code></pre>"},{"location":"#social-media","title":"Social Media","text":"<ul> <li>GitHub: 271374667/EmailWidget</li> <li>Bilibili: Python\u8c03\u5305\u4fa0</li> <li>Email: 271374667@qq.com</li> </ul>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>This project uses the MIT License open source license.</p> <p>\u2b50 **If this project helps you, please give us a star!** \u2b50</p> <p>Made with \u2764\ufe0f by Python\u8c03\u5305\u4fa0</p> <p>\ud83d\udcfa Watch Video Tutorials \u2022 \ud83d\udcd6 View Complete Documentation</p>"},{"location":"api/","title":"API Reference","text":"<p>Welcome to the EmailWidget API reference documentation! This provides detailed API specifications for all Widget components, including method signatures, parameter descriptions, return values, exception handling, and usage examples.</p>"},{"location":"api/#documentation-organization","title":"\ud83d\udcda Documentation Organization","text":"<p>EmailWidget's API is organized by functional modules to help you quickly find the interfaces you need:</p>"},{"location":"api/#core-architecture","title":"\ud83c\udfd7\ufe0f Core Architecture","text":"<ul> <li>Core Module - Base components and template engine</li> <li>Email Main Class - Email container and management functionality</li> <li>Email Sender - Email sending functionality and service provider support</li> </ul>"},{"location":"api/#component-system","title":"\ud83e\udde9 Component System","text":"<ul> <li>Text Widget</li> <li>Table Widget</li> <li>Image Widget</li> <li>Alert Widget</li> <li>Progress Widget</li> <li>Circular Progress Widget</li> <li>Card Widget</li> <li>Chart Widget</li> <li>Log Widget</li> <li>Quote Widget</li> <li>Column Widget</li> </ul>"},{"location":"api/#quick-navigation","title":"\ud83d\ude80 Quick Navigation","text":""},{"location":"api/#by-usage-frequency","title":"By Usage Frequency","text":"<p>High Frequency (Essential for daily development) - <code>Email</code> - Email main class - <code>TextWidget</code> - Text component - <code>TableWidget</code> - Table component - <code>ChartWidget</code> - Chart component - <code>AlertWidget</code> - Alert box component</p> <p>Medium Frequency (Common scenarios) - <code>ProgressWidget</code> - Progress bar component - <code>StatusWidget</code> - Status component - <code>CardWidget</code> - Card component</p>"},{"location":"api/#by-functional-category","title":"By Functional Category","text":"Function Category Main Components Use Cases Text Display <code>TextWidget</code>, <code>QuoteWidget</code> Titles, body text, quotes Data Display <code>TableWidget</code>, <code>ChartWidget</code> Data reports, statistical charts Status Monitoring <code>StatusWidget</code>, <code>ProgressWidget</code>, <code>CircularProgressWidget</code> System monitoring, task progress Layout Control <code>ColumnWidget</code>, <code>CardWidget</code> Page layout, information cards Interactive Feedback <code>AlertWidget</code>, <code>LogWidget</code> Notifications, log recording"},{"location":"api/#usage-instructions","title":"\ud83d\udcd6 Usage Instructions","text":""},{"location":"api/#api-documentation-conventions","title":"API Documentation Conventions","text":""},{"location":"api/#method-chaining","title":"\ud83d\udd17 Method Chaining","text":"<p>EmailWidget extensively uses method chaining patterns, where most setter methods return <code>self</code>:</p> Python<pre><code>widget = TextWidget()\\\n    .set_content(\"Hello World\")\\\n    .set_color(\"#0078d4\")\\\n    .set_font_size(\"18px\")\n</code></pre>"},{"location":"api/#type-hints","title":"\ud83c\udff7\ufe0f Type Hints","text":"<p>All APIs provide complete type hints:</p> Python<pre><code>def set_content(self, content: str) -&gt; 'TextWidget':\n    \"\"\"\u8bbe\u7f6e\u6587\u672c\u5185\u5bb9\n\n    Args:\n        content: \u6587\u672c\u5185\u5bb9\u5b57\u7b26\u4e32\n\n    Returns:\n        \u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n    \"\"\"\n</code></pre>"},{"location":"api/#exception-handling","title":"\u26a0\ufe0f Exception Handling","text":"<p>API uses explicit exception types:</p> Python<pre><code>from email_widget.core.validators import ValidationError\n\ntry:\n    widget.set_color(\"invalid-color\")\nexcept ValidationError as e:\n    print(f\"\u989c\u8272\u683c\u5f0f\u9519\u8bef: {e}\")\n</code></pre>"},{"location":"api/#common-patterns","title":"Common Patterns","text":""},{"location":"api/#creating-basic-email","title":"\ud83d\udcdd Creating Basic Email","text":"Python<pre><code>from email_widget import Email, TextWidget, TableWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u6570\u636e\u62a5\u544a\")\n\n# \u6dfb\u52a0\u6807\u9898\nemail.add_widget(\n    TextWidget()\\\n    .set_content(\"\u6708\u5ea6\u4e1a\u7ee9\u6c47\u603b\")\\\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u5bfc\u51faHTML\nemail.export_html(\"report.html\")\n</code></pre>"},{"location":"api/#data-visualization","title":"\ud83d\udcca Data Visualization","text":"Python<pre><code>from email_widget.widgets import ChartWidget, ProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\n# \u6dfb\u52a0\u56fe\u8868\nemail.add_widget(\n    ChartWidget()\\\n    .set_image_url(\"chart.png\")\\\n    .set_title(\"\u9500\u552e\u8d8b\u52bf\")\n)\n\n# \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\\\n    .set_value(85)\\\n    .set_label(\"\u76ee\u6807\u5b8c\u6210\u5ea6\")\\\n    .set_theme(ProgressTheme.SUCCESS)\n)\n</code></pre>"},{"location":"api/#custom-styling","title":"\ud83c\udfa8 Custom Styling","text":"Python<pre><code>from email_widget.core.config import EmailConfig\n\n# \u914d\u7f6e\u4e3b\u9898\nconfig = EmailConfig()\nconfig.set_primary_color(\"#6c5ce7\")\nconfig.set_font_family(\"'Helvetica Neue', Arial, sans-serif\")\n\n# \u5e94\u7528\u5230\u90ae\u4ef6\nemail.config = config\n</code></pre>"},{"location":"api/#search-tips","title":"\ud83d\udd0d Search Tips","text":""},{"location":"api/#finding-by-need","title":"Finding by Need","text":"<ul> <li>Looking for specific methods: Use <code>Ctrl+F</code> to search method names</li> <li>Understanding parameter types: Check type hints and parameter descriptions</li> <li>Viewing usage examples: Each method provides practical usage examples</li> <li>Understanding return values: Note return types and method chaining support</li> </ul>"},{"location":"api/#common-search-terms","title":"Common Search Terms","text":"Search Need Search Keywords Set colors <code>color</code>, <code>set_color</code> Adjust size <code>size</code>, <code>width</code>, <code>height</code> Text styling <code>font</code>, <code>text</code>, <code>align</code> Data binding <code>data</code>, <code>dataframe</code>, <code>set_data</code> Event handling <code>callback</code>, <code>event</code>, <code>handler</code> Validation rules <code>validator</code>, <code>validate</code>"},{"location":"api/#version-compatibility","title":"\ud83d\udccb Version Compatibility","text":"<p>Current documentation corresponds to EmailWidget v1.0.0, API stability description:</p> <ul> <li>\ud83d\udfe2 Stable API: Main Widget classes and methods</li> <li>\ud83d\udfe1 Experimental API: Advanced features and custom extensions</li> <li>\ud83d\udd34 Internal API: Methods starting with <code>_</code>, compatibility not guaranteed</li> </ul>"},{"location":"api/#getting-help","title":"\ud83d\udcde Getting Help","text":"<p>If you encounter issues while using the API:</p> <ol> <li>\ud83d\udcd6 Consult the corresponding User Guide</li> <li>\ud83d\udca1 Reference Example Code</li> <li>\ud83d\udc1b Submit GitHub Issue</li> <li>\ud83d\udcac Join discussions GitHub Discussions</li> </ol> <p>Now start exploring EmailWidget's powerful API! We recommend starting with the Email Main Class.</p>"},{"location":"api/#important-notes","title":"Important Notes","text":"<ol> <li>Email Compatibility - All components are optimized for email clients</li> <li>Responsive Design - Supports adaptive display for different screen sizes</li> <li>Method Chaining - All setter methods return self, supporting method chaining</li> <li>Parameter Validation - Provides input parameter validation and error handling</li> <li>Chinese Support - Complete support for Chinese character display</li> <li>Dependency Management - Some features require additional dependency libraries (such as matplotlib, pandas)</li> </ol>"},{"location":"api/#getting-help_1","title":"Getting Help","text":"<p>If you encounter problems while using the API:</p> <ol> <li>Check the detailed API documentation for the corresponding component</li> <li>Reference usage examples in the user guide</li> <li>View example code in the GitHub repository</li> <li>Submit an Issue for technical support</li> </ol>"},{"location":"api/#version-information","title":"Version Information","text":"<p>Current API documentation corresponds to EmailWidget v1.0.0. The API may change in new versions, please pay attention to version compatibility.</p>"},{"location":"api/alert-widget/","title":"AlertWidget API","text":""},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget","title":"<code>AlertWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a GitHub-style alert box (Admonition).</p> <p>This widget is used to highlight specific information in emails, such as notes, tips, warnings, or important reminders. It supports multiple preset alert types, each with unique colors and icons to attract reader attention.</p> <p>Attributes:</p> Name Type Description <code>content</code> <code>str</code> <p>Main text content displayed in the alert box.</p> <code>alert_type</code> <code>AlertType</code> <p>Type of alert, determines its appearance (color and icon).</p> <code>title</code> <code>Optional[str]</code> <p>Custom title for the alert box. If not set, will use default title based on <code>alert_type</code>.</p> <p>Examples:</p> <p>Basic usage, creating a warning type alert box:</p> Python<pre><code>from email_widget.widgets import AlertWidget\nfrom email_widget.core.enums import AlertType\n\nalert = AlertWidget()\nalert.set_content(\"System will undergo maintenance in 5 minutes, please save your work in time.\")\nalert.set_alert_type(AlertType.WARNING)\nalert.set_title(\"System Maintenance Notice\")\n\n# You can also use method chaining to simplify code:\nalert_chained = (AlertWidget()\n                 .set_content(\"New features are online, go experience them!\")\n                 .set_alert_type(AlertType.TIP)\n                 .set_title(\"Product Update\")\n                 .set_icon(\"\ud83c\udf89\"))\n</code></pre> <p>Initialize AlertWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget-functions","title":"Functions","text":""},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget.clear_title","title":"<code>clear_title()</code>","text":"<p>Clear the alert box custom title.</p> <p>After calling this method, the alert box will display the default title based on <code>alert_type</code>.</p> <p>Returns:</p> Name Type Description <code>AlertWidget</code> <code>AlertWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; alert = AlertWidget().set_title(\"Custom Title\").clear_title()\n</code></pre>"},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering</p>"},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget.set_alert_type","title":"<code>set_alert_type(alert_type)</code>","text":"<p>Set the alert type.</p> <p>Different alert types will apply different colors and icons.</p> <p>Parameters:</p> Name Type Description Default <code>alert_type</code> <code>AlertType</code> <p>Alert type enumeration value.</p> required <p>Returns:</p> Name Type Description <code>AlertWidget</code> <code>AlertWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; alert = AlertWidget().set_alert_type(AlertType.WARNING)\n</code></pre>"},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget.set_content","title":"<code>set_content(content)</code>","text":"<p>Set the main text content displayed in the alert box.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>Alert content.</p> required <p>Returns:</p> Name Type Description <code>AlertWidget</code> <code>AlertWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When content is empty.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; alert = AlertWidget().set_content(\"This is an important notice.\")\n</code></pre>"},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget.set_full_alert","title":"<code>set_full_alert(content, alert_type, title=None)</code>","text":"<p>Set complete alert information at once.</p> <p>This method allows setting alert content, type, and optional title simultaneously for convenient quick configuration.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>Alert content.</p> required <code>alert_type</code> <code>AlertType</code> <p>Alert type.</p> required <code>title</code> <code>str</code> <p>Optional custom title.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>AlertWidget</code> <code>AlertWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; alert = AlertWidget().set_full_alert(\"Operation successful!\", AlertType.TIP, \"Complete\")\n</code></pre>"},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget.set_icon","title":"<code>set_icon(icon)</code>","text":"<p>Set the alert box custom icon.</p> <p>Parameters:</p> Name Type Description Default <code>icon</code> <code>str</code> <p>Icon character (such as emoji or Unicode character).</p> required <p>Returns:</p> Name Type Description <code>AlertWidget</code> <code>AlertWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; alert = AlertWidget().set_icon(\"\ud83d\ude80\")\n</code></pre>"},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>Set the alert box custom title.</p> <p>If not set, will use the default title based on <code>alert_type</code>.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Custom title text.</p> required <p>Returns:</p> Name Type Description <code>AlertWidget</code> <code>AlertWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; alert = AlertWidget().set_title(\"Important Notice\")\n</code></pre>"},{"location":"api/alert-widget/#email_widget.widgets.alert_widget.AlertWidget.show_icon","title":"<code>show_icon(show=True)</code>","text":"<p>Set whether to display the alert box icon.</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>Whether to show the icon, defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>AlertWidget</code> <code>AlertWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; alert = AlertWidget().show_icon(False)  # Hide icon\n</code></pre>"},{"location":"api/button-widget/","title":"ButtonWidget API","text":""},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget","title":"<code>ButtonWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a beautiful button-style link.</p> <p>This widget is used to create button-style links in emails, mainly for guiding users to click and jump to specified pages. Supports custom button text, link address, colors and styles.</p> <p>Attributes:</p> Name Type Description <code>text</code> <code>str</code> <p>Text content displayed on the button.</p> <code>href</code> <code>str</code> <p>Link address to jump to after clicking the button.</p> <code>background_color</code> <code>str</code> <p>Background color of the button.</p> <code>text_color</code> <code>str</code> <p>Text color of the button.</p> <code>width</code> <code>Optional[str]</code> <p>Width of the button, can be pixel value or percentage.</p> <code>align</code> <code>str</code> <p>Alignment of the button (left, center, right).</p> <p>Examples:</p> <p>Create a basic button:</p> Python<pre><code>from email_widget.widgets import ButtonWidget\n\n# Create a simple button\nbutton = ButtonWidget()\nbutton.set_text(\"Click to View Details\")\nbutton.set_href(\"https://example.com/details\")\n\n# Use method chaining to create custom styled button\nbutton_custom = (ButtonWidget()\n                .set_text(\"Buy Now\")\n                .set_href(\"https://shop.example.com\")\n                .set_background_color(\"#22c55e\")\n                .set_text_color(\"#ffffff\")\n                .set_width(\"200px\")\n                .set_align(\"center\"))\n\n# Create fully configured button\nbutton_full = (ButtonWidget()\n              .set_full_button(\"Free Trial\", \"https://example.com/trial\")\n              .set_padding(\"12px 24px\")\n              .set_font_size(\"16px\")\n              .set_border_radius(\"8px\"))\n</code></pre> <p>Initialize ButtonWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget-functions","title":"Functions","text":""},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering</p>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_align","title":"<code>set_align(align)</code>","text":"<p>Set the button alignment.</p> <p>Parameters:</p> Name Type Description Default <code>align</code> <code>str</code> <p>Alignment method, possible values: \"left\", \"center\", \"right\".</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When alignment method is invalid.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_align(\"center\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_background_color","title":"<code>set_background_color(color)</code>","text":"<p>Set the button's background color.</p> <p>Parameters:</p> Name Type Description Default <code>color</code> <code>str</code> <p>Color value, supports hex format (e.g., #3b82f6) or color names.</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_background_color(\"#22c55e\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_border","title":"<code>set_border(border)</code>","text":"<p>Set the button border style.</p> <p>Parameters:</p> Name Type Description Default <code>border</code> <code>Optional[str]</code> <p>Border style, e.g., \"2px solid #3b82f6\". If None, no border.</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_border(\"2px solid #3b82f6\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_border_radius","title":"<code>set_border_radius(radius)</code>","text":"<p>Set the button border radius.</p> <p>Parameters:</p> Name Type Description Default <code>radius</code> <code>str</code> <p>Border radius value, e.g., \"6px\".</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_border_radius(\"8px\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_font_size","title":"<code>set_font_size(size)</code>","text":"<p>Set the button text font size.</p> <p>Parameters:</p> Name Type Description Default <code>size</code> <code>str</code> <p>Font size, e.g., \"16px\".</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_font_size(\"16px\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_font_weight","title":"<code>set_font_weight(weight)</code>","text":"<p>Set the button text font weight.</p> <p>Parameters:</p> Name Type Description Default <code>weight</code> <code>str</code> <p>Font weight, e.g., \"normal\", \"600\", \"bold\".</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_font_weight(\"bold\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_full_button","title":"<code>set_full_button(text, href, background_color=None)</code>","text":"<p>Set button basic information at once.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Button text.</p> required <code>href</code> <code>str</code> <p>Link address.</p> required <code>background_color</code> <code>Optional[str]</code> <p>Optional background color.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_full_button(\"Start Now\", \"https://example.com\", \"#22c55e\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_href","title":"<code>set_href(href)</code>","text":"<p>Set the button's link address.</p> <p>Parameters:</p> Name Type Description Default <code>href</code> <code>str</code> <p>Target link address.</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When link format is invalid.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_href(\"https://example.com\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_padding","title":"<code>set_padding(padding)</code>","text":"<p>Set the button padding.</p> <p>Parameters:</p> Name Type Description Default <code>padding</code> <code>str</code> <p>Padding value, e.g., \"10px 20px\".</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_padding(\"12px 24px\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_text","title":"<code>set_text(text)</code>","text":"<p>Set the text displayed on the button.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Button text content.</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When text is empty.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_text(\"View More\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_text_color","title":"<code>set_text_color(color)</code>","text":"<p>Set the button text color.</p> <p>Parameters:</p> Name Type Description Default <code>color</code> <code>str</code> <p>Color value, supports hex format or color names.</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_text_color(\"#ffffff\")\n</code></pre>"},{"location":"api/button-widget/#email_widget.widgets.button_widget.ButtonWidget.set_width","title":"<code>set_width(width)</code>","text":"<p>Set the button width.</p> <p>Parameters:</p> Name Type Description Default <code>width</code> <code>Optional[str]</code> <p>Width value, can be pixel value (e.g., \"200px\") or percentage (e.g., \"50%\").                   If None, the button will adapt width based on content.</p> required <p>Returns:</p> Name Type Description <code>ButtonWidget</code> <code>ButtonWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; button = ButtonWidget().set_width(\"200px\")\n&gt;&gt;&gt; button = ButtonWidget().set_width(\"100%\")\n</code></pre>"},{"location":"api/card-widget/","title":"CardWidget API","text":""},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget","title":"<code>CardWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a content card for displaying information in a structured way.</p> <p>Cards are ideal for organizing and presenting information, commonly used for displaying data summaries, status updates, profiles, etc. They support titles, main content, icons, and one or more metadata entries.</p> <p>Attributes:</p> Name Type Description <code>title</code> <code>Optional[str]</code> <p>The card's title.</p> <code>content</code> <code>str</code> <p>The card's main content text.</p> <code>icon</code> <code>Optional[str]</code> <p>Icon displayed before the title, can be Emoji or other characters.</p> <code>metadata</code> <code>Dict[str, str]</code> <p>A key-value dictionary for displaying additional information at the bottom of the card.</p> <p>Examples:</p> <p>Create a card for displaying service status:</p> Python<pre><code>from email_widget.widgets import CardWidget\n\ncard = CardWidget()\ncard.set_title(\"API Service Monitoring\")\ncard.set_content(\"All services running normally, average response time 50ms.\")\ncard.set_icon(\"\u2705\")\ncard.add_metadata(\"Last Check Time\", \"2024-07-07 10:30:00\")\ncard.add_metadata(\"Uptime\", \"99.99%\")\n\n# Using method chaining for more compact code:\nserver_status_card = (CardWidget()                              .set_title(\"Database Server\")                              .set_content(\"Connection normal, disk space sufficient.\")                              .set_icon(\"\ud83d\uddc4\ufe0f\")                              .set_metadata({\n                          \"CPU Usage\": \"15%\",\n                          \"Memory Usage\": \"2.5 GB / 16 GB\"\n                      }))\n</code></pre> <p>Initialize CardWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget-functions","title":"Functions","text":""},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget.add_metadata","title":"<code>add_metadata(key, value)</code>","text":"<p>Add a metadata entry to the card.</p> <p>Metadata is displayed at the bottom of the card in key-value pairs.</p> <p>Parameters:</p> Name Type Description Default <code>key</code> <code>str</code> <p>The metadata item's key (name).</p> required <code>value</code> <code>str</code> <p>The metadata item's value.</p> required <p>Returns:</p> Name Type Description <code>CardWidget</code> <code>CardWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; card = CardWidget().add_metadata(\"Version\", \"1.0.0\")\n</code></pre>"},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget.clear_metadata","title":"<code>clear_metadata()</code>","text":"<p>Clear all metadata from the card.</p> <p>Returns:</p> Name Type Description <code>CardWidget</code> <code>CardWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; card = CardWidget().clear_metadata()\n</code></pre>"},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering</p>"},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget.set_content","title":"<code>set_content(content)</code>","text":"<p>Set the card's main content text.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>Card content text.</p> required <p>Returns:</p> Name Type Description <code>CardWidget</code> <code>CardWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When content is empty.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; card = CardWidget().set_content(\"All services running normally.\")\n</code></pre>"},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget.set_icon","title":"<code>set_icon(icon)</code>","text":"<p>Set the icon displayed before the title.</p> <p>The icon can be any string (such as Emoji characters) or <code>IconType</code> enumeration value.</p> <p>Parameters:</p> Name Type Description Default <code>icon</code> <code>Union[str, IconType]</code> <p>Icon string or <code>IconType</code> enumeration.</p> required <p>Returns:</p> Name Type Description <code>CardWidget</code> <code>CardWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; card = CardWidget().set_icon(\"\u2705\")\n&gt;&gt;&gt; card = CardWidget().set_icon(IconType.DATA)\n</code></pre>"},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget.set_metadata","title":"<code>set_metadata(metadata)</code>","text":"<p>Set all metadata for the card.</p> <p>This method will replace all existing metadata.</p> <p>Parameters:</p> Name Type Description Default <code>metadata</code> <code>Dict[str, str]</code> <p>Dictionary containing all metadata items.</p> required <p>Returns:</p> Name Type Description <code>CardWidget</code> <code>CardWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; card = CardWidget().set_metadata({\"CPU\": \"15%\", \"Memory\": \"60%\"})\n</code></pre>"},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget.set_status","title":"<code>set_status(status)</code>","text":"<p>Set the card's status.</p> <p>This status is typically used for internal logic or future visual indicators, currently does not directly affect card appearance.</p> <p>Parameters:</p> Name Type Description Default <code>status</code> <code>StatusType</code> <p>The card's status type.</p> required <p>Returns:</p> Name Type Description <code>CardWidget</code> <code>CardWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; card = CardWidget().set_status(StatusType.SUCCESS)\n</code></pre>"},{"location":"api/card-widget/#email_widget.widgets.card_widget.CardWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>Set the card's title.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Card title text.</p> required <p>Returns:</p> Name Type Description <code>CardWidget</code> <code>CardWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When title is empty.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; card = CardWidget().set_title(\"System Status\")\n</code></pre>"},{"location":"api/chart-widget/","title":"ChartWidget API","text":""},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget","title":"<code>ChartWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code>, <code>ChartMixin</code></p> <p>Embed charts in emails, supporting <code>matplotlib</code> and <code>seaborn</code>.</p> <p>This widget can seamlessly embed dynamically generated charts (such as <code>matplotlib</code> or <code>seaborn</code> chart objects) or static image files (local or URL) into email content. It automatically handles chart rendering, Base64 encoding, and Chinese character display issues, greatly facilitating the creation of data visualization reports.</p> Core features <ul> <li>Dynamic chart support: Directly accepts <code>matplotlib.pyplot</code> or <code>seaborn</code> chart objects.</li> <li>Static image support: Can load images through URL or local file paths.</li> <li>Automatic Chinese fonts: Automatically detects and configures appropriate Chinese fonts to ensure normal display of Chinese text in charts.</li> <li>Content enhancement: Supports adding titles, descriptions, and data summaries to charts.</li> </ul> <p>Examples:</p> <p>Use <code>matplotlib</code> to create a simple bar chart and add it to an email:</p> Python<pre><code>import matplotlib.pyplot as plt\nfrom email_widget.widgets import ChartWidget\n\n# 1. Create a matplotlib chart\nplt.figure(figsize=(10, 6))\ncategories = ['Q1', 'Q2', 'Q3', 'Q4']\nsales = [120, 150, 130, 180]\nplt.bar(categories, sales, color='skyblue')\nplt.title('Annual Sales (10k Yuan)')\nplt.ylabel('Sales')\n\n# 2. Create ChartWidget and set chart\nchart = (ChartWidget()                 .set_chart(plt)  # Pass plt object\n         .set_title(\"2024 Annual Sales Performance\")                 .set_description(\"Quarterly sales comparison chart showing annual sales trends.\")                 .set_data_summary(\"Total Sales: 5.8 million yuan, Highest Quarter: Q4\"))\n\n# Assuming email is an Email object\n# email.add_widget(chart)\n</code></pre> <p>Using external image URL:</p> Python<pre><code>chart_from_url = (ChartWidget()                          .set_image_url(\"https://www.example.com/charts/monthly_trends.png\")                          .set_title(\"Monthly Trend Chart\")                          .set_alt_text(\"A line chart showing monthly growth trends\"))\n</code></pre> <p>Initialize ChartWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget-functions","title":"Functions","text":""},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get context data required for template rendering</p>"},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget.set_alt_text","title":"<code>set_alt_text(alt)</code>","text":"<p>Set image alternative text.</p> <p>Used for accessibility and when image loading fails.</p> <p>Parameters:</p> Name Type Description Default <code>alt</code> <code>str</code> <p>Alternative text.</p> required <p>Returns:</p> Name Type Description <code>ChartWidget</code> <code>ChartWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; chart = ChartWidget().set_alt_text(\"Sales data bar chart\")\n</code></pre>"},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget.set_chart","title":"<code>set_chart(plt_obj)</code>","text":"<p>Set matplotlib/seaborn chart object.</p> <p>Convert chart object to Base64-encoded PNG image embedded in email. Automatically configure Chinese font support.</p> <p>Parameters:</p> Name Type Description Default <code>plt_obj</code> <code>Any</code> <p>matplotlib pyplot object or figure object.</p> required <p>Returns:</p> Name Type Description <code>ChartWidget</code> <code>ChartWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ImportError</code> <p>If matplotlib library is not installed.</p> <code>Exception</code> <p>If chart conversion fails.</p> <p>Examples:</p> Python<pre><code>import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10, 6))\nax.bar(['Q1', 'Q2', 'Q3', 'Q4'], [100, 120, 140, 110])\nax.set_title('Quarterly Sales')\nchart = ChartWidget().set_chart(plt)\n\n# Using seaborn\nimport seaborn as sns\nsns.barplot(data=df, x='month', y='sales')\nchart = ChartWidget().set_chart(plt)\n</code></pre> Note <p>After calling this method, the original chart object will be closed to free memory. If conversion fails, the image URL will be set to None.</p>"},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget.set_data_summary","title":"<code>set_data_summary(summary)</code>","text":"<p>Set data summary.</p> <p>Display key data summary information below the chart.</p> <p>Parameters:</p> Name Type Description Default <code>summary</code> <code>str</code> <p>Data summary text.</p> required <p>Returns:</p> Name Type Description <code>ChartWidget</code> <code>ChartWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; chart = ChartWidget().set_data_summary(\"Average growth rate: 15.3%, Peak value: \u00a5500k\")\n</code></pre>"},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget.set_description","title":"<code>set_description(description)</code>","text":"<p>Set chart description.</p> <p>Parameters:</p> Name Type Description Default <code>description</code> <code>str</code> <p>Chart description text.</p> required <p>Returns:</p> Name Type Description <code>ChartWidget</code> <code>ChartWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; chart = ChartWidget().set_description(\"Shows sales comparison by region\")\n</code></pre>"},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget.set_image_url","title":"<code>set_image_url(image_url, cache=True)</code>","text":"<p>Set chart image URL or file path.</p> <p>This method supports loading images from network URLs or local file paths. Images are automatically processed and converted to Base64-encoded data URIs, directly embedded into HTML to ensure compatibility in email clients.</p> <p>Parameters:</p> Name Type Description Default <code>image_url</code> <code>Union[str, Path]</code> <p>Image URL string or local file Path object.</p> required <code>cache</code> <code>bool</code> <p>Whether to cache network images, defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>ChartWidget</code> <code>ChartWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If image URL or path is invalid, or image processing fails.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; # Using URL\n&gt;&gt;&gt; chart = ChartWidget().set_image_url(\"https://example.com/chart.png\")\n</code></pre> Python Console Session<pre><code>&gt;&gt;&gt; # Using local file path\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; chart = ChartWidget().set_image_url(Path(\"./charts/sales.png\"))\n</code></pre>"},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget.set_max_width","title":"<code>set_max_width(max_width)</code>","text":"<p>Set maximum width of chart container.</p> <p>Parameters:</p> Name Type Description Default <code>max_width</code> <code>str</code> <p>CSS maximum width value.</p> required <p>Returns:</p> Name Type Description <code>ChartWidget</code> <code>ChartWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; chart = ChartWidget().set_max_width(\"800px\")\n&gt;&gt;&gt; chart = ChartWidget().set_max_width(\"90%\")\n</code></pre>"},{"location":"api/chart-widget/#email_widget.widgets.chart_widget.ChartWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>Set chart title.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Chart title text.</p> required <p>Returns:</p> Name Type Description <code>ChartWidget</code> <code>ChartWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; chart = ChartWidget().set_title(\"2024 Sales Trends\")\n</code></pre>"},{"location":"api/checklist-widget/","title":"ChecklistWidget API","text":""},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget","title":"<code>ChecklistWidget()</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Checklist component for creating task lists and checklists.</p> <p>ChecklistWidget is used to display a series of checklist items, each item can have different states (completed, incomplete, skipped, etc.). Suitable for task lists, step guides, checklists, and other scenarios.</p> <p>Attributes:</p> Name Type Description <code>items</code> <code>List[Dict[str, Any]]</code> <p>List of checklist items</p> <code>title</code> <code>str</code> <p>Checklist title</p> <code>show_progress</code> <code>bool</code> <p>Whether to show progress statistics</p> <code>compact_mode</code> <code>bool</code> <p>Whether to use compact mode</p> <p>Examples:</p> <p>Basic usage: Python<pre><code>checklist = ChecklistWidget()\nchecklist.add_item(\"Complete Requirements Analysis\", True)\nchecklist.add_item(\"Design Database\", True)\nchecklist.add_item(\"Write Code\", False)\nchecklist.add_item(\"Test Functions\", False)\n</code></pre></p> <p>Using method chaining: Python<pre><code>checklist = (ChecklistWidget()\n    .set_title(\"Project Checklist\")\n    .add_item(\"Environment Setup\", True)\n    .add_item(\"Code Review\", False)\n    .show_progress_stats(True))\n</code></pre></p> <p>Custom styling: Python<pre><code>checklist = ChecklistWidget()\nchecklist.add_item(\"Data Backup\", True, \"success\")\nchecklist.add_item(\"Service Check\", False, \"warning\")\nchecklist.add_item(\"Performance Test\", None, \"info\")  # None means skip\n</code></pre></p> <p>Initialize checklist component.</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget-attributes","title":"Attributes","text":""},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.items","title":"<code>items</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u6240\u6709\u6e05\u5355\u9879\u76ee\u3002</p> <p>Returns:</p> Type Description <code>list[dict[str, Any]]</code> <p>List[Dict[str, Any]]: \u6e05\u5355\u9879\u76ee\u5217\u8868</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.title","title":"<code>title</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u6e05\u5355\u6807\u9898\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u6e05\u5355\u6807\u9898</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.item_count","title":"<code>item_count</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u6e05\u5355\u9879\u76ee\u603b\u6570\u3002</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>\u9879\u76ee\u603b\u6570</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.completed_count","title":"<code>completed_count</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5df2\u5b8c\u6210\u9879\u76ee\u6570\u91cf\u3002</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>\u5df2\u5b8c\u6210\u9879\u76ee\u6570\u91cf</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.pending_count","title":"<code>pending_count</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5f85\u5b8c\u6210\u9879\u76ee\u6570\u91cf\u3002</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>\u5f85\u5b8c\u6210\u9879\u76ee\u6570\u91cf</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.skipped_count","title":"<code>skipped_count</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u8df3\u8fc7\u9879\u76ee\u6570\u91cf\u3002</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>\u8df3\u8fc7\u9879\u76ee\u6570\u91cf</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.completion_percentage","title":"<code>completion_percentage</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5b8c\u6210\u767e\u5206\u6bd4\u3002</p> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>\u5b8c\u6210\u767e\u5206\u6bd4 (0-100)</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget-functions","title":"Functions","text":""},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.add_item","title":"<code>add_item(text, completed=False, status_type=None, description='', status_text='')</code>","text":"<p>Add checklist item.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Item text content</p> required <code>completed</code> <code>Union[bool, None]</code> <p>Completion status. True=completed, False=incomplete, None=skipped</p> <code>False</code> <code>status_type</code> <code>Union[str, StatusType, None]</code> <p>Status type, see StatusType enum for valid values</p> <code>None</code> <code>description</code> <code>str</code> <p>Item description information</p> <code>''</code> <code>status_text</code> <code>str</code> <p>Custom status text</p> <code>''</code> <p>Returns:</p> Name Type Description <code>ChecklistWidget</code> <code>ChecklistWidget</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python<pre><code>checklist.add_item(\"Complete Design\", True, \"success\", \"UI design completed\")\nchecklist.add_item(\"Code Review\", False, \"warning\", \"Awaiting review\")\nchecklist.add_item(\"Performance Test\", None, \"info\", \"Temporarily skipped\")\n</code></pre>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>\u8bbe\u7f6e\u6e05\u5355\u6807\u9898\u3002</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>\u6e05\u5355\u6807\u9898</p> required <p>Returns:</p> Name Type Description <code>ChecklistWidget</code> <code>ChecklistWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.show_progress_stats","title":"<code>show_progress_stats(show=True)</code>","text":"<p>\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u8fdb\u5ea6\u7edf\u8ba1\u3002</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u8fdb\u5ea6\u6761\u548c\u7edf\u8ba1\u4fe1\u606f</p> <code>True</code> <p>Returns:</p> Name Type Description <code>ChecklistWidget</code> <code>ChecklistWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.set_compact_mode","title":"<code>set_compact_mode(compact=True)</code>","text":"<p>\u8bbe\u7f6e\u7d27\u51d1\u6a21\u5f0f\u3002</p> <p>Parameters:</p> Name Type Description Default <code>compact</code> <code>bool</code> <p>\u662f\u5426\u4f7f\u7528\u7d27\u51d1\u6a21\u5f0f\uff08\u51cf\u5c11\u95f4\u8ddd\u548c\u5b57\u4f53\u5927\u5c0f\uff09</p> <code>True</code> <p>Returns:</p> Name Type Description <code>ChecklistWidget</code> <code>ChecklistWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.clear_items","title":"<code>clear_items()</code>","text":"<p>\u6e05\u7a7a\u6240\u6709\u6e05\u5355\u9879\u76ee\u3002</p> <p>Returns:</p> Name Type Description <code>ChecklistWidget</code> <code>ChecklistWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.remove_item","title":"<code>remove_item(index)</code>","text":"<p>\u6839\u636e\u7d22\u5f15\u79fb\u9664\u6e05\u5355\u9879\u76ee\u3002</p> <p>Parameters:</p> Name Type Description Default <code>index</code> <code>int</code> <p>\u8981\u79fb\u9664\u7684\u9879\u76ee\u7d22\u5f15</p> required <p>Returns:</p> Name Type Description <code>ChecklistWidget</code> <code>ChecklistWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p> <p>Raises:</p> Type Description <code>IndexError</code> <p>\u5f53\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\u65f6</p>"},{"location":"api/checklist-widget/#email_widget.widgets.checklist_widget.ChecklistWidget.update_item_status","title":"<code>update_item_status(index, completed, status_type=None)</code>","text":"<p>\u66f4\u65b0\u6307\u5b9a\u9879\u76ee\u7684\u5b8c\u6210\u72b6\u6001\u3002</p> <p>Parameters:</p> Name Type Description Default <code>index</code> <code>int</code> <p>\u9879\u76ee\u7d22\u5f15</p> required <code>completed</code> <code>Union[bool, None]</code> <p>\u65b0\u7684\u5b8c\u6210\u72b6\u6001</p> required <code>status_type</code> <code>Union[str, StatusType, None]</code> <p>\u53ef\u9009\u7684\u72b6\u6001\u7c7b\u578b</p> <code>None</code> <p>Returns:</p> Name Type Description <code>ChecklistWidget</code> <code>ChecklistWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/circular-progress-widget/","title":"CircularProgressWidget API","text":""},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget","title":"<code>CircularProgressWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a circular progress indicator.</p> <p>Circular progress bars display task completion, resource utilization, or any quantifiable percentage data in a compact and intuitive way. They are perfect for dashboards or reports where space is limited.</p> Core features <ul> <li>Dynamic updates: Supports setting, increasing, decreasing, resetting, or directly completing progress.</li> <li>Theming: Provides multiple preset themes (such as success, warning, error) to intuitively reflect status through colors.</li> <li>Custom appearance: Can freely adjust the size and line thickness of the progress ring.</li> </ul> <p>Attributes:</p> Name Type Description <code>value</code> <code>float</code> <p>Current progress value.</p> <code>max_value</code> <code>float</code> <p>Maximum progress value, defaults to 100.</p> <code>label</code> <code>Optional[str]</code> <p>Descriptive text displayed below the progress ring.</p> <code>theme</code> <code>ProgressTheme</code> <p>Color theme of the progress ring.</p> <p>Examples:</p> <p>Create a circular progress bar showing task completion:</p> Python<pre><code>from email_widget.widgets import CircularProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\n# Create a progress ring representing \"success\" status\ntask_progress = (CircularProgressWidget()\n                 .set_value(85)\n                 .set_label(\"Data Processing Progress\")\n                 .set_theme(ProgressTheme.SUCCESS)\n                 .set_size(\"120px\")\n                 .set_stroke_width(\"10px\"))\n\n# Create a resource monitoring ring representing \"warning\" status\ndisk_usage = (CircularProgressWidget()\n              .set_value(92)\n              .set_label(\"Disk Usage\")\n              .set_theme(ProgressTheme.WARNING)\n              .set_size(\"90px\"))\n</code></pre> <p>Initialize CircularProgressWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget-functions","title":"Functions","text":""},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.complete","title":"<code>complete()</code>","text":"<p>Set progress to maximum value (100%).</p> <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().complete() # Progress becomes 100%\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.decrement","title":"<code>decrement(amount=1.0)</code>","text":"<p>Decrease progress value.</p> <p>Parameters:</p> Name Type Description Default <code>amount</code> <code>float</code> <p>Amount to decrease, defaults to 1.0.</p> <code>1.0</code> <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_value(50).decrement(5) # Progress becomes 45\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering</p>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.increment","title":"<code>increment(amount=1.0)</code>","text":"<p>Increase progress value.</p> <p>Parameters:</p> Name Type Description Default <code>amount</code> <code>float</code> <p>Amount to increase, defaults to 1.0.</p> <code>1.0</code> <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_value(50).increment(10) # Progress becomes 60\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.reset","title":"<code>reset()</code>","text":"<p>Reset progress to 0.</p> <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_value(75).reset() # Progress becomes 0\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.set_label","title":"<code>set_label(label)</code>","text":"<p>Set descriptive label displayed below the progress ring.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Label text.</p> required <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_label(\"Task Completion\")\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.set_max_value","title":"<code>set_max_value(max_val)</code>","text":"<p>Set maximum value for progress.</p> <p>Parameters:</p> Name Type Description Default <code>max_val</code> <code>float</code> <p>Maximum value for progress.</p> required <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_max_value(200)\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.set_size","title":"<code>set_size(size)</code>","text":"<p>Set overall size of the circular progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>size</code> <code>str</code> <p>CSS size value, such as \"100px\", \"5em\".</p> required <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When size format is invalid.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_size(\"120px\")\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.set_stroke_width","title":"<code>set_stroke_width(width)</code>","text":"<p>Set line thickness of the circular progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>width</code> <code>str</code> <p>CSS width value, such as \"8px\", \"0.5em\".</p> required <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_stroke_width(\"12px\")\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.set_theme","title":"<code>set_theme(theme)</code>","text":"<p>Set color theme for the progress ring.</p> <p>Parameters:</p> Name Type Description Default <code>theme</code> <code>ProgressTheme</code> <p>Progress ring theme enum value.</p> required <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_theme(ProgressTheme.SUCCESS)\n</code></pre>"},{"location":"api/circular-progress-widget/#email_widget.widgets.circular_progress_widget.CircularProgressWidget.set_value","title":"<code>set_value(value)</code>","text":"<p>Set current progress value.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>Progress value, should be between 0 and <code>max_value</code>.</p> required <p>Returns:</p> Name Type Description <code>CircularProgressWidget</code> <code>CircularProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When value is out of valid range.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = CircularProgressWidget().set_value(75)\n</code></pre>"},{"location":"api/column-widget/","title":"ColumnWidget API","text":""},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget","title":"<code>ColumnWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a multi-column layout container for horizontally arranging multiple widgets.</p> <p>This widget uses <code>&lt;table&gt;</code> elements to ensure maximum compatibility across various email clients. You can place any other widgets (such as <code>TextWidget</code>, <code>CardWidget</code>, <code>ChartWidget</code>, etc.) in the column layout to create complex and beautiful email layouts.</p> Core features <ul> <li>Auto columns: By default, it intelligently calculates the optimal number of columns based on the number of internal widgets.</li> <li>Manual columns: You can also manually specify a fixed number of columns between 1 and 4.</li> <li>Responsive: Layout automatically adjusts based on screen width, ensuring good experience on both desktop and mobile devices.</li> <li>Spacing control: Can customize horizontal spacing between columns.</li> </ul> Auto column rules <ul> <li>1 widget: 1 column</li> <li>2 widgets: 2 columns</li> <li>3 widgets: 3 columns</li> <li>4 widgets: 2 columns (2x2 grid)</li> <li>5-6 widgets: 3 columns</li> <li>7-8 widgets: 2 columns</li> <li>9+ widgets: 3 columns</li> </ul> <p>Examples:</p> <p>Create a two-column layout with a card on the left and chart on the right:</p> Python<pre><code>from email_widget.widgets import ColumnWidget, CardWidget, ChartWidget\nimport matplotlib.pyplot as plt\n\n# Prepare left card\nleft_card = (CardWidget()\n             .set_title(\"Key Metrics\")\n             .add_metadata(\"User Growth\", \"+15%\")\n             .add_metadata(\"Revenue\", \"+12%\"))\n\n# Prepare right chart\nplt.figure()\nplt.plot([1, 2, 3], [4, 5, 2])\nright_chart = ChartWidget().set_chart(plt)\n\n# Create 2-column layout and add widgets\ntwo_column_layout = (ColumnWidget()\n                     .set_columns(2)\n                     .set_gap(\"24px\")\n                     .add_widget(left_card)\n                     .add_widget(right_chart))\n\n# Assuming email is an Email object\n# email.add_widget(two_column_layout)\n</code></pre> <p>Initialize ColumnWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget-functions","title":"Functions","text":""},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.add_widget","title":"<code>add_widget(widget)</code>","text":"<p>Add a widget to the column layout.</p> <p>Parameters:</p> Name Type Description Default <code>widget</code> <code>BaseWidget</code> <p>Widget instance to add.</p> required <p>Returns:</p> Name Type Description <code>ColumnWidget</code> <code>ColumnWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().add_widget(TextWidget().set_content(\"Left content\"))\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.add_widgets","title":"<code>add_widgets(widgets)</code>","text":"<p>Add multiple widgets to the column layout.</p> <p>Parameters:</p> Name Type Description Default <code>widgets</code> <code>List[BaseWidget]</code> <p>List of widget instances to add.</p> required <p>Returns:</p> Name Type Description <code>ColumnWidget</code> <code>ColumnWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().add_widgets([TextWidget(), ImageWidget()])\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.clear_widgets","title":"<code>clear_widgets()</code>","text":"<p>Clear all widgets in the column layout.</p> <p>Returns:</p> Name Type Description <code>ColumnWidget</code> <code>ColumnWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().clear_widgets()\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.get_current_columns","title":"<code>get_current_columns()</code>","text":"<p>Get the current number of columns actually used.</p> <p>If in auto mode, returns the number of columns calculated based on widget count; otherwise returns the manually set number of columns.</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Number of columns actually used.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().add_widgets([TextWidget(), TextWidget()])\n&gt;&gt;&gt; column.get_current_columns() # In auto mode, 2 widgets return 2 columns\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.get_effective_columns","title":"<code>get_effective_columns()</code>","text":"<p>Get the actual effective number of columns.</p> <p>If set to auto mode, calculates based on current widget count; otherwise returns manually set number of columns.</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Number of columns actually used.</p>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering</p>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.get_widget_count","title":"<code>get_widget_count()</code>","text":"<p>Get the number of widgets in the column layout.</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Number of widgets.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; count = ColumnWidget().add_widget(TextWidget()).get_widget_count()\n&gt;&gt;&gt; print(count) # Output: 1\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.is_auto_mode","title":"<code>is_auto_mode()</code>","text":"<p>Check if currently in auto column mode.</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True if in auto mode, False otherwise.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().is_auto_mode() # Default is True\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.remove_widget","title":"<code>remove_widget(widget_id)</code>","text":"<p>Remove specified widget by widget ID.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>str</code> <p>ID of the widget to remove.</p> required <p>Returns:</p> Name Type Description <code>ColumnWidget</code> <code>ColumnWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().remove_widget(\"my_text_widget\")\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.remove_widget_by_index","title":"<code>remove_widget_by_index(index)</code>","text":"<p>Remove widget at specified index.</p> <p>Parameters:</p> Name Type Description Default <code>index</code> <code>int</code> <p>Index of the widget to remove.</p> required <p>Returns:</p> Name Type Description <code>ColumnWidget</code> <code>ColumnWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>IndexError</code> <p>If index is out of range.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().remove_widget_by_index(0) # Remove first widget\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.set_columns","title":"<code>set_columns(columns)</code>","text":"<p>Set the number of columns in the layout.</p> <p>Parameters:</p> Name Type Description Default <code>columns</code> <code>int</code> <p>Number of columns. -1 indicates auto mode, other values are limited between 1 and 4 columns.</p> required <p>Returns:</p> Name Type Description <code>ColumnWidget</code> <code>ColumnWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().set_columns(2) # Set to 2 columns\n&gt;&gt;&gt; column = ColumnWidget().set_columns(-1) # Auto mode\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.set_equal_width","title":"<code>set_equal_width(equal=True)</code>","text":"<p>Set whether columns have equal width.</p> <p>Parameters:</p> Name Type Description Default <code>equal</code> <code>bool</code> <p>Whether equal width, defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>ColumnWidget</code> <code>ColumnWidget</code> <p>Returns self to support method chaining.</p> Note <p>This method is currently only a reserved interface, column widths are always equally divided in actual rendering.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().set_equal_width(False)\n</code></pre>"},{"location":"api/column-widget/#email_widget.widgets.column_widget.ColumnWidget.set_gap","title":"<code>set_gap(gap)</code>","text":"<p>Set horizontal spacing between columns.</p> <p>Parameters:</p> Name Type Description Default <code>gap</code> <code>str</code> <p>CSS spacing value, such as \"20px\", \"1em\".</p> required <p>Returns:</p> Name Type Description <code>ColumnWidget</code> <code>ColumnWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; column = ColumnWidget().set_gap(\"16px\")\n</code></pre>"},{"location":"api/core/","title":"Core Modules","text":"<p>The core modules provide the foundational architecture for EmailWidget, including the Widget base class, template engine, cache system, and other core components.</p>"},{"location":"api/core/#basewidget","title":"BaseWidget","text":""},{"location":"api/core/#email_widget.core.base.BaseWidget","title":"<code>BaseWidget(widget_id=None)</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Abstract base class for all widgets.</p> <p>This class defines the basic interface and common functionality that all widgets must implement. Each widget has a unique ID and can be added to an Email container.</p> <p>Attributes:</p> Name Type Description <code>widget_id</code> <code>str</code> <p>Unique identifier for the widget.</p> <code>parent</code> <code>Optional[Email]</code> <p>Email container that contains this widget.</p> <p>Examples:</p> Python<pre><code>from abc import ABC, abstractmethod\nfrom email_widget.core.base import BaseWidget\nfrom typing import Dict, Any, Optional\n\nclass MyCustomWidget(BaseWidget):\n    TEMPLATE = \"&lt;div&gt;Hello from Custom Widget!&lt;/div&gt;\"\n\n    def _get_template_name(self) -&gt; str:\n        return \"my_custom_widget.html\"\n\n    def get_template_context(self) -&gt; Dict[str, Any]:\n        return {\"message\": \"This is a custom message.\", \"data\": \"some data\"}\n\n# Instantiate custom widget\nwidget = MyCustomWidget()\nprint(widget.widget_id) # Print generated unique ID\nhtml_output = widget.render_html()\nprint(html_output) # Print rendered HTML\n</code></pre> <p>Initialize BaseWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional widget ID, automatically generated if not provided.</p> <code>None</code>"},{"location":"api/core/#email_widget.core.base.BaseWidget-attributes","title":"Attributes","text":""},{"location":"api/core/#email_widget.core.base.BaseWidget.parent","title":"<code>parent</code>  <code>property</code>","text":"<p>Get the Email container that contains this widget.</p> <p>Returns:</p> Type Description <code>Optional[Email]</code> <p>Optional[Email]: Email object containing this widget, or None if not added to a container.</p>"},{"location":"api/core/#email_widget.core.base.BaseWidget.widget_id","title":"<code>widget_id</code>  <code>property</code>","text":"<p>Get the unique ID of the widget.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Unique identifier string for the widget.</p>"},{"location":"api/core/#email_widget.core.base.BaseWidget-functions","title":"Functions","text":""},{"location":"api/core/#email_widget.core.base.BaseWidget.get_template_context","title":"<code>get_template_context()</code>  <code>abstractmethod</code>","text":"<p>Get the context data required for template rendering.</p> <p>Subclasses must implement this method to return the data dictionary needed for template rendering.</p> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>Dict[str, Any]: Template context data dictionary.</p>"},{"location":"api/core/#email_widget.core.base.BaseWidget.render_html","title":"<code>render_html()</code>","text":"<p>Render the widget as an HTML string.</p> <p>Uses the template engine to render the widget with comprehensive error handling. Returns error HTML if rendering fails.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Rendered HTML string.</p> <p>Examples:</p> Python<pre><code>class MyWidget(BaseWidget):\n    TEMPLATE = \"&lt;div&gt;{{ content }}&lt;/div&gt;\"\n\n    def _get_template_name(self):\n        return \"my_widget.html\"\n\n    def get_template_context(self):\n        return {\"content\": \"Hello World\"}\n\nwidget = MyWidget()\nhtml = widget.render_html()\nprint(html)  # &lt;div&gt;Hello World&lt;/div&gt;\n</code></pre>"},{"location":"api/core/#email_widget.core.base.BaseWidget.set_widget_id","title":"<code>set_widget_id(widget_id)</code>","text":"<p>Set the widget ID.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>str</code> <p>New widget ID.</p> required <p>Returns:</p> Name Type Description <code>BaseWidget</code> <code>BaseWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget.set_widget_id(\"my_custom_id\")\n&gt;&gt;&gt; print(widget.widget_id)  # Output: my_custom_id\n</code></pre>"},{"location":"api/core/#templateengine","title":"TemplateEngine","text":""},{"location":"api/core/#email_widget.core.template_engine.TemplateEngine","title":"<code>TemplateEngine()</code>","text":"<p>Template rendering engine.</p> <p>Provides unified template rendering interface with template caching and error handling.</p> Core Features <ul> <li>Template Rendering: Uses Jinja2 to render Widget templates.</li> <li>Cache Management: Template compilation caching improves performance.</li> <li>Error Handling: Safe template rendering and error recovery.</li> <li>Context Processing: Automatic handling of template context data.</li> </ul> <p>Examples:</p> Python<pre><code>from email_widget.core.template_engine import get_template_engine\n\nengine = get_template_engine()\n\n# Render a simple template\nhtml = engine.render_safe(\n    \"&lt;div&gt;Hello, {{ name }}!&lt;/div&gt;\",\n    {\"name\": \"EmailWidget\"}\n)\nprint(html) # Output: &lt;div&gt;Hello, EmailWidget!&lt;/div&gt;\n\n# Render a template with errors and use fallback content\nerror_html = engine.render_safe(\n    \"&lt;div&gt;{% for item in items %} {{ item.name }} {% endfor %}&lt;/div&gt;\",\n    {\"items\": \"not_a_list\"}, # Intentionally pass wrong type\n    fallback=\"&lt;div&gt;Rendering failed, please contact administrator.&lt;/div&gt;\"\n)\nprint(error_html) # Output: &lt;div&gt;Rendering failed, please contact administrator.&lt;/div&gt;\n</code></pre> <p>Initialize template engine.</p>"},{"location":"api/core/#email_widget.core.template_engine.TemplateEngine-functions","title":"Functions","text":""},{"location":"api/core/#email_widget.core.template_engine.TemplateEngine.clear_cache","title":"<code>clear_cache()</code>","text":"<p>Clear template cache.</p>"},{"location":"api/core/#email_widget.core.template_engine.TemplateEngine.get_cache_stats","title":"<code>get_cache_stats()</code>","text":"<p>Get cache statistics.</p> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>Dict[str, Any]: Cache statistics dictionary, including cached template count and total size (bytes).</p>"},{"location":"api/core/#email_widget.core.template_engine.TemplateEngine.render","title":"<code>render(template_string, context)</code>","text":"<p>Render template.</p> <p>Parameters:</p> Name Type Description Default <code>template_string</code> <code>str</code> <p>Template string.</p> required <code>context</code> <code>Dict[str, Any]</code> <p>Template context data.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Rendered HTML string.</p> <p>Raises:</p> Type Description <code>TemplateError</code> <p>Thrown when template rendering fails.</p>"},{"location":"api/core/#email_widget.core.template_engine.TemplateEngine.render_safe","title":"<code>render_safe(template_string, context, fallback='')</code>","text":"<p>Safely render template.</p> <p>Returns fallback content instead of throwing exception on rendering failure.</p> <p>Parameters:</p> Name Type Description Default <code>template_string</code> <code>str</code> <p>Template string.</p> required <code>context</code> <code>Dict[str, Any]</code> <p>Template context data.</p> required <code>fallback</code> <code>str</code> <p>Fallback content on rendering failure.</p> <code>''</code> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Rendered HTML string or fallback content.</p>"},{"location":"api/core/#email_widget.core.template_engine.TemplateEngine.validate_template","title":"<code>validate_template(template_string)</code>","text":"<p>Validate template syntax.</p> <p>Parameters:</p> Name Type Description Default <code>template_string</code> <code>str</code> <p>Template string.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>Whether template syntax is correct.</p>"},{"location":"api/core/#imagecache","title":"ImageCache","text":""},{"location":"api/core/#email_widget.core.cache.ImageCache","title":"<code>ImageCache(cache_dir=None, max_size=100)</code>","text":"<p>LRU cache system for improving image processing performance.</p> <p>This cache manager uses the Least Recently Used (LRU) strategy to manage image data, supports storing images to the filesystem, and maintains an in-memory index for fast lookup. This significantly improves performance when embedding large amounts of images in emails by avoiding redundant downloading and processing.</p> Core Features <ul> <li>LRU Strategy: Automatically evicts least recently used cache items.</li> <li>Filesystem Storage: Persists image data to local files, reducing memory usage.</li> <li>Memory Index: Fast cache item lookup, improving access speed.</li> <li>Performance Monitoring: Provides cache hit rate and size statistics.</li> </ul> <p>Attributes:</p> Name Type Description <code>_cache_dir</code> <code>Path</code> <p>Directory for storing cache files.</p> <code>_max_size</code> <code>int</code> <p>Maximum number of items allowed in cache.</p> <code>_cache_index</code> <code>Dict[str, Dict[str, Any]]</code> <p>In-memory cache index.</p> <p>Examples:</p> Python<pre><code>from email_widget.core.cache import get_image_cache\n\ncache = get_image_cache()\n\n# Store data\n# Assuming some_image_data is the binary content of an image, mime_type is the MIME type\n# cache.set(\"image_url_or_path_1\", some_image_data, \"image/png\")\n\n# Get data\n# cached_data = cache.get(\"image_url_or_path_1\")\n# if cached_data:\n#     image_bytes, mime = cached_data\n#     print(f\"Retrieved image from cache, size: {len(image_bytes)} bytes, type: {mime}\")\n\n# Clear cache\n# cache.clear()\n\n# Get cache statistics\nstats = cache.get_cache_stats()\nprint(f\"Cache items: {stats['total_items']}, total size: {stats['total_size_bytes']} bytes\")\n</code></pre> <p>Initialize the cache manager.</p> <p>Parameters:</p> Name Type Description Default <code>cache_dir</code> <code>Optional[Path]</code> <p>Cache directory path, defaults to <code>emailwidget_cache</code> in system temp directory.</p> <code>None</code> <code>max_size</code> <code>int</code> <p>Maximum number of items allowed in cache, defaults to 100.</p> <code>100</code>"},{"location":"api/core/#email_widget.core.cache.ImageCache-functions","title":"Functions","text":""},{"location":"api/core/#email_widget.core.cache.ImageCache.clear","title":"<code>clear()</code>","text":"<p>Clear all cache data.</p> <p>This method will delete all cache files and cache index.</p>"},{"location":"api/core/#email_widget.core.cache.ImageCache.get","title":"<code>get(source)</code>","text":"<p>Get image data from cache.</p> <p>Parameters:</p> Name Type Description Default <code>source</code> <code>str</code> <p>Image source (URL or file path), used to generate cache key.</p> required <p>Returns:</p> Type Description <code>tuple[bytes, str] | None</code> <p>Optional[Tuple[bytes, str]]: If cache found, returns (image binary data, MIME type) tuple;                          otherwise returns None.</p>"},{"location":"api/core/#email_widget.core.cache.ImageCache.get_cache_stats","title":"<code>get_cache_stats()</code>","text":"<p>Get cache statistics</p> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>Cache statistics dictionary</p>"},{"location":"api/core/#email_widget.core.cache.ImageCache.set","title":"<code>set(source, data, mime_type='image/png')</code>","text":"<p>Store image data in cache.</p> <p>Parameters:</p> Name Type Description Default <code>source</code> <code>str</code> <p>Image source (URL or file path), used as cache key.</p> required <code>data</code> <code>bytes</code> <p>Image binary data.</p> required <code>mime_type</code> <code>str</code> <p>Image MIME type, defaults to \"image/png\".</p> <code>'image/png'</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>Whether successfully stored in cache.</p>"},{"location":"api/core/#logger","title":"Logger","text":""},{"location":"api/core/#email_widget.core.logger.EmailWidgetLogger","title":"<code>EmailWidgetLogger</code>","text":"<p>EmailWidget project dedicated logger.</p> <p>Provides unified logging interface with environment variable control for log levels. Can completely disable log output in production environment.</p> Log Levels <ul> <li><code>DEBUG</code>: Debug information, detailed information during development stage.</li> <li><code>INFO</code>: General information, normal operation records.</li> <li><code>WARNING</code>: Warning information, potential problem alerts.</li> <li><code>ERROR</code>: Error information, errors but not fatal problems.</li> <li><code>CRITICAL</code>: Critical errors, system-level serious problems.</li> </ul> Environment Variable Configuration <ul> <li><code>EMAILWIDGET_LOG_LEVEL</code>: Set log level, e.g., <code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>, <code>CRITICAL</code>.</li> <li><code>EMAILWIDGET_DISABLE_LOGGING</code>: Set to <code>true</code>, <code>1</code>, <code>yes</code> to completely disable log output.</li> </ul> <p>Examples:</p> Python<pre><code>from email_widget.core.logger import get_project_logger\n\nlogger = get_project_logger()\n\n# Log different levels\nlogger.debug(\"Debug info: template rendering started\")\nlogger.info(\"Email created successfully\")\nlogger.warning(\"Used deprecated method\")\nlogger.error(\"Widget rendering failed\")\nlogger.critical(\"System memory insufficient\")\n</code></pre> <p>You can also use convenience functions directly:</p> Python<pre><code>from email_widget.core.logger import info, error\n\ninfo(\"This is an info log.\")\nerror(\"This is an error log.\")\n</code></pre>"},{"location":"api/core/#email_widget.core.logger.EmailWidgetLogger-functions","title":"Functions","text":""},{"location":"api/core/#email_widget.core.logger.EmailWidgetLogger.critical","title":"<code>critical(message)</code>","text":"<p>Output critical error log.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Log message.</p> required"},{"location":"api/core/#email_widget.core.logger.EmailWidgetLogger.debug","title":"<code>debug(message)</code>","text":"<p>Output debug log.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Log message.</p> required"},{"location":"api/core/#email_widget.core.logger.EmailWidgetLogger.error","title":"<code>error(message)</code>","text":"<p>Output error log.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Log message.</p> required"},{"location":"api/core/#email_widget.core.logger.EmailWidgetLogger.info","title":"<code>info(message)</code>","text":"<p>Output info log.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Log message.</p> required"},{"location":"api/core/#email_widget.core.logger.EmailWidgetLogger.warning","title":"<code>warning(message)</code>","text":"<p>Output warning log.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Log message.</p> required"},{"location":"api/email-sender/","title":"Email Sender","text":""},{"location":"api/email-sender/#common-email-smtp-configuration-and-authorization-code-setup","title":"Common Email SMTP Configuration and Authorization Code Setup","text":"<p>Below are the SMTP server parameters and authorization code setup methods for mainstream email providers (QQ, 163, Outlook, Gmail) for quick configuration.</p> Email Type SMTP Server Port Encryption Username Password Type QQ Email smtp.qq.com 465 SSL Full email address Authorization code 163 Email smtp.163.com 465 SSL Full email address Authorization code Gmail smtp.gmail.com 587 TLS Full email address App Password"},{"location":"api/email-sender/#qq-email","title":"QQ Email","text":"<ol> <li>Log in to QQ Email web version, click \"Settings\" &gt; \"Account\" in the top right corner.</li> <li>Under \"POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV Services\", check \"Enable SMTP Service\" and save.</li> <li>Follow the prompts for mobile verification to get the authorization code (this code is the SMTP login password).</li> <li>When configuring email client, use the full email address as username and authorization code as password.</li> <li>Official documentation: QQ Email Help Center</li> <li>Microsoft official guide for connecting QQ Email to Outlook (including authorization code setup): View</li> </ol>"},{"location":"api/email-sender/#163-email","title":"163 Email","text":"<ol> <li>Log in to 163 Email web version, click \"Settings\" &gt; \"POP3/SMTP/IMAP\".</li> <li>Enable \"SMTP Service\", follow prompts for verification if required.</li> <li>Get the authorization code (some accounts require mobile verification), this code is the SMTP login password.</li> <li>When configuring email client, use the full email address as username and authorization code as password.</li> <li>Official help center: NetEase Email Help</li> <li>Reference blog: Mailbird 163 Email Configuration</li> </ol>"},{"location":"api/email-sender/#gmail","title":"Gmail","text":"<ol> <li>Log in to your Google Account at Google Account Settings.</li> <li>Navigate to \"Security\" &gt; \"2-Step Verification\" and enable 2-Factor Authentication if not already enabled.</li> <li>Go to \"Security\" &gt; \"App passwords\" and generate a new app password:</li> <li>Select \"Mail\" as the app type</li> <li>Choose your device or enter a custom name</li> <li>Copy the generated 16-character password (without spaces)</li> <li>When configuring email client, use your full Gmail address as username and the generated App Password as password.</li> <li>Official documentation: Google Account Help - App passwords</li> <li>Gmail SMTP settings: Gmail IMAP and SMTP settings</li> </ol>"},{"location":"api/email-sender/#faq","title":"FAQ","text":"<p>Q1: What is an authorization code/app-specific password? A: An authorization code/app-specific password is a special password generated by email service providers to enhance security, used for third-party applications (such as email clients, automation scripts) to log into the mailbox. It cannot be replaced by regular login passwords.</p> <p>Q2: Why use authorization codes/app-specific passwords? A: After enabling two-factor authentication, regular passwords cannot be directly used for SMTP and other third-party services. Authorization codes/app-specific passwords must be used to ensure account security.</p> <p>Q3: What to do if authorization code/app-specific password is lost? A: You can regenerate new authorization codes/app-specific passwords in the mailbox security settings at any time, and the old ones can be revoked.</p> <p>Q4: What are common reasons for configuration failures? A: Common reasons include not enabling SMTP service, not using authorization codes/app-specific passwords, incorrect port/encryption configuration, restricted mailbox login, etc.</p> <p>For specific issues, it's recommended to consult the official help centers of respective email providers or contact email service customer support.</p> <p>The <code>EmailSender</code> module provides a complete and easy-to-use email sending solution with built-in support for multiple mainstream email service providers.</p>"},{"location":"api/email-sender/#sender-base-class","title":"Sender Base Class","text":"<p>All concrete senders inherit from the <code>EmailSender</code> abstract base class.</p>"},{"location":"api/email-sender/#email_widget.email_sender.EmailSender","title":"<code>EmailSender(username, password, use_tls=True, smtp_server=None, smtp_port=None, *args, **kwargs)</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Email sender abstract base class.</p> <p>Defines the standard interface for sending emails, all specific email service provider implementations must inherit from this class. This base class handles common email construction and sending logic, subclasses only need to provide service-specific SMTP server addresses and port numbers.</p> <p>Attributes:</p> Name Type Description <code>username</code> <code>str</code> <p>Email username (usually the complete email address).</p> <code>password</code> <code>str</code> <p>Email password or authorization code/app password.</p> <code>use_tls</code> <code>bool</code> <p>Whether to use TLS encrypted connection.</p> <code>smtp_server</code> <code>str</code> <p>SMTP server address.</p> <code>smtp_port</code> <code>int</code> <p>SMTP server port.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If username or password is empty.</p> <p>Initialize email sender.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Email username/email address</p> required <code>password</code> <code>str</code> <p>Email password or authorization code</p> required <code>use_tls</code> <code>bool</code> <p>Whether to use TLS encrypted connection, defaults to True</p> <code>True</code> <code>smtp_server</code> <code>str | None</code> <p>SMTP server address, if not provided, uses default value</p> <code>None</code> <code>smtp_port</code> <code>int | None</code> <p>SMTP server port, if not provided, uses default value</p> <code>None</code> <code>*args</code> <code>Any</code> <p>Other positional arguments</p> <code>()</code> <code>**kwargs</code> <code>Any</code> <p>Other keyword arguments</p> <code>{}</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>Raised when username or password is empty</p>"},{"location":"api/email-sender/#email_widget.email_sender.EmailSender-functions","title":"Functions","text":""},{"location":"api/email-sender/#email_widget.email_sender.EmailSender.send","title":"<code>send(email, sender=None, to=None)</code>","text":"<p>Send email.</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>Email</code> <p>Email object to send</p> required <code>sender</code> <code>str | None</code> <p>Sender email address, uses username if None</p> <code>None</code> <code>to</code> <code>list[str] | None</code> <p>Recipient email address list, sends to sender if None</p> <code>None</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>Raised when email object is None</p> <code>SMTPException</code> <p>SMTP sending error</p> <code>Exception</code> <p>Other sending errors</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; sender = QQEmailSender(\"user@qq.com\", \"password\")\n&gt;&gt;&gt; email = Email(\"Test Email\")\n&gt;&gt;&gt;\n&gt;&gt;&gt; # Send to self\n&gt;&gt;&gt; sender.send(email)\n&gt;&gt;&gt;\n&gt;&gt;&gt; # Send to specified recipients\n&gt;&gt;&gt; sender.send(email, to=[\"recipient@example.com\"])\n&gt;&gt;&gt;\n&gt;&gt;&gt; # Specify sender and recipients\n&gt;&gt;&gt; sender.send(email, sender=\"custom@qq.com\", to=[\"recipient@example.com\"])\n</code></pre>"},{"location":"api/email-sender/#factory-function","title":"Factory Function","text":"<p>For convenience, we recommend using the <code>create_email_sender</code> factory function to create sender instances.</p>"},{"location":"api/email-sender/#email_widget.email_sender.create_email_sender","title":"<code>create_email_sender(provider, username, password, **kwargs)</code>","text":"<p>Factory function to quickly create corresponding email sender instances based on provider name.</p> <p>This is a convenient helper function that allows you to avoid directly importing and instantiating specific sender classes. It selects the correct sender through a string identifier, particularly suitable for scenarios where the provider is specified in configuration files.</p> <p>Parameters:</p> Name Type Description Default <code>provider</code> <code>str</code> <p>Email provider identifier. Supported values (case-insensitive) include:           'qq', 'netease', '163', '126', 'gmail'.</p> required <code>username</code> <code>str</code> <p>Email account, usually the complete email address.</p> required <code>password</code> <code>str</code> <p>Email authorization code or app password.</p> required <code>**kwargs</code> <code>Any</code> <p>Other keyword arguments, will be passed directly to the selected sender class constructor.</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>EmailSender</code> <code>EmailSender</code> <p>A concrete email sender instance (e.g. <code>QQEmailSender</code>).</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the provided <code>provider</code> name is not supported.</p> <p>Examples:</p> Python<pre><code>from email_widget import Email, create_email_sender\nimport os\n\n# Read provider and credentials from config or environment variables\nemail_provider = os.getenv(\"EMAIL_PROVIDER\", \"qq\") # e.g., 'qq' or 'netease'\nemail_user = os.getenv(\"EMAIL_USER\")\nemail_password = os.getenv(\"EMAIL_PASSWORD\")\n\n# Create sender using factory function\ntry:\n    sender = create_email_sender(\n        provider=email_provider,\n        username=email_user,\n        password=email_password\n    )\n\n    email = Email(f\"Email from {email_provider.upper()}\")\n    email.add_text(\"Sender created through factory function.\")\n    sender.send(email, to=[\"test@example.com\"])\n    print(\"Email sent successfully!\")\n\nexcept ValueError as e:\n    print(f\"Configuration error: {e}\")\nexcept Exception as e:\n    print(f\"Sending failed: {e}\")\n</code></pre>"},{"location":"api/email-sender/#concrete-implementations","title":"Concrete Implementations","text":"<p>Below are specific implementation classes for different email service providers. Usually you only need to use them through the factory function.</p>"},{"location":"api/email-sender/#qqemailsender","title":"QQEmailSender","text":"<p>               Bases: <code>EmailSender</code></p> <p>QQ Email sender.</p> <p>Specifically designed for sending emails through QQ Email (including enterprise email). It presets the SMTP server address and recommended port for QQ Email.</p> Important notes <ul> <li>Must use authorization code: For security reasons, QQ Email's SMTP service requires using an \"authorization code\" instead of your login password. You need to generate this authorization code in QQ Email's \"Settings\" -&gt; \"Account\" page.</li> <li>Enable SMTP service: Please ensure you have enabled IMAP/SMTP service in QQ Email settings.</li> </ul> <p>Examples:</p> Python<pre><code>from email_widget import Email, QQEmailSender\nimport os\n\n# Recommend reading sensitive information from environment variables\n# export EMAIL_USER=\"your_account@qq.com\"\n# export EMAIL_AUTH_CODE=\"your_generated_auth_code\"\n\nqq_user = os.getenv(\"EMAIL_USER\")\nauth_code = os.getenv(\"EMAIL_AUTH_CODE\")\n\n# Create email content\nemail = Email(\"Report from QQ Email\")\nemail.add_text(\"This is a test email sent through EmailWidget.\")\n\n# Initialize QQ Email sender\nsender = QQEmailSender(username=qq_user, password=auth_code)\n\n# Send email to one or more recipients\ntry:\n    sender.send(email, to=[\"recipient1@example.com\", \"recipient2@example.com\"])\n    print(\"Email sent successfully!\")\nexcept Exception as e:\n    print(f\"Email sending failed: {e}\")\n</code></pre> <p>Initialize QQ Email sender.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>QQ Email address</p> required <code>password</code> <code>str</code> <p>QQ Email authorization code (not login password)</p> required <code>use_tls</code> <code>bool</code> <p>Whether to use TLS encryption, defaults to True</p> <code>True</code> <code>*args</code> <code>Any</code> <p>Other positional arguments</p> <code>()</code> <code>**kwargs</code> <code>Any</code> <p>Other keyword arguments</p> <code>{}</code>"},{"location":"api/email-sender/#neteaseemailsender","title":"NetEaseEmailSender","text":"<p>               Bases: <code>EmailSender</code></p> <p>NetEase Email sender.</p> <p>Supports NetEase's 163, 126, and yeah.net email services. It automatically selects the correct SMTP server based on your email address suffix.</p> Important notes <ul> <li>Must use authorization code: Similar to QQ Email, NetEase Email also requires using a dedicated \"client authorization password\" instead of your email login password.</li> <li>Enable SMTP service: Please enable POP3/SMTP/IMAP service in your NetEase Email settings.</li> <li>SSL connection: NetEase Email's SMTP service primarily uses SSL encryption (port 465), so the default <code>use_tls</code> is <code>False</code>.</li> </ul> <p>Examples:</p> Python<pre><code>from email_widget import Email, NetEaseEmailSender\nimport os\n\n# Using 163 email\nuser_163 = os.getenv(\"NETEASE_USER_163\") # e.g., \"my_account@163.com\"\nauth_code_163 = os.getenv(\"NETEASE_AUTH_CODE_163\")\n\nemail = Email(\"Greetings from 163 Email\")\nemail.add_text(\"This is an email sent through NetEaseEmailSender.\")\n\nsender = NetEaseEmailSender(username=user_163, password=auth_code_163)\n\ntry:\n    sender.send(email, to=[\"friend@example.com\"])\n    print(\"163 email sent successfully!\")\nexcept Exception as e:\n    print(f\"Email sending failed: {e}\")\n</code></pre> <p>Initialize NetEase Email sender.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>NetEase Email address</p> required <code>password</code> <code>str</code> <p>NetEase Email authorization code</p> required <code>use_tls</code> <code>bool</code> <p>Whether to use TLS encryption, defaults to False (NetEase Email uses SSL)</p> <code>False</code> <code>*args</code> <code>Any</code> <p>Other positional arguments</p> <code>()</code> <code>**kwargs</code> <code>Any</code> <p>Other keyword arguments</p> <code>{}</code> Note <p>NetEase Email only supports SSL connection (port 465), recommend keeping use_tls=False.</p>"},{"location":"api/email-sender/#gmailemailsender","title":"GmailEmailSender","text":"<p>               Bases: <code>EmailSender</code></p> <p>Gmail email sender.</p> <p>Specifically designed for sending emails through Gmail SMTP service. It presets the SMTP server address and recommended port for Gmail.</p> Important notes <ul> <li>Must use App Password: For security reasons, Gmail's SMTP service requires using an \"App Password\" instead of your regular Gmail password. You need to:</li> <li>Enable 2-Factor Authentication on your Google account</li> <li>Generate an App Password in Google Account settings (Security &gt; App passwords)</li> <li>Less Secure App Access: Alternatively, you can enable \"Less secure app access\" in Gmail settings, but App Password is the recommended approach.</li> <li>SMTP Service: Gmail SMTP service is enabled by default for all accounts.</li> </ul> <p>Examples:</p> Python<pre><code>from email_widget import Email, GmailEmailSender\nimport os\n\n# Recommend reading sensitive information from environment variables\n# export GMAIL_USER=\"your_account@gmail.com\"\n# export GMAIL_APP_PASSWORD=\"your_generated_app_password\"\n\ngmail_user = os.getenv(\"GMAIL_USER\")\napp_password = os.getenv(\"GMAIL_APP_PASSWORD\")\n\n# Create email content\nemail = Email(\"Report from Gmail\")\nemail.add_text(\"This is a test email sent through EmailWidget via Gmail.\")\n\n# Initialize Gmail sender\nsender = GmailEmailSender(username=gmail_user, password=app_password)\n\n# Send email to one or more recipients\ntry:\n    sender.send(email, to=[\"recipient1@example.com\", \"recipient2@example.com\"])\n    print(\"Email sent successfully!\")\nexcept Exception as e:\n    print(f\"Email sending failed: {e}\")\n</code></pre> Setup Instructions <ol> <li>Enable 2-Factor Authentication:</li> <li>Go to Google Account settings (https://myaccount.google.com)</li> <li>Navigate to Security &gt; 2-Step Verification</li> <li> <p>Follow the setup process</p> </li> <li> <p>Generate App Password:</p> </li> <li>Go to Security &gt; App passwords</li> <li>Select \"Mail\" and your device</li> <li> <p>Copy the generated 16-character password (without spaces)</p> </li> <li> <p>Use in EmailWidget:</p> </li> <li>Use your full Gmail address as username</li> <li>Use the generated App Password (not your regular password)</li> </ol> <p>Initialize Gmail sender.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Gmail address (e.g., \"user@gmail.com\")</p> required <code>password</code> <code>str</code> <p>Gmail App Password (16-character generated password)</p> required <code>use_tls</code> <code>bool</code> <p>Whether to use TLS encryption, defaults to True</p> <code>True</code> <code>*args</code> <code>Any</code> <p>Other positional arguments</p> <code>()</code> <code>**kwargs</code> <code>Any</code> <p>Other keyword arguments</p> <code>{}</code> Note <p>Gmail supports both TLS (port 587) and SSL (port 465). TLS is recommended.</p>"},{"location":"api/email/","title":"Email Main Class","text":""},{"location":"api/email/#email_widget.email.Email","title":"<code>Email(title='Email Report')</code>","text":"<p>Main email class responsible for managing and rendering email content.</p> <p>This class is the core of the EmailWidget library, used to create and manage HTML email reports. It serves as a powerful container that can add, manage, and orchestrate various \"widgets\", ultimately rendering them into a beautiful, professional HTML email.</p> Core features <ul> <li>Widget Management: Easily add, remove, find, and iterate through various content components (text, tables, charts, etc.).</li> <li>Email Property Configuration: Customize email title, subtitle, and footer.</li> <li>Convenience Methods: Provides a series of <code>add_*</code> methods for quickly creating and adding common widgets, simplifying code.</li> <li>Content Export: Supports exporting emails as standalone HTML files or getting HTML string content.</li> <li>Style Configuration: Through <code>EmailConfig</code> object, customize email theme colors, fonts, and layout width.</li> </ul> <p>Attributes:</p> Name Type Description <code>title</code> <code>str</code> <p>The main title of the email.</p> <code>subtitle</code> <code>Optional[str]</code> <p>The subtitle of the email, displayed below the main title.</p> <code>footer_text</code> <code>Optional[str]</code> <p>The footer text of the email.</p> <code>widgets</code> <code>List[BaseWidget]</code> <p>List storing all added widgets.</p> <code>config</code> <code>EmailConfig</code> <p>The email configuration object for controlling styles and behavior.</p> <p>Examples:</p> <p>A basic email creation and export workflow:</p> Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import TextType, AlertType\n\n# 1. Create an email object\nemail = Email(\"Quarterly Sales Report\")\n\n# 2. Set email metadata\nemail.set_subtitle(\"Q1 2024\")\nemail.set_footer(\"This report is generated by the sales analysis team\")\n\n# 3. Use convenience methods to add content\nemail.add_text(\"Executive Summary\", text_type=TextType.TITLE_LARGE)\nemail.add_text(\"Total sales this quarter reached 1,234,567 yuan, a year-over-year growth of 15%.\")\nemail.add_alert(\"Note: Data is still under preliminary verification.\", alert_type=AlertType.WARNING)\nemail.add_progress(85, label=\"Quarterly KPI Completion Rate\", theme=\"success\")\n\n# 4. Export as HTML file\n# Will generate \"quarterly_report.html\" in the default output directory (usually ./output)\nfile_path = email.export_html(\"quarterly_report.html\")\n\nprint(f\"Report successfully generated at: {file_path}\")\n\n# You can also directly get the HTML string\nhtml_content = email.export_str()\n# print(html_content)\n</code></pre> <p>Initialize Email object.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Email title, defaults to \"Email Report\"</p> <code>'Email Report'</code>"},{"location":"api/email/#email_widget.email.Email-functions","title":"Functions","text":""},{"location":"api/email/#email_widget.email.Email.add_alert","title":"<code>add_alert(content, alert_type=None, title=None)</code>","text":"<p>Quickly add an alert widget.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>Alert content</p> required <code>alert_type</code> <code>AlertType</code> <p>Alert type, defaults to NOTE</p> <code>None</code> <code>title</code> <code>str | None</code> <p>Custom title, optional</p> <code>None</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_alert(\"Task executed successfully!\", AlertType.TIP)\n&gt;&gt;&gt; email.add_alert(\"Please check the data\", AlertType.WARNING, \"Important Notice\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_button","title":"<code>add_button(text, href, background_color=None, text_color=None, width=None, align='left')</code>","text":"<p>Quickly add button widget.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Button display text</p> required <code>href</code> <code>str</code> <p>Link address to jump to after clicking the button</p> required <code>background_color</code> <code>str | None</code> <p>Button background color, optional</p> <code>None</code> <code>text_color</code> <code>str | None</code> <p>Button text color, optional</p> <code>None</code> <code>width</code> <code>str | None</code> <p>Button width, optional</p> <code>None</code> <code>align</code> <code>str</code> <p>Button alignment, defaults to \"left\"</p> <code>'left'</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; # Basic button\n&gt;&gt;&gt; email.add_button(\"View Details\", \"https://example.com/details\")\n&gt;&gt;&gt; # Custom styled button\n&gt;&gt;&gt; email.add_button(\"Buy Now\", \"https://shop.example.com\",\n...                  background_color=\"#22c55e\", text_color=\"#ffffff\",\n...                  width=\"200px\", align=\"center\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_card","title":"<code>add_card(title, content, icon=None, metadata=None)</code>","text":"<p>Quickly add a card widget.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Card title</p> required <code>content</code> <code>str</code> <p>Card content</p> required <code>icon</code> <code>str | None</code> <p>Icon, optional</p> <code>None</code> <code>metadata</code> <code>dict[str, str] | None</code> <p>Metadata dictionary, optional</p> <code>None</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_card(\"System Status\", \"All services running normally\", \"\u2705\")\n&gt;&gt;&gt; # Card with metadata\n&gt;&gt;&gt; metadata = {\"CPU\": \"15%\", \"Memory\": \"60%\"}\n&gt;&gt;&gt; email.add_card(\"Server Monitoring\", \"Resource usage status\", \"\ud83d\udda5\ufe0f\", metadata)\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_chart_from_plt","title":"<code>add_chart_from_plt(title=None, description=None, data_summary=None)</code>","text":"<p>Quickly add a matplotlib chart widget.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str | None</code> <p>Chart title, optional</p> <code>None</code> <code>description</code> <code>str | None</code> <p>Chart description, optional</p> <code>None</code> <code>data_summary</code> <code>str | None</code> <p>Data summary, optional</p> <code>None</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; import matplotlib.pyplot as plt\n&gt;&gt;&gt; plt.plot([1, 2, 3, 4], [1, 4, 2, 3])\n&gt;&gt;&gt; plt.title(\"Sales Trend\")\n&gt;&gt;&gt;\n&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_chart_from_plt(\"Monthly Sales\", \"Shows sales trend changes\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_checklist","title":"<code>add_checklist(title='', items=None, show_progress=False, compact_mode=False)</code>","text":"<p>Quickly add checklist widget.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Checklist title, optional</p> <code>''</code> <code>items</code> <code>list[tuple[str, bool]] | None</code> <p>Checklist items list, format: [(text, completed), ...], optional</p> <code>None</code> <code>show_progress</code> <code>bool</code> <p>Whether to show progress statistics, defaults to False</p> <code>False</code> <code>compact_mode</code> <code>bool</code> <p>Whether to use compact mode, defaults to False</p> <code>False</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; # Basic checklist\n&gt;&gt;&gt; email.add_checklist(\"Task List\", [\n...     (\"Complete Design\", True),\n...     (\"Code Review\", False),\n...     (\"Deploy Testing\", False)\n... ])\n&gt;&gt;&gt; # Checklist with progress statistics\n&gt;&gt;&gt; email.add_checklist(\"Project Progress\", [\n...     (\"Requirements Analysis\", True),\n...     (\"Development Implementation\", True),\n...     (\"Testing Verification\", False)\n... ], show_progress=True)\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_circular_progress","title":"<code>add_circular_progress(value, max_value=100.0, label=None, theme=None, size='100px')</code>","text":"<p>Quickly add circular progress bar widget.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>Current progress value</p> required <code>max_value</code> <code>float</code> <p>Maximum value, defaults to 100</p> <code>100.0</code> <code>label</code> <code>str | None</code> <p>Progress bar label, optional</p> <code>None</code> <code>theme</code> <code>ProgressTheme</code> <p>Theme, defaults to PRIMARY</p> <code>None</code> <code>size</code> <code>str</code> <p>Circle size, defaults to \"100px\"</p> <code>'100px'</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_circular_progress(85, label=\"Overall Completion\")\n&gt;&gt;&gt; email.add_circular_progress(100, theme=ProgressTheme.SUCCESS, size=\"120px\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_image","title":"<code>add_image(image_url, title=None, description=None, alt_text=None, width=None, height=None, max_width=None, border_radius=None, cache=True, embed=True, show_caption=True)</code>","text":"<p>Quickly add image widget.</p> <p>Parameters:</p> Name Type Description Default <code>image_url</code> <code>str | Path</code> <p>Image URL string or local file Path object</p> required <code>title</code> <code>str | None</code> <p>Image title, optional</p> <code>None</code> <code>description</code> <code>str | None</code> <p>Image description, optional</p> <code>None</code> <code>alt_text</code> <code>str | None</code> <p>Image alt text, optional</p> <code>None</code> <code>width</code> <code>str | None</code> <p>Image width, like \"300px\", \"100%\"</p> <code>None</code> <code>height</code> <code>str | None</code> <p>Image height, like \"200px\", \"auto\"</p> <code>None</code> <code>max_width</code> <code>str | None</code> <p>Image maximum width, like \"600px\"</p> <code>None</code> <code>border_radius</code> <code>str | None</code> <p>Border radius, like \"8px\", \"50%\"</p> <code>None</code> <code>cache</code> <code>bool</code> <p>Whether to cache network images, defaults to True</p> <code>True</code> <code>embed</code> <code>bool</code> <p>Whether to embed images, defaults to True</p> <code>True</code> <code>show_caption</code> <code>bool</code> <p>Whether to show title and description, defaults to True</p> <code>True</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; # Basic usage\n&gt;&gt;&gt; email.add_image(\"https://example.com/image.png\")\n&gt;&gt;&gt; # Local image\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; email.add_image(Path(\"./assets/logo.png\"), title=\"Company Logo\")\n&gt;&gt;&gt; # Complete options\n&gt;&gt;&gt; email.add_image(\n...     \"https://example.com/product.jpg\",\n...     title=\"Product Showcase\",\n...     description=\"Latest product showcase image\",\n...     alt_text=\"Product Image\",\n...     width=\"100%\",\n...     max_width=\"600px\",\n...     border_radius=\"8px\"\n... )\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_log","title":"<code>add_log(logs, title=None, show_timestamp=True, show_level=True, filter_level=None, max_height='400px')</code>","text":"<p>Quickly add log widget.</p> <p>Parameters:</p> Name Type Description Default <code>logs</code> <code>list[str]</code> <p>Log list</p> required <code>title</code> <code>str | None</code> <p>Log title, optional</p> <code>None</code> <code>show_timestamp</code> <code>bool</code> <p>Whether to show timestamps</p> <code>True</code> <code>show_level</code> <code>bool</code> <p>Whether to show log levels</p> <code>True</code> <code>filter_level</code> <code>LogLevel</code> <p>Filter level, optional</p> <code>None</code> <code>max_height</code> <code>str</code> <p>Maximum height, defaults to \"400px\"</p> <code>'400px'</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; logs = [\n...     \"2024-01-01 10:00:00.000 | INFO | main:process:10 - Task started\",\n...     \"2024-01-01 10:00:01.000 | WARNING | main:check:20 - Found abnormal data\",\n...     \"2024-01-01 10:00:02.000 | INFO | main:finish:30 - Task completed\"\n... ]\n&gt;&gt;&gt; email.add_log(logs, \"Execution Log\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_metric","title":"<code>add_metric(title='', metrics=None, layout='horizontal', show_trends=True)</code>","text":"<p>Quickly add metric widget.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Metric group title, optional</p> <code>''</code> <code>metrics</code> <code>list[tuple] | None</code> <p>Metric list, format: [(label, value, unit, trend, trend_type, description), ...], optional</p> <code>None</code> <code>layout</code> <code>str</code> <p>Layout method, 'horizontal' or 'vertical', defaults to 'horizontal'</p> <code>'horizontal'</code> <code>show_trends</code> <code>bool</code> <p>Whether to show trend information, defaults to True</p> <code>True</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; # Basic metrics\n&gt;&gt;&gt; email.add_metric(\"Core Metrics\", [\n...     (\"Users\", 12345, \"people\"),\n...     (\"Growth Rate\", \"15.6\", \"%\", \"+2.3%\", \"success\"),\n...     (\"Revenue\", \"$1,250,000\", \"\", \"+12.3%\", \"success\")\n... ])\n&gt;&gt;&gt; # Metrics with complete options\n&gt;&gt;&gt; email.add_metric(\n...     title=\"System Performance\",\n...     metrics=[\n...         (\"CPU Usage\", \"45.2\", \"%\", \"+2.1%\", \"warning\", \"Needs attention\"),\n...         (\"Memory Usage\", \"78.5\", \"%\", \"-1.3%\", \"success\", \"Performing well\"),\n...         (\"Disk Space\", \"23.8\", \"GB\", \"+5.2GB\", \"info\", \"Normal range\")\n...     ],\n...     layout=\"vertical\",\n...     show_trends=True\n... )\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_progress","title":"<code>add_progress(value, label=None, max_value=100.0, theme=None, show_percentage=True)</code>","text":"<p>Quickly add a progress bar widget.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>Current progress value</p> required <code>label</code> <code>str | None</code> <p>Progress bar label, optional</p> <code>None</code> <code>max_value</code> <code>float</code> <p>Maximum value, defaults to 100</p> <code>100.0</code> <code>theme</code> <code>ProgressTheme</code> <p>Theme, defaults to PRIMARY</p> <code>None</code> <code>show_percentage</code> <code>bool</code> <p>Whether to show percentage</p> <code>True</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_progress(75, \"Task Completion\")\n&gt;&gt;&gt; email.add_progress(100, \"Download Progress\", theme=ProgressTheme.SUCCESS)\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_quote","title":"<code>add_quote(content, author=None, source=None, quote_type=None)</code>","text":"<p>Quickly add a quote widget.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>Quote content</p> required <code>author</code> <code>str | None</code> <p>Author, optional</p> <code>None</code> <code>source</code> <code>str | None</code> <p>Source, optional</p> <code>None</code> <code>quote_type</code> <code>StatusType</code> <p>Quote type, defaults to INFO</p> <code>None</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_quote(\"Success is not final, failure is not fatal\", \"Churchill\")\n&gt;&gt;&gt; email.add_quote(\"Data is the new oil\", source=\"The Economist\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_separator","title":"<code>add_separator(separator_type=None, color=None, thickness=None, width=None, margin=None)</code>","text":"<p>Quickly add separator widget.</p> <p>Parameters:</p> Name Type Description Default <code>separator_type</code> <code>SeparatorType</code> <p>Separator type, defaults to SOLID</p> <code>None</code> <code>color</code> <code>str | None</code> <p>Separator color, optional</p> <code>None</code> <code>thickness</code> <code>str | None</code> <p>Separator thickness, optional</p> <code>None</code> <code>width</code> <code>str | None</code> <p>Separator width, optional</p> <code>None</code> <code>margin</code> <code>str | None</code> <p>Top and bottom margin, optional</p> <code>None</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; # Basic separator\n&gt;&gt;&gt; email.add_separator()\n&gt;&gt;&gt; # Custom styled separator\n&gt;&gt;&gt; email.add_separator(\n...     separator_type=SeparatorType.DASHED,\n...     color=\"#0078d4\",\n...     thickness=\"2px\",\n...     width=\"80%\"\n... )\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_status_items","title":"<code>add_status_items(items, title=None, layout=None)</code>","text":"<p>Quickly add a status information widget.</p> <p>Parameters:</p> Name Type Description Default <code>items</code> <code>list[dict[str, str]]</code> <p>Status item list, each item contains label, value, status (optional)</p> required <code>title</code> <code>str | None</code> <p>Status group title, optional</p> <code>None</code> <code>layout</code> <code>LayoutType</code> <p>Layout type, defaults to VERTICAL</p> <code>None</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; items = [\n...     {\"label\": \"CPU Usage\", \"value\": \"15%\"},\n...     {\"label\": \"Memory Usage\", \"value\": \"60%\"},\n...     {\"label\": \"Disk Space\", \"value\": \"80%\"}\n... ]\n&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_status_items(items, \"System Monitoring\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_table_from_data","title":"<code>add_table_from_data(data, headers=None, title=None, show_index=False, striped=True, bordered=True, hoverable=True)</code>","text":"<p>Quickly add a table widget.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>list[list[str]]</code> <p>Table data, two-dimensional list</p> required <code>headers</code> <code>list[str] | None</code> <p>Header list, optional</p> <code>None</code> <code>title</code> <code>str | None</code> <p>Table title, optional</p> <code>None</code> <code>show_index</code> <code>bool</code> <p>Whether to show row index</p> <code>False</code> <code>striped</code> <code>bool</code> <p>Whether to use striped style</p> <code>True</code> <code>bordered</code> <code>bool</code> <p>Whether to show borders</p> <code>True</code> <code>hoverable</code> <code>bool</code> <p>Whether to support hover effects</p> <code>True</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; data = [[\"Alice\", \"100\", \"Excellent\"], [\"Bob\", \"95\", \"Good\"]]\n&gt;&gt;&gt; headers = [\"Name\", \"Score\", \"Grade\"]\n&gt;&gt;&gt; email.add_table_from_data(data, headers, \"Grade Report\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_table_from_df","title":"<code>add_table_from_df(df, title=None, show_index=False, striped=True, bordered=True, hoverable=True)</code>","text":"<p>Quickly add a table widget from DataFrame.</p> <p>Parameters:</p> Name Type Description Default <code>df</code> <code>DataFrame</code> <p>pandas DataFrame object</p> required <code>title</code> <code>str | None</code> <p>Table title, optional</p> <code>None</code> <code>show_index</code> <code>bool</code> <p>Whether to show row index</p> <code>False</code> <code>striped</code> <code>bool</code> <p>Whether to use striped style</p> <code>True</code> <code>bordered</code> <code>bool</code> <p>Whether to show borders</p> <code>True</code> <code>hoverable</code> <code>bool</code> <p>Whether to support hover effects</p> <code>True</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; import pandas as pd\n&gt;&gt;&gt; df = pd.DataFrame({\"Name\": [\"Alice\", \"Bob\"], \"Score\": [100, 95]})\n&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_table_from_df(df, \"Grade Statistics\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_text","title":"<code>add_text(content, text_type=None, color=None, font_size=None, align=None, font_weight=None)</code>","text":"<p>Quickly add a text widget.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>Text content</p> required <code>text_type</code> <code>TextType</code> <p>Text type, defaults to TextType.BODY</p> <code>None</code> <code>color</code> <code>str | None</code> <p>Text color, e.g., \"#ff0000\"</p> <code>None</code> <code>font_size</code> <code>str | None</code> <p>Font size, e.g., \"18px\"</p> <code>None</code> <code>align</code> <code>TextAlign</code> <p>Text alignment</p> <code>None</code> <code>font_weight</code> <code>str | None</code> <p>Font weight, e.g., \"bold\"</p> <code>None</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; # Regular body text\n&gt;&gt;&gt; email.add_text(\"This is regular text\")\n&gt;&gt;&gt; # Large title\n&gt;&gt;&gt; email.add_text(\"Important Title\", TextType.TITLE_LARGE)\n&gt;&gt;&gt; # Styled text\n&gt;&gt;&gt; email.add_text(\"Important Notice\", color=\"#ff0000\", font_size=\"18px\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_timeline","title":"<code>add_timeline(title='', events=None, show_time=False, reverse_order=False)</code>","text":"<p>Quickly add timeline widget.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Timeline title, optional</p> <code>''</code> <code>events</code> <code>list[tuple] | None</code> <p>Events list, format: [(title, time, description, status_type), ...], optional</p> <code>None</code> <code>show_time</code> <code>bool</code> <p>Whether to show timestamps, defaults to False</p> <code>False</code> <code>reverse_order</code> <code>bool</code> <p>Whether to reverse order, defaults to False</p> <code>False</code> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; # Basic timeline\n&gt;&gt;&gt; email.add_timeline(\"Project Progress\", [\n...     (\"Project Launch\", \"2024-01-01\", \"Project officially started\"),\n...     (\"Requirements Confirmed\", \"2024-01-15\", \"Requirements analysis completed\"),\n...     (\"Development Complete\", \"2024-02-28\", \"Code development completed\")\n... ])\n&gt;&gt;&gt; # Timeline with timestamps\n&gt;&gt;&gt; email.add_timeline(\"System Log\", [\n...     (\"System Startup\", \"2024-01-01 09:00\", \"Service started\", \"success\"),\n...     (\"Issue Found\", \"2024-01-01 10:30\", \"Bug discovered\", \"error\"),\n...     (\"Issue Fixed\", \"2024-01-01 11:00\", \"Fix completed\", \"success\")\n... ], show_time=True, reverse_order=True)\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_widget","title":"<code>add_widget(widget)</code>","text":"<p>Add a single widget to the email.</p> <p>Parameters:</p> Name Type Description Default <code>widget</code> <code>BaseWidget</code> <p>The widget object to add</p> required <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; text_widget = TextWidget().set_content(\"Hello\")\n&gt;&gt;&gt; email.add_widget(text_widget)\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.add_widgets","title":"<code>add_widgets(widgets)</code>","text":"<p>Batch add multiple widgets to the email.</p> <p>Parameters:</p> Name Type Description Default <code>widgets</code> <code>list[BaseWidget]</code> <p>List of widget objects</p> required <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; widgets = [TextWidget(), TableWidget(), ChartWidget()]\n&gt;&gt;&gt; email.add_widgets(widgets)\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.clear_widgets","title":"<code>clear_widgets()</code>","text":"<p>Clear all widgets.</p> <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p>"},{"location":"api/email/#email_widget.email.Email.export_html","title":"<code>export_html(filename=None, output_dir=None)</code>","text":"<p>Export email as HTML file.</p> <p>Parameters:</p> Name Type Description Default <code>filename</code> <code>str | None</code> <p>Optional filename, auto-generated if not provided</p> <code>None</code> <code>output_dir</code> <code>str | None</code> <p>Optional output directory, uses default directory from config if not provided</p> <code>None</code> <p>Returns:</p> Type Description <code>Path</code> <p>Complete path of exported file</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email(\"Report\")\n&gt;&gt;&gt; # Use default filename\n&gt;&gt;&gt; path = email.export_html()\n&gt;&gt;&gt;\n&gt;&gt;&gt; # Specify filename and directory\n&gt;&gt;&gt; path = email.export_html(\"my_report.html\", \"./reports\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.export_str","title":"<code>export_str()</code>","text":"<p>Export email as HTML text.</p> <p>Returns:</p> Type Description <code>str</code> <p>Complete HTML email string</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email(\"Preview Test\")\n&gt;&gt;&gt; html = email.export_str()\n&gt;&gt;&gt; print(html[:100])  # Print first 100 characters\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.get_widget","title":"<code>get_widget(widget_id)</code>","text":"<p>Get a specific widget by ID.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>str</code> <p>The widget's ID</p> required <p>Returns:</p> Type Description <code>BaseWidget | None</code> <p>The found widget object, or None if it doesn't exist</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; widget = TextWidget().set_widget_id(\"my_text\")\n&gt;&gt;&gt; email.add_widget(widget)\n&gt;&gt;&gt; found_widget = email.get_widget(\"my_text\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.get_widget_count","title":"<code>get_widget_count()</code>","text":"<p>Get the number of widgets in the current email.</p> <p>Returns:</p> Type Description <code>int</code> <p>Number of widgets</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.add_widget(TextWidget())\n&gt;&gt;&gt; email.add_widget(TableWidget())\n&gt;&gt;&gt; print(email.get_widget_count())  # Output: 2\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.remove_widget","title":"<code>remove_widget(widget_id)</code>","text":"<p>Remove a specific widget by ID.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>str</code> <p>The ID of the widget to remove</p> required <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; widget = TextWidget().set_widget_id(\"my_text\")\n&gt;&gt;&gt; email.add_widget(widget)\n&gt;&gt;&gt; email.remove_widget(\"my_text\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.set_footer","title":"<code>set_footer(footer_text)</code>","text":"<p>Set the email footer.</p> <p>Parameters:</p> Name Type Description Default <code>footer_text</code> <code>str | None</code> <p>Footer text, if None uses default text</p> required <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.set_footer(\"This report is automatically generated by the data team\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.set_subtitle","title":"<code>set_subtitle(subtitle)</code>","text":"<p>Set the email subtitle.</p> <p>Parameters:</p> Name Type Description Default <code>subtitle</code> <code>str | None</code> <p>Subtitle text, if None uses default timestamp</p> required <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.set_subtitle(\"Data Statistics Report\")\n</code></pre>"},{"location":"api/email/#email_widget.email.Email.set_title","title":"<code>set_title(title)</code>","text":"<p>Set the email title.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>New email title</p> required <p>Returns:</p> Type Description <code>Email</code> <p>Returns self to support method chaining</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; email = Email()\n&gt;&gt;&gt; email.set_title(\"Daily Data Report - 2024-01-01\")\n</code></pre>"},{"location":"api/image-widget/","title":"ImageWidget API","text":""},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget","title":"<code>ImageWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Embed images in emails with optional titles and descriptions.</p> <p>This widget simplifies the process of adding images to emails. It can handle images from network URLs or local files and automatically converts them to Base64-encoded data URIs to ensure images display correctly in most email clients without relying on external links.</p> Core features <ul> <li>Multi-source support: Can load images from URLs or local file paths.</li> <li>Automatic inline: All images are automatically converted to Base64 and embedded in HTML for better compatibility.</li> <li>Rich media: Supports adding titles and descriptions to images for rich media explanations.</li> <li>Style control: Can customize image dimensions, maximum width, and border radius.</li> </ul> <p>Attributes:</p> Name Type Description <code>image_url</code> <code>Optional[str]</code> <p>Processed image source, usually a Base64 data URI.</p> <code>title</code> <code>Optional[str]</code> <p>Title below the image.</p> <code>description</code> <code>Optional[str]</code> <p>Detailed description below the image title.</p> <code>alt_text</code> <code>str</code> <p>Alternative text for the image, used for accessibility.</p> <p>Examples:</p> <p>Load an image from a network URL and add description:</p> Python<pre><code>from email_widget.widgets import ImageWidget\n\nimage_from_url = (ImageWidget()\n                  .set_image_url(\"https://www.example.com/images/product_photo.jpg\")\n                  .set_title(\"Latest Product Showcase\")\n                  .set_description(\"Shows the design and features of our latest model.\")\n                  .set_alt_text(\"Front view of the latest product\")\n                  .set_size(width=\"100%\", height=\"auto\")\n                  .set_max_width(\"600px\")\n                  .set_border_radius(\"8px\"))\n\n# \u5047\u8bbe email \u662f\u4e00\u4e2a Email \u5bf9\u8c61\n# email.add_widget(image_from_url)\n</code></pre> <p>\u4ece\u672c\u5730\u6587\u4ef6\u52a0\u8f7d\u56fe\u7247\uff1a</p> Python<pre><code>from pathlib import Path\n\nlocal_image_path = Path(\"./assets/company_logo.png\")\nlogo_image = ImageWidget().set_image_url(local_image_path)\n</code></pre> <p>\u521d\u59cb\u5316ImageWidget\u3002</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>\u53ef\u9009\u7684Widget ID\u3002</p> <code>None</code>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget-attributes","title":"Attributes","text":""},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.alt_text","title":"<code>alt_text</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u56fe\u7247\u7684\u66ff\u4ee3\u6587\u672c\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u56fe\u7247\u7684\u66ff\u4ee3\u6587\u672c\u3002</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.border_radius","title":"<code>border_radius</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u8fb9\u6846\u5706\u89d2\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u8fb9\u6846\u5706\u89d2\u503c\u3002</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.description","title":"<code>description</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u56fe\u7247\u63cf\u8ff0\u3002</p> <p>Returns:</p> Type Description <code>str | None</code> <p>Optional[str]: \u56fe\u7247\u63cf\u8ff0\u6216None\u3002</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.height","title":"<code>height</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u56fe\u7247\u9ad8\u5ea6\u3002</p> <p>Returns:</p> Type Description <code>str | None</code> <p>Optional[str]: \u56fe\u7247\u9ad8\u5ea6\u6216None\u3002</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.image_url","title":"<code>image_url</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5904\u7406\u540e\u7684\u56fe\u7247URL\uff08\u901a\u5e38\u4e3aBase64 data URI\uff09\u3002</p> <p>Returns:</p> Type Description <code>str | None</code> <p>Optional[str]: \u56fe\u7247\u7684Base64 data URI\u6216None\u3002</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.is_show_caption","title":"<code>is_show_caption</code>  <code>property</code>","text":"<p>\u5224\u65ad\u662f\u5426\u663e\u793a\u6807\u9898\u548c\u63cf\u8ff0\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u5982\u679c\u663e\u793a\u6807\u9898\u548c\u63cf\u8ff0\u5219\u4e3aTrue\uff0c\u5426\u5219\u4e3aFalse\u3002</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.title","title":"<code>title</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u56fe\u7247\u6807\u9898\u3002</p> <p>Returns:</p> Type Description <code>str | None</code> <p>Optional[str]: \u56fe\u7247\u6807\u9898\u6216None\u3002</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.width","title":"<code>width</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u56fe\u7247\u5bbd\u5ea6\u3002</p> <p>Returns:</p> Type Description <code>str | None</code> <p>Optional[str]: \u56fe\u7247\u5bbd\u5ea6\u6216None\u3002</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget-functions","title":"Functions","text":""},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>\u83b7\u53d6\u6a21\u677f\u6e32\u67d3\u6240\u9700\u7684\u4e0a\u4e0b\u6587\u6570\u636e</p>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.set_alt_text","title":"<code>set_alt_text(alt)</code>","text":"<p>\u8bbe\u7f6e\u56fe\u7247\u7684\u66ff\u4ee3\u6587\u672c\u3002</p> <p>\u66ff\u4ee3\u6587\u672c\u5728\u56fe\u7247\u65e0\u6cd5\u663e\u793a\u65f6\u63d0\u4f9b\u63cf\u8ff0\uff0c\u5bf9\u53ef\u8bbf\u95ee\u6027\uff08Accessibility\uff09\u975e\u5e38\u91cd\u8981\u3002</p> <p>Parameters:</p> Name Type Description Default <code>alt</code> <code>str</code> <p>\u56fe\u7247\u7684\u66ff\u4ee3\u6587\u672c\u3002</p> required <p>Returns:</p> Name Type Description <code>ImageWidget</code> <code>ImageWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ImageWidget().set_alt_text(\"\u516c\u53f8Logo\")\n</code></pre>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.set_border_radius","title":"<code>set_border_radius(radius)</code>","text":"<p>\u8bbe\u7f6e\u56fe\u7247\u7684\u8fb9\u6846\u5706\u89d2\u3002</p> <p>Parameters:</p> Name Type Description Default <code>radius</code> <code>str</code> <p>CSS\u8fb9\u6846\u5706\u89d2\u503c\uff0c\u5982 \"8px\", \"50%\"\u3002</p> required <p>Returns:</p> Name Type Description <code>ImageWidget</code> <code>ImageWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ImageWidget().set_border_radius(\"8px\")\n&gt;&gt;&gt; widget = ImageWidget().set_border_radius(\"50%\") # \u5706\u5f62\u56fe\u7247\n</code></pre>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.set_description","title":"<code>set_description(description)</code>","text":"<p>\u8bbe\u7f6e\u56fe\u7247\u63cf\u8ff0\u3002</p> <p>Parameters:</p> Name Type Description Default <code>description</code> <code>str</code> <p>\u56fe\u7247\u6807\u9898\u4e0b\u65b9\u7684\u8be6\u7ec6\u63cf\u8ff0\u6587\u672c\u3002</p> required <p>Returns:</p> Name Type Description <code>ImageWidget</code> <code>ImageWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ImageWidget().set_description(\"\u6b64\u56fe\u5c55\u793a\u4e86\u8fc7\u53bb\u4e00\u5e74\u7684\u9500\u552e\u6570\u636e\u53d8\u5316\u3002\")\n</code></pre>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.set_image_url","title":"<code>set_image_url(image_url, cache=True, embed=True)</code>","text":"<p>\u8bbe\u7f6e\u56fe\u7247\u6765\u6e90URL\u6216\u672c\u5730\u8def\u5f84\u3002</p> <p>\u6b64\u65b9\u6cd5\u652f\u6301\u4ece\u7f51\u7edcURL\u6216\u672c\u5730\u6587\u4ef6\u8def\u5f84\u52a0\u8f7d\u56fe\u7247\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u56fe\u7247\u4f1a\u88ab\u81ea\u52a8\u5904\u7406\u5e76\u8f6c\u6362\u4e3a Base64\u7f16\u7801\u7684data URI\uff0c\u76f4\u63a5\u5d4c\u5165\u5230HTML\u4e2d\uff0c\u4ee5\u786e\u4fdd\u5728\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u7684\u517c\u5bb9\u6027\u3002</p> <p>Parameters:</p> Name Type Description Default <code>image_url</code> <code>Union[str, Path]</code> <p>\u56fe\u7247\u7684URL\u5b57\u7b26\u4e32\u6216\u672c\u5730\u6587\u4ef6Path\u5bf9\u8c61\u3002</p> required <code>cache</code> <code>bool</code> <p>\u662f\u5426\u7f13\u5b58\u7f51\u7edc\u56fe\u7247\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002</p> <code>True</code> <code>embed</code> <code>bool</code> <p>\u662f\u5426\u5d4c\u5165\u56fe\u7247\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002\u5982\u679c\u4e3aFalse\uff0c\u7f51\u7edcURL\u5c06\u76f4\u63a5\u4f7f\u7528\u94fe\u63a5\uff0c          \u672c\u5730\u6587\u4ef6\u4f1a\u7ed9\u51fa\u8b66\u544a\u5e76\u5f3a\u5236\u5d4c\u5165\u3002</p> <code>True</code> <p>Returns:</p> Name Type Description <code>ImageWidget</code> <code>ImageWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>\u5982\u679c\u56fe\u7247URL\u6216\u8def\u5f84\u65e0\u6548\uff0c\u6216\u56fe\u7247\u5904\u7406\u5931\u8d25\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ImageWidget().set_image_url(\"https://example.com/image.png\")\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; widget = ImageWidget().set_image_url(Path(\"local/image.jpg\"))\n&gt;&gt;&gt; # \u4f7f\u7528\u5916\u90e8\u94fe\u63a5\u800c\u4e0d\u5d4c\u5165\n&gt;&gt;&gt; widget = ImageWidget().set_image_url(\"https://example.com/image.png\", embed=False)\n</code></pre>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.set_max_width","title":"<code>set_max_width(max_width)</code>","text":"<p>\u8bbe\u7f6e\u56fe\u7247\u7684\u6700\u5927\u5bbd\u5ea6\u3002</p> <p>Parameters:</p> Name Type Description Default <code>max_width</code> <code>str</code> <p>CSS\u6700\u5927\u5bbd\u5ea6\u503c\uff0c\u5982 \"600px\", \"100%\"\u3002</p> required <p>Returns:</p> Name Type Description <code>ImageWidget</code> <code>ImageWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ImageWidget().set_max_width(\"600px\")\n</code></pre>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.set_size","title":"<code>set_size(width=None, height=None)</code>","text":"<p>\u8bbe\u7f6e\u56fe\u7247\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002</p> <p>Parameters:</p> Name Type Description Default <code>width</code> <code>Optional[str]</code> <p>\u56fe\u7247\u7684\u5bbd\u5ea6\uff0c\u5982 \"100px\", \"50%\", \"auto\"\u3002</p> <code>None</code> <code>height</code> <code>Optional[str]</code> <p>\u56fe\u7247\u7684\u9ad8\u5ea6\uff0c\u5982 \"200px\", \"auto\"\u3002</p> <code>None</code> <p>Returns:</p> Name Type Description <code>ImageWidget</code> <code>ImageWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>\u5f53\u5c3a\u5bf8\u683c\u5f0f\u65e0\u6548\u65f6\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ImageWidget().set_size(width=\"300px\", height=\"200px\")\n&gt;&gt;&gt; widget = ImageWidget().set_size(width=\"100%\", height=\"auto\")\n</code></pre>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>\u8bbe\u7f6e\u56fe\u7247\u6807\u9898\u3002</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>\u56fe\u7247\u4e0b\u65b9\u7684\u6807\u9898\u6587\u672c\u3002</p> required <p>Returns:</p> Name Type Description <code>ImageWidget</code> <code>ImageWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ImageWidget().set_title(\"\u4ea7\u54c1\u9500\u552e\u8d8b\u52bf\u56fe\")\n</code></pre>"},{"location":"api/image-widget/#email_widget.widgets.image_widget.ImageWidget.show_caption","title":"<code>show_caption(show=True)</code>","text":"<p>\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u56fe\u7247\u6807\u9898\u548c\u63cf\u8ff0\u3002</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u6807\u9898\u548c\u63cf\u8ff0\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002</p> <code>True</code> <p>Returns:</p> Name Type Description <code>ImageWidget</code> <code>ImageWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ImageWidget().show_caption(False) # \u9690\u85cf\u6807\u9898\u548c\u63cf\u8ff0\n</code></pre>"},{"location":"api/log-widget/","title":"LogWidget API","text":""},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget","title":"<code>LogWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a code block for elegantly displaying log information in emails.</p> <p>This widget is particularly suitable for displaying program runtime logs, error reports, or any information that needs to be presented in chronological order and by severity level. It can automatically parse <code>loguru</code> format log strings and highlight them in different colors based on log level (such as INFO, WARNING, ERROR), making the content clear and readable.</p> Core features <ul> <li>Loguru format parsing: Automatically parses log lines containing timestamps, levels, sources, and messages.</li> <li>Level highlighting: Applies different colors for different log levels (DEBUG, INFO, WARNING, ERROR, CRITICAL).</li> <li>Content filtering: Can set a minimum log level to only display logs at that level and above.</li> <li>Display control: Can selectively show or hide timestamps, log levels, and source information.</li> <li>Scrollbar: Automatically displays a scrollbar when log content exceeds the preset maximum height.</li> </ul> <p>Examples:</p> <p>Receive a list of <code>loguru</code> format logs and display them:</p> Python<pre><code>from email_widget.widgets import LogWidget\nfrom email_widget.core.enums import LogLevel\n\nlog_messages = [\n    \"2024-07-07 10:30:00.123 | INFO     | my_app.main:run:45 - Application started successfully.\",\n    \"2024-07-07 10:31:15.456 | WARNING  | my_app.database:connect:88 - Connection is slow.\",\n    \"2024-07-07 10:32:05.789 | ERROR    | my_app.api:request:152 - Failed to fetch data from API.\"\n]\n\nlog_viewer = (LogWidget()\n              .set_title(\"Application Run Log\")\n              .set_logs(log_messages)\n              .set_max_height(\"300px\")\n              .filter_by_level(LogLevel.WARNING)) # Only show WARNING and ERROR\n\n# Assuming email is an Email object\n# email.add_widget(log_viewer)\n</code></pre> <p>Add logs one by one using the <code>add_log_entry</code> method:</p> Python<pre><code>manual_log = (LogWidget()\n              .set_title(\"Manual Log Entries\")\n              .add_log_entry(\"User logged in.\", level=LogLevel.INFO, module=\"auth\")\n              .add_log_entry(\"Invalid password attempt.\", level=LogLevel.WARNING, module=\"auth\"))\n</code></pre> <p>Initialize LogWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget-attributes","title":"Attributes","text":""},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.logs","title":"<code>logs</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u8fc7\u6ee4\u540e\u7684\u65e5\u5fd7\u5217\u8868\u3002</p> <p>\u5982\u679c\u8bbe\u7f6e\u4e86 <code>filter_level</code>\uff0c\u5219\u53ea\u8fd4\u56de\u7b26\u5408\u8fc7\u6ee4\u6761\u4ef6\u7684\u65e5\u5fd7\u3002</p> <p>Returns:</p> Type Description <code>list[LogEntry]</code> <p>List[LogEntry]: \u8fc7\u6ee4\u540e\u7684\u65e5\u5fd7\u6761\u76ee\u5217\u8868\u3002</p>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.max_height","title":"<code>max_height</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u65e5\u5fd7\u663e\u793a\u533a\u57df\u7684\u6700\u5927\u9ad8\u5ea6\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u6700\u5927\u9ad8\u5ea6\u7684CSS\u503c\u3002</p>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.title","title":"<code>title</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u65e5\u5fd7\u7ec4\u4ef6\u7684\u6807\u9898\u3002</p> <p>Returns:</p> Type Description <code>str | None</code> <p>Optional[str]: \u6807\u9898\u6587\u672c\u6216None\u3002</p>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget-functions","title":"Functions","text":""},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.add_log_entry","title":"<code>add_log_entry(message, level=LogLevel.INFO, timestamp=None, module=None, function=None, line_number=None)</code>","text":"<p>\u624b\u52a8\u6dfb\u52a0\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u3002</p> <p>\u6b64\u65b9\u6cd5\u5141\u8bb8\u76f4\u63a5\u521b\u5efa <code>LogEntry</code> \u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230\u65e5\u5fd7\u5217\u8868\u4e2d\uff0c \u9002\u7528\u4e8e\u975eLoguru\u683c\u5f0f\u7684\u65e5\u5fd7\u6216\u9700\u8981\u81ea\u5b9a\u4e49\u65e5\u5fd7\u5185\u5bb9\u7684\u60c5\u51b5\u3002</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>\u65e5\u5fd7\u6d88\u606f\u5185\u5bb9\u3002</p> required <code>level</code> <code>LogLevel</code> <p>\u65e5\u5fd7\u7ea7\u522b\uff0c\u9ed8\u8ba4\u4e3a <code>LogLevel.INFO</code>\u3002</p> <code>INFO</code> <code>timestamp</code> <code>Optional[datetime]</code> <p>\u65e5\u5fd7\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\uff0c\u9ed8\u8ba4\u4e3a\u5f53\u524d\u65f6\u95f4\u3002</p> <code>None</code> <code>module</code> <code>Optional[str]</code> <p>\u8bb0\u5f55\u65e5\u5fd7\u7684\u6a21\u5757\u540d\u79f0\u3002</p> <code>None</code> <code>function</code> <code>Optional[str]</code> <p>\u8bb0\u5f55\u65e5\u5fd7\u7684\u51fd\u6570\u540d\u79f0\u3002</p> <code>None</code> <code>line_number</code> <code>Optional[int]</code> <p>\u8bb0\u5f55\u65e5\u5fd7\u7684\u4ee3\u7801\u884c\u53f7\u3002</p> <code>None</code> <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().add_log_entry(\"\u81ea\u5b9a\u4e49\u6d88\u606f\", level=LogLevel.DEBUG)\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.add_log_parser","title":"<code>add_log_parser(log_parser)</code>","text":"<p>\u6dfb\u52a0\u81ea\u5b9a\u4e49\u65e5\u5fd7\u89e3\u6790\u5668\u5230\u89e3\u6790\u5668\u94fe\u4e2d\u3002</p> <p>\u65b0\u6dfb\u52a0\u7684\u89e3\u6790\u5668\u4f1a\u63d2\u5165\u5230PlainTextParser\u4e4b\u524d\uff0c \u786e\u4fddPlainTextParser\u59cb\u7ec8\u4f5c\u4e3a\u515c\u5e95\u89e3\u6790\u5668\u3002</p> <p>Parameters:</p> Name Type Description Default <code>log_parser</code> <code>LogParser</code> <p>\u8981\u6dfb\u52a0\u7684\u65e5\u5fd7\u89e3\u6790\u5668\u5b9e\u4f8b\u3002</p> required <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; custom_parser = MyCustomLogParser()\n&gt;&gt;&gt; widget = LogWidget().add_log_parser(custom_parser)\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.append_log","title":"<code>append_log(log)</code>","text":"<p>Append a single log string.</p> <p>The log string will be automatically parsed as a <code>LogEntry</code> object and added to the log list.</p> <p>Parameters:</p> Name Type Description Default <code>log</code> <code>str</code> <p>Single log string.</p> required <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().append_log(\"2024-07-07 10:00:00 | INFO | app:main - Application started\")\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.clear","title":"<code>clear()</code>","text":"<p>Clear all logs.</p> <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().clear()\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.filter_by_level","title":"<code>filter_by_level(level)</code>","text":"<p>Filter display by log level.</p> <p>Only log entries with level equal to or higher than the specified <code>level</code> will be displayed.</p> <p>Parameters:</p> Name Type Description Default <code>level</code> <code>LogLevel</code> <p>Minimum log level for filtering.</p> required <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().filter_by_level(LogLevel.ERROR) # Only show ERROR and CRITICAL logs\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>\u83b7\u53d6\u6a21\u677f\u6e32\u67d3\u6240\u9700\u7684\u4e0a\u4e0b\u6587\u6570\u636e</p>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.set_log_level","title":"<code>set_log_level(level)</code>","text":"<p>Set log filter level.</p> <p>Only logs at or above this level will be displayed.</p> <p>Parameters:</p> Name Type Description Default <code>level</code> <code>LogLevel</code> <p>Minimum log level.</p> required <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().set_log_level(LogLevel.WARNING) # Only show WARNING and above logs\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.set_logs","title":"<code>set_logs(logs)</code>","text":"<p>Set log list.</p> <p>This method will clear existing logs and parse the new log string list.</p> <p>Parameters:</p> Name Type Description Default <code>logs</code> <code>List[str]</code> <p>Log string list.</p> required <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; logs = [\"INFO: App started\", \"ERROR: Failed to connect\"]\n&gt;&gt;&gt; widget = LogWidget().set_logs(logs)\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.set_max_height","title":"<code>set_max_height(height)</code>","text":"<p>Set maximum height of the log display area.</p> <p>When log content exceeds this height, a scrollbar will appear.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>str</code> <p>CSS height value, such as \"400px\", \"50vh\".</p> required <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().set_max_height(\"300px\")\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>\u8bbe\u7f6e\u65e5\u5fd7\u7ec4\u4ef6\u7684\u6807\u9898\u3002</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>\u6807\u9898\u6587\u672c\u3002</p> required <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().set_title(\"\u7cfb\u7edf\u8fd0\u884c\u65e5\u5fd7\")\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.show_level","title":"<code>show_level(show=True)</code>","text":"<p>\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u65e5\u5fd7\u6761\u76ee\u7684\u7ea7\u522b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u7ea7\u522b\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002</p> <code>True</code> <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().show_level(False) # \u9690\u85cf\u7ea7\u522b\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.show_source","title":"<code>show_source(show=True)</code>","text":"<p>\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u65e5\u5fd7\u6761\u76ee\u7684\u6765\u6e90\u4fe1\u606f\uff08\u6a21\u5757\u3001\u51fd\u6570\u3001\u884c\u53f7\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u6765\u6e90\u4fe1\u606f\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002</p> <code>True</code> <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().show_source(False) # \u9690\u85cf\u6765\u6e90\u4fe1\u606f\n</code></pre>"},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogWidget.show_timestamp","title":"<code>show_timestamp(show=True)</code>","text":"<p>Set whether to display timestamps for log entries.</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u65f6\u95f4\u6233\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002</p> <code>True</code> <p>Returns:</p> Name Type Description <code>LogWidget</code> <code>LogWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = LogWidget().show_timestamp(False) # \u9690\u85cf\u65f6\u95f4\u6233\n</code></pre>"},{"location":"api/log-widget/#log-entry-logentry","title":"Log Entry (LogEntry)","text":""},{"location":"api/log-widget/#email_widget.widgets.log_widget.LogEntry","title":"<code>LogEntry(message, level=LogLevel.INFO, timestamp=None, module=None, function=None, line_number=None)</code>","text":"<p>Data structure representing a single log entry.</p> <p>This class is used to encapsulate log information parsed from log strings or manually created, including message content, log level, timestamp, and source (module, function, line number).</p> <p>Attributes:</p> Name Type Description <code>message</code> <code>str</code> <p>Log message content.</p> <code>level</code> <code>LogLevel</code> <p>Log level, defaults to <code>LogLevel.INFO</code>.</p> <code>timestamp</code> <code>datetime</code> <p>Timestamp of the log record, defaults to current time.</p> <code>module</code> <code>Optional[str]</code> <p>Name of the module that recorded the log.</p> <code>function</code> <code>Optional[str]</code> <p>Name of the function that recorded the log.</p> <code>line_number</code> <code>Optional[int]</code> <p>Line number where the log was recorded.</p> <p>Examples:</p> Python<pre><code>from datetime import datetime\nfrom email_widget.core.enums import LogLevel\n\n# Create an info-level log entry\ninfo_log = LogEntry(\"User login successful\", level=LogLevel.INFO, timestamp=datetime.now())\n\n# Create an error-level log entry with source information\nerror_log = LogEntry(\"Database connection failed\", level=LogLevel.ERROR,\n                     module=\"db_connector\", function=\"connect\", line_number=123)\n</code></pre> <p>Initialize LogEntry.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Log message content.</p> required <code>level</code> <code>LogLevel</code> <p>Log level, defaults to <code>LogLevel.INFO</code>.</p> <code>INFO</code> <code>timestamp</code> <code>Optional[datetime]</code> <p>Timestamp of the log record, defaults to current time.</p> <code>None</code> <code>module</code> <code>Optional[str]</code> <p>Name of the module that recorded the log.</p> <code>None</code> <code>function</code> <code>Optional[str]</code> <p>Name of the function that recorded the log.</p> <code>None</code> <code>line_number</code> <code>Optional[int]</code> <p>Line number where the log was recorded.</p> <code>None</code>"},{"location":"api/metric-widget/","title":"MetricWidget API","text":""},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget","title":"<code>MetricWidget()</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Metric component for displaying key data metrics.</p> <p>MetricWidget is used to display important data metrics, including values, titles, trend changes, and other information. Suitable for dashboards, KPI displays, data monitoring, and other scenarios.</p> <p>Attributes:</p> Name Type Description <code>metrics</code> <code>List[Dict[str, Any]]</code> <p>Metrics list</p> <code>title</code> <code>str</code> <p>Metric group title</p> <code>layout</code> <code>str</code> <p>Layout method (horizontal/vertical)</p> <code>show_trend</code> <code>bool</code> <p>Whether to show trends</p> <p>Examples:</p> <p>Basic usage: Python<pre><code>metric = MetricWidget()\nmetric.add_metric(\"Total Users\", \"12,345\", \"people\")\nmetric.add_metric(\"Monthly Active\", \"8,456\", \"people\", \"+15.6%\", \"success\")\nmetric.add_metric(\"Conversion Rate\", \"3.2\", \"%\", \"-0.8%\", \"warning\")\n</code></pre></p> <p>Using method chaining: Python<pre><code>metric = (MetricWidget()\n    .set_title(\"Core Metrics\")\n    .add_metric(\"Sales\", \"\u00a51,250,000\", \"\", \"+12.3%\", \"success\")\n    .add_metric(\"Orders\", \"2,456\", \"units\", \"-3.2%\", \"error\")\n    .set_layout(\"horizontal\"))\n</code></pre></p> <p>Multi-metric display: Python<pre><code>metric = MetricWidget()\nmetric.set_title(\"System Performance\")\nmetric.add_metric(\"CPU Usage\", \"45.2\", \"%\", \"+2.1%\", \"warning\")\nmetric.add_metric(\"Memory Usage\", \"78.5\", \"%\", \"-1.3%\", \"success\")\nmetric.add_metric(\"Disk Space\", \"23.8\", \"GB\", \"+5.2GB\", \"info\")\n</code></pre></p> <p>Initialize metric component.</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget-attributes","title":"Attributes","text":""},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.metrics","title":"<code>metrics</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u6240\u6709\u6307\u6807\u3002</p> <p>Returns:</p> Type Description <code>list[dict[str, Any]]</code> <p>List[Dict[str, Any]]: \u6307\u6807\u5217\u8868</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.title","title":"<code>title</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u6307\u6807\u7ec4\u6807\u9898\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u6307\u6807\u7ec4\u6807\u9898</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.metric_count","title":"<code>metric_count</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u6307\u6807\u603b\u6570\u3002</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>\u6307\u6807\u603b\u6570</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.layout","title":"<code>layout</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5e03\u5c40\u65b9\u5f0f\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u5e03\u5c40\u65b9\u5f0f</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget-functions","title":"Functions","text":""},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.add_metric","title":"<code>add_metric(label, value, unit='', trend='', trend_type=None, description='')</code>","text":"<p>\u6dfb\u52a0\u6307\u6807\u3002</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>\u6307\u6807\u6807\u9898</p> required <code>value</code> <code>Union[str, int, float]</code> <p>\u6307\u6807\u503c</p> required <code>unit</code> <code>str</code> <p>\u5355\u4f4d\uff0c\u53ef\u9009</p> <code>''</code> <code>trend</code> <code>str</code> <p>\u8d8b\u52bf\u53d8\u5316\uff0c\u53ef\u9009\uff08\u5982 \"+12.3%\", \"-5.6%\"\uff09</p> <code>''</code> <code>trend_type</code> <code>Union[str, StatusType, None]</code> <p>\u8d8b\u52bf\u7c7b\u578b</p> <code>None</code> <code>description</code> <code>str</code> <p>\u63cf\u8ff0\u4fe1\u606f\uff0c\u53ef\u9009</p> <code>''</code> <p>Returns:</p> Name Type Description <code>MetricWidget</code> <code>MetricWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p> <p>Examples:</p> Python<pre><code>metric.add_metric(\"\u7528\u6237\u6570\", 12345, \"\u4eba\")\nmetric.add_metric(\"\u589e\u957f\u7387\", \"15.6\", \"%\", \"+2.3%\", \"success\", \"\u73af\u6bd4\u589e\u957f\")\nmetric.add_metric(\"\u6536\u5165\", \"\u00a51,250,000\", \"\", \"+12.3%\", \"success\")\n</code></pre>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>\u8bbe\u7f6e\u6307\u6807\u7ec4\u6807\u9898\u3002</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>\u6307\u6807\u7ec4\u6807\u9898</p> required <p>Returns:</p> Name Type Description <code>MetricWidget</code> <code>MetricWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.set_layout","title":"<code>set_layout(layout)</code>","text":"<p>\u8bbe\u7f6e\u5e03\u5c40\u65b9\u5f0f\u3002</p> <p>Parameters:</p> Name Type Description Default <code>layout</code> <code>str</code> <p>\u5e03\u5c40\u65b9\u5f0f\uff0c'horizontal' \u6216 'vertical'</p> required <p>Returns:</p> Name Type Description <code>MetricWidget</code> <code>MetricWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.show_trends","title":"<code>show_trends(show=True)</code>","text":"<p>\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u8d8b\u52bf\u3002</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u8d8b\u52bf\u4fe1\u606f</p> <code>True</code> <p>Returns:</p> Name Type Description <code>MetricWidget</code> <code>MetricWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.clear_metrics","title":"<code>clear_metrics()</code>","text":"<p>\u6e05\u7a7a\u6240\u6709\u6307\u6807\u3002</p> <p>Returns:</p> Name Type Description <code>MetricWidget</code> <code>MetricWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/metric-widget/#email_widget.widgets.metric_widget.MetricWidget.remove_metric","title":"<code>remove_metric(index)</code>","text":"<p>\u6839\u636e\u7d22\u5f15\u79fb\u9664\u6307\u6807\u3002</p> <p>Parameters:</p> Name Type Description Default <code>index</code> <code>int</code> <p>\u8981\u79fb\u9664\u7684\u6307\u6807\u7d22\u5f15</p> required <p>Returns:</p> Name Type Description <code>MetricWidget</code> <code>MetricWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p> <p>Raises:</p> Type Description <code>IndexError</code> <p>\u5f53\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\u65f6</p>"},{"location":"api/progress-widget/","title":"ProgressWidget API","text":""},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget","title":"<code>ProgressWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a linear progress bar to visually display task completion status.</p> <p>Linear progress bars are a classic way to display task progress, data loading, step completion, and other scenarios. They clearly communicate the process from start to finish.</p> Core Features <ul> <li>Dynamic Updates: Support setting, increasing, decreasing, resetting, or directly completing progress.</li> <li>Themed: Provides multiple preset themes (such as success, warning, error) to visually reflect status through color.</li> <li>Text Labels: Can add descriptive labels above the progress bar.</li> <li>Percentage Display: Option to show precise completion percentage inside the progress bar.</li> <li>Custom Appearance: Freely adjust the width, height, border radius, and background color of the progress bar.</li> </ul> <p>Attributes:</p> Name Type Description <code>value</code> <code>float</code> <p>Current progress value.</p> <code>max_value</code> <code>float</code> <p>Maximum progress value, default is 100.</p> <code>label</code> <code>Optional[str]</code> <p>Descriptive text displayed above the progress bar.</p> <code>theme</code> <code>ProgressTheme</code> <p>Color theme of the progress bar.</p> <p>Examples:</p> <p>Create a progress bar showing file download progress:</p> Python<pre><code>from email_widget.widgets import ProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\ndownload_progress = (ProgressWidget()\n                     .set_label(\"File Download Progress\")\n                     .set_value(75)\n                     .set_theme(ProgressTheme.PRIMARY)\n                     .set_height(\"24px\"))\n\n# Assuming email is an Email object\n# email.add_widget(download_progress)\n</code></pre> <p>Create a progress bar showing storage usage with warning status:</p> Python<pre><code>storage_usage = (ProgressWidget()\n                 .set_label(\"Storage Usage\")\n                 .set_value(95)\n                 .set_theme(ProgressTheme.WARNING)\n                 .show_percentage(True))\n</code></pre> <p>Initialize ProgressWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget-attributes","title":"Attributes","text":""},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.max_value","title":"<code>max_value</code>  <code>property</code>","text":"<p>Get the maximum progress value.</p> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>Maximum progress value.</p>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.percentage","title":"<code>percentage</code>  <code>property</code>","text":"<p>Get the percentage of current progress.</p> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>Current progress percentage (0-100).</p>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.value","title":"<code>value</code>  <code>property</code>","text":"<p>Get the current progress value.</p> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>Current progress value.</p>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget-functions","title":"Functions","text":""},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.complete","title":"<code>complete()</code>","text":"<p>Set progress to maximum value (100%).</p> <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().complete() # Progress becomes 100%\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.decrement","title":"<code>decrement(amount=1.0)</code>","text":"<p>Decrease the progress value.</p> <p>Parameters:</p> Name Type Description Default <code>amount</code> <code>float</code> <p>Amount to decrease, default is 1.0.</p> <code>1.0</code> <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_value(50).decrement(5) # Progress becomes 45\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get the context data required for template rendering</p>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.increment","title":"<code>increment(amount=1.0)</code>","text":"<p>Increase the progress value.</p> <p>Parameters:</p> Name Type Description Default <code>amount</code> <code>float</code> <p>Amount to increase, default is 1.0.</p> <code>1.0</code> <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_value(50).increment(10) # Progress becomes 60\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.reset","title":"<code>reset()</code>","text":"<p>Reset progress to 0.</p> <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_value(75).reset() # Progress becomes 0\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.set_background_color","title":"<code>set_background_color(color)</code>","text":"<p>Set the background color of the progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>color</code> <code>str</code> <p>CSS color value, such as \"#e0e0e0\", \"lightgray\".</p> required <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When the color format is invalid.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_background_color(\"#f0f0f0\")\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.set_border_radius","title":"<code>set_border_radius(radius)</code>","text":"<p>Set the border radius of the progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>radius</code> <code>str</code> <p>CSS border radius value, such as \"10px\", \"50%\".</p> required <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_border_radius(\"5px\")\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.set_height","title":"<code>set_height(height)</code>","text":"<p>Set the height of the progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>str</code> <p>CSS height value, such as \"20px\", \"1em\".</p> required <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_height(\"24px\")\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.set_label","title":"<code>set_label(label)</code>","text":"<p>Set the descriptive label displayed above the progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Label text.</p> required <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_label(\"Task Completion\")\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.set_max_value","title":"<code>set_max_value(max_val)</code>","text":"<p>Set the maximum progress value.</p> <p>Parameters:</p> Name Type Description Default <code>max_val</code> <code>float</code> <p>Maximum progress value.</p> required <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_max_value(200)\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.set_theme","title":"<code>set_theme(theme)</code>","text":"<p>Set the color theme of the progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>theme</code> <code>ProgressTheme</code> <p>Progress bar theme enum value.</p> required <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_theme(ProgressTheme.SUCCESS)\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.set_value","title":"<code>set_value(value)</code>","text":"<p>Set the current progress value.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>Progress value, should be between 0 and <code>max_value</code>.</p> required <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When the value is outside the valid range.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_value(75)\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.set_width","title":"<code>set_width(width)</code>","text":"<p>Set the width of the progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>width</code> <code>str</code> <p>CSS width value, such as \"100%\", \"500px\".</p> required <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When the width format is invalid.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().set_width(\"80%\")\n</code></pre>"},{"location":"api/progress-widget/#email_widget.widgets.progress_widget.ProgressWidget.show_percentage","title":"<code>show_percentage(show=True)</code>","text":"<p>Set whether to display percentage text inside the progress bar.</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>Whether to show percentage, default is True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>ProgressWidget</code> <code>ProgressWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = ProgressWidget().show_percentage(False) # Hide percentage\n</code></pre>"},{"location":"api/quote-widget/","title":"QuoteWidget API","text":""},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget","title":"<code>QuoteWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a quote-style text block for highlighting quoted content.</p> <p>This widget is perfect for quoting famous sayings, customer reviews, important statements, or literature excerpts in emails. It distinguishes itself from other text by adding a colored vertical line on the left side, making it visually more prominent.</p> Core features <ul> <li>Content attribution: Supports setting the author and source of the quote.</li> <li>Theming: The left border color of the quote can change based on status type (such as INFO, SUCCESS, WARNING).</li> </ul> <p>Attributes:</p> Name Type Description <code>content</code> <code>str</code> <p>The main text content being quoted.</p> <code>author</code> <code>Optional[str]</code> <p>Author of the quote.</p> <code>source</code> <code>Optional[str]</code> <p>Source or origin of the quote.</p> <code>quote_type</code> <code>StatusType</code> <p>Type of quote, determines the color of the left border.</p> <p>Examples:</p> <p>Create a classic famous quote:</p> Python<pre><code>from email_widget.widgets import QuoteWidget\nfrom email_widget.core.enums import StatusType\n\nquote = (QuoteWidget()                 .set_content(\"The only way to do great work is to love what you do.\")                 .set_author(\"Steve Jobs\")                 .set_quote_type(StatusType.INFO))\n\n# Assuming email is an Email object\n# email.add_widget(quote)\n</code></pre> <p>Create a quote for showcasing customer testimonials:</p> Python<pre><code>customer_feedback = (QuoteWidget()                             .set_content(\"This new feature has significantly improved our workflow!\")                             .set_author(\"Satisfied Customer\")                             .set_source(\"Feedback Survey\")                             .set_quote_type(StatusType.SUCCESS))\n</code></pre> <p>Initialize QuoteWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget-functions","title":"Functions","text":""},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget.clear_attribution","title":"<code>clear_attribution()</code>","text":"<p>Clear author and source information.</p> <p>Returns:</p> Name Type Description <code>QuoteWidget</code> <code>QuoteWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; quote = QuoteWidget().clear_attribution()\n</code></pre>"},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering</p>"},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget.set_author","title":"<code>set_author(author)</code>","text":"<p>Set the author of the quote.</p> <p>Parameters:</p> Name Type Description Default <code>author</code> <code>str</code> <p>Author name.</p> required <p>Returns:</p> Name Type Description <code>QuoteWidget</code> <code>QuoteWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; quote = QuoteWidget().set_author(\"Lu Xun\")\n</code></pre>"},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget.set_content","title":"<code>set_content(content)</code>","text":"<p>Set the main text content of the quote.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>The text content to be quoted.</p> required <p>Returns:</p> Name Type Description <code>QuoteWidget</code> <code>QuoteWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; quote = QuoteWidget().set_content(\"Knowledge is power.\")\n</code></pre>"},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget.set_full_quote","title":"<code>set_full_quote(content, author=None, source=None)</code>","text":"<p>Set complete quote information at once.</p> <p>This method allows you to set quote content, author, and source simultaneously for quick configuration.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>Quote content.</p> required <code>author</code> <code>str</code> <p>Optional author name.</p> <code>None</code> <code>source</code> <code>str</code> <p>Optional source description.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>QuoteWidget</code> <code>QuoteWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; quote = QuoteWidget().set_full_quote(\"Heaven is vigorous, and the gentleman strives for self-improvement.\", \"I Ching\")\n</code></pre>"},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget.set_quote_type","title":"<code>set_quote_type(quote_type)</code>","text":"<p>Set the type of the quote.</p> <p>This type determines the color of the left border of the quote block.</p> <p>Parameters:</p> Name Type Description Default <code>quote_type</code> <code>StatusType</code> <p>Quote type enum value.</p> required <p>Returns:</p> Name Type Description <code>QuoteWidget</code> <code>QuoteWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; quote = QuoteWidget().set_quote_type(StatusType.WARNING)\n</code></pre>"},{"location":"api/quote-widget/#email_widget.widgets.quote_widget.QuoteWidget.set_source","title":"<code>set_source(source)</code>","text":"<p>Set the source of the quote.</p> <p>Parameters:</p> Name Type Description Default <code>source</code> <code>str</code> <p>Source description (such as book name, website, report, etc.).</p> required <p>Returns:</p> Name Type Description <code>QuoteWidget</code> <code>QuoteWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; quote = QuoteWidget().set_source(\"The Analects\")\n</code></pre>"},{"location":"api/separator-widget/","title":"SeparatorWidget API","text":""},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget","title":"<code>SeparatorWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a separator for dividing different content blocks in emails.</p> <p>This widget can create different styles of separator lines, including solid, dashed, and dotted lines, helping organize email content hierarchy and improve readability.</p> Core features <ul> <li>Multiple styles: Supports solid, dashed, and dotted separator styles.</li> <li>Color themes: Supports theme color configuration based on StatusType.</li> <li>Flexible configuration: Customizable color, thickness, width, and margin.</li> <li>Email compatibility: Uses email client compatible CSS implementation.</li> </ul> <p>Attributes:</p> Name Type Description <code>separator_type</code> <code>SeparatorType</code> <p>Separator type.</p> <code>color</code> <code>str</code> <p>Separator color.</p> <code>thickness</code> <code>str</code> <p>Separator thickness.</p> <code>width</code> <code>str</code> <p>Separator width.</p> <code>margin</code> <code>str</code> <p>Top and bottom margin.</p> <p>Examples:</p> <p>Create a basic solid separator:</p> Python<pre><code>from email_widget.widgets import SeparatorWidget\nfrom email_widget.core.enums import SeparatorType\n\nseparator = SeparatorWidget().set_type(SeparatorType.SOLID)\n\n# Assuming email is an Email object\n# email.add_widget(separator)\n</code></pre> <p>Create a colored dashed separator:</p> Python<pre><code>colorful_separator = (SeparatorWidget()\n                       .set_type(SeparatorType.DASHED)\n                       .set_color(\"#ff8c00\")\n                       .set_thickness(\"3px\"))\n</code></pre> <p>Create a dotted separator with 50% width:</p> Python<pre><code>narrow_separator = (SeparatorWidget()\n                    .set_type(SeparatorType.DOTTED)\n                    .set_width(\"50%\")\n                    .set_margin(\"30px\"))\n</code></pre> <p>\u521d\u59cb\u5316SeparatorWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>\u53ef\u9009\u7684Widget ID.</p> <code>None</code>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget-attributes","title":"Attributes","text":""},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.separator_type","title":"<code>separator_type</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5206\u9694\u7b26\u7c7b\u578b</p>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.color","title":"<code>color</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5206\u9694\u7b26\u989c\u8272</p>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.thickness","title":"<code>thickness</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5206\u9694\u7b26\u7c97\u7ec6</p>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.width","title":"<code>width</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5206\u9694\u7b26\u5bbd\u5ea6</p>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.margin","title":"<code>margin</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u5206\u9694\u7b26\u8fb9\u8ddd</p>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget-functions","title":"Functions","text":""},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.set_type","title":"<code>set_type(separator_type)</code>","text":"<p>\u8bbe\u7f6e\u5206\u9694\u7b26\u7c7b\u578b.</p> <p>Parameters:</p> Name Type Description Default <code>separator_type</code> <code>SeparatorType</code> <p>\u5206\u9694\u7b26\u7c7b\u578b\u679a\u4e3e\u503c.</p> required <p>Returns:</p> Name Type Description <code>SeparatorWidget</code> <code>SeparatorWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; separator = SeparatorWidget().set_type(SeparatorType.DASHED)\n</code></pre>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.set_color","title":"<code>set_color(color)</code>","text":"<p>\u8bbe\u7f6e\u5206\u9694\u7b26\u989c\u8272.</p> <p>Parameters:</p> Name Type Description Default <code>color</code> <code>str</code> <p>CSS\u989c\u8272\u503c\uff0c\u652f\u6301\u5341\u516d\u8fdb\u5236\u3001RGB\u3001\u989c\u8272\u540d\u79f0\u7b49.</p> required <p>Returns:</p> Name Type Description <code>SeparatorWidget</code> <code>SeparatorWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; separator = SeparatorWidget().set_color(\"#0078d4\")\n&gt;&gt;&gt; separator = SeparatorWidget().set_color(\"blue\")\n&gt;&gt;&gt; separator = SeparatorWidget().set_color(\"rgb(0, 120, 212)\")\n</code></pre>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.set_thickness","title":"<code>set_thickness(thickness)</code>","text":"<p>\u8bbe\u7f6e\u5206\u9694\u7b26\u7c97\u7ec6.</p> <p>Parameters:</p> Name Type Description Default <code>thickness</code> <code>str</code> <p>CSS\u957f\u5ea6\u503c\uff0c\u5982 \"1px\", \"2px\", \"3px\" \u7b49.</p> required <p>Returns:</p> Name Type Description <code>SeparatorWidget</code> <code>SeparatorWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; separator = SeparatorWidget().set_thickness(\"2px\")\n</code></pre>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.set_width","title":"<code>set_width(width)</code>","text":"<p>\u8bbe\u7f6e\u5206\u9694\u7b26\u5bbd\u5ea6.</p> <p>Parameters:</p> Name Type Description Default <code>width</code> <code>str</code> <p>CSS\u5bbd\u5ea6\u503c\uff0c\u5982 \"100%\", \"50%\", \"200px\" \u7b49.</p> required <p>Returns:</p> Name Type Description <code>SeparatorWidget</code> <code>SeparatorWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; separator = SeparatorWidget().set_width(\"80%\")\n&gt;&gt;&gt; separator = SeparatorWidget().set_width(\"300px\")\n</code></pre>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.set_margin","title":"<code>set_margin(margin)</code>","text":"<p>\u8bbe\u7f6e\u5206\u9694\u7b26\u4e0a\u4e0b\u8fb9\u8ddd.</p> <p>Parameters:</p> Name Type Description Default <code>margin</code> <code>str</code> <p>CSS\u8fb9\u8ddd\u503c\uff0c\u5982 \"16px\", \"20px\", \"1em\" \u7b49.</p> required <p>Returns:</p> Name Type Description <code>SeparatorWidget</code> <code>SeparatorWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; separator = SeparatorWidget().set_margin(\"20px\")\n</code></pre>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.set_theme_color","title":"<code>set_theme_color(status_type)</code>","text":"<p>\u6839\u636e\u72b6\u6001\u7c7b\u578b\u8bbe\u7f6e\u4e3b\u9898\u989c\u8272.</p> <p>Parameters:</p> Name Type Description Default <code>status_type</code> <code>StatusType</code> <p>\u72b6\u6001\u7c7b\u578b\u679a\u4e3e\u503c.</p> required <p>Returns:</p> Name Type Description <code>SeparatorWidget</code> <code>SeparatorWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; separator = SeparatorWidget().set_theme_color(StatusType.SUCCESS)\n</code></pre>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.set_style","title":"<code>set_style(separator_type=None, color=None, thickness=None, width=None, margin=None)</code>","text":"<p>\u4e00\u6b21\u6027\u8bbe\u7f6e\u5206\u9694\u7b26\u7684\u591a\u4e2a\u6837\u5f0f\u5c5e\u6027.</p> <p>Parameters:</p> Name Type Description Default <code>separator_type</code> <code>SeparatorType</code> <p>\u5206\u9694\u7b26\u7c7b\u578b.</p> <code>None</code> <code>color</code> <code>str</code> <p>\u5206\u9694\u7b26\u989c\u8272.</p> <code>None</code> <code>thickness</code> <code>str</code> <p>\u5206\u9694\u7b26\u7c97\u7ec6.</p> <code>None</code> <code>width</code> <code>str</code> <p>\u5206\u9694\u7b26\u5bbd\u5ea6.</p> <code>None</code> <code>margin</code> <code>str</code> <p>\u4e0a\u4e0b\u8fb9\u8ddd.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>SeparatorWidget</code> <code>SeparatorWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; separator = SeparatorWidget().set_style(\n...     separator_type=SeparatorType.DASHED,\n...     color=\"#ff8c00\",\n...     thickness=\"2px\",\n...     width=\"80%\",\n...     margin=\"20px\"\n... )\n</code></pre>"},{"location":"api/separator-widget/#email_widget.widgets.separator_widget.SeparatorWidget.reset_to_default","title":"<code>reset_to_default()</code>","text":"<p>\u91cd\u7f6e\u6240\u6709\u6837\u5f0f\u4e3a\u9ed8\u8ba4\u503c.</p> <p>Returns:</p> Name Type Description <code>SeparatorWidget</code> <code>SeparatorWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; separator = SeparatorWidget().reset_to_default()\n</code></pre>"},{"location":"api/separator-widget/#enum-types","title":"Enum Types","text":""},{"location":"api/separator-widget/#separatortype","title":"SeparatorType","text":""},{"location":"api/separator-widget/#email_widget.core.enums.SeparatorType","title":"<code>SeparatorType</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Separator type enumeration</p>"},{"location":"api/status-widget/","title":"StatusWidget API","text":""},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget","title":"<code>StatusWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a list for displaying key-value pair status information.</p> <p>This widget is very suitable for displaying system monitoring metrics, service status, configuration parameters, and other structured data. Each item consists of a label and a value, and can display different colors based on status (such as success, warning, error).</p> Core features <ul> <li>Key-value pair list: Display multiple status items in a clear list format.</li> <li>Layout switching: Support both vertical (default) and horizontal layout modes.</li> <li>Status coloring: Can set different colors for each status item value to visually reflect its status.</li> <li>Dynamic management: Support adding, updating, or removing status items at runtime.</li> </ul> <p>Attributes:</p> Name Type Description <code>items</code> <code>List[StatusItem]</code> <p>List containing all status items.</p> <code>title</code> <code>Optional[str]</code> <p>Title of the entire status list.</p> <code>layout</code> <code>LayoutType</code> <p>Layout mode of the list (vertical or horizontal).</p> <p>Examples:</p> <p>Create a vertical layout system monitoring status list:</p> Python<pre><code>from email_widget.widgets import StatusWidget\nfrom email_widget.core.enums import StatusType, LayoutType\n\nsystem_monitor = (StatusWidget()                          .set_title(\"System Health Check\")                          .set_layout(LayoutType.VERTICAL)                          .add_status_item(\"CPU Usage\", \"15%\", StatusType.SUCCESS)                          .add_status_item(\"Memory Usage\", \"78%\", StatusType.WARNING)                          .add_status_item(\"Disk Space\", \"95%\", StatusType.ERROR)                          .add_status_item(\"Uptime\", \"32 days\"))\n\n# Assuming email is an Email object\n# email.add_widget(system_monitor)\n</code></pre> <p>Create a horizontal layout service status list:</p> Python<pre><code>service_status = (StatusWidget()                          .set_title(\"Microservice Status\")                          .set_layout(LayoutType.HORIZONTAL)                          .add_status_item(\"Authentication Service\", \"Online\", StatusType.SUCCESS)                          .add_status_item(\"Payment Service\", \"Offline\", StatusType.ERROR))\n</code></pre> <p>Initialize StatusWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code>"},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget-functions","title":"Functions","text":""},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget.add_status_item","title":"<code>add_status_item(label, value, status=None)</code>","text":"<p>Add a status item to the list.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Descriptive label for the status item.</p> required <code>value</code> <code>str</code> <p>Actual value of the status item.</p> required <code>status</code> <code>Optional[StatusType]</code> <p>Type of the status item, used to determine the color of the value.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>StatusWidget</code> <code>StatusWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = StatusWidget().add_status_item(\"Service Status\", \"Running\", StatusType.SUCCESS)\n</code></pre>"},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget.clear_items","title":"<code>clear_items()</code>","text":"<p>Clear all status items.</p> <p>Returns:</p> Name Type Description <code>StatusWidget</code> <code>StatusWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = StatusWidget().clear_items()\n</code></pre>"},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget.get_item_count","title":"<code>get_item_count()</code>","text":"<p>Get the count of current status items.</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Number of status items.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; count = StatusWidget().add_status_item(\"A\", \"1\").get_item_count()\n&gt;&gt;&gt; print(count) # Output: 1\n</code></pre>"},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering</p>"},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget.remove_item","title":"<code>remove_item(label)</code>","text":"<p>Remove specified status item by label.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Label of the status item to remove.</p> required <p>Returns:</p> Name Type Description <code>StatusWidget</code> <code>StatusWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = StatusWidget().remove_item(\"CPU Usage\")\n</code></pre>"},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget.set_layout","title":"<code>set_layout(layout)</code>","text":"<p>Set the layout mode of status items.</p> <p>Parameters:</p> Name Type Description Default <code>layout</code> <code>LayoutType</code> <p>Layout type, can be <code>LayoutType.VERTICAL</code> or <code>LayoutType.HORIZONTAL</code>.</p> required <p>Returns:</p> Name Type Description <code>StatusWidget</code> <code>StatusWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = StatusWidget().set_layout(LayoutType.HORIZONTAL)\n</code></pre>"},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>Set the title of the status list.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Title text.</p> required <p>Returns:</p> Name Type Description <code>StatusWidget</code> <code>StatusWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = StatusWidget().set_title(\"Server Health Status\")\n</code></pre>"},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusWidget.update_item","title":"<code>update_item(label, value, status=None)</code>","text":"<p>Update value and status of the status item with specified label.</p> <p>If a matching label is found, update its value and status; otherwise, do nothing.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Label of the status item to update.</p> required <code>value</code> <code>str</code> <p>New value.</p> required <code>status</code> <code>StatusType</code> <p>Optional new status type.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>StatusWidget</code> <code>StatusWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = StatusWidget().update_item(\"CPU Usage\", \"20%\", StatusType.WARNING)\n</code></pre>"},{"location":"api/status-widget/#status-item-statusitem","title":"Status Item (StatusItem)","text":""},{"location":"api/status-widget/#email_widget.widgets.status_widget.StatusItem","title":"<code>StatusItem(label, value, status=None)</code>","text":"<p>Data structure representing a single status item.</p> <p>Each status item contains a label (description), a value, and an optional status type, used for display in <code>StatusWidget</code>.</p> <p>Attributes:</p> Name Type Description <code>label</code> <code>str</code> <p>Descriptive label for the status item.</p> <code>value</code> <code>str</code> <p>Actual value of the status item.</p> <code>status</code> <code>Optional[StatusType]</code> <p>Type of the status item, used to determine the color of the value.</p> <p>Examples:</p> Python<pre><code>from email_widget.widgets import StatusItem\nfrom email_widget.core.enums import StatusType\n\n# Create a success status CPU usage item\ncpu_status = StatusItem(\"CPU Usage\", \"15%\", StatusType.SUCCESS)\n\n# Create a regular info item\nuptime_info = StatusItem(\"System Uptime\", \"30 days\")\n</code></pre> <p>Initialize StatusItem.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Descriptive label for the status item.</p> required <code>value</code> <code>str</code> <p>Actual value of the status item.</p> required <code>status</code> <code>Optional[StatusType]</code> <p>Type of the status item, used to determine the color of the value.</p> <code>None</code>"},{"location":"api/table-widget/","title":"TableWidget API","text":""},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget","title":"<code>TableWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Create a widget for displaying table data in emails.</p> <p>This widget provides a flexible way to present structured data, whether manually constructing tables or directly importing data from <code>pandas.DataFrame</code>. It supports various styling options, such as striped patterns, borders, hover effects, and can apply colors and status to specific cells to enhance data readability and visual appeal.</p> Core features <ul> <li>Diverse data sources: Support for directly adding row data or importing from <code>pandas.DataFrame</code>.</li> <li>Style customization: Can set title, headers, striped patterns, borders, hover effects, etc.</li> <li>Cell styling: Allows setting colors, bold, and alignment for individual cells, and supports status coloring.</li> <li>Email compatibility: Generated HTML is optimized for mainstream email clients to ensure consistent display.</li> </ul> <p>Attributes:</p> Name Type Description <code>title</code> <code>Optional[str]</code> <p>Title of the table.</p> <code>headers</code> <code>List[str]</code> <p>List of table column headers.</p> <code>rows</code> <code>List[List[Union[str, TableCell]]]</code> <p>Table row data, each row contains strings or <code>TableCell</code> objects.</p> <code>show_index</code> <code>bool</code> <p>Whether to display row indices.</p> <code>striped</code> <code>bool</code> <p>Whether to enable striped pattern styling.</p> <code>bordered</code> <code>bool</code> <p>Whether to display borders for all cells.</p> <code>hover_effect</code> <code>bool</code> <p>Whether to enable mouse hover highlighting effect.</p> <p>Examples:</p> <p>Manually create a table with status cells:</p> Python<pre><code>from email_widget.widgets import TableWidget, TableCell\nfrom email_widget.core.enums import StatusType\n\nproject_status_table = (TableWidget()                                .set_title(\"Project Progress Overview\")                                .set_headers([\"Project Name\", \"Owner\", \"Progress\", \"Status\"])                                .add_row([\"Website Redesign\", \"Alice\", \"85%\",\n                                  TableCell(\"In Progress\", status=StatusType.INFO)])                                .add_row([\"Mobile App Dev\", \"Bob\", \"100%\",\n                                  TableCell(\"Completed\", status=StatusType.SUCCESS)])                                .add_row([\"Backend Optimization\", \"Charlie\", \"60%\",\n                                  TableCell(\"At Risk\", status=StatusType.WARNING)])                                .set_striped(True)                                .set_bordered(True))\n\n# Assuming email is an Email object\n# email.add_widget(project_status_table)\n</code></pre> <p>Create a table from <code>pandas.DataFrame</code>:</p> Python<pre><code>import pandas as pd\n\ndata = {\n    'Product': ['Laptop', 'Mouse', 'Keyboard'],\n    'Sales': [1200, 300, 500],\n    'Region': ['North', 'South', 'East']\n}\ndf = pd.DataFrame(data)\n\nsales_table = (TableWidget()                       .set_dataframe(df)                       .set_title(\"Product Sales Data\")                       .show_index(False) # Don't display index\n               .set_hover_effect(True))\n</code></pre> <p>Initialize TableWidget instance.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional Widget ID.</p> <code>None</code> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget()\n&gt;&gt;&gt; table_with_id = TableWidget(\"my-table\")\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget-attributes","title":"Attributes","text":""},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.dataframe","title":"<code>dataframe</code>  <code>property</code>","text":"<p>Get DataFrame data.</p> <p>Returns:</p> Type Description <code>Optional[DataFrame]</code> <p>Optional[pd.DataFrame]: DataFrame object or None.</p>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.headers","title":"<code>headers</code>  <code>property</code>","text":"<p>Get header list.</p> <p>Returns:</p> Type Description <code>list[str]</code> <p>List[str]: Header list.</p>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.rows","title":"<code>rows</code>  <code>property</code>","text":"<p>Get row data.</p> <p>Returns:</p> Type Description <code>list[list[str | TableCell]]</code> <p>List[List[Union[str, TableCell]]]: Row data list.</p>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.title","title":"<code>title</code>  <code>property</code>","text":"<p>Get table title.</p> <p>Returns:</p> Type Description <code>str | None</code> <p>Optional[str]: Title or None.</p>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget-functions","title":"Functions","text":""},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.add_colored_cell","title":"<code>add_colored_cell(value, color, bold=False, align='center')</code>","text":"<p>Create colored cell.</p> <p>This helper method is used to quickly create a <code>TableCell</code> object with custom color, font weight, and alignment.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>Value displayed in the cell.</p> required <code>color</code> <code>str</code> <p>Color of the cell text (CSS color value).</p> required <code>bold</code> <code>bool</code> <p>Whether to bold, defaults to False.</p> <code>False</code> <code>align</code> <code>str</code> <p>Alignment method, defaults to \"center\".</p> <code>'center'</code> <p>Returns:</p> Name Type Description <code>TableCell</code> <code>TableCell</code> <p>A configured <code>TableCell</code> object.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; cell = table.add_colored_cell(\"Important\", \"#ff0000\", bold=True)\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.add_data_row","title":"<code>add_data_row(row_data)</code>","text":"<p>Add data row (based on DataFrame).</p> <p>This method is used to add a row of data to the table. If the table has been initialized through <code>set_dataframe</code>, the new row will be added to the existing DataFrame; otherwise, a new DataFrame will be created.</p> <p>Parameters:</p> Name Type Description Default <code>row_data</code> <code>list</code> <p>List containing row data. The length of the list should match the number of headers.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ImportError</code> <p>If pandas library is not installed.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().add_data_row([\"New Project\", \"0%\", \"Started\"])\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.add_row","title":"<code>add_row(row)</code>","text":"<p>Add row data.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>List[Union[str, TableCell]]</code> <p>Row data, can be strings or TableCell objects.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().add_row([\"Project A\", \"80%\", TableCell(\"In Progress\", status=StatusType.INFO)])\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.add_status_cell","title":"<code>add_status_cell(value, status)</code>","text":"<p>Create status cell.</p> <p>This helper method is used to quickly create a <code>TableCell</code> object with a specific status (such as success, warning, error). Status cells automatically apply predefined color and background styles.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>Value displayed in the cell.</p> required <code>status</code> <code>StatusType</code> <p>Status type of the cell.</p> required <p>Returns:</p> Name Type Description <code>TableCell</code> <code>TableCell</code> <p>A configured <code>TableCell</code> object.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; cell = table.add_status_cell(\"Success\", StatusType.SUCCESS)\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.clear_data","title":"<code>clear_data()</code>","text":"<p>Clear table data.</p> <p>This method will clear all data added through <code>set_dataframe</code> or <code>add_data_row</code>, and reset the internal DataFrame and row data list.</p> <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().clear_data()\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.clear_rows","title":"<code>clear_rows()</code>","text":"<p>Clear row data.</p> <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().clear_rows()\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering</p>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_border_color","title":"<code>set_border_color(color)</code>","text":"<p>Set border color.</p> <p>Parameters:</p> Name Type Description Default <code>color</code> <code>str</code> <p>CSS color value.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().set_border_color(\"#ddd\")\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_bordered","title":"<code>set_bordered(bordered=True)</code>","text":"<p>Set whether to display borders.</p> <p>Parameters:</p> Name Type Description Default <code>bordered</code> <code>bool</code> <p>Whether to display borders, defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().set_bordered(False)\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_column_width","title":"<code>set_column_width(column, width)</code>","text":"<p>Set column width</p>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_dataframe","title":"<code>set_dataframe(df)</code>","text":"<p>Set DataFrame data.</p> <p>Parameters:</p> Name Type Description Default <code>df</code> <code>DataFrame</code> <p>pandas DataFrame object.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Raises:</p> Type Description <code>ImportError</code> <p>If pandas library is not installed.</p> <p>Examples:</p> Python<pre><code>import pandas as pd\ndf = pd.DataFrame({'Name': ['Project A', 'Project B'], 'Status': ['Completed', 'In Progress']})\ntable = TableWidget().set_dataframe(df)\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_header_bg_color","title":"<code>set_header_bg_color(color)</code>","text":"<p>Set header background color.</p> <p>Parameters:</p> Name Type Description Default <code>color</code> <code>str</code> <p>CSS color value.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().set_header_bg_color(\"#4CAF50\")\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_headers","title":"<code>set_headers(headers)</code>","text":"<p>Set table headers.</p> <p>Parameters:</p> Name Type Description Default <code>headers</code> <code>List[str]</code> <p>Header list.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().set_headers([\"Project Name\", \"Progress\", \"Status\"])\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_hover_effect","title":"<code>set_hover_effect(hover=True)</code>","text":"<p>Set whether to enable hover effect.</p> <p>Parameters:</p> Name Type Description Default <code>hover</code> <code>bool</code> <p>Whether to enable hover effect, defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().set_hover_effect(False)\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_max_width","title":"<code>set_max_width(width)</code>","text":"<p>Set maximum width.</p> <p>Parameters:</p> Name Type Description Default <code>width</code> <code>str</code> <p>CSS width value.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().set_max_width(\"800px\")\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_rows","title":"<code>set_rows(rows)</code>","text":"<p>Set all row data.</p> <p>Parameters:</p> Name Type Description Default <code>rows</code> <code>List[List[Union[str, TableCell]]]</code> <p>Row data list.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python<pre><code>rows = [\n    [\"Project A\", \"80%\", TableCell(\"In Progress\", status=StatusType.INFO)],\n    [\"Project B\", \"100%\", TableCell(\"Completed\", status=StatusType.SUCCESS)]\n]\ntable = TableWidget().set_rows(rows)\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_striped","title":"<code>set_striped(striped=True)</code>","text":"<p>Set whether to use striped pattern.</p> <p>Parameters:</p> Name Type Description Default <code>striped</code> <code>bool</code> <p>Whether to use striped pattern, defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().set_striped(False)\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>Set table title.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Table title.</p> required <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().set_title(\"Project Progress Table\")\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableWidget.show_index","title":"<code>show_index(show=True)</code>","text":"<p>Set whether to display index.</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>Whether to display index, defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>TableWidget</code> <code>TableWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; table = TableWidget().show_index(False)\n</code></pre>"},{"location":"api/table-widget/#email_widget.widgets.table_widget.TableCell","title":"<code>TableCell(value, status=None, color=None, bold=False, align='center')</code>","text":"<p>Table cell class.</p> <p>Used to encapsulate data and style information for individual cells in a table, supporting setting cell values, status, color, font weight, and alignment. This allows tables to display richer, more expressive data.</p> <p>Attributes:</p> Name Type Description <code>value</code> <code>Any</code> <p>The actual value of the cell, can be any type, will be converted to string for display.</p> <code>status</code> <code>Optional[StatusType]</code> <p>Status type of the cell, used to apply predefined colors and backgrounds.</p> <code>color</code> <code>Optional[str]</code> <p>Custom color for cell text (CSS color value).</p> <code>bold</code> <code>bool</code> <p>Whether cell text is bold.</p> <code>align</code> <code>str</code> <p>Text alignment of the cell (e.g., \"left\", \"center\", \"right\").</p> <p>Examples:</p> Python<pre><code>from email_widget.widgets import TableCell\nfrom email_widget.core.enums import StatusType\n\n# Create a success status cell\nsuccess_cell = TableCell(\"Success\", status=StatusType.SUCCESS, bold=True)\n\n# Create a custom color cell\nred_text_cell = TableCell(\"Warning\", color=\"#FF0000\", align=\"right\")\n</code></pre> <p>Initialize table cell.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>Any</code> <p>Cell value.</p> required <code>status</code> <code>Optional[StatusType]</code> <p>Status type, used to apply predefined colors and backgrounds.</p> <code>None</code> <code>color</code> <code>Optional[str]</code> <p>Text color (CSS color value).</p> <code>None</code> <code>bold</code> <code>bool</code> <p>Whether to bold, defaults to False.</p> <code>False</code> <code>align</code> <code>str</code> <p>Alignment method, defaults to \"center\".</p> <code>'center'</code> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; cell = TableCell(\"Success\", status=StatusType.SUCCESS, bold=True)\n</code></pre>"},{"location":"api/text-widget/","title":"TextWidget API","text":""},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget","title":"<code>TextWidget(widget_id=None)</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>TextWidget is a component for displaying various types of text content, supporting multiple predefined text types and rich style configuration.</p> <p>This widget supports multiple text types (titles, body text, captions, section headings, etc.), and provides rich style setting options. Section headings automatically add numbering.</p> <p>Main features: - Support for multiple predefined text types - Custom fonts, colors, alignment and other styles - Automatic section numbering - Multi-line text support - Responsive design</p> <p>Attributes:</p> Name Type Description <code>_content</code> <code>str</code> <p>Text content.</p> <code>_text_type</code> <code>TextType</code> <p>Text type.</p> <code>_font_size</code> <code>str</code> <p>Font size.</p> <code>_align</code> <code>TextAlign</code> <p>Alignment.</p> <code>_color</code> <code>str</code> <p>Text color.</p> <code>_line_height</code> <code>str</code> <p>Line height.</p> <code>_font_weight</code> <code>str</code> <p>Font weight.</p> <code>_font_family</code> <code>str</code> <p>Font family.</p> <code>_margin</code> <code>str</code> <p>Margin.</p> <code>_max_width</code> <code>Optional[str]</code> <p>Maximum width.</p> <code>_section_number</code> <code>Optional[str]</code> <p>Section number.</p> <p>Examples:</p> Python<pre><code>from email_widget.widgets import TextWidget\nfrom email_widget.core.enums import TextType, TextAlign\n\n# Basic usage\ntext = TextWidget().set_content(\"Hello World\")\n\n# Method chaining\ntitle = (TextWidget()            .set_content(\"Important Title\")            .set_type(TextType.TITLE_LARGE)            .set_color(\"#0078d4\")            .set_align(TextAlign.CENTER))\n\n# Section heading (automatic numbering)\nsection = TextWidget().set_content(\"Data Analysis\").set_type(TextType.SECTION_H2)\n</code></pre> <p>Initialize TextWidget.</p> <p>Parameters:</p> Name Type Description Default <code>widget_id</code> <code>Optional[str]</code> <p>Optional widget ID.</p> <code>None</code>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget-attributes","title":"Attributes","text":""},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.align","title":"<code>align</code>  <code>property</code>","text":"<p>Get current alignment.</p> <p>Returns:</p> Name Type Description <code>TextAlign</code> <code>TextAlign</code> <p>Current alignment enumeration value.</p>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.color","title":"<code>color</code>  <code>property</code>","text":"<p>Get current text color.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Current text color CSS value.</p>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.content","title":"<code>content</code>  <code>property</code>","text":"<p>Get current text content.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Current text content.</p>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.font_size","title":"<code>font_size</code>  <code>property</code>","text":"<p>Get current font size.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Current font size CSS value.</p>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget-functions","title":"Functions","text":""},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.get_template_context","title":"<code>get_template_context()</code>","text":"<p>Get template context data required for rendering.</p> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>Template context data dictionary</p>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.reset_section_numbers","title":"<code>reset_section_numbers()</code>  <code>staticmethod</code>","text":"<p>Reset section number counters.</p> <p>Reset all section number counters, typically called when starting a new document.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; TextWidget.reset_section_numbers()\n&gt;&gt;&gt; # Section titles created afterwards will start numbering from 1\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_align","title":"<code>set_align(align)</code>","text":"<p>Set text alignment.</p> <p>Parameters:</p> Name Type Description Default <code>align</code> <code>TextAlign</code> <p>Alignment enum value.</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Supports method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_align(TextAlign.CENTER)\n&gt;&gt;&gt; widget = TextWidget().set_align(TextAlign.RIGHT)\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_bold","title":"<code>set_bold(bold=True)</code>","text":"<p>Set whether text is bold.</p> <p>Parameters:</p> Name Type Description Default <code>bold</code> <code>bool</code> <p>Whether text is bold, defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_bold()  # Set to bold\n&gt;&gt;&gt; widget = TextWidget().set_bold(False)  # Cancel bold\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_color","title":"<code>set_color(color)</code>","text":"<p>Set text color.</p> <p>Parameters:</p> Name Type Description Default <code>color</code> <code>str</code> <p>CSS color value (e.g., \"#ff0000\", \"red\", \"rgb(255,0,0)\").</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Supports method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When color format is invalid.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_color(\"#ff0000\")\n&gt;&gt;&gt; widget = TextWidget().set_color(\"blue\")\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_content","title":"<code>set_content(content)</code>","text":"<p>Set text content, supports multi-line text (separated by ).</p> Text Only<pre><code>    Args:\n        content (str): Text content.\n\n    Returns:\n        TextWidget: Supports method chaining.\n\n    Raises:\n        ValueError: When content is an empty string.\n\n    Examples:\n        &gt;&gt;&gt; widget = TextWidget().set_content(\"Hello World\")\n        &gt;&gt;&gt; # Multi-line text\n        &gt;&gt;&gt; widget = TextWidget().set_content(\"Line 1\n</code></pre> <p>Line 2 Line 3\")</p>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_font_family","title":"<code>set_font_family(family)</code>","text":"<p>Set font family.</p> <p>Parameters:</p> Name Type Description Default <code>family</code> <code>str</code> <p>CSS font family string.</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Supports method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_font_family(\"Arial, sans-serif\")\n&gt;&gt;&gt; widget = TextWidget().set_font_family(\"'Microsoft YaHei', SimHei\")\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_font_size","title":"<code>set_font_size(size)</code>","text":"<p>Set font size.</p> <p>Parameters:</p> Name Type Description Default <code>size</code> <code>str</code> <p>CSS font size value (e.g., \"16px\", \"1.2em\", \"120%\").</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Supports method chaining.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>When size format is invalid.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_font_size(\"18px\")\n&gt;&gt;&gt; widget = TextWidget().set_font_size(\"1.5em\")\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_font_weight","title":"<code>set_font_weight(weight)</code>","text":"<p>Set font weight.</p> <p>Parameters:</p> Name Type Description Default <code>weight</code> <code>str</code> <p>CSS font weight value (e.g., \"normal\", \"bold\", \"600\").</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Supports method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_font_weight(\"bold\")\n&gt;&gt;&gt; widget = TextWidget().set_font_weight(\"600\")\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_italic","title":"<code>set_italic(italic=True)</code>","text":"<p>Set whether text is italic.</p> <p>Parameters:</p> Name Type Description Default <code>italic</code> <code>bool</code> <p>Whether text is italic, defaults to True</p> <code>True</code> <p>Returns:</p> Type Description <code>TextWidget</code> <p>Returns self to support method chaining</p> Note <p>Current version has not implemented italic functionality, interface reserved</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_italic()  # Set to italic\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_line_height","title":"<code>set_line_height(height)</code>","text":"<p>Set line height.</p> <p>Parameters:</p> Name Type Description Default <code>height</code> <code>str</code> <p>CSS line height value (e.g., \"1.5\", \"24px\", \"150%\").</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Supports method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_line_height(\"1.8\")\n&gt;&gt;&gt; widget = TextWidget().set_line_height(\"28px\")\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_margin","title":"<code>set_margin(margin)</code>","text":"<p>Set margin.</p> <p>Parameters:</p> Name Type Description Default <code>margin</code> <code>str</code> <p>CSS margin value (e.g., \"16px 0\", \"10px\", \"1em 2em\").</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_margin(\"20px 0\")\n&gt;&gt;&gt; widget = TextWidget().set_margin(\"10px\")\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_max_width","title":"<code>set_max_width(max_width)</code>","text":"<p>Set maximum width.</p> <p>Parameters:</p> Name Type Description Default <code>max_width</code> <code>str</code> <p>CSS maximum width value (e.g., \"600px\", \"80%\", \"50em\").</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Returns self to support method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_max_width(\"600px\")\n&gt;&gt;&gt; widget = TextWidget().set_max_width(\"80%\")\n</code></pre>"},{"location":"api/text-widget/#email_widget.widgets.text_widget.TextWidget.set_type","title":"<code>set_type(text_type)</code>","text":"<p>Set text type, different types apply different preset styles.</p> <p>Parameters:</p> Name Type Description Default <code>text_type</code> <code>TextType</code> <p>Text type enum value.</p> required <p>Returns:</p> Name Type Description <code>TextWidget</code> <code>TextWidget</code> <p>Supports method chaining.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; widget = TextWidget().set_type(TextType.TITLE_LARGE)\n&gt;&gt;&gt; widget = TextWidget().set_type(TextType.SECTION_H2)\n</code></pre>"},{"location":"api/timeline-widget/","title":"TimelineWidget API","text":""},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget","title":"<code>TimelineWidget()</code>","text":"<p>               Bases: <code>BaseWidget</code></p> <p>Timeline component for creating event timeline displays.</p> <p>TimelineWidget is used to display a series of events arranged in chronological order, each event can have different states, descriptions, and timestamps. Suitable for project progress, history records, process steps, and other scenarios.</p> <p>Attributes:</p> Name Type Description <code>events</code> <code>List[Dict[str, Any]]</code> <p>Timeline events list</p> <code>title</code> <code>str</code> <p>Timeline title</p> <code>show_time</code> <code>bool</code> <p>Whether to show time information</p> <code>reverse_order</code> <code>bool</code> <p>Whether to arrange in reverse chronological order</p> <p>Examples:</p> <p>Basic usage: Python<pre><code>timeline = TimelineWidget()\ntimeline.add_event(\"Project Launch\", \"2024-01-01\", \"Project officially started\")\ntimeline.add_event(\"Requirements Confirmed\", \"2024-01-15\", \"Requirements analysis document completed\")\ntimeline.add_event(\"Development Complete\", \"2024-02-28\", \"Code development completed\")\n</code></pre></p> <p>Using method chaining: Python<pre><code>timeline = (TimelineWidget()\n    .set_title(\"Project Milestones\")\n    .add_event(\"Project Initiation\", \"2024-01-01\", status_type=\"success\")\n    .add_event(\"In Development\", \"2024-01-15\", status_type=\"primary\")\n    .show_timestamps(True))\n</code></pre></p> <p>Custom event types: Python<pre><code>timeline = TimelineWidget()\ntimeline.add_event(\"System Launch\", \"2024-03-01\", \"Production environment deployment\", \"success\")\ntimeline.add_event(\"Bug Found\", \"2024-03-05\", \"User feedback issue\", \"error\")\ntimeline.add_event(\"Fix Complete\", \"2024-03-06\", \"Issue resolved\", \"success\")\n</code></pre></p> <p>\u521d\u59cb\u5316\u65f6\u95f4\u7ebf\u7ec4\u4ef6\u3002</p>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget-attributes","title":"Attributes","text":""},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.events","title":"<code>events</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u6240\u6709\u65f6\u95f4\u7ebf\u4e8b\u4ef6\u3002</p> <p>Returns:</p> Type Description <code>list[dict[str, Any]]</code> <p>List[Dict[str, Any]]: \u4e8b\u4ef6\u5217\u8868</p>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.title","title":"<code>title</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u65f6\u95f4\u7ebf\u6807\u9898\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u65f6\u95f4\u7ebf\u6807\u9898</p>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.event_count","title":"<code>event_count</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u4e8b\u4ef6\u603b\u6570\u3002</p> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>\u4e8b\u4ef6\u603b\u6570</p>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget-functions","title":"Functions","text":""},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.add_event","title":"<code>add_event(title, time=None, description='', status_type=None)</code>","text":"<p>\u6dfb\u52a0\u65f6\u95f4\u7ebf\u4e8b\u4ef6\u3002</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>\u4e8b\u4ef6\u6807\u9898</p> required <code>time</code> <code>Union[str, datetime, None]</code> <p>\u4e8b\u4ef6\u65f6\u95f4\uff0c\u53ef\u9009</p> <code>None</code> <code>description</code> <code>str</code> <p>\u4e8b\u4ef6\u63cf\u8ff0</p> <code>''</code> <code>status_type</code> <code>Union[str, StatusType, None]</code> <p>\u72b6\u6001\u7c7b\u578b</p> <code>None</code> <p>Returns:</p> Name Type Description <code>TimelineWidget</code> <code>TimelineWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p> <p>Examples:</p> Python<pre><code>timeline.add_event(\"\u9879\u76ee\u542f\u52a8\", \"2024-01-01\", \"\u9879\u76ee\u6b63\u5f0f\u5f00\u59cb\")\ntimeline.add_event(\"\u91cc\u7a0b\u7891\u8fbe\u6210\", datetime.now(), \"\u91cd\u8981\u8282\u70b9\", \"success\")\ntimeline.add_event(\"\u95ee\u9898\u53d1\u73b0\", None, \"\u53d1\u73b0\u7cfb\u7edfbug\", \"error\")\n</code></pre>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.set_title","title":"<code>set_title(title)</code>","text":"<p>\u8bbe\u7f6e\u65f6\u95f4\u7ebf\u6807\u9898\u3002</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>\u65f6\u95f4\u7ebf\u6807\u9898</p> required <p>Returns:</p> Name Type Description <code>TimelineWidget</code> <code>TimelineWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.show_timestamps","title":"<code>show_timestamps(show=True)</code>","text":"<p>\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u65f6\u95f4\u6233\u3002</p> <p>Parameters:</p> Name Type Description Default <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u65f6\u95f4\u4fe1\u606f</p> <code>True</code> <p>Returns:</p> Name Type Description <code>TimelineWidget</code> <code>TimelineWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.set_reverse_order","title":"<code>set_reverse_order(reverse=True)</code>","text":"<p>\u8bbe\u7f6e\u662f\u5426\u6309\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u3002</p> <p>Parameters:</p> Name Type Description Default <code>reverse</code> <code>bool</code> <p>\u662f\u5426\u5012\u5e8f\u6392\u5217\uff08\u6700\u65b0\u7684\u5728\u524d\uff09</p> <code>True</code> <p>Returns:</p> Name Type Description <code>TimelineWidget</code> <code>TimelineWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.clear_events","title":"<code>clear_events()</code>","text":"<p>\u6e05\u7a7a\u6240\u6709\u4e8b\u4ef6\u3002</p> <p>Returns:</p> Name Type Description <code>TimelineWidget</code> <code>TimelineWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p>"},{"location":"api/timeline-widget/#email_widget.widgets.timeline_widget.TimelineWidget.remove_event","title":"<code>remove_event(index)</code>","text":"<p>\u6839\u636e\u7d22\u5f15\u79fb\u9664\u4e8b\u4ef6\u3002</p> <p>Parameters:</p> Name Type Description Default <code>index</code> <code>int</code> <p>\u8981\u79fb\u9664\u7684\u4e8b\u4ef6\u7d22\u5f15</p> required <p>Returns:</p> Name Type Description <code>TimelineWidget</code> <code>TimelineWidget</code> <p>\u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</p> <p>Raises:</p> Type Description <code>IndexError</code> <p>\u5f53\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\u65f6</p>"},{"location":"development/","title":"Development Guide","text":"<p>Welcome to the EmailWidget Development Guide! This guide will help you understand how to participate in EmailWidget project development, from environment setup to code contribution.</p>"},{"location":"development/#development-guide-overview","title":"\ud83c\udfaf Development Guide Overview","text":""},{"location":"development/#contributing-guide","title":"\ud83d\udcd6 Contributing Guide","text":"<p>Learn how to contribute to the EmailWidget project: - Code Contribution Process - Fork, develop, test, submit PR - Issue Reporting - Bug reports and feature request specifications - Code Standards - Coding standards and best practices - Documentation Contribution - Improve documentation and examples</p>"},{"location":"development/#development-environment-setup","title":"\ud83d\udee0\ufe0f Development Environment Setup","text":"<p>Quick setup of Windows 10 development environment: - Environment Requirements - Python, IDE, dependency tools - Project Cloning - Code download and initialization - Dependency Installation - Development and testing dependencies - Installation Verification - Environment check and test execution</p>"},{"location":"development/#creating-custom-widgets","title":"\ud83e\udde9 Creating Custom Widgets","text":"<p>Learn how to develop custom components: - Widget Architecture - Base class inheritance and interface design - Development Process - Complete steps from design to implementation - Best Practices - Code quality and performance optimization - Example Tutorial - Complete Widget development case</p>"},{"location":"development/#testing-guide","title":"\ud83e\uddea Testing Guide","text":"<p>Testing strategies to ensure code quality: - Testing Framework - pytest usage and configuration - Unit Testing - Component and function testing - Integration Testing - Complete functionality testing - Test Coverage - Code coverage requirements and reporting</p>"},{"location":"development/#release-process","title":"\ud83d\ude80 Release Process","text":"<p>Understanding project version release process: - Version Management - Semantic versioning - Release Preparation - Code review and documentation updates - CI/CD Process - Automated build and testing - Post-Release - Version tags and changelog</p>"},{"location":"development/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"development/#first-contribution","title":"First Contribution","text":"<p>If this is your first time participating in an open source project, we recommend following this order:</p> <ol> <li>\ud83d\udcd6 Read Contributing Guide - Understand project standards and processes</li> <li>\ud83d\udee0\ufe0f Setup Development Environment - Prepare local development environment</li> <li>\ud83d\udd0d Find a Small Issue - Start with simple issues</li> <li>\ud83d\udcbb Write Code - Implement features or fix bugs</li> <li>\ud83e\uddea Run Tests - Ensure code quality</li> <li>\ud83d\udcdd Submit PR - Submit Pull Request</li> </ol>"},{"location":"development/#developer-path","title":"Developer Path","text":""},{"location":"development/#junior-developer","title":"\ud83c\udf31 Junior Developer","text":"<ul> <li>Fix simple bugs</li> <li>Improve documentation and examples</li> <li>Add unit tests</li> <li>Optimize code comments</li> </ul>"},{"location":"development/#intermediate-developer","title":"\ud83c\udf3f Intermediate Developer","text":"<ul> <li>Develop new Widget components</li> <li>Implement feature enhancements</li> <li>Refactor existing code</li> <li>Write integration tests</li> </ul>"},{"location":"development/#senior-developer","title":"\ud83c\udf33 Senior Developer","text":"<ul> <li>Design new architectural features</li> <li>Performance optimization and tuning</li> <li>Establish development standards</li> <li>Guide new contributors</li> </ul>"},{"location":"development/#recommended-development-tools","title":"\ud83d\udee0\ufe0f Recommended Development Tools","text":""},{"location":"development/#ides-and-editors","title":"IDEs and Editors","text":"<ul> <li>PyCharm Professional - Powerful Python IDE</li> <li>Visual Studio Code - Lightweight with rich plugins</li> <li>Sublime Text - Fast-responding text editor</li> </ul>"},{"location":"development/#essential-plugins-vs-code","title":"Essential Plugins (VS Code)","text":"JSON<pre><code>{\n  \"recommendations\": [\n    \"ms-python.python\",\n    \"ms-python.pylint\",\n    \"ms-python.black-formatter\",\n    \"ms-python.isort\",\n    \"ms-toolsai.jupyter\",\n    \"redhat.vscode-yaml\",\n    \"yzhang.markdown-all-in-one\"\n  ]\n}\n</code></pre>"},{"location":"development/#command-line-tools","title":"Command Line Tools","text":"<ul> <li>Git - Version control</li> <li>Python 3.10+ - Development language</li> <li>pip/uv - Package management</li> <li>pytest - Testing framework</li> </ul>"},{"location":"development/#development-standards","title":"\ud83d\udccb Development Standards","text":""},{"location":"development/#code-style","title":"Code Style","text":"<ul> <li>Formatting Tool: Black (line-length=88)</li> <li>Import Sorting: isort</li> <li>Code Linting: pylint, flake8</li> <li>Type Hints: mypy</li> </ul>"},{"location":"development/#commit-standards","title":"Commit Standards","text":"<p>Use Conventional Commits format:</p> Text Only<pre><code>&lt;type&gt;[optional scope]: &lt;description&gt;\n\n[optional body]\n\n[optional footer(s)]\n</code></pre> <p>Type Descriptions: - <code>feat</code>: New feature - <code>fix</code>: Bug fix - <code>docs</code>: Documentation update - <code>style</code>: Code formatting - <code>refactor</code>: Code refactoring - <code>test</code>: Test related - <code>chore</code>: Build process or auxiliary tool changes</p>"},{"location":"development/#branch-management","title":"Branch Management","text":"<ul> <li><code>main</code> - Main branch, keep stable</li> <li><code>develop</code> - Development branch, integrate new features</li> <li><code>feature/*</code> - Feature branches</li> <li><code>bugfix/*</code> - Bug fix branches</li> <li><code>hotfix/*</code> - Emergency fix branches</li> </ul>"},{"location":"development/#contribution-recognition","title":"\ud83c\udf1f Contribution Recognition","text":""},{"location":"development/#contributors-list","title":"Contributors List","text":"<p>All contributors will be recognized in the project: - README.md contributors list - Acknowledgments in release notes - Attribution in project documentation</p>"},{"location":"development/#contribution-types","title":"Contribution Types","text":"<p>We recognize various forms of contribution: - \ud83d\udcbb Code - New features, bug fixes, performance optimization - \ud83d\udcd6 Documentation - Improve docs, add examples, translation - \ud83c\udfa8 Design - UI/UX improvements, icon design - \ud83d\udc1b Testing - Bug reports, test cases, quality assurance - \ud83d\udca1 Ideas - Feature suggestions, architecture discussions - \ud83d\udd0d Review - Code review, pull request feedback</p>"},{"location":"development/#getting-help","title":"\ud83d\udcde Getting Help","text":""},{"location":"development/#communication-channels","title":"Communication Channels","text":"<ul> <li>GitHub Issues - Issue reports and feature requests</li> <li>GitHub Discussions - Community discussions and Q&amp;A</li> <li>Developer Email - Private issues and business cooperation</li> </ul>"},{"location":"development/#frequently-asked-questions","title":"Frequently Asked Questions","text":"<p>Q: I'm new to Python, can I contribute? A: Absolutely! We have many \"good first issue\" labeled problems suitable for beginners.</p> <p>Q: How do I ensure my code meets project standards? A: Run <code>pytest</code> and <code>pylint</code>, ensure all tests pass and no code quality issues.</p> <p>Q: Which branch should I develop on? A: Create your feature branch from <code>develop</code>, submit PR to <code>develop</code> when complete.</p> <p>Q: How long after submitting PR will I get feedback? A: We usually respond within 2-3 business days, complex PRs may take longer.</p>"},{"location":"development/#welcome-to-join","title":"\ud83c\udf89 Welcome to Join","text":"<p>EmailWidget is an open, friendly open source project. Regardless of your skill level, we welcome your participation!</p>"},{"location":"development/#ways-to-participate","title":"Ways to Participate","text":"<ol> <li>\u2b50 Star the Project - Support project development</li> <li>\ud83c\udf74 Fork the Project - Start your contribution journey</li> <li>\ud83d\udc1b Report Issues - Help improve project quality</li> <li>\ud83d\udca1 Make Suggestions - Share your ideas</li> <li>\ud83d\udcd6 Improve Documentation - Make documentation more complete</li> <li>\ud83d\udcbb Contribute Code - Directly participate in development</li> </ol> <p>Let's work together to make EmailWidget the best Python email reporting library!</p> <p>Start Your Development Journey: 1. Check Development Environment Setup to prepare environment 2. Read Contributing Guide to understand the process 3. Browse GitHub Issues to find suitable tasks 4. Start coding and contributing!</p>"},{"location":"development/contributing/","title":"\ud83e\udd1d Contributing Guide","text":"<p>Thank you for your interest in the EmailWidget project! We welcome all forms of contributions, whether code, documentation, testing, or feedback suggestions.</p>"},{"location":"development/contributing/#ways-to-contribute","title":"\ud83c\udfaf Ways to Contribute","text":""},{"location":"development/contributing/#code-contributions","title":"\ud83d\udcdd Code Contributions","text":"<ul> <li>\ud83d\udc1b Bug Fixes - Help us fix known issues</li> <li>\u2728 New Features - Add new Widgets or functionality</li> <li>\u26a1 Performance Optimization - Improve code performance and efficiency</li> <li>\ud83d\udd27 Refactoring - Improve code structure and maintainability</li> </ul>"},{"location":"development/contributing/#documentation-contributions","title":"\ud83d\udcda Documentation Contributions","text":"<ul> <li>\ud83d\udcd6 Improve Documentation - Enhance existing documentation</li> <li>\ud83d\udca1 Add Examples - Provide more usage examples</li> <li>\ud83c\udf10 Translation - Help translate documentation to other languages</li> <li>\ud83d\udcf9 Tutorials - Create video or illustrated tutorials</li> </ul>"},{"location":"development/contributing/#testing-contributions","title":"\ud83e\uddea Testing Contributions","text":"<ul> <li>\ud83d\udd0d Write Tests - Add tests for existing functionality</li> <li>\ud83d\udc1b Report Bugs - Find and report issues</li> <li>\ud83d\udcca Performance Testing - Test performance in different environments</li> </ul>"},{"location":"development/contributing/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"development/contributing/#1-fork-the-project","title":"1. \ud83c\udf74 Fork the Project","text":"<p>Click the \"Fork\" button in the top right corner of the GitHub page to copy the project to your account.</p>"},{"location":"development/contributing/#2-clone-the-code","title":"2. \ud83d\udce5 Clone the Code","text":"Bash<pre><code>git clone https://github.com/YOUR_USERNAME/SpiderDaily.git\ncd SpiderDaily\n</code></pre>"},{"location":"development/contributing/#3-setup-development-environment","title":"3. \ud83d\udd27 Setup Development Environment","text":"Bash<pre><code># Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # Linux/macOS\n# or venv\\Scripts\\activate  # Windows\n\n# Install development dependencies\npip install -e \".[dev]\"\n</code></pre>"},{"location":"development/contributing/#4-create-branch","title":"4. \ud83c\udf3f Create Branch","text":"Bash<pre><code>git checkout -b feature/your-feature-name\n# or\ngit checkout -b bugfix/issue-number\n</code></pre>"},{"location":"development/contributing/#5-start-development","title":"5. \ud83d\udcbb Start Development","text":"<p>Now you can start developing!</p>"},{"location":"development/contributing/#development-standards","title":"\ud83d\udccb Development Standards","text":""},{"location":"development/contributing/#code-style","title":"\ud83d\udc0d Code Style","text":"<p>We use the following tools to maintain code quality:</p> Bash<pre><code># Code formatting\nblack email_widget/\nisort email_widget/\n\n# Code linting\nflake8 email_widget/\nmypy email_widget/\n</code></pre>"},{"location":"development/contributing/#commit-standards","title":"\ud83d\udcdd Commit Standards","text":"<p>We use Conventional Commits specification:</p> Bash<pre><code># Feature addition\ngit commit -m \"feat: add new progress bar Widget\"\n\n# Bug fix\ngit commit -m \"fix: fix encoding issue in table rendering\"\n\n# Documentation update\ngit commit -m \"docs: update API documentation\"\n\n# Testing\ngit commit -m \"test: add unit tests for TextWidget\"\n\n# Refactoring\ngit commit -m \"refactor: optimize Email class rendering logic\"\n</code></pre>"},{"location":"development/contributing/#testing-requirements","title":"\ud83e\uddea Testing Requirements","text":"<ul> <li>All new features should have corresponding tests</li> <li>Bug fixes should include regression tests</li> <li>Ensure test coverage doesn't decrease</li> </ul> Bash<pre><code># Run tests\npytest tests/ -v\n\n# Check coverage\npytest tests/ --cov=email_widget --cov-report=html\n</code></pre>"},{"location":"development/contributing/#creating-new-widgets","title":"\ud83c\udfa8 Creating New Widgets","text":"<p>If you want to add new components to EmailWidget, please follow these steps:</p>"},{"location":"development/contributing/#1-file-structure","title":"1. \ud83d\udcc1 File Structure","text":"Text Only<pre><code>email_widget/ewidget/widgets/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 your_new_widget.py  # New Widget file\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"development/contributing/#2-widget-base-template","title":"2. \ud83d\udcdd Widget Base Template","text":"Python<pre><code>\"\"\"\u4f60\u7684\u65b0Widget\u5b9e\u73b0\n\n\u8fd9\u4e2a\u6a21\u5757\u63d0\u4f9b\u4e86XXX\u529f\u80fd\u7684Widget\u3002\n\"\"\"\nfrom typing import Optional\nfrom email_widget.core.base import BaseWidget\n\n\nclass YourNewWidget(BaseWidget):\n    \"\"\"\u4f60\u7684\u65b0Widget\u7c7b\uff0c\u7528\u4e8eXXX\u529f\u80fd\u3002\n\n    \u8be6\u7ec6\u7684\u7c7b\u8bf4\u660e...\n\n    Attributes:\n        _your_attr: \u5c5e\u6027\u8bf4\u660e\n\n    Examples:\n        &gt;&gt;&gt; widget = YourNewWidget()\n        &gt;&gt;&gt; widget.set_something(\"value\")\n        &gt;&gt;&gt; html = widget.render_html()\n    \"\"\"\n\n    def __init__(self, widget_id: Optional[str] = None):\n        \"\"\"\u521d\u59cb\u5316Widget\u3002\n\n        Args:\n            widget_id: \u53ef\u9009\u7684Widget ID\n        \"\"\"\n        super().__init__(widget_id)\n        # \u521d\u59cb\u5316\u4f60\u7684\u5c5e\u6027\n        self._your_attr = \"default_value\"\n\n    def set_something(self, value: str) -&gt; 'YourNewWidget':\n        \"\"\"\u8bbe\u7f6e\u67d0\u4e2a\u5c5e\u6027\u3002\n\n        Args:\n            value: \u5c5e\u6027\u503c\n\n        Returns:\n            \u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n        \"\"\"\n        self._your_attr = value\n        return self\n\n    def _get_template_name(self) -&gt; str:\n        \"\"\"\u83b7\u53d6\u6a21\u677f\u540d\u79f0\u3002\n\n        Returns:\n            \u6a21\u677f\u6587\u4ef6\u540d\n        \"\"\"\n        return \"your_new_widget.html\"\n\n    def render_html(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u4e3aHTML\u5b57\u7b26\u4e32\u3002\n\n        Returns:\n            \u6e32\u67d3\u540e\u7684HTML\u5b57\u7b26\u4e32\n        \"\"\"\n        # \u5b9e\u73b0\u4f60\u7684\u6e32\u67d3\u903b\u8f91\n        return f'&lt;div&gt;{self._your_attr}&lt;/div&gt;'\n</code></pre>"},{"location":"development/contributing/#3-documentation-requirements","title":"3. \ud83d\udcdd Documentation Requirements","text":"<ul> <li>Use Google-style docstrings</li> <li>Provide detailed class and method descriptions</li> <li>Include usage examples</li> <li>Describe parameters and return values</li> </ul>"},{"location":"development/contributing/#4-test-files","title":"4. \ud83e\uddea Test Files","text":"<p>Create corresponding test file <code>tests/test_your_new_widget.py</code>:</p> Python<pre><code>import pytest\nfrom email_widget.widgets import YourNewWidget\n\n\nclass TestYourNewWidget:\n    def test_init(self):\n        \"\"\"\u6d4b\u8bd5Widget\u521d\u59cb\u5316\"\"\"\n        widget = YourNewWidget()\n        assert widget._your_attr == \"default_value\"\n\n    def test_set_something(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u5c5e\u6027\"\"\"\n        widget = YourNewWidget()\n        result = widget.set_something(\"test_value\")\n\n        assert widget._your_attr == \"test_value\"\n        assert result is widget  # \u6d4b\u8bd5\u94fe\u5f0f\u8c03\u7528\n\n    def test_render_html(self):\n        \"\"\"\u6d4b\u8bd5HTML\u6e32\u67d3\"\"\"\n        widget = YourNewWidget()\n        widget.set_something(\"test\")\n\n        html = widget.render_html()\n        assert \"test\" in html\n</code></pre>"},{"location":"development/contributing/#5-register-widget","title":"5. \ud83d\udce6 Register Widget","text":"<p>Add import in <code>email_widget/ewidget/widgets/__init__.py</code>:</p> Python<pre><code>from .your_new_widget import YourNewWidget\n\n__all__ = [\n    # ... \u5176\u4ed6Widget\n    'YourNewWidget',\n]\n</code></pre>"},{"location":"development/contributing/#submitting-pull-request","title":"\ud83d\udce4 Submitting Pull Request","text":""},{"location":"development/contributing/#1-pre-submission-checklist","title":"1. \u2705 Pre-submission Checklist","text":"Bash<pre><code># Run all tests\npytest tests/ -v\n\n# Check code style\nblack --check email_widget/\nisort --check-only email_widget/\nflake8 email_widget/\n\n# Type checking\nmypy email_widget/\n</code></pre>"},{"location":"development/contributing/#2-pr-description-template","title":"2. \ud83d\udcdd PR Description Template","text":"Markdown<pre><code>## \ud83d\udccb Change Type\n- [ ] \ud83d\udc1b Bug fix\n- [ ] \u2728 New feature\n- [ ] \ud83d\udca5 Breaking change\n- [ ] \ud83d\udcda Documentation update\n- [ ] \ud83d\udd27 Code refactoring\n- [ ] \u26a1 Performance optimization\n- [ ] \ud83e\uddea Test improvement\n\n## \ud83d\udcdd Change Description\nBrief description of your changes...\n\n## \ud83e\uddea Testing Description\n- [ ] Added unit tests\n- [ ] Passed all existing tests\n- [ ] Manually tested functionality\n\n## \ud83d\udcf8 Screenshots/Examples\nIf UI-related changes, please provide screenshots or example code\n\n## \ud83d\udd17 Related Issues\nFixes #(issue number)\n</code></pre>"},{"location":"development/contributing/#3-code-review","title":"3. \ud83d\udd0d Code Review","text":"<ul> <li>We carefully review every PR</li> <li>May request some modifications</li> <li>Please be patient for review and actively respond to feedback</li> </ul>"},{"location":"development/contributing/#reporting-bugs","title":"\ud83d\udc1b Reporting Bugs","text":""},{"location":"development/contributing/#bug-report-template","title":"\ud83d\udcdd Bug Report Template","text":"<p>When you find a bug, please create an Issue using the following template:</p> Markdown<pre><code>## \ud83d\udc1b Bug Description\nBrief description of the problem encountered...\n\n## \ud83d\udd04 Steps to Reproduce\n1. Execute '...'\n2. Click '....'\n3. Scroll to '....'\n4. See error\n\n## \ud83c\udfaf Expected Behavior\nDescribe what you expected to happen...\n\n## \ud83d\udcf8 Screenshots\nIf applicable, add screenshots to help explain the problem\n\n## \ud83d\udda5\ufe0f Environment Information\n- OS: [e.g. Windows 10, macOS 12.0, Ubuntu 20.04]\n- Python version: [e.g. 3.10.0]\n- EmailWidget version: [e.g. 0.1.0]\n\n## \ud83d\udccb Additional Information\nAdd any other information about the problem...\n</code></pre>"},{"location":"development/contributing/#feature-suggestions","title":"\ud83d\udca1 Feature Suggestions","text":"<p>We welcome suggestions for new features! When creating a Feature Request, please:</p> <ol> <li>\ud83c\udfaf Clear Requirements - Describe the feature you want in detail</li> <li>\ud83e\udd14 Explain Reasons - Why is this feature needed</li> <li>\ud83d\udcad Provide Solutions - If you have ideas, provide implementation solutions</li> <li>\ud83d\udcdd Give Examples - Provide usage examples</li> </ol>"},{"location":"development/contributing/#recognizing-contributors","title":"\ud83c\udf1f Recognizing Contributors","text":"<p>We recognize contributors in the following places:</p> <ul> <li>\ud83d\udcdc CONTRIBUTORS.md file</li> <li>\ud83c\udf89 Release notes acknowledgments</li> <li>\ud83d\udcac Social media promotion</li> <li>\ud83c\udfc6 Special badges (for major contributions)</li> </ul>"},{"location":"development/contributing/#contact-us","title":"\ud83d\udcde Contact Us","text":"<p>If you have any questions or need help:</p> <ul> <li>\ud83d\udcac GitHub Discussions</li> <li>\ud83d\udc1b GitHub Issues</li> <li>\ud83d\udce7 Email</li> </ul> <p>Thank you for your contribution!</p> <p>Every contribution makes EmailWidget better. Regardless of the size of the contribution, we are very grateful! \ud83d\ude4f</p>"},{"location":"development/creating-widgets/","title":"Creating Custom Widgets","text":"<p>This guide provides detailed instructions on how to create custom components in EmailWidget, from basic concepts to complete implementation.</p>"},{"location":"development/creating-widgets/#widget-architecture-overview","title":"\ud83c\udfaf Widget Architecture Overview","text":""},{"location":"development/creating-widgets/#core-concepts","title":"Core Concepts","text":"<p>EmailWidget uses a component-based architecture where all display elements are Widgets:</p> Text Only<pre><code>BaseWidget (Abstract Base Class)\n\u251c\u2500\u2500 TextWidget (Text component)\n\u251c\u2500\u2500 TableWidget (Table component)\n\u251c\u2500\u2500 ProgressWidget (Progress bar component)\n\u251c\u2500\u2500 AlertWidget (Alert box component)\n\u251c\u2500\u2500 CustomWidget (Your custom component)\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"development/creating-widgets/#template-system","title":"\ud83c\udfa8 Template System","text":""},{"location":"development/creating-widgets/#jinja2-integration","title":"Jinja2 Integration","text":"<p>EmailWidget uses Jinja2 as its template engine:</p> Python<pre><code>from email_widget.core.template_engine import TemplateEngine\n\n# \u83b7\u53d6\u6a21\u677f\u5f15\u64ce\nengine = TemplateEngine()\n\n# \u6e32\u67d3\u6a21\u677f\ntemplate = engine.get_template(\"widget_template.html\")\nhtml = template.render(context={\"title\": \"Title\", \"content\": \"\u5185\u5bb9\"})\n</code></pre>"},{"location":"development/creating-widgets/#template-structure","title":"Template Structure","text":"<p>Typical Widget template structure:</p> HTML<pre><code>&lt;!-- widget_template.html --&gt;\n&lt;div class=\"widget {{ widget_type }}\" id=\"{{ widget_id }}\"&gt;\n    &lt;div class=\"widget-header\"&gt;\n        &lt;h3&gt;{{ title }}&lt;/h3&gt;\n    &lt;/div&gt;\n    &lt;div class=\"widget-content\"&gt;\n        {{ content|safe }}\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"development/creating-widgets/#custom-templates","title":"Custom Templates","text":"<p>You can create templates for custom Widgets:</p> Python<pre><code>class CustomWidget(BaseWidget):\n    def __init__(self):\n        super().__init__()\n        self.template_name = \"custom_widget.html\"\n\n    def get_template_context(self) -&gt; dict:\n        return {\n            \"title\": self.title,\n            \"custom_data\": self.custom_data,\n            **super().get_template_context()\n        }\n</code></pre>"},{"location":"development/creating-widgets/#rendering-process","title":"\ud83d\udd04 Rendering Process","text":""},{"location":"development/creating-widgets/#rendering-flow","title":"Rendering Flow","text":"<p>EmailWidget's rendering process:</p> <pre><code>graph TD\n    A[\"Email.export_html()\"] --&gt; B[\"Collect all Widgets\"]\n    B --&gt; C[\"Validate Widget Data\"]\n    C --&gt; D[\"Render each Widget\"]\n    D --&gt; E[\"Generate CSS styles\"]\n    E --&gt; F[\"Merge HTML template\"]\n    F --&gt; G[\"Output final HTML\"]</code></pre>"},{"location":"development/creating-widgets/#performance-optimization","title":"Performance Optimization","text":"<p>EmailWidget performs multiple optimizations during rendering:</p> <ul> <li>Template Caching - Avoid repeated template parsing</li> <li>Lazy Loading - Load resources on demand</li> <li>HTML Compression - Reduce file size</li> <li>Image Optimization - Automatic compression and encoding</li> </ul>"},{"location":"development/creating-widgets/#basewidget-base-class","title":"BaseWidget Base Class","text":"<p>All Widgets must inherit from <code>BaseWidget</code>:</p> Python<pre><code>from email_widget.core.base import BaseWidget\nfrom typing import Any, Dict, Optional\n\nclass BaseWidget:\n    \"\"\"Widget \u57fa\u7c7b\uff0c\u5b9a\u4e49\u901a\u7528\u63a5\u53e3\"\"\"\n\n    def __init__(self):\n        \"\"\"\u521d\u59cb\u5316\u57fa\u672c\u5c5e\u6027\"\"\"\n        self._id: Optional[str] = None\n        self._css_classes: List[str] = []\n        self._custom_styles: Dict[str, str] = {}\n\n    def render(self) -&gt; str:\n        \"\"\"\u6e32\u67d3 Widget \u4e3a HTML - \u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\"\"\"\n        raise NotImplementedError(\"\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0 render \u65b9\u6cd5\")\n\n    def set_id(self, widget_id: str) -&gt; 'BaseWidget':\n        \"\"\"\u8bbe\u7f6e Widget ID\"\"\"\n        self._id = widget_id\n        return self\n\n    def add_css_class(self, css_class: str) -&gt; 'BaseWidget':\n        \"\"\"\u6dfb\u52a0 CSS \u7c7b\"\"\"\n        if css_class not in self._css_classes:\n            self._css_classes.append(css_class)\n        return self\n\n    def set_custom_style(self, property_name: str, value: str) -&gt; 'BaseWidget':\n        \"\"\"\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u6837\u5f0f\"\"\"\n        self._custom_styles[property_name] = value\n        return self\n</code></pre>"},{"location":"development/creating-widgets/#development-process","title":"\ud83d\udee0\ufe0f Development Process","text":""},{"location":"development/creating-widgets/#1-design-phase","title":"1. Design Phase","text":"<p>Before starting to code, clarify the following questions:</p> <p>Functionality Definition - What is the primary purpose of the Widget? - What data needs to be displayed? - How will users interact with it?</p> <p>API Design - What configuration methods are needed? - What are the parameter types and default values? - Should it support method chaining?</p> <p>Style Design - What are the default styles? - What customization options are supported? - How to ensure email client compatibility?</p>"},{"location":"development/creating-widgets/#2-implementation-phase","title":"2. Implementation Phase","text":""},{"location":"development/creating-widgets/#step-1-create-basic-structure","title":"Step 1: Create Basic Structure","text":"Python<pre><code>from email_widget.core.base import BaseWidget\nfrom email_widget.core.validators import TypeValidator\nfrom typing import Optional, Union\n\nclass CustomWidget(BaseWidget):\n    \"\"\"\u81ea\u5b9a\u4e49 Widget \u793a\u4f8b\"\"\"\n\n    def __init__(self):\n        super().__init__()\n        # \u521d\u59cb\u5316 Widget \u7279\u6709\u5c5e\u6027\n        self._title: str = \"\"\n        self._content: str = \"\"\n        self._theme: str = \"default\"\n\n        # \u521d\u59cb\u5316\u9a8c\u8bc1\u5668\n        self._validators = {\n            'title': TypeValidator(str),\n            'content': TypeValidator(str),\n            'theme': TypeValidator(str)\n        }\n\n    def render(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u4e3a HTML\"\"\"\n        # \u5b9e\u73b0\u6e32\u67d3\u903b\u8f91\n        pass\n</code></pre>"},{"location":"development/creating-widgets/#step-2-implement-configuration-methods","title":"Step 2: Implement Configuration Methods","text":"Python<pre><code>def set_title(self, title: str) -&gt; 'CustomWidget':\n    \"\"\"\u8bbe\u7f6eTitle\"\"\"\n    self._validators['title'].validate(title)\n    self._title = title\n    return self\n\ndef set_content(self, content: str) -&gt; 'CustomWidget':\n    \"\"\"\u8bbe\u7f6e\u5185\u5bb9\"\"\"\n    self._validators['content'].validate(content)\n    self._content = content\n    return self\n\ndef set_theme(self, theme: str) -&gt; 'CustomWidget':\n    \"\"\"\u8bbe\u7f6e\u4e3b\u9898\"\"\"\n    allowed_themes = ['default', 'primary', 'success', 'warning', 'danger']\n    if theme not in allowed_themes:\n        raise ValueError(f\"\u4e3b\u9898\u5fc5\u987b\u662f\u4ee5\u4e0b\u4e4b\u4e00: {allowed_themes}\")\n    self._theme = theme\n    return self\n</code></pre>"},{"location":"development/creating-widgets/#step-3-implement-rendering-logic","title":"Step 3: Implement Rendering Logic","text":"Python<pre><code>def render(self) -&gt; str:\n    \"\"\"\u6e32\u67d3\u4e3a HTML\"\"\"\n    # \u751f\u6210 CSS \u7c7b\u540d\n    css_classes = ['custom-widget', f'theme-{self._theme}'] + self._css_classes\n    class_attr = f'class=\"{\" \".join(css_classes)}\"' if css_classes else ''\n\n    # \u751f\u6210 ID \u5c5e\u6027\n    id_attr = f'id=\"{self._id}\"' if self._id else ''\n\n    # \u751f\u6210\u5185\u8054\u6837\u5f0f\n    styles = self._get_default_styles()\n    styles.update(self._custom_styles)\n    style_attr = f'style=\"{self._generate_style_string(styles)}\"' if styles else ''\n\n    # \u7ec4\u5408\u5c5e\u6027\n    attributes = ' '.join(filter(None, [class_attr, id_attr, style_attr]))\n\n    return f\"\"\"\n    &lt;div {attributes}&gt;\n        {self._render_title()}\n        {self._render_content()}\n    &lt;/div&gt;\n    \"\"\"\n\ndef _render_title(self) -&gt; str:\n    \"\"\"\u6e32\u67d3Title\u90e8\u5206\"\"\"\n    if not self._title:\n        return \"\"\n\n    return f'&lt;h3 style=\"margin: 0 0 10px 0; color: #2c3e50;\"&gt;{self._title}&lt;/h3&gt;'\n\ndef _render_content(self) -&gt; str:\n    \"\"\"\u6e32\u67d3\u5185\u5bb9\u90e8\u5206\"\"\"\n    if not self._content:\n        return \"\"\n\n    return f'&lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"line-height: 1.6;\"&gt;{self._content}&lt;/div&gt;\n&lt;/div&gt;'\n\ndef _get_default_styles(self) -&gt; Dict[str, str]:\n    \"\"\"\u83b7\u53d6\u9ed8\u8ba4\u6837\u5f0f\"\"\"\n    theme_colors = {\n        'default': '#f8f9fa',\n        'primary': '#007bff',\n        'success': '#28a745',\n        'warning': '#ffc107',\n        'danger': '#dc3545'\n    }\n\n    return {\n        'background-color': theme_colors.get(self._theme, theme_colors['default']),\n        'border': '1px solid #dee2e6',\n        'border-radius': '4px',\n        'padding': '15px',\n        'margin': '10px 0',\n        'font-family': 'Arial, sans-serif'\n    }\n\ndef _generate_style_string(self, styles: Dict[str, str]) -&gt; str:\n    \"\"\"\u751f\u6210\u6837\u5f0f\u5b57\u7b26\u4e32\"\"\"\n    return '; '.join(f'{key}: {value}' for key, value in styles.items())\n</code></pre>"},{"location":"development/creating-widgets/#complete-example-rating-card-widget","title":"\ud83d\udcdd Complete Example: Rating Card Widget","text":"<p>Let's create a complete rating card component as an example:</p> Python<pre><code>from email_widget.core.base import BaseWidget\nfrom email_widget.core.validators import TypeValidator, RangeValidator\nfrom typing import Optional\n\nclass RatingCardWidget(BaseWidget):\n    \"\"\"\u8bc4\u5206Card Widget\"\"\"\n\n    def __init__(self):\n        super().__init__()\n        self._title: str = \"\"\n        self._rating: float = 0.0\n        self._max_rating: float = 5.0\n        self._description: str = \"\"\n        self._show_stars: bool = True\n        self._color_scheme: str = \"default\"\n\n        # \u8bbe\u7f6e\u9a8c\u8bc1\u5668\n        self._validators = {\n            'title': TypeValidator(str),\n            'rating': RangeValidator(0, 10),\n            'max_rating': RangeValidator(1, 10),\n            'description': TypeValidator(str)\n        }\n\n    def set_title(self, title: str) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6eCardTitle\"\"\"\n        self._validators['title'].validate(title)\n        self._title = title\n        return self\n\n    def set_rating(self, rating: float, max_rating: float = 5.0) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6e\u8bc4\u5206\"\"\"\n        self._validators['rating'].validate(rating)\n        self._validators['max_rating'].validate(max_rating)\n\n        if rating &gt; max_rating:\n            raise ValueError(f\"\u8bc4\u5206 ({rating}) \u4e0d\u80fd\u8d85\u8fc7\u6700\u5927\u503c ({max_rating})\")\n\n        self._rating = rating\n        self._max_rating = max_rating\n        return self\n\n    def set_description(self, description: str) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6e\u63cf\u8ff0\u6587\u5b57\"\"\"\n        self._validators['description'].validate(description)\n        self._description = description\n        return self\n\n    def set_show_stars(self, show: bool) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u661f\u5f62\u56fe\u6807\"\"\"\n        self._show_stars = show\n        return self\n\n    def set_color_scheme(self, scheme: str) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6e\u989c\u8272\u65b9\u6848\"\"\"\n        allowed_schemes = ['default', 'gold', 'blue', 'green', 'red']\n        if scheme not in allowed_schemes:\n            raise ValueError(f\"\u989c\u8272\u65b9\u6848\u5fc5\u987b\u662f: {allowed_schemes}\")\n        self._color_scheme = scheme\n        return self\n\n    def render(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u8bc4\u5206Card\"\"\"\n        # \u83b7\u53d6\u6837\u5f0f\n        styles = self._get_card_styles()\n        styles.update(self._custom_styles)\n        style_attr = self._generate_style_string(styles)\n\n        # \u751f\u6210\u5176\u4ed6\u5c5e\u6027\n        css_classes = ['rating-card'] + self._css_classes\n        class_attr = f'class=\"{\" \".join(css_classes)}\"'\n        id_attr = f'id=\"{self._id}\"' if self._id else ''\n\n        attributes = ' '.join(filter(None, [class_attr, id_attr, f'style=\"{style_attr}\"']))\n\n        return f\"\"\"\n        &lt;div {attributes}&gt;\n            {self._render_header()}\n            {self._render_rating()}\n            {self._render_description()}\n        &lt;/div&gt;\n        \"\"\"\n\n    def _render_header(self) -&gt; str:\n        \"\"\"\u6e32\u67d3Title\"\"\"\n        if not self._title:\n            return \"\"\n\n        return f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"margin-bottom: 15px;\"&gt;\n            &lt;h3 style=\"margin: 0; font-size: 18px; color: #2c3e50; font-weight: 600;\"&gt;\n                {self._title}\n            &lt;/h3&gt;\n        &lt;/div&gt;\n&lt;/div&gt;\n        \"\"\"\n\n    def _render_rating(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u8bc4\u5206\u663e\u793a\"\"\"\n        percentage = (self._rating / self._max_rating) * 100\n\n        # \u6570\u5b57\u8bc4\u5206\n        rating_number = f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"font-size: 24px; font-weight: bold; color: {self._get_rating_color()}; margin-bottom: 5px;\"&gt;\n            {self._rating:.1f} / {self._max_rating:.0f}\n        &lt;/div&gt;\n&lt;/div&gt;\n        \"\"\"\n\n        # \u661f\u5f62\u663e\u793a\n        stars_html = \"\"\n        if self._show_stars:\n            stars_html = f\"\"\"\n            &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"margin-bottom: 8px;\"&gt;\n                {self._generate_stars()}\n            &lt;/div&gt;\n&lt;/div&gt;\n            \"\"\"\n\n        # Progress\u6761\n        progress_bar = f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"background-color: #e9ecef; border-radius: 10px; height: 8px; overflow: hidden;\"&gt;\n            &lt;div style=\"\n                background-color: {self._get_rating_color()};\n                height: 100%;\n                width: {percentage:.1f}%;\n                border-radius: 10px;\n                transition: width 0.3s ease;\n            \"&gt;&lt;/div&gt;\n&lt;/div&gt;\n        &lt;/div&gt;\n        \"\"\"\n\n        return f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"text-align: center; margin-bottom: 15px;\"&gt;\n            {rating_number}\n            {stars_html}\n            {progress_bar}\n        &lt;/div&gt;\n&lt;/div&gt;\n        \"\"\"\n\n    def _render_description(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u63cf\u8ff0\"\"\"\n        if not self._description:\n            return \"\"\n\n        return f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"\n            color: #6c757d;\n            font-size: 14px;\n            line-height: 1.5;\n            text-align: center;\n            margin-top: 10px;\n        \"&gt;\n            {self._description}\n        &lt;/div&gt;\n&lt;/div&gt;\n        \"\"\"\n\n    def _generate_stars(self) -&gt; str:\n        \"\"\"\u751f\u6210\u661f\u5f62\u56fe\u6807\"\"\"\n        full_stars = int(self._rating)\n        has_half_star = (self._rating - full_stars) &gt;= 0.5\n        empty_stars = int(self._max_rating) - full_stars - (1 if has_half_star else 0)\n\n        stars_html = \"\"\n\n        # \u6ee1\u661f\n        for _ in range(full_stars):\n            stars_html += '&lt;span style=\"color: #ffc107; font-size: 18px;\"&gt;\u2605&lt;/span&gt;'\n\n        # \u534a\u661f\n        if has_half_star:\n            stars_html += '&lt;span style=\"color: #ffc107; font-size: 18px;\"&gt;\u2606&lt;/span&gt;'\n\n        # \u7a7a\u661f\n        for _ in range(empty_stars):\n            stars_html += '&lt;span style=\"color: #dee2e6; font-size: 18px;\"&gt;\u2606&lt;/span&gt;'\n\n        return stars_html\n\n    def _get_rating_color(self) -&gt; str:\n        \"\"\"\u6839\u636e\u8bc4\u5206\u83b7\u53d6\u989c\u8272\"\"\"\n        if self._color_scheme != 'default':\n            colors = {\n                'gold': '#ffc107',\n                'blue': '#007bff',\n                'green': '#28a745',\n                'red': '#dc3545'\n            }\n            return colors.get(self._color_scheme, '#007bff')\n\n        # \u6839\u636e\u8bc4\u5206\u52a8\u6001\u8bbe\u7f6e\u989c\u8272\n        percentage = (self._rating / self._max_rating) * 100\n        if percentage &gt;= 80:\n            return '#28a745'  # \u7eff\u8272 - \u4f18\u79c0\n        elif percentage &gt;= 60:\n            return '#ffc107'  # \u9ec4\u8272 - \u826f\u597d\n        elif percentage &gt;= 40:\n            return '#fd7e14'  # \u6a59\u8272 - \u4e00\u822c\n        else:\n            return '#dc3545'  # \u7ea2\u8272 - \u8f83\u5dee\n\n    def _get_card_styles(self) -&gt; dict:\n        \"\"\"\u83b7\u53d6Card\u6837\u5f0f\"\"\"\n        return {\n            'background': 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',\n            'border': '1px solid #dee2e6',\n            'border-radius': '12px',\n            'padding': '20px',\n            'margin': '15px 0',\n            'box-shadow': '0 2px 8px rgba(0, 0, 0, 0.1)',\n            'font-family': \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n            'text-align': 'left'\n        }\n\n    def _generate_style_string(self, styles: dict) -&gt; str:\n        \"\"\"\u751f\u6210\u6837\u5f0f\u5b57\u7b26\u4e32\"\"\"\n        return '; '.join(f'{key}: {value}' for key, value in styles.items())\n\n\n# \u4f7f\u7528\u793a\u4f8b\ndef demo_rating_card():\n    \"\"\"\u8bc4\u5206Card\u4f7f\u7528\u793a\u4f8b\"\"\"\n    from email_widget import Email\n\n    email = Email(\"\u8bc4\u5206Card\u6f14\u793a\")\n\n    # \u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u8bc4\u5206Card\n\n    # Product\u8bc4\u5206\n    product_rating = RatingCardWidget()\n    product_rating.set_title(\"Product\u7528\u6237\u6ee1\u610f\u5ea6\") \\\n                  .set_rating(4.3, 5.0) \\\n                  .set_description(\"\u57fa\u4e8e1,247\u4e2a\u7528\u6237\u8bc4\u4ef7\u7684\u5e73\u5747\u5206\") \\\n                  .set_color_scheme(\"gold\")\n\n    email.add_widget(product_rating)\n\n    # Service\u8bc4\u5206\n    service_rating = RatingCardWidget()\n    service_rating.set_title(\"\u5ba2\u6237Service\u8bc4\u5206\") \\\n                  .set_rating(8.7, 10.0) \\\n                  .set_description(\"\u5ba2\u6237Service\u56e2\u961f\u672c\u6708\u8868\u73b0\") \\\n                  .set_color_scheme(\"green\") \\\n                  .set_show_stars(False)\n\n    email.add_widget(service_rating)\n\n    # \u7f51\u7ad9\u6027\u80fd\u8bc4\u5206\n    performance_rating = RatingCardWidget()\n    performance_rating.set_title(\"\u7f51\u7ad9\u6027\u80fd\u5f97\u5206\") \\\n                      .set_rating(2.1, 5.0) \\\n                      .set_description(\"\u9700\u8981\u4f18\u5316\u9875\u9762\u52a0\u8f7d\u901f\u5ea6\") \\\n                      .set_color_scheme(\"red\")\n\n    email.add_widget(performance_rating)\n\n    email.export_html(\"rating_card_demo.html\")\n    print(\"\u2705 \u8bc4\u5206Card\u6f14\u793a\u5df2\u751f\u6210\")\n\nif __name__ == \"__main__\":\n    demo_rating_card()\n</code></pre>"},{"location":"development/creating-widgets/#testing-custom-widgets","title":"\ud83e\uddea Testing Custom Widgets","text":"<p>Create corresponding test file <code>tests/test_rating_card_widget.py</code>:</p> Python<pre><code>import pytest\nfrom email_widget.widgets.rating_card_widget import RatingCardWidget\n\nclass TestRatingCardWidget:\n    \"\"\"\u8bc4\u5206Card Widget \u6d4b\u8bd5\"\"\"\n\n    def test_initialization(self):\n        \"\"\"\u6d4b\u8bd5\u521d\u59cb\u5316\"\"\"\n        widget = RatingCardWidget()\n        assert widget._title == \"\"\n        assert widget._rating == 0.0\n        assert widget._max_rating == 5.0\n        assert widget._show_stars is True\n\n    def test_set_title(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6eTitle\"\"\"\n        widget = RatingCardWidget()\n        result = widget.set_title(\"\u6d4b\u8bd5Title\")\n\n        assert result is widget  # \u6d4b\u8bd5\u94fe\u5f0f\u8c03\u7528\n        assert widget._title == \"\u6d4b\u8bd5Title\"\n\n    def test_set_rating(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u8bc4\u5206\"\"\"\n        widget = RatingCardWidget()\n        widget.set_rating(4.5, 5.0)\n\n        assert widget._rating == 4.5\n        assert widget._max_rating == 5.0\n\n    def test_invalid_rating(self):\n        \"\"\"\u6d4b\u8bd5\u65e0\u6548\u8bc4\u5206\"\"\"\n        widget = RatingCardWidget()\n\n        with pytest.raises(ValueError):\n            widget.set_rating(6.0, 5.0)  # \u8bc4\u5206\u8d85\u8fc7\u6700\u5927\u503c\n\n    def test_render_basic(self):\n        \"\"\"\u6d4b\u8bd5\u57fa\u672c\u6e32\u67d3\"\"\"\n        widget = RatingCardWidget()\n        widget.set_title(\"\u6d4b\u8bd5\u8bc4\u5206\").set_rating(4.0, 5.0)\n\n        html = widget.render()\n\n        assert \"\u6d4b\u8bd5\u8bc4\u5206\" in html\n        assert \"4.0\" in html\n        assert \"class=\" in html\n        assert \"style=\" in html\n\n    def test_render_with_description(self):\n        \"\"\"\u6d4b\u8bd5\u5305\u542b\u63cf\u8ff0\u7684\u6e32\u67d3\"\"\"\n        widget = RatingCardWidget()\n        widget.set_title(\"\u6d4b\u8bd5\").set_rating(3.5).set_description(\"\u6d4b\u8bd5\u63cf\u8ff0\")\n\n        html = widget.render()\n        assert \"\u6d4b\u8bd5\u63cf\u8ff0\" in html\n\n    def test_color_schemes(self):\n        \"\"\"\u6d4b\u8bd5\u989c\u8272\u65b9\u6848\"\"\"\n        widget = RatingCardWidget()\n\n        # \u6d4b\u8bd5\u6709\u6548\u989c\u8272\u65b9\u6848\n        for scheme in ['default', 'gold', 'blue', 'green', 'red']:\n            widget.set_color_scheme(scheme)\n            assert widget._color_scheme == scheme\n\n        # \u6d4b\u8bd5\u65e0\u6548\u989c\u8272\u65b9\u6848\n        with pytest.raises(ValueError):\n            widget.set_color_scheme(\"invalid\")\n\n    def test_stars_generation(self):\n        \"\"\"\u6d4b\u8bd5\u661f\u5f62\u751f\u6210\"\"\"\n        widget = RatingCardWidget()\n        widget.set_rating(3.5, 5.0)\n\n        # \u6d4b\u8bd5\u661f\u5f62 HTML \u751f\u6210\uff08\u9700\u8981\u5b9e\u73b0 _generate_stars \u7684\u6d4b\u8bd5\uff09\n        stars_html = widget._generate_stars()\n        assert \"\u2605\" in stars_html  # \u5e94\u8be5\u5305\u542b\u6ee1\u661f\n        assert \"\u2606\" in stars_html  # \u5e94\u8be5\u5305\u542b\u7a7a\u661f\u6216\u534a\u661f\n\n# \u8fd0\u884c\u6d4b\u8bd5\nif __name__ == \"__main__\":\n    pytest.main([__file__, \"-v\"])\n</code></pre>"},{"location":"development/creating-widgets/#best-practices","title":"\ud83d\udccb Best Practices","text":""},{"location":"development/creating-widgets/#1-follow-design-principles","title":"1. Follow Design Principles","text":"<p>Single Responsibility Principle - Each Widget should only be responsible for one specific display function - Avoid creating overly complex components</p> <p>Open/Closed Principle - Open for extension, closed for modification - Implement functionality extension through inheritance and composition</p> <p>Liskov Substitution Principle - Subclasses should be able to replace parent classes - Maintain interface consistency</p>"},{"location":"development/creating-widgets/#2-code-quality","title":"2. Code Quality","text":"<p>Input Validation Python<pre><code>def set_value(self, value: Any) -&gt; 'CustomWidget':\n    \"\"\"\u8bbe\u7f6e\u503c\u65f6\u8fdb\u884c\u9a8c\u8bc1\"\"\"\n    if not self._validate_value(value):\n        raise ValueError(f\"\u65e0\u6548\u7684\u503c: {value}\")\n    self._value = value\n    return self\n\ndef _validate_value(self, value: Any) -&gt; bool:\n    \"\"\"\u9a8c\u8bc1\u503c\u662f\u5426\u6709\u6548\"\"\"\n    # \u5b9e\u73b0\u5177\u4f53\u7684\u9a8c\u8bc1\u903b\u8f91\n    return True\n</code></pre></p> <p>Error Handling Python<pre><code>def render(self) -&gt; str:\n    \"\"\"\u5b89\u5168\u7684\u6e32\u67d3\u65b9\u6cd5\"\"\"\n    try:\n        return self._safe_render()\n    except Exception as e:\n        # \u8bb0\u5f55\u9519\u8bef\u4f46\u4e0d\u4e2d\u65ad\u6574\u4e2a\u90ae\u4ef6\u751f\u6210\n        return f'&lt;div class=\"widget-error\"&gt;Widget \u6e32\u67d3\u5931\u8d25: {str(e)}&lt;/div&gt;'\n\ndef _safe_render(self) -&gt; str:\n    \"\"\"\u5b9e\u9645\u7684\u6e32\u67d3\u903b\u8f91\"\"\"\n    # \u5b9e\u73b0\u6e32\u67d3\n    pass\n</code></pre></p> <p>Performance Optimization Python<pre><code>from functools import lru_cache\n\nclass CustomWidget(BaseWidget):\n\n    @lru_cache(maxsize=128)\n    def _get_cached_template(self, template_key: str) -&gt; str:\n        \"\"\"\u7f13\u5b58\u6a21\u677f\u5185\u5bb9\"\"\"\n        # \u907f\u514d\u91cd\u590d\u751f\u6210\u76f8\u540c\u7684\u6a21\u677f\n        return self._generate_template(template_key)\n</code></pre></p>"},{"location":"development/creating-widgets/#3-email-client-compatibility","title":"3. Email Client Compatibility","text":"<p>Use Inline Styles Python<pre><code>def render(self) -&gt; str:\n    # \u597d\uff1a\u4f7f\u7528\u5185\u8054\u6837\u5f0f\n    return '&lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"color: red; font-size: 16px;\"&gt;\u5185\u5bb9&lt;/div&gt;\n&lt;/div&gt;'\n\n    # \u907f\u514d\uff1a\u4f7f\u7528\u5916\u90e8 CSS \u7c7b\uff08\u5f88\u591a\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e0d\u652f\u6301\uff09\n    # return '&lt;div class=\"my-class\"&gt;\u5185\u5bb9&lt;/div&gt;'\n</code></pre></p> <p>Avoid Complex Layouts Python<pre><code># \u597d\uff1a\u4f7f\u7528\u8868\u683cLayout\ndef _render_layout(self) -&gt; str:\n    return '''\n    &lt;table style=\"width: 100%; border-collapse: collapse;\"&gt;\n        &lt;tr&gt;\n            &lt;td style=\"padding: 10px;\"&gt;\u5de6\u5217&lt;/td&gt;\n            &lt;td style=\"padding: 10px;\"&gt;\u53f3\u5217&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    '''\n\n# \u907f\u514d\uff1a\u4f7f\u7528 flexbox \u6216 grid\uff08\u517c\u5bb9\u6027\u5dee\uff09\n</code></pre></p> <p>Test Multiple Email Clients - Outlook 2013/2016/2019 - Gmail (web and mobile) - Apple Mail - Thunderbird</p>"},{"location":"development/creating-widgets/#4-documentation-and-examples","title":"4. Documentation and Examples","text":"<p>Write clear documentation for your Widget:</p> Python<pre><code>class CustomWidget(BaseWidget):\n    \"\"\"\n    \u81ea\u5b9a\u4e49 Widget \u7ec4\u4ef6\n\n    \u8fd9\u4e2a Widget \u7528\u4e8e\u663e\u793a...\n\n    \u793a\u4f8b\u7528\u6cd5:\n        &gt;&gt;&gt; widget = CustomWidget()\n        &gt;&gt;&gt; widget.set_title(\"Title\").set_content(\"\u5185\u5bb9\")\n        &gt;&gt;&gt; html = widget.render()\n\n    \u652f\u6301\u7684\u914d\u7f6e\u9009\u9879:\n        - title: Title\u6587\u5b57\n        - content: \u4e3b\u8981\u5185\u5bb9\n        - theme: \u4e3b\u9898\u6837\u5f0f (default, primary, success, warning, danger)\n\n    Args:\n        \u65e0\n\n    Returns:\n        CustomWidget: Widget \u5b9e\u4f8b\uff0c\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n\n    Raises:\n        ValueError: \u5f53\u53c2\u6570\u503c\u65e0\u6548\u65f6\n    \"\"\"\n</code></pre>"},{"location":"development/creating-widgets/#advanced-techniques","title":"\ud83d\ude80 Advanced Techniques","text":""},{"location":"development/creating-widgets/#1-template-system-support","title":"1. Template System Support","text":"Python<pre><code>from jinja2 import Template\n\nclass AdvancedWidget(BaseWidget):\n    \"\"\"\u652f\u6301\u6a21\u677f\u7684\u9ad8\u7ea7 Widget\"\"\"\n\n    def __init__(self):\n        super().__init__()\n        self._template = None\n        self._data = {}\n\n    def set_template(self, template_string: str) -&gt; 'AdvancedWidget':\n        \"\"\"\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u6a21\u677f\"\"\"\n        self._template = Template(template_string)\n        return self\n\n    def set_data(self, **kwargs) -&gt; 'AdvancedWidget':\n        \"\"\"\u8bbe\u7f6e\u6a21\u677fData\"\"\"\n        self._data.update(kwargs)\n        return self\n\n    def render(self) -&gt; str:\n        if self._template:\n            return self._template.render(**self._data)\n        return self._default_render()\n</code></pre>"},{"location":"development/creating-widgets/#2-responsive-design","title":"2. Responsive Design","text":"Python<pre><code>class ResponsiveWidget(BaseWidget):\n    \"\"\"\u652f\u6301Responsive\u7684 Widget\"\"\"\n\n    def render(self) -&gt; str:\n        return f'''\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"width: 100%; max-width: 600px;\"&gt;\n            &lt;style&gt;\n                @media (max-width: 600px) {{\n                    .responsive-content {{ font-size: 14px !important; }}\n                }}\n            &lt;/style&gt;\n            &lt;div class=\"responsive-content\" style=\"font-size: 16px;\"&gt;\n                {self._content}\n            &lt;/div&gt;\n&lt;/div&gt;\n        &lt;/div&gt;\n        '''\n</code></pre>"},{"location":"development/creating-widgets/#3-data-binding","title":"3. Data Binding","text":"Python<pre><code>import pandas as pd\n\nclass DataBoundWidget(BaseWidget):\n    \"\"\"\u652f\u6301Data\u7ed1\u5b9a\u7684 Widget\"\"\"\n\n    def bind_dataframe(self, df: pd.DataFrame, columns: list = None) -&gt; 'DataBoundWidget':\n        \"\"\"\u7ed1\u5b9a DataFrame Data\"\"\"\n        self._dataframe = df\n        self._columns = columns or df.columns.tolist()\n        return self\n\n    def render(self) -&gt; str:\n        if hasattr(self, '_dataframe'):\n            return self._render_from_dataframe()\n        return self._render_static()\n</code></pre>"},{"location":"development/creating-widgets/#publishing-custom-widgets","title":"\ud83d\udce6 Publishing Custom Widgets","text":""},{"location":"development/creating-widgets/#1-code-organization","title":"1. Code Organization","text":"Text Only<pre><code>email_widget/\n\u251c\u2500\u2500 widgets/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 custom_widget.py          # Your Widget\n\u2502   \u2514\u2500\u2500 rating_card_widget.py     # Rating Card Widget\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 test_widgets/\n\u2502   \u2502   \u251c\u2500\u2500 test_custom_widget.py\n\u2502   \u2502   \u2514\u2500\u2500 test_rating_card_widget.py\n\u2514\u2500\u2500 docs/\n    \u2514\u2500\u2500 widgets/\n        \u251c\u2500\u2500 custom_widget.md\n        \u2514\u2500\u2500 rating_card_widget.md\n</code></pre>"},{"location":"development/creating-widgets/#2-register-widget","title":"2. Register Widget","text":"<p>Register in <code>email_widget/widgets/__init__.py</code>:</p> Python<pre><code>from .custom_widget import CustomWidget\nfrom .rating_card_widget import RatingCardWidget\n\n__all__ = [\n    'CustomWidget',\n    'RatingCardWidget',\n    # ... \u5176\u4ed6 Widget\n]\n</code></pre>"},{"location":"development/creating-widgets/#3-add-to-convenience-methods","title":"3. Add to Convenience Methods","text":"<p>Add convenience methods to <code>Email</code> class:</p> Python<pre><code>class Email:\n    def add_rating_card(self, title: str, rating: float, max_rating: float = 5.0, \n                       description: str = \"\") -&gt; 'Email':\n        \"\"\"\u6dfb\u52a0\u8bc4\u5206Card\u7684\u4fbf\u6377\u65b9\u6cd5\"\"\"\n        widget = RatingCardWidget()\n        widget.set_title(title).set_rating(rating, max_rating)\n        if description:\n            widget.set_description(description)\n        return self.add_widget(widget)\n</code></pre>"},{"location":"development/creating-widgets/#summary","title":"\ud83c\udf89 Summary","text":"<p>Key points for creating custom Widgets:</p> <ol> <li>Inherit BaseWidget - Follow architectural conventions</li> <li>Implement render method - Core rendering logic</li> <li>Support method chaining - Improve API usability</li> <li>Input validation - Ensure data safety</li> <li>Email compatibility - Use inline styles</li> <li>Write tests - Ensure code quality</li> <li>Complete documentation - Help other developers</li> </ol> <p>Now you have mastered the complete process of creating custom Widgets. Start creating your own components! \ud83d\ude80</p>"},{"location":"development/release/","title":"Release Process","text":"<p>This guide details the version management strategy, release process, and best practices for the EmailWidget project.</p>"},{"location":"development/release/#version-management-strategy","title":"\ud83c\udfaf Version Management Strategy","text":""},{"location":"development/release/#semantic-versioning","title":"Semantic Versioning","text":"<p>EmailWidget follows Semantic Versioning 2.0.0 specification:</p> Text Only<pre><code>MAJOR.MINOR.PATCH\n</code></pre> <p>Version increment rules: - MAJOR - Incompatible API changes - MINOR - Backward-compatible functionality additions - PATCH - Backward-compatible bug fixes</p>"},{"location":"development/release/#version-examples","title":"Version Examples","text":"Version Type Description 1.0.0 Major First stable release 1.1.0 Minor Added ChartWidget component 1.1.1 Patch Fixed TableWidget styling issue 2.0.0 Major Refactored Widget base class, API incompatible 2.1.0-alpha.1 Pre-release Alpha version 2.1.0-beta.1 Pre-release Beta version 2.1.0-rc.1 Pre-release Release Candidate"},{"location":"development/release/#pre-release-versions","title":"Pre-release Versions","text":"<p>For major updates, use pre-release versions for testing:</p> <ul> <li>Alpha (\u03b1) - Internal testing version, incomplete features</li> <li>Beta (\u03b2) - Public testing version, features mostly complete</li> <li>RC (Release Candidate) - Release candidate version, close to final version</li> </ul>"},{"location":"development/release/#branching-strategy","title":"\ud83c\udf1f Branching Strategy","text":""},{"location":"development/release/#git-flow-workflow","title":"Git Flow Workflow","text":"Text Only<pre><code>main (main branch)\n\u251c\u2500\u2500 develop (development branch)\n\u2502   \u251c\u2500\u2500 feature/new-widget (feature branch)\n\u2502   \u251c\u2500\u2500 feature/chart-enhancement (feature branch)\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 release/v1.2.0 (release branch)\n\u251c\u2500\u2500 hotfix/urgent-bug-fix (hotfix branch)\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"development/release/#branch-descriptions","title":"Branch Descriptions","text":"<p>main branch - Always maintains stable state - Only accepts merges from release and hotfix branches - Each merge corresponds to a release version - Uses tags to mark versions</p> <p>develop branch - Development branch, integrates latest features - Target for feature branch merges - Regularly merged to release branch</p> <p>feature/* branches - Feature development branches - Created from develop branch - Merged back to develop branch when complete</p> <p>release/* branches - Release preparation branches - Created from develop branch - Only bug fixes and release preparation - Merged to main and develop when complete</p> <p>hotfix/* branches - Emergency fix branches - Created from main branch - Merged to main and develop after fixes</p>"},{"location":"development/release/#release-process_1","title":"\ud83d\ude80 Release Process","text":""},{"location":"development/release/#1-pre-release-preparation","title":"1. Pre-release Preparation","text":""},{"location":"development/release/#check-code-quality","title":"Check Code Quality","text":"PowerShell<pre><code># Run all tests\npython -m pytest tests/ -v\n\n# Check code coverage\npython -m pytest --cov=email_widget --cov-fail-under=90\n\n# Code style checks\npython -m pylint email_widget/\npython -m black --check email_widget/\npython -m isort --check-only email_widget/\n\n# Type checking\npython -m mypy email_widget/\n</code></pre>"},{"location":"development/release/#check-dependencies","title":"Check Dependencies","text":"PowerShell<pre><code># Check dependency security\npip audit\n\n# Check outdated dependencies\npip list --outdated\n\n# Update dependency versions\npip-review --local --interactive\n</code></pre>"},{"location":"development/release/#update-documentation","title":"Update Documentation","text":"<ul> <li>Ensure API documentation is up-to-date</li> <li>Update example code</li> <li>Check README.md</li> <li>Update changelog</li> </ul>"},{"location":"development/release/#2-create-release-branch","title":"2. Create Release Branch","text":"PowerShell<pre><code># Create release branch from develop\ngit checkout develop\ngit pull origin develop\ngit checkout -b release/v1.2.0\n\n# Push release branch\ngit push -u origin release/v1.2.0\n</code></pre>"},{"location":"development/release/#3-version-number-updates","title":"3. Version Number Updates","text":""},{"location":"development/release/#update-pyprojecttoml","title":"Update pyproject.toml","text":"TOML<pre><code>[project]\nname = \"email-widget\"\nversion = \"1.2.0\"\ndescription = \"Create beautiful HTML email reports with Python\"\n# ... other configurations\n</code></pre>"},{"location":"development/release/#update-initpy","title":"Update init.py","text":"Python<pre><code># email_widget/__init__.py\n__version__ = \"1.2.0\"\n__author__ = \"EmailWidget Team\"\n__email__ = \"support@emailwidget.com\"\n\n# ... \u5176\u4ed6\u5bfc\u5165\n</code></pre>"},{"location":"development/release/#update-changelogmd","title":"Update CHANGELOG.md","text":"Markdown<pre><code># Changelog\n\n## [1.2.0] - 2024-01-15\n\n### Added\n- New ChartWidget component for chart display\n- Dark theme support\n- Mobile responsive layout\n\n### Improved\n- Optimized TableWidget rendering performance\n- Improved caching mechanism, 50% faster rendering\n- Enhanced error handling and logging\n\n### Fixed\n- Fixed ProgressWidget display issue in Outlook\n- Resolved Chinese character encoding issue\n- Fixed memory leak issue\n\n### Known Issues\n- Charts may display abnormally in some older Outlook versions\n\n## [1.1.1] - 2024-01-01\n\n### Fixed\n- Fixed TableWidget border styling issue\n- Resolved Email export path issue\n</code></pre>"},{"location":"development/release/#4-release-testing","title":"4. Release Testing","text":""},{"location":"development/release/#build-testing","title":"Build Testing","text":"PowerShell<pre><code># Clean build directories\nif (Test-Path dist) { Remove-Item -Recurse -Force dist }\nif (Test-Path build) { Remove-Item -Recurse -Force build }\n\n# Build distribution packages\npython -m build\n\n# Check build results\npython -m twine check dist/*\n</code></pre>"},{"location":"development/release/#installation-testing","title":"Installation Testing","text":"PowerShell<pre><code># Test installation in virtual environment\npython -m venv test_env\ntest_env\\Scripts\\Activate.ps1\n\n# Install from build package\npip install dist/email_widget-1.2.0-py3-none-any.whl\n\n# Run basic test\npython -c \"from email_widget import Email; print('Installation successful')\"\n\n# Clean up test environment\ndeactivate\nRemove-Item -Recurse -Force test_env\n</code></pre>"},{"location":"development/release/#integration-testing","title":"Integration Testing","text":"PowerShell<pre><code># Run complete test suite\npython -m pytest tests/ -v --tb=short\n\n# Run performance tests\npython -m pytest tests/performance/ -v\n</code></pre>"},{"location":"development/release/#5-code-review-and-approval","title":"5. Code Review and Approval","text":""},{"location":"development/release/#create-pull-request","title":"Create Pull Request","text":"<ul> <li>From release/v1.2.0 to main branch</li> <li>Detailed description of release changes</li> <li>Attach test reports and performance benchmarks</li> </ul>"},{"location":"development/release/#review-checklist","title":"Review Checklist","text":"<ul> <li> All tests pass</li> <li> Code coverage \u2265 90%</li> <li> Documentation updated</li> <li> Changelog updated</li> <li> Version number correctly updated</li> <li> Build package tests pass</li> <li> Performance tests pass</li> <li> Security scans pass</li> </ul>"},{"location":"development/release/#6-official-release","title":"6. Official Release","text":""},{"location":"development/release/#merge-release-branch","title":"Merge Release Branch","text":"PowerShell<pre><code># Merge to main branch\ngit checkout main\ngit pull origin main\ngit merge --no-ff release/v1.2.0\ngit push origin main\n\n# Merge back to develop branch\ngit checkout develop\ngit pull origin develop\ngit merge --no-ff release/v1.2.0\ngit push origin develop\n\n# Delete release branch\ngit branch -d release/v1.2.0\ngit push origin --delete release/v1.2.0\n</code></pre>"},{"location":"development/release/#create-git-tag","title":"Create Git Tag","text":"PowerShell<pre><code># Create annotated tag\ngit tag -a v1.2.0 -m \"Release version 1.2.0\n\nNew Features:\n- ChartWidget component\n- Dark theme support\n- Mobile responsive layout\n\nPerformance Improvements:\n- 50% faster rendering\n- Optimized memory usage\n\nBug Fixes:\n- Fixed Outlook compatibility issues\n- Resolved Chinese encoding issues\"\n\n# Push tag\ngit push origin v1.2.0\n</code></pre>"},{"location":"development/release/#publish-to-pypi","title":"Publish to PyPI","text":"PowerShell<pre><code># Publish to test PyPI (optional)\npython -m twine upload --repository testpypi dist/*\n\n# Publish to official PyPI\npython -m twine upload dist/*\n</code></pre>"},{"location":"development/release/#github-release","title":"GitHub Release","text":"<ol> <li>Visit GitHub repository's Releases page</li> <li>Click \"Create a new release\"</li> <li>Select the newly created tag v1.2.0</li> <li>Fill in release title and description</li> <li>Upload built distribution packages</li> <li>Publish Release</li> </ol>"},{"location":"development/release/#7-post-release-work","title":"7. Post-release Work","text":""},{"location":"development/release/#verify-release","title":"Verify Release","text":"PowerShell<pre><code># Install from PyPI to verify\npip install --upgrade email-widget\n\n# Check version\npython -c \"import email_widget; print(email_widget.__version__)\"\n</code></pre>"},{"location":"development/release/#update-documentation-website","title":"Update Documentation Website","text":"PowerShell<pre><code># Build and deploy documentation\nmkdocs gh-deploy --force\n</code></pre>"},{"location":"development/release/#notify-users","title":"Notify Users","text":"<ul> <li>Send release announcement email</li> <li>Update project homepage</li> <li>Post on social media</li> <li>Notify key users and partners</li> </ul>"},{"location":"development/release/#hotfix-process","title":"\ud83d\udd25 Hotfix Process","text":""},{"location":"development/release/#emergency-bug-fixes","title":"Emergency Bug Fixes","text":"<p>When serious issues occur in production, use the hotfix process:</p> PowerShell<pre><code># 1. Create hotfix branch from main\ngit checkout main\ngit pull origin main\ngit checkout -b hotfix/urgent-security-fix\n\n# 2. Fix the issue\n# ... write fix code ...\n\n# 3. Update version number (patch +1)\n# e.g., from 1.2.0 to 1.2.1\n\n# 4. Run tests\npython -m pytest tests/ -v\n\n# 5. Commit fix\ngit add .\ngit commit -m \"hotfix: fix security vulnerability CVE-2024-0001\"\n\n# 6. Merge to main and develop\ngit checkout main\ngit merge --no-ff hotfix/urgent-security-fix\ngit push origin main\n\ngit checkout develop\ngit merge --no-ff hotfix/urgent-security-fix\ngit push origin develop\n\n# 7. Create tag and release\ngit tag -a v1.2.1 -m \"Hotfix release 1.2.1 - Security fix\"\ngit push origin v1.2.1\n\n# 8. Clean up branch\ngit branch -d hotfix/urgent-security-fix\n</code></pre>"},{"location":"development/release/#release-metrics","title":"\ud83d\udcca Release Metrics","text":""},{"location":"development/release/#key-metrics-monitoring","title":"Key Metrics Monitoring","text":"<p>Release Frequency - Major versions: 6-12 months - Minor versions: 1-2 months - Patch versions: As needed</p> <p>Quality Metrics - Test coverage \u2265 90% - Code quality score \u2265 8.0/10 - Known bugs \u2264 5</p> <p>Performance Metrics - Rendering speed regression \u2264 5% - Memory usage growth \u2264 10% - Package size growth \u2264 20%</p>"},{"location":"development/release/#post-release-monitoring","title":"Post-release Monitoring","text":"Python<pre><code># scripts/monitor_release.py\nimport requests\nimport time\nfrom datetime import datetime\n\ndef check_pypi_availability(package_name, version):\n    \"\"\"\u68c0\u67e5 PyPI \u5305\u662f\u5426\u53ef\u7528\"\"\"\n    url = f\"https://pypi.org/pypi/{package_name}/{version}/json\"\n\n    try:\n        response = requests.get(url)\n        if response.status_code == 200:\n            print(f\"\u2705 {package_name} v{version} \u5728 PyPI \u4e0a\u53ef\u7528\")\n            return True\n        else:\n            print(f\"\u274c {package_name} v{version} \u5728 PyPI \u4e0a\u4e0d\u53ef\u7528\")\n            return False\n    except Exception as e:\n        print(f\"\u274c \u68c0\u67e5 PyPI \u65f6\u51fa\u9519: {e}\")\n        return False\n\ndef check_installation(package_name, version):\n    \"\"\"\u68c0\u67e5\u5305\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u5b89\u88c5\"\"\"\n    import subprocess\n\n    try:\n        # \u521b\u5efa\u4e34\u65f6\u865a\u62df\u73af\u5883\n        subprocess.run([\"python\", \"-m\", \"venv\", \"temp_env\"], check=True)\n\n        # \u6fc0\u6d3b\u73af\u5883\u5e76\u5b89\u88c5\u5305\n        if os.name == 'nt':  # Windows\n            activate_cmd = r\"temp_env\\Scripts\\Activate.ps1\"\n            install_cmd = f\"temp_env\\\\Scripts\\\\pip install {package_name}=={version}\"\n        else:  # Unix/Linux\n            activate_cmd = \"source temp_env/bin/activate\"\n            install_cmd = f\"temp_env/bin/pip install {package_name}=={version}\"\n\n        subprocess.run(install_cmd, shell=True, check=True)\n        print(f\"\u2705 {package_name} v{version} \u5b89\u88c5\u6210\u529f\")\n\n        # \u6e05\u7406\n        subprocess.run([\"rm\", \"-rf\", \"temp_env\"], check=True)\n        return True\n\n    except subprocess.CalledProcessError as e:\n        print(f\"\u274c \u5b89\u88c5\u5931\u8d25: {e}\")\n        return False\n\ndef monitor_release(package_name, version, duration_minutes=30):\n    \"\"\"\u76d1\u63a7\u53d1\u5e03\u72b6\u6001\"\"\"\n    print(f\"\u5f00\u59cb\u76d1\u63a7 {package_name} v{version} \u7684\u53d1\u5e03\u72b6\u6001...\")\n    start_time = time.time()\n\n    while time.time() - start_time &lt; duration_minutes * 60:\n        if check_pypi_availability(package_name, version):\n            if check_installation(package_name, version):\n                print(f\"\ud83c\udf89 {package_name} v{version} \u53d1\u5e03\u6210\u529f!\")\n                return True\n\n        print(f\"\u23f3 \u7b49\u5f85 30 \u79d2\u540e\u91cd\u8bd5...\")\n        time.sleep(30)\n\n    print(f\"\u23f0 \u76d1\u63a7\u8d85\u65f6 ({duration_minutes} \u5206\u949f)\")\n    return False\n\nif __name__ == \"__main__\":\n    monitor_release(\"email-widget\", \"1.2.0\")\n</code></pre>"},{"location":"development/release/#release-best-practices","title":"\ud83c\udfaf Release Best Practices","text":""},{"location":"development/release/#pre-release-checklist","title":"Pre-release Checklist","text":"<p>Code Quality - [ ] All unit tests pass - [ ] Integration tests pass - [ ] End-to-end tests pass - [ ] Code coverage meets standards - [ ] Static code analysis passes - [ ] Security scan shows no high-risk vulnerabilities</p> <p>Documentation Updates - [ ] API documentation up-to-date - [ ] User guide updated - [ ] Example code valid - [ ] Changelog complete - [ ] README.md updated</p> <p>Version Management - [ ] Version number follows semantic versioning - [ ] Tag naming correct - [ ] Branch merges without conflicts - [ ] Build packages complete</p> <p>Release Preparation - [ ] Dependency versions locked - [ ] Performance benchmark tests - [ ] Compatibility tests - [ ] Release notes prepared</p>"},{"location":"development/release/#rollback-plan","title":"Rollback Plan","text":"<p>If serious issues are discovered after release, rollback following these steps:</p> PowerShell<pre><code># 1. Emergency withdrawal from PyPI (if possible)\n# Contact PyPI administrators or use yank feature\n\n# 2. Create hotfix version\ngit checkout main\ngit checkout -b hotfix/rollback-v1.2.0\n\n# 3. Rollback problematic changes\ngit revert &lt;hash-of-problematic-commit&gt;\n\n# 4. Release rollback version\n# Update version number to 1.2.1\n# Follow normal release process\n\n# 5. Notify users to upgrade\necho \"Send urgent upgrade notification\"\n</code></pre>"},{"location":"development/release/#release-support","title":"\ud83d\udcde Release Support","text":""},{"location":"development/release/#release-team-responsibilities","title":"Release Team Responsibilities","text":"<p>Release Manager - Coordinate entire release process - Ensure timeline adherence - Communicate release status</p> <p>Quality Assurance - Execute test plans - Verify feature completeness - Confirm performance metrics</p> <p>Documentation Team - Update user documentation - Prepare release notes - Maintain example code</p> <p>DevOps Team - Monitor release process - Handle infrastructure issues - Execute rollback plans</p>"},{"location":"development/release/#release-communication","title":"Release Communication","text":"<p>Internal Communication - One week before release: Release announcement - Release day: Release progress updates - After release: Release summary report</p> <p>External Communication - Release announcement email - GitHub Release Notes - Community forum announcements - Social media posts</p>"},{"location":"development/release/#summary","title":"\ud83c\udf89 Summary","text":"<p>A comprehensive release process ensures:</p> <ol> <li>Quality Assurance - Multi-layer testing and validation</li> <li>Risk Control - Complete rollback plans</li> <li>User Experience - Smooth upgrade process</li> <li>Team Collaboration - Clear responsibility division</li> </ol> <p>Following this release guide, you will be able to safely and efficiently release new versions of EmailWidget, providing users with stable and reliable functionality. \ud83d\ude80\u2728</p>"},{"location":"development/setup/","title":"Development Environment Setup","text":"<p>This guide will help you set up a development environment for EmailWidget on Windows 10 64-bit system.</p>"},{"location":"development/setup/#environment-requirements","title":"\ud83c\udfaf Environment Requirements","text":""},{"location":"development/setup/#system-requirements","title":"System Requirements","text":"<ul> <li>Operating System: Windows 10 64-bit (version 1903 or higher)</li> <li>Memory: At least 4GB RAM (8GB+ recommended)</li> <li>Storage: At least 2GB available space</li> <li>Network: Stable internet connection (for downloading dependencies)</li> </ul>"},{"location":"development/setup/#required-software","title":"Required Software","text":"Software Version Requirement Purpose Python 3.10+ Core development language Git Latest version Version control Code Editor - Code editing (VS Code or PyCharm recommended)"},{"location":"development/setup/#installing-base-software","title":"\ud83d\udce5 Installing Base Software","text":""},{"location":"development/setup/#1-installing-python-310","title":"1. Installing Python 3.10+","text":""},{"location":"development/setup/#method-1-download-from-official-website-recommended","title":"Method 1: Download from Official Website (Recommended)","text":"<ol> <li>Visit Python Official Website</li> <li>Download Python 3.10 or higher Windows x86-64 installer</li> <li>Run the installer and make sure to check:</li> <li>\u2705 \"Add Python to PATH\"</li> <li>\u2705 \"Install pip\"</li> </ol>"},{"location":"development/setup/#method-2-using-chocolatey","title":"Method 2: Using Chocolatey","text":"PowerShell<pre><code># Run PowerShell as Administrator\n# First install Chocolatey (if not already installed)\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n\n# Install Python\nchoco install python3 -y\n</code></pre>"},{"location":"development/setup/#verify-installation","title":"Verify Installation","text":"PowerShell<pre><code># Check Python version\npython --version\n# Should display: Python 3.10.x or higher\n\n# Check pip version\npip --version\n# Should display pip version information\n</code></pre>"},{"location":"development/setup/#2-installing-git","title":"2. Installing Git","text":""},{"location":"development/setup/#method-1-download-from-official-website","title":"Method 1: Download from Official Website","text":"<ol> <li>Visit Git Official Website</li> <li>Download 64-bit Windows version</li> <li>Run the installer with default settings</li> </ol>"},{"location":"development/setup/#method-2-using-chocolatey_1","title":"Method 2: Using Chocolatey","text":"PowerShell<pre><code>choco install git -y\n</code></pre>"},{"location":"development/setup/#verify-installation_1","title":"Verify Installation","text":"PowerShell<pre><code>git --version\n# Should display: git version x.x.x\n</code></pre>"},{"location":"development/setup/#3-choose-code-editor","title":"3. Choose Code Editor","text":""},{"location":"development/setup/#recommended-options","title":"Recommended Options","text":"<p>Visual Studio Code (Recommended) - Free, lightweight, rich plugin ecosystem - Download Link</p> PowerShell<pre><code># Install using Chocolatey\nchoco install vscode -y\n</code></pre> <p>PyCharm Community Edition - Professional Python IDE - Download Link</p> PowerShell<pre><code># Install using Chocolatey\nchoco install pycharm-community -y\n</code></pre>"},{"location":"development/setup/#project-environment-setup","title":"\ud83d\udd27 Project Environment Setup","text":""},{"location":"development/setup/#1-clone-project","title":"1. Clone Project","text":"PowerShell<pre><code># Create development directory\nmkdir C:\\Dev\ncd C:\\Dev\n\n# Clone project (replace with actual repository URL)\ngit clone https://github.com/your-username/EmailWidget.git\ncd EmailWidget\n</code></pre>"},{"location":"development/setup/#2-create-virtual-environment","title":"2. Create Virtual Environment","text":""},{"location":"development/setup/#using-venv-python-built-in","title":"Using venv (Python built-in)","text":"PowerShell<pre><code># Create virtual environment\npython -m venv venv\n\n# Activate virtual environment\n.\\venv\\Scripts\\Activate.ps1\n\n# If execution policy restrictions, run first:\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\n</code></pre>"},{"location":"development/setup/#using-conda-if-anaconda-is-installed","title":"Using conda (if Anaconda is installed)","text":"PowerShell<pre><code># Create environment\nconda create -n emailwidget python=3.10 -y\n\n# Activate environment\nconda activate emailwidget\n</code></pre>"},{"location":"development/setup/#3-install-project-dependencies","title":"3. Install Project Dependencies","text":"PowerShell<pre><code># Make sure virtual environment is activated\n# Upgrade pip to latest version\npython -m pip install --upgrade pip\n\n# Install project dependencies\npip install -e .\n\n# Install development dependencies\npip install -r requirements-dev.txt\n\n# Or if using pyproject.toml\npip install -e .[dev]\n</code></pre>"},{"location":"development/setup/#4-verify-installation","title":"4. Verify Installation","text":"PowerShell<pre><code># Run tests to ensure environment is working\npython -m pytest tests/ -v\n\n# Check code quality tools\npython -m pylint email_widget/\n\n# Run example code\npython demo/example.py\n</code></pre>"},{"location":"development/setup/#ide-configuration","title":"\ud83d\udee0\ufe0f IDE Configuration","text":""},{"location":"development/setup/#visual-studio-code-configuration","title":"Visual Studio Code Configuration","text":""},{"location":"development/setup/#1-install-recommended-extensions","title":"1. Install Recommended Extensions","text":"JSON<pre><code>{\n  \"recommendations\": [\n    \"ms-python.python\",           // Python support\n    \"ms-python.pylint\",           // Code linting\n    \"ms-python.black-formatter\",  // Code formatting\n    \"ms-python.isort\",            // Import sorting\n    \"ms-toolsai.jupyter\",         // Jupyter support\n    \"redhat.vscode-yaml\",         // YAML support\n    \"yzhang.markdown-all-in-one\", // Markdown support\n    \"ms-vscode.test-adapter-converter\" // Test adapter\n  ]\n}\n</code></pre>"},{"location":"development/setup/#2-workspace-configuration-vscodesettingsjson","title":"2. Workspace Configuration (.vscode/settings.json)","text":"JSON<pre><code>{\n    \"python.defaultInterpreterPath\": \"./venv/Scripts/python.exe\",\n    \"python.testing.pytestEnabled\": true,\n    \"python.testing.pytestArgs\": [\n        \"tests\"\n    ],\n    \"python.linting.enabled\": true,\n    \"python.linting.pylintEnabled\": true,\n    \"python.formatting.provider\": \"black\",\n    \"python.formatting.blackArgs\": [\n        \"--line-length=88\"\n    ],\n    \"python.sortImports.args\": [\n        \"--profile\",\n        \"black\"\n    ],\n    \"editor.formatOnSave\": true,\n    \"editor.codeActionsOnSave\": {\n        \"source.organizeImports\": true\n    },\n    \"files.associations\": {\n        \"*.md\": \"markdown\"\n    }\n}\n</code></pre>"},{"location":"development/setup/#3-task-configuration-vscodetasksjson","title":"3. Task Configuration (.vscode/tasks.json)","text":"JSON<pre><code>{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"Run Tests\",\n            \"type\": \"shell\",\n            \"command\": \"${workspaceFolder}/venv/Scripts/python.exe\",\n            \"args\": [\"-m\", \"pytest\", \"tests/\", \"-v\"],\n            \"group\": \"test\",\n            \"presentation\": {\n                \"echo\": true,\n                \"reveal\": \"always\",\n                \"focus\": false,\n                \"panel\": \"shared\"\n            }\n        },\n        {\n            \"label\": \"Code Lint\",\n            \"type\": \"shell\",\n            \"command\": \"${workspaceFolder}/venv/Scripts/python.exe\",\n            \"args\": [\"-m\", \"pylint\", \"email_widget/\"],\n            \"group\": \"build\",\n            \"presentation\": {\n                \"echo\": true,\n                \"reveal\": \"always\",\n                \"focus\": false,\n                \"panel\": \"shared\"\n            }\n        },\n        {\n            \"label\": \"Format Code\",\n            \"type\": \"shell\",\n            \"command\": \"${workspaceFolder}/venv/Scripts/python.exe\",\n            \"args\": [\"-m\", \"black\", \"email_widget/\", \"tests/\"],\n            \"group\": \"build\"\n        }\n    ]\n}\n</code></pre>"},{"location":"development/setup/#pycharm-configuration","title":"PyCharm Configuration","text":""},{"location":"development/setup/#1-set-interpreter","title":"1. Set Interpreter","text":"<ol> <li>Open File \u2192 Settings \u2192 Project \u2192 Python Interpreter</li> <li>Click gear icon \u2192 Add</li> <li>Select Existing environment</li> <li>Choose <code>EmailWidget\\venv\\Scripts\\python.exe</code></li> </ol>"},{"location":"development/setup/#2-configure-code-quality-tools","title":"2. Configure Code Quality Tools","text":"<ol> <li>File \u2192 Settings \u2192 Tools \u2192 External Tools</li> <li>Add the following tools:</li> </ol> <p>Black Formatting - Name: Black Format - Program: <code>$ProjectFileDir$\\venv\\Scripts\\python.exe</code> - Arguments: <code>-m black $FilePath$</code> - Working directory: <code>$ProjectFileDir$</code></p> <p>Pylint Check - Name: Pylint Check - Program: <code>$ProjectFileDir$\\venv\\Scripts\\python.exe</code> - Arguments: <code>-m pylint $FilePath$</code> - Working directory: <code>$ProjectFileDir$</code></p>"},{"location":"development/setup/#verify-development-environment","title":"\ud83e\uddea Verify Development Environment","text":""},{"location":"development/setup/#run-complete-test-suite","title":"Run Complete Test Suite","text":"PowerShell<pre><code># Activate virtual environment\n.\\venv\\Scripts\\Activate.ps1\n\n# Run all tests\npython -m pytest tests/ -v --cov=email_widget\n\n# Run specific tests\npython -m pytest tests/test_email.py -v\n\n# Run code quality checks\npython -m pylint email_widget/\npython -m black --check email_widget/\npython -m isort --check-only email_widget/\n</code></pre>"},{"location":"development/setup/#create-test-report","title":"Create Test Report","text":"PowerShell<pre><code># Create a simple test report\npython -c \"\nfrom email_widget import Email\nemail = Email('Test Report')\nemail.add_title('Environment Verification Successful')\nemail.add_text('EmailWidget development environment has been configured correctly!')\nemail.export_html('test_output.html')\nprint('\u2705 Test report generated: test_output.html')\n\"\n</code></pre>"},{"location":"development/setup/#common-issue-resolution","title":"\ud83d\udd0d Common Issue Resolution","text":""},{"location":"development/setup/#python-related-issues","title":"Python-related Issues","text":"<p>Q: \"python is not recognized as an internal or external command\" PowerShell<pre><code># Check PATH environment variable\necho $env:PATH\n# Should include Python installation path\n\n# Manually add to PATH (temporary)\n$env:PATH += \";C:\\Users\\YourUsername\\AppData\\Local\\Programs\\Python\\Python310\"\n</code></pre></p> <p>Q: Slow pip installation PowerShell<pre><code># Use domestic mirror source\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple/ package_name\n\n# Or configure permanent mirror source\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple/\n</code></pre></p>"},{"location":"development/setup/#virtual-environment-issues","title":"Virtual Environment Issues","text":"<p>Q: Cannot activate virtual environment PowerShell<pre><code># Check execution policy\nGet-ExecutionPolicy\n\n# Set execution policy\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\n\n# Then reactivate\n.\\venv\\Scripts\\Activate.ps1\n</code></pre></p> <p>Q: Virtual environment path issues PowerShell<pre><code># Make sure in project root directory\npwd\n# Should show EmailWidget project directory\n\n# Recreate virtual environment\nRemove-Item -Recurse -Force venv\npython -m venv venv\n</code></pre></p>"},{"location":"development/setup/#git-related-issues","title":"Git-related Issues","text":"<p>Q: Git clone failure PowerShell<pre><code># Check network connection\nping github.com\n\n# Use HTTPS instead of SSH\ngit clone https://github.com/user/repo.git\n\n# Configure proxy (if needed)\ngit config --global http.proxy http://proxy-server:port\n</code></pre></p>"},{"location":"development/setup/#ide-related-issues","title":"IDE-related Issues","text":"<p>Q: VS Code cannot recognize Python interpreter 1. Press <code>Ctrl+Shift+P</code> to open command palette 2. Type \"Python: Select Interpreter\" 3. Select Python from project virtual environment</p> <p>Q: Code formatting not working 1. Make sure Black extension is installed 2. Check settings.json configuration 3. Manually run formatting: <code>Ctrl+Shift+I</code></p>"},{"location":"development/setup/#performance-optimization-suggestions","title":"\ud83d\udcca Performance Optimization Suggestions","text":""},{"location":"development/setup/#improve-development-efficiency","title":"Improve Development Efficiency","text":"<ol> <li>SSD Hard Drive - Significantly improves file I/O speed</li> <li>Sufficient Memory - At least 8GB, 16GB recommended</li> <li>Disable Real-time Antivirus Scanning - For development directories</li> <li>Use Windows Terminal - Better command line experience</li> </ol>"},{"location":"development/setup/#optimize-python-environment","title":"Optimize Python Environment","text":"PowerShell<pre><code># Upgrade pip to latest version\npython -m pip install --upgrade pip\n\n# Use faster package manager\npip install uv\n# Then use uv instead of pip\nuv pip install package_name\n</code></pre>"},{"location":"development/setup/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<p>After completing environment setup, you can:</p> <ol> <li>\ud83d\udcd6 Read Contributing Guide - Learn contribution process</li> <li>\ud83e\udde9 Learn Creating Widgets - Develop custom components</li> <li>\ud83e\uddea Check Testing Guide - Write and run tests</li> <li>\ud83d\udd0d Browse GitHub Issues - Find interesting tasks</li> <li>\ud83d\udcbb Start Coding - Create your first contribution!</li> </ol> <p>Congratulations! Your EmailWidget development environment is now set up. Happy coding! \ud83c\udf89</p>"},{"location":"development/testing/","title":"Testing Guide","text":"<p>This guide introduces the testing strategy, framework usage, and best practices for the EmailWidget project to help ensure code quality and stability.</p>"},{"location":"development/testing/#testing-strategy","title":"\ud83c\udfaf Testing Strategy","text":""},{"location":"development/testing/#testing-pyramid","title":"Testing Pyramid","text":"<p>EmailWidget adopts the classic testing pyramid strategy:</p> Text Only<pre><code>        /\\\n       /  \\\n      /    \\     E2E Tests (Few)\n     /______\\    - Complete workflow tests\n    /        \\   - Email generation tests\n   /          \\  \n  /____________\\ Integration Tests (Some)\n /              \\ - Component integration tests\n/________________\\ - Template rendering tests\nUnit Tests (Many)\n- Individual component tests\n- Utility function tests\n- Validator tests\n</code></pre>"},{"location":"development/testing/#testing-goals","title":"Testing Goals","text":"<ul> <li>Unit Test Coverage \u2265 90%</li> <li>Integration Test Coverage \u2265 80%</li> <li>Critical Path Testing 100%</li> <li>Performance Regression Testing Continuous monitoring</li> </ul>"},{"location":"development/testing/#testing-framework","title":"\ud83d\udee0\ufe0f Testing Framework","text":""},{"location":"development/testing/#main-tools","title":"Main Tools","text":"Tool Purpose Version Requirement pytest Testing framework \u2265 7.0 pytest-cov Coverage statistics \u2265 4.0 pytest-mock Mock support \u2265 3.10 pytest-xdist Parallel testing \u2265 3.0 pytest-html HTML reports \u2265 3.1"},{"location":"development/testing/#installing-test-dependencies","title":"Installing Test Dependencies","text":"PowerShell<pre><code># Install in Windows PowerShell\npip install pytest pytest-cov pytest-mock pytest-xdist pytest-html\n\n# Or install from requirements-test.txt\npip install -r requirements-test.txt\n</code></pre>"},{"location":"development/testing/#pytest-configuration","title":"pytest Configuration","text":"<p><code>pytest.ini</code> configuration in project root:</p> INI<pre><code>[tool:pytest]\ntestpaths = tests\npython_files = test_*.py\npython_classes = Test*\npython_functions = test_*\naddopts = \n    --strict-markers\n    --strict-config\n    --verbose\n    --cov=email_widget\n    --cov-report=html\n    --cov-report=term-missing\n    --cov-fail-under=90\nmarkers =\n    unit: Unit tests\n    integration: Integration tests\n    e2e: End-to-end tests\n    slow: Slow tests\n    performance: Performance tests\n</code></pre>"},{"location":"development/testing/#test-directory-structure","title":"\ud83d\udcc1 Test Directory Structure","text":"Text Only<pre><code>tests/\n\u251c\u2500\u2500 conftest.py                 # pytest configuration and fixtures\n\u251c\u2500\u2500 test_email.py              # Email main class tests\n\u251c\u2500\u2500 test_core/                 # Core module tests\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_base.py           # BaseWidget tests\n\u2502   \u251c\u2500\u2500 test_config.py         # Configuration tests\n\u2502   \u251c\u2500\u2500 test_validators.py     # Validator tests\n\u2502   \u251c\u2500\u2500 test_template_engine.py # Template engine tests\n\u2502   \u2514\u2500\u2500 test_cache.py          # Cache tests\n\u251c\u2500\u2500 test_widgets/              # Widget component tests\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_text_widget.py    # Text component tests\n\u2502   \u251c\u2500\u2500 test_table_widget.py   # Table component tests\n\u2502   \u251c\u2500\u2500 test_progress_widget.py # Progress component tests\n\u2502   \u2514\u2500\u2500 test_*.py              # Other component tests\n\u251c\u2500\u2500 test_utils/                # Utility module tests\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_image_utils.py    # Image utility tests\n\u2502   \u2514\u2500\u2500 test_optional_deps.py  # Optional dependency tests\n\u251c\u2500\u2500 integration/               # Integration tests\n\u2502   \u251c\u2500\u2500 test_email_generation.py\n\u2502   \u251c\u2500\u2500 test_template_rendering.py\n\u2502   \u2514\u2500\u2500 test_widget_interaction.py\n\u251c\u2500\u2500 e2e/                      # End-to-end tests\n\u2502   \u251c\u2500\u2500 test_complete_workflows.py\n\u2502   \u2514\u2500\u2500 test_email_output.py\n\u251c\u2500\u2500 performance/              # Performance tests\n\u2502   \u251c\u2500\u2500 test_rendering_speed.py\n\u2502   \u2514\u2500\u2500 test_memory_usage.py\n\u2514\u2500\u2500 fixtures/                 # Test data\n    \u251c\u2500\u2500 sample_data.json\n    \u251c\u2500\u2500 test_images/\n    \u2514\u2500\u2500 expected_outputs/\n</code></pre>"},{"location":"development/testing/#unit-testing","title":"\ud83e\uddea Unit Testing","text":""},{"location":"development/testing/#basic-test-structure","title":"Basic Test Structure","text":"Python<pre><code>import pytest\nfrom email_widget.widgets.text_widget import TextWidget\nfrom email_widget.core.enums import TextType, TextAlign\n\nclass TestTextWidget:\n    \"\"\"\u6587\u672c\u7ec4\u4ef6\u5355\u5143\u6d4b\u8bd5\"\"\"\n\n    def setup_method(self):\n        \"\"\"\u6bcf\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u524d\u7684\u521d\u59cb\u5316\"\"\"\n        self.widget = TextWidget()\n\n    def test_initialization(self):\n        \"\"\"\u6d4b\u8bd5\u521d\u59cb\u5316\u72b6\u6001\"\"\"\n        assert self.widget._content == \"\"\n        assert self.widget._text_type == TextType.BODY\n        assert self.widget._align == TextAlign.LEFT\n\n    def test_set_content(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u5185\u5bb9\"\"\"\n        content = \"\u6d4b\u8bd5\u5185\u5bb9\"\n        result = self.widget.set_content(content)\n\n        # \u6d4b\u8bd5\u8fd4\u56de\u503c\uff08\u94fe\u5f0f\u8c03\u7528\uff09\n        assert result is self.widget\n        # \u6d4b\u8bd5\u72b6\u6001\u53d8\u5316\n        assert self.widget._content == content\n\n    def test_set_content_validation(self):\n        \"\"\"\u6d4b\u8bd5\u5185\u5bb9\u9a8c\u8bc1\"\"\"\n        # \u6d4b\u8bd5\u6709\u6548\u8f93\u5165\n        self.widget.set_content(\"\u6709\u6548\u5185\u5bb9\")\n        assert self.widget._content == \"\u6709\u6548\u5185\u5bb9\"\n\n        # \u6d4b\u8bd5\u65e0\u6548\u8f93\u5165\n        with pytest.raises(TypeError):\n            self.widget.set_content(123)  # \u4e0d\u662f\u5b57\u7b26\u4e32\n\n        with pytest.raises(ValueError):\n            self.widget.set_content(\"\")  # \u7a7a\u5b57\u7b26\u4e32\n\n    def test_set_type(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u6587\u672c\u7c7b\u578b\"\"\"\n        self.widget.set_type(TextType.TITLE_LARGE)\n        assert self.widget._text_type == TextType.TITLE_LARGE\n\n    def test_set_align(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u5bf9\u9f50\u65b9\u5f0f\"\"\"\n        self.widget.set_align(TextAlign.CENTER)\n        assert self.widget._align == TextAlign.CENTER\n\n    def test_render_basic(self):\n        \"\"\"\u6d4b\u8bd5\u57fa\u672c\u6e32\u67d3\"\"\"\n        self.widget.set_content(\"\u6d4b\u8bd5\u6587\u672c\")\n        html = self.widget.render()\n\n        assert \"\u6d4b\u8bd5\u6587\u672c\" in html\n        assert \"&lt;\" in html and \"&gt;\" in html  # \u5305\u542b HTML \u6807\u7b7e\n\n    def test_render_with_styling(self):\n        \"\"\"\u6d4b\u8bd5\u5e26\u6837\u5f0f\u7684\u6e32\u67d3\"\"\"\n        self.widget.set_content(\"\u6807\u9898\u6587\u672c\") \\\n                  .set_type(TextType.TITLE_LARGE) \\\n                  .set_align(TextAlign.CENTER) \\\n                  .set_color(\"#ff0000\")\n\n        html = self.widget.render()\n\n        assert \"\u6807\u9898\u6587\u672c\" in html\n        assert \"text-align: center\" in html\n        assert \"color: #ff0000\" in html\n\n    @pytest.mark.parametrize(\"text_type,expected_tag\", [\n        (TextType.TITLE_LARGE, \"h1\"),\n        (TextType.TITLE_SMALL, \"h2\"),\n        (TextType.SECTION_H2, \"h2\"),\n        (TextType.SECTION_H3, \"h3\"),\n        (TextType.BODY, \"p\"),\n        (TextType.CAPTION, \"small\")\n    ])\n    def test_render_html_tags(self, text_type, expected_tag):\n        \"\"\"\u6d4b\u8bd5\u4e0d\u540c\u6587\u672c\u7c7b\u578b\u7684 HTML \u6807\u7b7e\"\"\"\n        self.widget.set_content(\"\u6d4b\u8bd5\").set_type(text_type)\n        html = self.widget.render()\n        assert f\"&lt;{expected_tag}\" in html\n\n    def test_chain_methods(self):\n        \"\"\"\u6d4b\u8bd5\u94fe\u5f0f\u8c03\u7528\"\"\"\n        result = self.widget.set_content(\"\u6d4b\u8bd5\") \\\n                           .set_type(TextType.TITLE_LARGE) \\\n                           .set_align(TextAlign.CENTER) \\\n                           .set_color(\"#blue\")\n\n        assert result is self.widget\n        assert self.widget._content == \"\u6d4b\u8bd5\"\n        assert self.widget._text_type == TextType.TITLE_LARGE\n        assert self.widget._align == TextAlign.CENTER\n        assert self.widget._color == \"#blue\"\n</code></pre>"},{"location":"development/testing/#using-fixtures","title":"Using Fixtures","text":"<p>Define common fixtures in <code>conftest.py</code>:</p> Python<pre><code>import pytest\nimport pandas as pd\nfrom pathlib import Path\nfrom email_widget import Email\nfrom email_widget.widgets import TextWidget, TableWidget\n\n@pytest.fixture\ndef sample_email():\n    \"\"\"\u521b\u5efa\u793a\u4f8b\u90ae\u4ef6\u5bf9\u8c61\"\"\"\n    return Email(\"\u6d4b\u8bd5\u90ae\u4ef6\")\n\n@pytest.fixture\ndef sample_text_widget():\n    \"\"\"\u521b\u5efa\u793a\u4f8b\u6587\u672c\u7ec4\u4ef6\"\"\"\n    widget = TextWidget()\n    widget.set_content(\"\u6d4b\u8bd5\u5185\u5bb9\")\n    return widget\n\n@pytest.fixture\ndef sample_dataframe():\n    \"\"\"\u521b\u5efa\u793a\u4f8b DataFrame\"\"\"\n    return pd.DataFrame({\n        'Name': ['Alice', 'Bob', 'Charlie'],\n        'Age': [25, 30, 35],\n        'City': ['New York', 'London', 'Tokyo']\n    })\n\n@pytest.fixture\ndef temp_output_dir(tmp_path):\n    \"\"\"\u521b\u5efa\u4e34\u65f6\u8f93\u51fa\u76ee\u5f55\"\"\"\n    output_dir = tmp_path / \"output\"\n    output_dir.mkdir()\n    return output_dir\n\n@pytest.fixture\ndef mock_image_path():\n    \"\"\"\u6a21\u62df\u56fe\u7247\u8def\u5f84\"\"\"\n    return \"tests/fixtures/test_images/sample.png\"\n\n# \u4f7f\u7528 fixture \u7684\u6d4b\u8bd5\nclass TestEmailGeneration:\n\n    def test_add_widget(self, sample_email, sample_text_widget):\n        \"\"\"\u6d4b\u8bd5\u6dfb\u52a0\u7ec4\u4ef6\"\"\"\n        sample_email.add_widget(sample_text_widget)\n        assert len(sample_email._widgets) == 1\n        assert sample_email._widgets[0] is sample_text_widget\n\n    def test_export_html(self, sample_email, sample_text_widget, temp_output_dir):\n        \"\"\"\u6d4b\u8bd5\u5bfc\u51fa HTML\"\"\"\n        sample_email.add_widget(sample_text_widget)\n        output_path = temp_output_dir / \"test.html\"\n\n        sample_email.export_html(str(output_path))\n\n        assert output_path.exists()\n        content = output_path.read_text(encoding='utf-8')\n        assert \"\u6d4b\u8bd5\u5185\u5bb9\" in content\n</code></pre>"},{"location":"development/testing/#mock-and-stub","title":"Mock and Stub","text":"<p>Using <code>pytest-mock</code> for mock testing:</p> Python<pre><code>import pytest\nfrom unittest.mock import Mock, patch\nfrom email_widget.utils.image_utils import ImageUtils\n\nclass TestImageUtils:\n    \"\"\"\u56fe\u7247\u5de5\u5177\u6d4b\u8bd5\"\"\"\n\n    @patch('requests.get')\n    def test_download_image_success(self, mock_get):\n        \"\"\"\u6d4b\u8bd5\u6210\u529f\u4e0b\u8f7d\u56fe\u7247\"\"\"\n        # \u8bbe\u7f6e mock \u8fd4\u56de\u503c\n        mock_response = Mock()\n        mock_response.status_code = 200\n        mock_response.content = b'fake_image_data'\n        mock_get.return_value = mock_response\n\n        # \u6267\u884c\u6d4b\u8bd5\n        result = ImageUtils.download_image(\"http://example.com/image.jpg\")\n\n        # \u9a8c\u8bc1\u7ed3\u679c\n        assert result == b'fake_image_data'\n        mock_get.assert_called_once_with(\"http://example.com/image.jpg\")\n\n    @patch('requests.get')\n    def test_download_image_failure(self, mock_get):\n        \"\"\"\u6d4b\u8bd5\u4e0b\u8f7d\u56fe\u7247\u5931\u8d25\"\"\"\n        # \u8bbe\u7f6e mock \u629b\u51fa\u5f02\u5e38\n        mock_get.side_effect = ConnectionError(\"\u7f51\u7edc\u9519\u8bef\")\n\n        # \u9a8c\u8bc1\u5f02\u5e38\n        with pytest.raises(ConnectionError):\n            ImageUtils.download_image(\"http://example.com/image.jpg\")\n\n    def test_validate_image_format(self, mocker):\n        \"\"\"\u6d4b\u8bd5\u56fe\u7247\u683c\u5f0f\u9a8c\u8bc1\"\"\"\n        # \u4f7f\u7528 mocker fixture\n        mock_is_valid = mocker.patch.object(ImageUtils, '_is_valid_format')\n        mock_is_valid.return_value = True\n\n        result = ImageUtils.validate_format(\"image.jpg\")\n\n        assert result is True\n        mock_is_valid.assert_called_once_with(\"image.jpg\")\n</code></pre>"},{"location":"development/testing/#parametrized-testing","title":"Parametrized Testing","text":"<p>Using <code>@pytest.mark.parametrize</code> for parametrized testing:</p> Python<pre><code>import pytest\nfrom email_widget.core.validators import ColorValidator\n\nclass TestColorValidator:\n    \"\"\"\u989c\u8272\u9a8c\u8bc1\u5668\u6d4b\u8bd5\"\"\"\n\n    @pytest.mark.parametrize(\"color,expected\", [\n        (\"#ff0000\", True),          # \u6807\u51c6\u5341\u516d\u8fdb\u5236\n        (\"#FF0000\", True),          # \u5927\u5199\u5341\u516d\u8fdb\u5236\n        (\"#f00\", True),             # \u77ed\u5341\u516d\u8fdb\u5236\n        (\"red\", True),              # \u989c\u8272\u540d\u79f0\n        (\"rgb(255,0,0)\", True),     # RGB \u683c\u5f0f\n        (\"rgba(255,0,0,0.5)\", True), # RGBA \u683c\u5f0f\n        (\"invalid\", False),         # \u65e0\u6548\u989c\u8272\n        (\"\", False),                # \u7a7a\u5b57\u7b26\u4e32\n        (\"#gggggg\", False),         # \u65e0\u6548\u5341\u516d\u8fdb\u5236\n    ])\n    def test_color_validation(self, color, expected):\n        \"\"\"\u6d4b\u8bd5\u5404\u79cd\u989c\u8272\u683c\u5f0f\u7684\u9a8c\u8bc1\"\"\"\n        validator = ColorValidator()\n\n        if expected:\n            # \u5e94\u8be5\u901a\u8fc7\u9a8c\u8bc1\n            validator.validate(color)  # \u4e0d\u5e94\u8be5\u629b\u51fa\u5f02\u5e38\n        else:\n            # \u5e94\u8be5\u9a8c\u8bc1\u5931\u8d25\n            with pytest.raises(ValueError):\n                validator.validate(color)\n\n    @pytest.mark.parametrize(\"rgb_value\", [0, 128, 255])\n    def test_rgb_values(self, rgb_value):\n        \"\"\"\u6d4b\u8bd5 RGB \u503c\u8303\u56f4\"\"\"\n        color = f\"rgb({rgb_value},{rgb_value},{rgb_value})\"\n        validator = ColorValidator()\n        validator.validate(color)  # \u5e94\u8be5\u901a\u8fc7\u9a8c\u8bc1\n</code></pre>"},{"location":"development/testing/#integration-testing","title":"\ud83d\udd17 Integration Testing","text":"<p>Integration tests verify multiple components working together:</p> Python<pre><code>import pytest\nimport pandas as pd\nfrom email_widget import Email\nfrom email_widget.widgets import TextWidget, TableWidget, ProgressWidget\n\nclass TestWidgetIntegration:\n    \"\"\"\u7ec4\u4ef6\u96c6\u6210\u6d4b\u8bd5\"\"\"\n\n    def test_email_with_multiple_widgets(self):\n        \"\"\"\u6d4b\u8bd5\u90ae\u4ef6\u5305\u542b\u591a\u4e2a\u7ec4\u4ef6\"\"\"\n        email = Email(\"\u96c6\u6210\u6d4b\u8bd5\u90ae\u4ef6\")\n\n        # \u6dfb\u52a0\u6807\u9898\n        title = TextWidget()\n        title.set_content(\"\u6d4b\u8bd5\u62a5\u544a\").set_type(TextType.TITLE_LARGE)\n        email.add_widget(title)\n\n        # \u6dfb\u52a0\u8868\u683c\n        table = TableWidget()\n        table.set_headers([\"\u59d3\u540d\", \"\u5e74\u9f84\"])\n        table.add_row([\"\u5f20\u4e09\", \"25\"])\n        table.add_row([\"\u674e\u56db\", \"30\"])\n        email.add_widget(table)\n\n        # \u6dfb\u52a0\u8fdb\u5ea6\u6761\n        progress = ProgressWidget()\n        progress.set_value(75).set_label(\"\u5b8c\u6210\u5ea6\")\n        email.add_widget(progress)\n\n        # \u6e32\u67d3\u90ae\u4ef6\n        html = email.export_str()\n\n        # \u9a8c\u8bc1\u6240\u6709\u7ec4\u4ef6\u90fd\u5728\u8f93\u51fa\u4e2d\n        assert \"\u6d4b\u8bd5\u62a5\u544a\" in html\n        assert \"\u5f20\u4e09\" in html\n        assert \"\u674e\u56db\" in html\n        assert \"75%\" in html or \"75.0%\" in html\n\n    def test_dataframe_to_table_integration(self):\n        \"\"\"\u6d4b\u8bd5 DataFrame \u4e0e\u8868\u683c\u7ec4\u4ef6\u96c6\u6210\"\"\"\n        # \u521b\u5efa\u6d4b\u8bd5\u6570\u636e\n        df = pd.DataFrame({\n            '\u4ea7\u54c1': ['A', 'B', 'C'],\n            '\u9500\u91cf': [100, 200, 150],\n            '\u4ef7\u683c': [10.5, 20.0, 15.8]\n        })\n\n        email = Email(\"\u6570\u636e\u62a5\u544a\")\n\n        # \u4f7f\u7528\u4fbf\u6377\u65b9\u6cd5\u4ece DataFrame \u521b\u5efa\u8868\u683c\n        email.add_table_from_df(df, title=\"\u4ea7\u54c1\u9500\u552e\u6570\u636e\")\n\n        html = email.export_str()\n\n        # \u9a8c\u8bc1\u6570\u636e\u6b63\u786e\u6e32\u67d3\n        assert \"\u4ea7\u54c1\u9500\u552e\u6570\u636e\" in html\n        assert \"\u4ea7\u54c1\" in html and \"\u9500\u91cf\" in html and \"\u4ef7\u683c\" in html\n        assert \"100\" in html and \"200\" in html and \"150\" in html\n\n    @pytest.mark.integration\n    def test_template_engine_integration(self):\n        \"\"\"\u6d4b\u8bd5\u6a21\u677f\u5f15\u64ce\u96c6\u6210\"\"\"\n        email = Email(\"\u6a21\u677f\u6d4b\u8bd5\")\n\n        # \u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u677f\n        custom_widget = CustomTemplateWidget()\n        custom_widget.set_template(\"Hello {{name}}!\")\n        custom_widget.set_data(name=\"World\")\n\n        email.add_widget(custom_widget)\n        html = email.export_str()\n\n        assert \"Hello World!\" in html\n</code></pre>"},{"location":"development/testing/#end-to-end-testing","title":"\ud83c\udf10 End-to-End Testing","text":"<p>End-to-end tests verify complete user workflows:</p> Python<pre><code>import pytest\nfrom pathlib import Path\nimport tempfile\nfrom email_widget import Email\n\nclass TestE2EWorkflows:\n    \"\"\"\u7aef\u5230\u7aef\u6d4b\u8bd5\"\"\"\n\n    @pytest.mark.e2e\n    def test_complete_report_generation(self):\n        \"\"\"\u6d4b\u8bd5\u5b8c\u6574\u62a5\u544a\u751f\u6210\u6d41\u7a0b\"\"\"\n        # 1. \u521b\u5efa\u90ae\u4ef6\n        email = Email(\"\u6708\u5ea6\u4e1a\u52a1\u62a5\u544a\")\n\n        # 2. \u6dfb\u52a0\u6807\u9898\u548c\u8bf4\u660e\n        email.add_title(\"2024\u5e741\u6708\u4e1a\u52a1\u62a5\u544a\", TextType.TITLE_LARGE)\n        email.add_text(\"\u672c\u62a5\u544a\u5305\u542b\u4e3b\u8981\u4e1a\u52a1\u6307\u6807\u548c\u5206\u6790\u3002\")\n\n        # 3. \u6dfb\u52a0\u5173\u952e\u6307\u6807\n        email.add_card(\"\u603b\u6536\u5165\", \"\u00a51,250,000\", \"\ud83d\udcb0\")\n        email.add_card(\"\u65b0\u7528\u6237\", \"2,847\", \"\ud83d\udc65\")\n\n        # 4. \u6dfb\u52a0\u8be6\u7ec6\u6570\u636e\u8868\u683c\n        data = [\n            [\"\u4ea7\u54c1A\", \"\u00a5500,000\", \"1,200\"],\n            [\"\u4ea7\u54c1B\", \"\u00a5750,000\", \"1,647\"]\n        ]\n        email.add_table_from_data(data, [\"\u4ea7\u54c1\", \"\u6536\u5165\", \"\u9500\u91cf\"])\n\n        # 5. \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\n        email.add_progress(85, \"\u76ee\u6807\u5b8c\u6210\u5ea6\", ProgressTheme.SUCCESS)\n\n        # 6. \u6dfb\u52a0\u63d0\u9192\n        email.add_alert(\"\u4e0b\u6708\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u4ea7\u54c1A\u7684\u5e93\u5b58\u60c5\u51b5\", AlertType.WARNING)\n\n        # 7. \u5bfc\u51fa\u4e3a HTML\n        with tempfile.NamedTemporaryFile(suffix='.html', delete=False) as f:\n            email.export_html(f.name)\n\n            # 8. \u9a8c\u8bc1\u6587\u4ef6\u751f\u6210\n            output_path = Path(f.name)\n            assert output_path.exists()\n\n            # 9. \u9a8c\u8bc1\u5185\u5bb9\u5b8c\u6574\u6027\n            content = output_path.read_text(encoding='utf-8')\n            assert \"\u6708\u5ea6\u4e1a\u52a1\u62a5\u544a\" in content\n            assert \"\u00a51,250,000\" in content\n            assert \"\u4ea7\u54c1A\" in content\n            assert \"85%\" in content or \"85.0%\" in content\n            assert \"\u5e93\u5b58\u60c5\u51b5\" in content\n\n            # 10. \u9a8c\u8bc1 HTML \u7ed3\u6784\n            assert \"&lt;html\" in content\n            assert \"&lt;/html&gt;\" in content\n            assert \"&lt;head&gt;\" in content\n            assert \"&lt;body&gt;\" in content\n\n    @pytest.mark.e2e\n    @pytest.mark.slow\n    def test_large_dataset_performance(self):\n        \"\"\"\u6d4b\u8bd5\u5927\u6570\u636e\u96c6\u6027\u80fd\"\"\"\n        import time\n\n        # \u521b\u5efa\u5927\u91cf\u6570\u636e\n        email = Email(\"\u5927\u6570\u636e\u6d4b\u8bd5\")\n\n        # \u6dfb\u52a0\u5927\u8868\u683c\n        large_data = []\n        for i in range(1000):\n            large_data.append([f\"\u9879\u76ee{i}\", f\"\u503c{i}\", f\"\u63cf\u8ff0{i}\"])\n\n        start_time = time.time()\n        email.add_table_from_data(large_data, [\"\u9879\u76ee\", \"\u503c\", \"\u63cf\u8ff0\"])\n\n        # \u6e32\u67d3\u65f6\u95f4\u5e94\u8be5\u5728\u5408\u7406\u8303\u56f4\u5185\n        html = email.export_str()\n        end_time = time.time()\n\n        # \u6027\u80fd\u65ad\u8a00\uff08\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\uff09\n        assert (end_time - start_time) &lt; 10.0  # \u5e94\u8be5\u572810\u79d2\u5185\u5b8c\u6210\n        assert len(html) &gt; 10000  # \u786e\u4fdd\u5185\u5bb9\u5df2\u751f\u6210\n        assert \"\u9879\u76ee999\" in html  # \u786e\u4fdd\u6240\u6709\u6570\u636e\u90fd\u5305\u542b\n</code></pre>"},{"location":"development/testing/#performance-testing","title":"\u26a1 Performance Testing","text":"<p>Monitor key performance metrics:</p> Python<pre><code>import pytest\nimport time\nimport psutil\nimport os\nfrom email_widget import Email\n\nclass TestPerformance:\n    \"\"\"\u6027\u80fd\u6d4b\u8bd5\"\"\"\n\n    @pytest.mark.performance\n    def test_rendering_speed(self):\n        \"\"\"\u6d4b\u8bd5\u6e32\u67d3\u901f\u5ea6\"\"\"\n        email = Email(\"\u6027\u80fd\u6d4b\u8bd5\")\n\n        # \u6dfb\u52a0\u591a\u4e2a\u7ec4\u4ef6\n        for i in range(100):\n            email.add_text(f\"\u6587\u672c\u5185\u5bb9 {i}\")\n\n        # \u6d4b\u91cf\u6e32\u67d3\u65f6\u95f4\n        start_time = time.perf_counter()\n        html = email.export_str()\n        end_time = time.perf_counter()\n\n        render_time = end_time - start_time\n\n        # \u65ad\u8a00\u6e32\u67d3\u65f6\u95f4\n        assert render_time &lt; 1.0, f\"\u6e32\u67d3\u65f6\u95f4\u8fc7\u957f: {render_time:.3f}\u79d2\"\n        assert len(html) &gt; 1000, \"\u8f93\u51fa\u5185\u5bb9\u592a\u5c11\"\n\n    @pytest.mark.performance\n    def test_memory_usage(self):\n        \"\"\"\u6d4b\u8bd5\u5185\u5b58\u4f7f\u7528\"\"\"\n        process = psutil.Process(os.getpid())\n        initial_memory = process.memory_info().rss\n\n        # \u521b\u5efa\u5927\u91cf\u5bf9\u8c61\n        emails = []\n        for i in range(50):\n            email = Email(f\"\u6d4b\u8bd5\u90ae\u4ef6 {i}\")\n            for j in range(20):\n                email.add_text(f\"\u5185\u5bb9 {i}-{j}\")\n            emails.append(email)\n\n        # \u68c0\u67e5\u5185\u5b58\u589e\u957f\n        peak_memory = process.memory_info().rss\n        memory_increase = peak_memory - initial_memory\n\n        # \u65ad\u8a00\u5185\u5b58\u4f7f\u7528\u5408\u7406\uff08\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\uff09\n        assert memory_increase &lt; 100 * 1024 * 1024, f\"\u5185\u5b58\u4f7f\u7528\u8fc7\u591a: {memory_increase / 1024 / 1024:.1f}MB\"\n\n    @pytest.mark.performance\n    def test_cache_effectiveness(self):\n        \"\"\"\u6d4b\u8bd5\u7f13\u5b58\u6548\u679c\"\"\"\n        from email_widget.core.cache import Cache\n\n        cache = Cache(max_size=100)\n\n        # \u7b2c\u4e00\u6b21\u8bbf\u95ee\uff08\u672a\u7f13\u5b58\uff09\n        start_time = time.perf_counter()\n        result1 = cache.get_or_set(\"test_key\", lambda: expensive_operation())\n        first_time = time.perf_counter() - start_time\n\n        # \u7b2c\u4e8c\u6b21\u8bbf\u95ee\uff08\u5df2\u7f13\u5b58\uff09\n        start_time = time.perf_counter()\n        result2 = cache.get(\"test_key\")\n        second_time = time.perf_counter() - start_time\n\n        # \u7f13\u5b58\u5e94\u8be5\u663e\u8457\u63d0\u5347\u6027\u80fd\n        assert result1 == result2\n        assert second_time &lt; first_time / 10, \"\u7f13\u5b58\u6ca1\u6709\u663e\u8457\u63d0\u5347\u6027\u80fd\"\n\ndef expensive_operation():\n    \"\"\"\u6a21\u62df\u8017\u65f6\u64cd\u4f5c\"\"\"\n    time.sleep(0.1)\n    return \"expensive_result\"\n</code></pre>"},{"location":"development/testing/#test-coverage","title":"\ud83d\udcca Test Coverage","text":""},{"location":"development/testing/#generate-coverage-reports","title":"Generate Coverage Reports","text":"PowerShell<pre><code># Run tests and generate coverage report\npython -m pytest --cov=email_widget --cov-report=html --cov-report=term\n\n# View HTML report\nstart htmlcov/index.html\n\n# View only missing coverage lines\npython -m pytest --cov=email_widget --cov-report=term-missing\n</code></pre>"},{"location":"development/testing/#coverage-goals","title":"Coverage Goals","text":"Python<pre><code># pytest.ini \u4e2d\u8bbe\u7f6e\u8986\u76d6\u7387\u8981\u6c42\n[tool:pytest]\naddopts = --cov-fail-under=90\n\n# \u6392\u9664\u67d0\u4e9b\u6587\u4ef6\n--cov-config=.coveragerc\n\n# .coveragerc \u6587\u4ef6\u5185\u5bb9\n[run]\nsource = email_widget\nomit = \n    */tests/*\n    */venv/*\n    setup.py\n    */migrations/*\n\n[report]\nexclude_lines =\n    pragma: no cover\n    def __repr__\n    raise AssertionError\n    raise NotImplementedError\n</code></pre>"},{"location":"development/testing/#testing-tools-and-commands","title":"\ud83d\udd27 Testing Tools and Commands","text":""},{"location":"development/testing/#common-test-commands","title":"Common Test Commands","text":"PowerShell<pre><code># Basic test run\npython -m pytest\n\n# Verbose output\npython -m pytest -v\n\n# Run specific test file\npython -m pytest tests/test_email.py\n\n# Run specific test method\npython -m pytest tests/test_email.py::TestEmail::test_add_widget\n\n# Run marked tests\npython -m pytest -m unit\npython -m pytest -m \"not slow\"\n\n# Run tests in parallel\npython -m pytest -n auto\n\n# Generate HTML report\npython -m pytest --html=report.html --self-contained-html\n\n# Run only failed tests\npython -m pytest --lf\n\n# Stop at first failure\npython -m pytest -x\n\n# Detailed failure information\npython -m pytest -vv --tb=long\n</code></pre>"},{"location":"development/testing/#test-scripts","title":"Test Scripts","text":"<p>Create <code>scripts/run_tests.py</code> script:</p> Python<pre><code>#!/usr/bin/env python\n\"\"\"\n\u6d4b\u8bd5\u8fd0\u884c\u811a\u672c\n\"\"\"\nimport subprocess\nimport sys\nimport argparse\nfrom pathlib import Path\n\ndef run_command(cmd, description):\n    \"\"\"\u8fd0\u884c\u547d\u4ee4\u5e76\u68c0\u67e5\u7ed3\u679c\"\"\"\n    print(f\"\\n\ud83d\udd04 {description}...\")\n    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)\n\n    if result.returncode == 0:\n        print(f\"\u2705 {description} \u6210\u529f\")\n        if result.stdout:\n            print(result.stdout)\n    else:\n        print(f\"\u274c {description} \u5931\u8d25\")\n        print(result.stderr)\n        return False\n    return True\n\ndef main():\n    parser = argparse.ArgumentParser(description=\"\u8fd0\u884c EmailWidget \u6d4b\u8bd5\")\n    parser.add_argument(\"--unit\", action=\"store_true\", help=\"\u53ea\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\")\n    parser.add_argument(\"--integration\", action=\"store_true\", help=\"\u53ea\u8fd0\u884c\u96c6\u6210\u6d4b\u8bd5\")\n    parser.add_argument(\"--e2e\", action=\"store_true\", help=\"\u53ea\u8fd0\u884c\u7aef\u5230\u7aef\u6d4b\u8bd5\")\n    parser.add_argument(\"--performance\", action=\"store_true\", help=\"\u53ea\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\")\n    parser.add_argument(\"--coverage\", action=\"store_true\", help=\"\u751f\u6210\u8986\u76d6\u7387\u62a5\u544a\")\n    parser.add_argument(\"--html\", action=\"store_true\", help=\"\u751f\u6210 HTML \u62a5\u544a\")\n\n    args = parser.parse_args()\n\n    # \u57fa\u672c\u6d4b\u8bd5\u547d\u4ee4\n    pytest_cmd = \"python -m pytest\"\n\n    if args.unit:\n        pytest_cmd += \" -m unit\"\n    elif args.integration:\n        pytest_cmd += \" -m integration\"\n    elif args.e2e:\n        pytest_cmd += \" -m e2e\"\n    elif args.performance:\n        pytest_cmd += \" -m performance\"\n\n    if args.coverage:\n        pytest_cmd += \" --cov=email_widget --cov-report=term-missing\"\n        if args.html:\n            pytest_cmd += \" --cov-report=html\"\n\n    if args.html:\n        pytest_cmd += \" --html=reports/test_report.html --self-contained-html\"\n\n    # \u786e\u4fdd\u62a5\u544a\u76ee\u5f55\u5b58\u5728\n    Path(\"reports\").mkdir(exist_ok=True)\n\n    # \u8fd0\u884c\u6d4b\u8bd5\n    success = run_command(pytest_cmd, \"\u8fd0\u884c\u6d4b\u8bd5\")\n\n    if success:\n        print(\"\\n\ud83c\udf89 \u6240\u6709\u6d4b\u8bd5\u901a\u8fc7!\")\n    else:\n        print(\"\\n\ud83d\udca5 \u6d4b\u8bd5\u5931\u8d25!\")\n        sys.exit(1)\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>Using the script:</p> PowerShell<pre><code># Run all tests\npython scripts/run_tests.py\n\n# Run only unit tests\npython scripts/run_tests.py --unit\n\n# Run tests and generate coverage report\npython scripts/run_tests.py --coverage --html\n</code></pre>"},{"location":"development/testing/#continuous-integration","title":"\ud83d\ude80 Continuous Integration","text":""},{"location":"development/testing/#github-actions-configuration","title":"GitHub Actions Configuration","text":"<p><code>.github/workflows/test.yml</code>:</p> YAML<pre><code>name: Tests\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: windows-latest\n    strategy:\n      matrix:\n        python-version: [3.10, 3.11, 3.12]\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Set up Python ${{ matrix.python-version }}\n      uses: actions/setup-python@v4\n      with:\n        python-version: ${{ matrix.python-version }}\n\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements-test.txt\n        pip install -e .\n\n    - name: Run tests\n      run: |\n        python -m pytest --cov=email_widget --cov-report=xml\n\n    - name: Upload coverage to Codecov\n      uses: codecov/codecov-action@v3\n      with:\n        file: ./coverage.xml\n        fail_ci_if_error: true\n</code></pre>"},{"location":"development/testing/#testing-best-practices","title":"\ud83d\udccb Testing Best Practices","text":""},{"location":"development/testing/#testing-principles","title":"Testing Principles","text":"<ol> <li>AAA Pattern - Arrange, Act, Assert</li> <li>Single Responsibility - Each test should verify only one functionality</li> <li>Independence - Tests should not depend on each other</li> <li>Repeatability - Test results should be deterministic</li> <li>Fast - Unit tests should execute quickly</li> </ol>"},{"location":"development/testing/#test-naming","title":"Test Naming","text":"Python<pre><code># \u597d\u7684\u6d4b\u8bd5\u540d\u79f0\ndef test_set_title_with_valid_string_updates_title():\n    pass\n\ndef test_render_returns_html_with_title_content():\n    pass\n\ndef test_add_widget_with_none_raises_type_error():\n    pass\n\n# \u907f\u514d\u7684\u6d4b\u8bd5\u540d\u79f0\ndef test_title():  # \u592a\u6a21\u7cca\n    pass\n\ndef test_1():  # \u6ca1\u6709\u610f\u4e49\n    pass\n</code></pre>"},{"location":"development/testing/#test-data","title":"Test Data","text":"Python<pre><code># \u4f7f\u7528\u6709\u610f\u4e49\u7684\u6d4b\u8bd5\u6570\u636e\ndef test_user_registration():\n    user_data = {\n        \"name\": \"\u5f20\u4e09\",\n        \"email\": \"zhangsan@example.com\",\n        \"age\": 25\n    }\n    # \u800c\u4e0d\u662f\n    # user_data = {\"a\": \"b\", \"c\": \"d\"}\n</code></pre>"},{"location":"development/testing/#exception-testing","title":"Exception Testing","text":"Python<pre><code>def test_invalid_input_handling():\n    \"\"\"\u6d4b\u8bd5\u65e0\u6548\u8f93\u5165\u7684\u5904\u7406\"\"\"\n    widget = TextWidget()\n\n    # \u6d4b\u8bd5\u5177\u4f53\u7684\u5f02\u5e38\u7c7b\u578b\u548c\u6d88\u606f\n    with pytest.raises(ValueError, match=\"\u5185\u5bb9\u4e0d\u80fd\u4e3a\u7a7a\"):\n        widget.set_content(\"\")\n\n    with pytest.raises(TypeError, match=\"\u5185\u5bb9\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\"):\n        widget.set_content(123)\n</code></pre>"},{"location":"development/testing/#summary","title":"\ud83c\udf89 Summary","text":"<p>Following this testing guide, you will be able to:</p> <ol> <li>Write high-quality tests - Cover various scenarios and edge cases</li> <li>Ensure code quality - Discover issues through automated testing</li> <li>Improve development efficiency - Quickly verify correctness of changes</li> <li>Maintain code stability - Prevent regression errors</li> </ol> <p>Now start writing tests for your code! Good testing habits will make your code more robust and maintainable. \ud83e\uddea\u2728</p>"},{"location":"examples/","title":"Example Code","text":"<p>Welcome to the EmailWidget example code library! Here we provide practical application examples to help you quickly master EmailWidget's core functionality and best practices.</p>"},{"location":"examples/#featured-examples","title":"\ud83c\udfaf Featured Examples","text":"<p>We have carefully selected the most practical and commonly used examples to help you get started quickly and apply them to real projects.</p>"},{"location":"examples/#basic-examples-recommended","title":"\ud83d\ude80 Basic Examples \u2b50 Recommended","text":"<p>Suitable for all users, covering core functionality - Quick Start - Create your first email report - Text Styles - Various text types and color settings - Data Display - Combined use of tables and progress bars - Comprehensive Application - Complete system monitoring report</p>"},{"location":"examples/#data-reports","title":"\ud83d\udcca Data Reports","text":"<p>Focused on data visualization and analysis - Sales Report - Business data visualization - Financial Report - Chart and table combination - pandas Integration - Seamless DataFrame integration</p>"},{"location":"examples/#system-monitoring","title":"\ud83d\udda5\ufe0f System Monitoring","text":"<p>Dedicated to operations and monitoring scenarios - Server Monitoring - Resource usage display - Application Status - Service health check reports - Alert Notifications - Multi-level warning system</p>"},{"location":"examples/#real-world-applications","title":"\ud83c\udf0d Real-world Applications","text":"<p>Complete business scenario cases - E-commerce Analysis - Complete e-commerce data analysis report - DevOps Dashboard - Comprehensive operations monitoring dashboard - Business Dashboard - Enterprise-level business metrics dashboard</p>"},{"location":"examples/#learning-path","title":"\ud83c\udf93 Learning Path","text":""},{"location":"examples/#beginner-users","title":"Beginner Users (\u2b50)","text":"<ol> <li>Step 1 - Start with Basic Examples, run the \"Quick Start\" example</li> <li>Step 2 - Learn text styles, master basic component usage</li> <li>Step 3 - Try data display examples, learn tables and progress bars</li> </ol>"},{"location":"examples/#experienced-users","title":"Experienced Users (\u2b50\u2b50)","text":"<ol> <li>Deep Learning - Complete all cases in basic examples</li> <li>Professional Application - Choose Data Reports or System Monitoring based on your needs</li> <li>Comprehensive Improvement - Learn complete cases in Real-world Applications</li> </ol>"},{"location":"examples/#example-features","title":"\ud83d\udccb Example Features","text":""},{"location":"examples/#complete-and-runnable","title":"\u2705 Complete and Runnable","text":"<p>All example code has been tested and can be copied and run directly:</p> Bash<pre><code># Install dependencies\npip install EmailWidget\n\n# Run example\npython your_example.py\n</code></pre>"},{"location":"examples/#instant-preview","title":"\u2705 Instant Preview","text":"<p>Each example provides HTML preview, allowing you to see the effect immediately:</p> Python<pre><code># \u793a\u4f8b\u4ee3\u7801\nemail = Email(\"\u6211\u7684\u62a5\u544a\")\nemail.add_text(\"Hello World\", TextType.TITLE_LARGE)\nemail.export_html(\"report.html\")\n</code></pre>"},{"location":"examples/#detailed-documentation","title":"\u2705 Detailed Documentation","text":"<p>Each example includes: - Feature Description - Purpose and applicable scenarios of the example - Core Code - Streamlined key code - Key Points - Important concepts and technical explanations - Live Preview - Direct view of generated effects</p>"},{"location":"examples/#quick-search","title":"\ud83d\udd0d Quick Search","text":""},{"location":"examples/#search-by-need","title":"Search by Need","text":"I want to... Recommended Example Link Create my first email Quick Start basic.md Set text styles Text Styles basic.md Display data tables Data Display basic.md Create complete reports Comprehensive Application basic.md Create business reports Data Reports data-reports.md Monitor system status System Monitoring system-monitoring.md Learn best practices Real-world Applications real-world.md"},{"location":"examples/#search-by-component","title":"Search by Component","text":"Component Main Function Best Example TextWidget Text display Text Styles TableWidget Data tables Data Display ProgressWidget Progress bars Data Display AlertWidget Alert messages Comprehensive Application ChartWidget Charts Data Reports SeparatorWidget Separators Text Styles"},{"location":"examples/#usage-suggestions","title":"\ud83d\udca1 Usage Suggestions","text":""},{"location":"examples/#learning-strategy","title":"Learning Strategy","text":"<ul> <li>\ud83d\udcd6 Learn in Order - Recommended to start with basic examples</li> <li>\ud83d\udd04 Learn by Doing - Copy code to run locally</li> <li>\ud83d\udee0\ufe0f Hands-on Modification - Try modifying parameters and styles</li> <li>\ud83d\udce7 Practical Application - Apply examples to real projects</li> </ul>"},{"location":"examples/#best-practices","title":"Best Practices","text":"<ul> <li>\ud83c\udfaf Clear Goals - Choose appropriate examples based on needs</li> <li>\ud83d\udcdd Take Notes - Record useful code snippets</li> <li>\ud83d\udd0d Deep Understanding - Understand the role of each component</li> <li>\ud83d\udcac Participate in Discussion - Share your experience in the community</li> </ul>"},{"location":"examples/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"examples/#1-environment-setup","title":"1. Environment Setup","text":"Bash<pre><code>pip install EmailWidget\n</code></pre>"},{"location":"examples/#2-choose-examples","title":"2. Choose Examples","text":"<ul> <li>New users: Start with Basic Examples</li> <li>Experienced users: Directly choose examples in relevant domains</li> </ul>"},{"location":"examples/#3-run-code","title":"3. Run Code","text":"Bash<pre><code>python example.py\n</code></pre>"},{"location":"examples/#4-view-results","title":"4. View Results","text":"<p>Generated HTML files can be opened in browsers or sent as emails.</p>"},{"location":"examples/#example-updates","title":"\ud83d\udcc8 Example Updates","text":"<p>We continuously update and optimize example code to ensure: - \u2705 Code is always runnable - \u2705 Comprehensive feature coverage - \u2705 Best practice guidance - \u2705 Real application orientation</p>"},{"location":"examples/#contributing-code","title":"\ud83e\udd1d Contributing Code","text":"<p>If you have good example ideas or improvement suggestions:</p> <ol> <li>Submit suggestions in GitHub Issues</li> <li>Submit Pull Requests to contribute code</li> <li>Share your real application cases</li> </ol> <p>Start learning now! We recommend starting with Basic Examples, then explore more features based on your needs.</p>"},{"location":"examples/basic/","title":"Basic Examples","text":"<p>This page provides core functionality examples of EmailWidget, covering the most common use cases and best practices.</p>"},{"location":"examples/basic/#example-overview","title":"\ud83d\udcda Example Overview","text":"Example Function Components Involved Difficulty Quick Start Create your first email report TextWidget, AlertWidget \u2b50 Text Styles Various text types and colors TextWidget, SeparatorWidget \u2b50 Data Display Tables and progress bars TableWidget, ProgressWidget \u2b50\u2b50 Comprehensive Application Complete monitoring report Multiple components \u2b50\u2b50\u2b50"},{"location":"examples/basic/#quick-start","title":"Quick Start","text":""},{"location":"examples/basic/#create-your-first-email-report","title":"Create Your First Email Report","text":"<p>This is the simplest example, showing how to create a basic email with title, text, and alerts:</p> Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import TextType, AlertType\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\nemail = Email(\"\u6211\u7684\u7b2c\u4e00\u4e2a\u62a5\u544a\")\n\n# \u6dfb\u52a0\u4e3b\u6807\u9898\nemail.add_text(\"\u6b22\u8fce\u4f7f\u7528 EmailWidget\", TextType.TITLE_LARGE)\n\n# \u6dfb\u52a0\u8bf4\u660e\u6587\u672c\nemail.add_text(\"\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u90ae\u4ef6\u62a5\u544a\u793a\u4f8b\uff0c\u5c55\u793a\u57fa\u672c\u529f\u80fd\u3002\", TextType.BODY)\n\n# \u6dfb\u52a0\u91cd\u8981\u63d0\u793a\nemail.add_alert(\"EmailWidget \u8ba9\u521b\u5efa\u7f8e\u89c2\u7684HTML\u90ae\u4ef6\u53d8\u5f97\u7b80\u5355\u5feb\u6377\uff01\", AlertType.TIP)\n\n# \u5bfc\u51fa\u4e3aHTML\u6587\u4ef6\nemail.export_html(\"my_first_report.html\")\nprint(\"\u2705 \u90ae\u4ef6\u62a5\u544a\u5df2\u751f\u6210\uff1amy_first_report.html\")\n</code></pre> \u6211\u7684\u7b2c\u4e00\u4e2a\u62a5\u544a \u6211\u7684\u7b2c\u4e00\u4e2a\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:27:24 <p>\u6b22\u8fce\u4f7f\u7528 EmailWidget</p> <p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u90ae\u4ef6\u62a5\u544a\u793a\u4f8b\uff0c\u5c55\u793a\u57fa\u672c\u529f\u80fd\u3002</p> \ud83d\udca1 \u63d0\u793a EmailWidget \u8ba9\u521b\u5efa\u7f8e\u89c2\u7684HTML\u90ae\u4ef6\u53d8\u5f97\u7b80\u5355\u5feb\u6377\uff01 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Key Points: - Use <code>Email()</code> to create email container - <code>add_text()</code> shortcut method to add text - <code>add_alert()</code> shortcut method to add alert messages - <code>export_html()</code> to export as HTML file</p>"},{"location":"examples/basic/#text-styles","title":"Text Style Display","text":""},{"location":"examples/basic/#various-text-types-and-color-styles","title":"Various Text Types and Color Styles1.1. \u8fd9\u662f\u4e09\u7ea7\u7ae0\u8282\u6807\u9898","text":"<p>Demonstrates all text types and color settings supported by EmailWidget:</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.text_widget import TextWidget\nfrom email_widget.core.enums import TextType\n\nemail = Email(\"\u6587\u672c\u6837\u5f0f\u5c55\u793a\")\n\n# \u5c55\u793a\u4e0d\u540c\u7684\u6587\u672c\u7c7b\u578b\nemail.add_text(\"\u6587\u672c\u7c7b\u578b\u5c55\u793a\", TextType.TITLE_LARGE)\n\nemail.add_text(\"\u8fd9\u662f\u5927\u6807\u9898\", TextType.TITLE_LARGE)\nemail.add_text(\"\u8fd9\u662f\u5c0f\u6807\u9898\", TextType.TITLE_SMALL)\nemail.add_text(\"\u8fd9\u662f\u4e8c\u7ea7\u7ae0\u8282\u6807\u9898\", TextType.SECTION_H2)\nemail.add_text(\"\u8fd9\u662f\u4e09\u7ea7\u7ae0\u8282\u6807\u9898\", TextType.SECTION_H3)\nemail.add_text(\"\u8fd9\u662f\u6b63\u6587\u5185\u5bb9\uff0c\u7528\u4e8e\u6bb5\u843d\u63cf\u8ff0\u548c\u8be6\u7ec6\u8bf4\u660e\u3002\", TextType.BODY)\nemail.add_text(\"\u8fd9\u662f\u8bf4\u660e\u6587\u5b57\uff0c\u901a\u5e38\u7528\u4e8e\u8865\u5145\u4fe1\u606f\u3002\", TextType.CAPTION)\n\n# \u5206\u9694\u7ebf\nemail.add_separator()\n\n# \u5e26\u989c\u8272\u7684\u6587\u672c\nemail.add_text(\"\u989c\u8272\u6837\u5f0f\u5c55\u793a\", TextType.TITLE_SMALL)\n\nblue_text = (TextWidget()\n            .set_content(\"\u8fd9\u662f\u84dd\u8272\u7684\u91cd\u8981\u6587\u672c\")\n            .set_type(TextType.BODY)\n            .set_color(\"#0078d4\"))\nemail.add_widget(blue_text)\n\ngreen_text = (TextWidget()\n             .set_content(\"\u8fd9\u662f\u7eff\u8272\u7684\u6210\u529f\u6587\u672c\")\n             .set_type(TextType.BODY)\n             .set_color(\"#107c10\"))\nemail.add_widget(green_text)\n\nred_text = (TextWidget()\n           .set_content(\"\u8fd9\u662f\u7ea2\u8272\u7684\u8b66\u544a\u6587\u672c\")\n           .set_type(TextType.BODY)\n           .set_color(\"#d13438\"))\nemail.add_widget(red_text)\n\nemail.export_html(\"text_styles.html\")\n</code></pre> \u6587\u672c\u6837\u5f0f\u5c55\u793a \u6587\u672c\u6837\u5f0f\u5c55\u793a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:27:24 <p>\u6587\u672c\u7c7b\u578b\u5c55\u793a</p> <p>\u8fd9\u662f\u5927\u6807\u9898</p> <p>\u8fd9\u662f\u5c0f\u6807\u9898</p> 1. \u8fd9\u662f\u4e8c\u7ea7\u7ae0\u8282\u6807\u9898 <p>\u8fd9\u662f\u6b63\u6587\u5185\u5bb9\uff0c\u7528\u4e8e\u6bb5\u843d\u63cf\u8ff0\u548c\u8be6\u7ec6\u8bf4\u660e\u3002</p> <p>\u8fd9\u662f\u8bf4\u660e\u6587\u5b57\uff0c\u901a\u5e38\u7528\u4e8e\u8865\u5145\u4fe1\u606f\u3002</p> <p>\u989c\u8272\u6837\u5f0f\u5c55\u793a</p> <p>\u8fd9\u662f\u84dd\u8272\u7684\u91cd\u8981\u6587\u672c</p> <p>\u8fd9\u662f\u7eff\u8272\u7684\u6210\u529f\u6587\u672c</p> <p>\u8fd9\u662f\u7ea2\u8272\u7684\u8b66\u544a\u6587\u672c</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Key Points: - Supports multiple predefined text types (titles, sections, body, caption) - Section headers automatically add numbering - Supports custom color settings - Separators used to distinguish different content areas</p>"},{"location":"examples/basic/#data-display","title":"Data Display","text":""},{"location":"examples/basic/#table-and-progress-bar-combination","title":"Table and Progress Bar Combination","text":"<p>Shows how to use tables and progress bars to display project data:</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.table_widget import TableWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\nemail = Email(\"\u6570\u636e\u5c55\u793a\u793a\u4f8b\")\n\n# \u6807\u9898\nemail.add_text(\"\u9879\u76ee\u8fdb\u5ea6\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u9879\u76ee\u6982\u51b5\nemail.add_text(\"\u9879\u76ee\u6982\u51b5\", TextType.SECTION_H2)\nemail.add_text(\"\u4ee5\u4e0b\u662f\u672c\u6708\u5404\u9879\u76ee\u7684\u8fdb\u5c55\u60c5\u51b5\uff1a\", TextType.BODY)\n\n# \u521b\u5efa\u6570\u636e\u8868\u683c\ntable = TableWidget()\ntable.set_headers([\"\u9879\u76ee\u540d\u79f0\", \"\u8d1f\u8d23\u4eba\", \"\u8fdb\u5ea6\", \"\u72b6\u6001\"])\n\n# \u6dfb\u52a0\u6570\u636e\u884c\ntable_data = [\n    [\"\u7f51\u7ad9\u91cd\u6784\", \"\u5f20\u4e09\", \"85%\", \"\u8fdb\u884c\u4e2d\"],\n    [\"\u79fb\u52a8\u5e94\u7528\", \"\u674e\u56db\", \"60%\", \"\u8fdb\u884c\u4e2d\"],\n    [\"\u6570\u636e\u5206\u6790\", \"\u738b\u4e94\", \"100%\", \"\u5df2\u5b8c\u6210\"],\n    [\"\u7cfb\u7edf\u4f18\u5316\", \"\u8d75\u516d\", \"30%\", \"\u521a\u5f00\u59cb\"]\n]\n\nfor row in table_data:\n    table.add_row(row)\n\nemail.add_widget(table)\n\n# \u5206\u9694\u7ebf\nemail.add_separator()\n\n# \u6574\u4f53\u8fdb\u5ea6\nemail.add_text(\"\u6574\u4f53\u8fdb\u5ea6\", TextType.SECTION_H2)\n\n# \u8fdb\u5ea6\u6761\u5c55\u793a\nemail.add_progress(68.7, label=\"\u9879\u76ee\u603b\u4f53\u5b8c\u6210\u5ea6\", theme=ProgressTheme.PRIMARY)\nemail.add_progress(85, label=\"\u7f51\u7ad9\u91cd\u6784\", theme=ProgressTheme.SUCCESS)\nemail.add_progress(60, label=\"\u79fb\u52a8\u5e94\u7528\", theme=ProgressTheme.PRIMARY)\nemail.add_progress(30, label=\"\u7cfb\u7edf\u4f18\u5316\", theme=ProgressTheme.PRIMARY)\n\n# \u7ed3\u8bba\nemail.add_text(\"\u603b\u7ed3\", TextType.SECTION_H2)\nemail.add_text(\"\u672c\u6708\u6574\u4f53\u8fdb\u5ea6\u826f\u597d\uff0c\u7f51\u7ad9\u91cd\u6784\u9879\u76ee\u5373\u5c06\u5b8c\u6210\uff0c\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u7cfb\u7edf\u4f18\u5316\u9879\u76ee\u7684\u8fdb\u5c55\u3002\", TextType.BODY)\n\nemail.export_html(\"data_display.html\")\n</code></pre> \u6570\u636e\u5c55\u793a\u793a\u4f8b \u6570\u636e\u5c55\u793a\u793a\u4f8b \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:27:24 <p>\u9879\u76ee\u8fdb\u5ea6\u62a5\u544a</p> 2. \u9879\u76ee\u6982\u51b5 <p>\u4ee5\u4e0b\u662f\u672c\u6708\u5404\u9879\u76ee\u7684\u8fdb\u5c55\u60c5\u51b5\uff1a</p> \u9879\u76ee\u540d\u79f0 \u8d1f\u8d23\u4eba \u8fdb\u5ea6 \u72b6\u6001 \u7f51\u7ad9\u91cd\u6784 \u5f20\u4e09 85% \u8fdb\u884c\u4e2d \u79fb\u52a8\u5e94\u7528 \u674e\u56db 60% \u8fdb\u884c\u4e2d \u6570\u636e\u5206\u6790 \u738b\u4e94 100% \u5df2\u5b8c\u6210 \u7cfb\u7edf\u4f18\u5316 \u8d75\u516d 30% \u521a\u5f00\u59cb 3. \u6574\u4f53\u8fdb\u5ea6 \u9879\u76ee\u603b\u4f53\u5b8c\u6210\u5ea6 68.7% \u7f51\u7ad9\u91cd\u6784 85.0% \u79fb\u52a8\u5e94\u7528 60.0% \u7cfb\u7edf\u4f18\u5316 30.0% 4. \u603b\u7ed3 <p>\u672c\u6708\u6574\u4f53\u8fdb\u5ea6\u826f\u597d\uff0c\u7f51\u7ad9\u91cd\u6784\u9879\u76ee\u5373\u5c06\u5b8c\u6210\uff0c\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u7cfb\u7edf\u4f18\u5316\u9879\u76ee\u7684\u8fdb\u5c55\u3002</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Key Points: - <code>TableWidget</code> for structured data display - <code>add_progress()</code> shortcut method to create progress bars - Different progress bar themes represent different statuses - Combining multiple components enhances information expression</p>"},{"location":"examples/basic/#comprehensive","title":"Comprehensive Application","text":""},{"location":"examples/basic/#complete-system-monitoring-report","title":"Complete System Monitoring Report6.1. \u8d44\u6e90\u4f7f\u7528\u60c5\u51b5","text":"<p>This example shows how to combine multiple components to create a complete system monitoring report:</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.table_widget import TableWidget\nfrom email_widget.core.enums import TextType, AlertType, ProgressTheme\n\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u5468\u62a5\")\n\n# \u62a5\u544a\u6807\u9898\nemail.add_text(\"\u7cfb\u7edf\u76d1\u63a7\u5468\u62a5\", TextType.TITLE_LARGE)\nemail.add_text(\"\u76d1\u63a7\u65f6\u95f4\uff1a2024\u5e747\u67088\u65e5 - 2024\u5e747\u670814\u65e5\", TextType.CAPTION)\n\n# \u7cfb\u7edf\u72b6\u6001\u6982\u89c8\nemail.add_text(\"\u7cfb\u7edf\u72b6\u6001\u6982\u89c8\", TextType.SECTION_H2)\n\n# \u6b63\u5e38\u670d\u52a1\nemail.add_alert(\"Web\u670d\u52a1\u8fd0\u884c\u6b63\u5e38\uff0c\u54cd\u5e94\u65f6\u95f4\u7a33\u5b9a\", AlertType.TIP)\nemail.add_alert(\"\u6570\u636e\u5e93\u8fde\u63a5\u826f\u597d\uff0c\u67e5\u8be2\u6027\u80fd\u4f18\u79c0\", AlertType.TIP)\n\n# \u8b66\u544a\u4fe1\u606f\nemail.add_alert(\"\u7f13\u5b58\u670d\u52a1\u5076\u6709\u5ef6\u8fdf\uff0c\u5efa\u8bae\u5173\u6ce8\", AlertType.WARNING)\n\n# \u5206\u9694\u7ebf\nemail.add_separator()\n\n# \u6027\u80fd\u6307\u6807\nemail.add_text(\"\u5173\u952e\u6027\u80fd\u6307\u6807\", TextType.SECTION_H2)\n\n# \u6027\u80fd\u8868\u683c\nperf_table = TableWidget()\nperf_table.set_headers([\"\u6307\u6807\", \"\u5f53\u524d\u503c\", \"\u76ee\u6807\u503c\", \"\u72b6\u6001\"])\n\nperf_data = [\n    [\"CPU\u4f7f\u7528\u7387\", \"65%\", \"&lt; 80%\", \"\u6b63\u5e38\"],\n    [\"\u5185\u5b58\u4f7f\u7528\u7387\", \"72%\", \"&lt; 85%\", \"\u6b63\u5e38\"],\n    [\"\u78c1\u76d8\u4f7f\u7528\u7387\", \"45%\", \"&lt; 90%\", \"\u6b63\u5e38\"],\n    [\"\u54cd\u5e94\u65f6\u95f4\", \"120ms\", \"&lt; 200ms\", \"\u4f18\u79c0\"]\n]\n\nfor row in perf_data:\n    perf_table.add_row(row)\n\nemail.add_widget(perf_table)\n\n# \u6027\u80fd\u8fdb\u5ea6\u6761\nemail.add_text(\"\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\", TextType.SECTION_H3)\nemail.add_progress(65, label=\"CPU\u4f7f\u7528\u7387\", theme=ProgressTheme.SUCCESS)\nemail.add_progress(72, label=\"\u5185\u5b58\u4f7f\u7528\u7387\", theme=ProgressTheme.SUCCESS)\nemail.add_progress(45, label=\"\u78c1\u76d8\u4f7f\u7528\u7387\", theme=ProgressTheme.SUCCESS)\n\n# \u5206\u9694\u7ebf\nemail.add_separator()\n\n# \u603b\u7ed3\u548c\u5efa\u8bae\nemail.add_text(\"\u603b\u7ed3\u4e0e\u5efa\u8bae\", TextType.SECTION_H2)\nemail.add_text(\"\u672c\u5468\u7cfb\u7edf\u8fd0\u884c\u7a33\u5b9a\uff0c\u5404\u9879\u6307\u6807\u5747\u5728\u6b63\u5e38\u8303\u56f4\u5185\u3002\u5efa\u8bae\uff1a\", TextType.BODY)\n\n# \u5efa\u8bae\u5217\u8868\nemail.add_text(\"1. \u7ee7\u7eed\u76d1\u63a7\u7f13\u5b58\u670d\u52a1\u6027\u80fd\", TextType.BODY)\nemail.add_text(\"2. \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u54cd\u5e94\u901f\u5ea6\", TextType.BODY)\nemail.add_text(\"3. \u5b9a\u671f\u6e05\u7406\u65e5\u5fd7\u6587\u4ef6\uff0c\u4fdd\u6301\u78c1\u76d8\u7a7a\u95f4\u5145\u8db3\", TextType.BODY)\n\n# \u91cd\u8981\u63d0\u9192\nemail.add_alert(\"\u4e0b\u5468\u8ba1\u5212\u8fdb\u884c\u7cfb\u7edf\u7ef4\u62a4\uff0c\u8bf7\u63d0\u524d\u505a\u597d\u51c6\u5907\uff01\", AlertType.IMPORTANT)\n\nemail.export_html(\"system_monitoring.html\")\n</code></pre> \u7cfb\u7edf\u76d1\u63a7\u5468\u62a5 \u7cfb\u7edf\u76d1\u63a7\u5468\u62a5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:27:24 <p>\u7cfb\u7edf\u76d1\u63a7\u5468\u62a5</p> <p>\u76d1\u63a7\u65f6\u95f4\uff1a2024\u5e747\u67088\u65e5 - 2024\u5e747\u670814\u65e5</p> 5. \u7cfb\u7edf\u72b6\u6001\u6982\u89c8 \ud83d\udca1 \u63d0\u793a Web\u670d\u52a1\u8fd0\u884c\u6b63\u5e38\uff0c\u54cd\u5e94\u65f6\u95f4\u7a33\u5b9a \ud83d\udca1 \u63d0\u793a \u6570\u636e\u5e93\u8fde\u63a5\u826f\u597d\uff0c\u67e5\u8be2\u6027\u80fd\u4f18\u79c0 \u26a0\ufe0f \u8b66\u544a \u7f13\u5b58\u670d\u52a1\u5076\u6709\u5ef6\u8fdf\uff0c\u5efa\u8bae\u5173\u6ce8 6. \u5173\u952e\u6027\u80fd\u6307\u6807 \u6307\u6807 \u5f53\u524d\u503c \u76ee\u6807\u503c \u72b6\u6001 CPU\u4f7f\u7528\u7387 65% &lt; 80% \u6b63\u5e38 \u5185\u5b58\u4f7f\u7528\u7387 72% &lt; 85% \u6b63\u5e38 \u78c1\u76d8\u4f7f\u7528\u7387 45% &lt; 90% \u6b63\u5e38 \u54cd\u5e94\u65f6\u95f4 120ms &lt; 200ms \u4f18\u79c0 CPU\u4f7f\u7528\u7387 65.0% \u5185\u5b58\u4f7f\u7528\u7387 72.0% \u78c1\u76d8\u4f7f\u7528\u7387 45.0% 7. \u603b\u7ed3\u4e0e\u5efa\u8bae <p>\u672c\u5468\u7cfb\u7edf\u8fd0\u884c\u7a33\u5b9a\uff0c\u5404\u9879\u6307\u6807\u5747\u5728\u6b63\u5e38\u8303\u56f4\u5185\u3002\u5efa\u8bae\uff1a</p> <p>1. \u7ee7\u7eed\u76d1\u63a7\u7f13\u5b58\u670d\u52a1\u6027\u80fd</p> <p>2. \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u54cd\u5e94\u901f\u5ea6</p> <p>3. \u5b9a\u671f\u6e05\u7406\u65e5\u5fd7\u6587\u4ef6\uff0c\u4fdd\u6301\u78c1\u76d8\u7a7a\u95f4\u5145\u8db3</p> \u2757 \u91cd\u8981 \u4e0b\u5468\u8ba1\u5212\u8fdb\u884c\u7cfb\u7edf\u7ef4\u62a4\uff0c\u8bf7\u63d0\u524d\u505a\u597d\u51c6\u5907\uff01 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Key Points: - Structured report layout from overview to detailed data - Different types of alert messages convey different levels of importance - Tables and progress bars combined to display quantitative data - Proper use of separators to organize content hierarchy</p>"},{"location":"examples/basic/#quick-run","title":"\ud83d\ude80 Quick Run","text":""},{"location":"examples/basic/#environment-setup","title":"Environment Setup","text":"Bash<pre><code># Install EmailWidget\npip install EmailWidget\n\n# Or install from source\ngit clone https://github.com/271374667/EmailWidget.git\ncd EmailWidget\npip install -e .\n</code></pre>"},{"location":"examples/basic/#batch-run-examples","title":"Batch Run Examples","text":"<p>Save any of the above example code as a <code>.py</code> file, then run:</p> Bash<pre><code>python your_example.py\n</code></pre> <p>Generated HTML files can be: - Opened directly in browsers for preview - Sent as email content - Integrated into email sending systems</p>"},{"location":"examples/basic/#email-sending-integration","title":"Email Sending Integration","text":"Python<pre><code>from email_widget import Email, QQEmailSender\n\n# \u521b\u5efa\u90ae\u4ef6\u5185\u5bb9\nemail = Email(\"\u76d1\u63a7\u62a5\u544a\")\nemail.add_text(\"\u7cfb\u7edf\u8fd0\u884c\u6b63\u5e38\", TextType.TITLE_LARGE)\n\n# \u83b7\u53d6HTML\u5185\u5bb9\nhtml_content = email.export_str()\n\n# \u53d1\u9001\u90ae\u4ef6\uff08\u9700\u8981\u914d\u7f6eSMTP\uff09\nsender = QQEmailSender(\n    email_address=\"your_email@qq.com\",\n    password=\"your_password\"  # \u4f7f\u7528\u5e94\u7528\u5bc6\u7801\n)\n\nsender.send_email(\n    to_emails=[\"recipient@example.com\"],\n    subject=\"\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\",\n    html_body=html_content\n)\n</code></pre>"},{"location":"examples/basic/#learning-suggestions","title":"\ud83d\udca1 Learning Suggestions","text":""},{"location":"examples/basic/#progressive-learning-path","title":"Progressive Learning Path","text":"<ol> <li>Beginner Stage - Start with quick start example, master basic concepts</li> <li>Style Stage - Learn text styles, understand component property settings</li> <li>Data Stage - Master tables and progress bars, handle structured data</li> <li>Comprehensive Stage - Combine multiple components, create complete applications</li> </ol>"},{"location":"examples/basic/#practice-recommendations","title":"Practice Recommendations","text":"<ul> <li>\ud83d\udcdd Hands-on Practice - Copy code to run locally</li> <li>\ud83d\udd04 Modify Parameters - Try changing colors, text, data</li> <li>\ud83c\udfa8 Custom Styles - Experiment with different component combinations</li> <li>\ud83d\udce7 Real Applications - Apply examples to actual projects</li> </ul>"},{"location":"examples/basic/#advanced-directions","title":"Advanced Directions","text":"<p>After completing basic examples, you can explore: - Data Reports - In-depth data visualization - System Monitoring - Professional monitoring reports - Real-world Applications - Complex business scenarios</p> <p>Next Step: Try running these examples, then explore more features based on your needs!</p>"},{"location":"examples/data-reports/","title":"Data Report Examples","text":"<p>This page demonstrates how to use EmailWidget to create professional data analysis reports, focusing on integration with pandas and matplotlib.</p>"},{"location":"examples/data-reports/#sales-data-report","title":"Sales Data Report","text":""},{"location":"examples/data-reports/#sales-analysis-based-on-dataframe","title":"Sales Analysis Based on DataFrame \ud83d\udcb0 \u603b\u9500\u552e\u989d                  \ud83d\udccb \u603b\u8ba2\u5355\u6570                  \ud83d\udc64 \u5e73\u5747\u5ba2\u5355\u4ef7                  \ud83d\udcc8 \u589e\u957f\u7387                 \u9500\u552e\u989d\u6708\u5ea6\u8d8b\u52bf","text":"Python<pre><code>import pandas as pd\nfrom email_widget import Email, TableWidget, ChartWidget, TextWidget\nfrom email_widget.core.enums import TextType, TextAlign\nimport matplotlib.pyplot as plt\n\n# \u521b\u5efa\u9500\u552e\u6570\u636e\nsales_data = {\n    '\u6708\u4efd': ['1\u6708', '2\u6708', '3\u6708', '4\u6708', '5\u6708', '6\u6708'],\n    '\u9500\u552e\u989d': [150000, 180000, 220000, 195000, 250000, 280000],\n    '\u8ba2\u5355\u6570': [450, 520, 680, 590, 720, 850],\n    '\u5ba2\u5355\u4ef7': [333, 346, 324, 331, 347, 329]\n}\n\ndf = pd.DataFrame(sales_data)\n\n# \u521b\u5efa\u90ae\u4ef6\u62a5\u544a\nemail = Email(\"2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u62a5\u544a\")\n\n# \u62a5\u544a\u6807\u9898\nemail.add_title(\"\ud83d\udcca 2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u5206\u6790\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u62a5\u544a\u751f\u6210\u65f6\u95f4: {pd.Timestamp.now().strftime('%Y-%m-%d %H:%M')}\", \n               align=TextAlign.RIGHT, color=\"#666666\")\n\n# \u5173\u952e\u6307\u6807\u6c47\u603b\nemail.add_title(\"\ud83d\udcc8 \u5173\u952e\u6307\u6807\", TextType.SECTION_H2)\n\n# \u8ba1\u7b97\u603b\u4f53\u6307\u6807\ntotal_sales = df['\u9500\u552e\u989d'].sum()\ntotal_orders = df['\u8ba2\u5355\u6570'].sum()\navg_order_value = df['\u5ba2\u5355\u4ef7'].mean()\ngrowth_rate = ((df['\u9500\u552e\u989d'].iloc[-1] - df['\u9500\u552e\u989d'].iloc[0]) / df['\u9500\u552e\u989d'].iloc[0]) * 100\n\n# \u4f7f\u7528\u5361\u7247\u5c55\u793a\u5173\u952e\u6307\u6807\nmetrics = [\n    (\"\u603b\u9500\u552e\u989d\", f\"\u00a5{total_sales:,}\", \"\ud83d\udcb0\"),\n    (\"\u603b\u8ba2\u5355\u6570\", f\"{total_orders:,}\", \"\ud83d\udccb\"),\n    (\"\u5e73\u5747\u5ba2\u5355\u4ef7\", f\"\u00a5{avg_order_value:.0f}\", \"\ud83d\udc64\"),\n    (\"\u589e\u957f\u7387\", f\"{growth_rate:.1f}%\", \"\ud83d\udcc8\")\n]\n\nfor title, value, icon in metrics:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u8be6\u7ec6\u6570\u636e\u8868\u683c\nemail.add_title(\"\ud83d\udccb \u8be6\u7ec6\u6570\u636e\", TextType.SECTION_H2)\n\n# \u76f4\u63a5\u4ece DataFrame \u521b\u5efa\u8868\u683c\ntable = TableWidget()\ntable.set_headers(df.columns.tolist())\n\n# \u6dfb\u52a0\u6570\u636e\u884c\u5e76\u683c\u5f0f\u5316\nfor _, row in df.iterrows():\n    formatted_row = [\n        row['\u6708\u4efd'],\n        f\"\u00a5{row['\u9500\u552e\u989d']:,}\",  # \u683c\u5f0f\u5316\u91d1\u989d\n        f\"{row['\u8ba2\u5355\u6570']:,}\",    # \u683c\u5f0f\u5316\u6570\u91cf\n        f\"\u00a5{row['\u5ba2\u5355\u4ef7']:.0f}\" # \u683c\u5f0f\u5316\u5ba2\u5355\u4ef7\n    ]\n    table.add_row(formatted_row)\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u8d8b\u52bf\u5206\u6790\nemail.add_title(\"\ud83d\udcc9 \u8d8b\u52bf\u5206\u6790\", TextType.SECTION_H2)\n\n# \u521b\u5efa\u8d8b\u52bf\u56fe\u8868\nplt.figure(figsize=(10, 6))\nplt.plot(df['\u6708\u4efd'], df['\u9500\u552e\u989d'], marker='o', linewidth=2, label='\u9500\u552e\u989d')\nplt.title('\u9500\u552e\u989d\u8d8b\u52bf', fontsize=14)\nplt.xlabel('\u6708\u4efd')\nplt.ylabel('\u9500\u552e\u989d (\u5143)')\nplt.grid(True, alpha=0.3)\nplt.xticks(rotation=45)\nplt.tight_layout()\n\n# \u4fdd\u5b58\u56fe\u8868\nchart_path = \"sales_trend.png\"\nplt.savefig(chart_path, dpi=150, bbox_inches='tight')\nplt.close()\n\n# \u6dfb\u52a0\u56fe\u8868\u5230\u90ae\u4ef6\nchart = ChartWidget()\nchart.set_chart_path(chart_path) \\\n     .set_title(\"\u9500\u552e\u989d\u6708\u5ea6\u8d8b\u52bf\") \\\n     .set_description(\"\u663e\u793a\u4e0a\u534a\u5e74\u9500\u552e\u989d\u7684\u6708\u5ea6\u53d8\u5316\u60c5\u51b5\")\nemail.add_widget(chart)\n\n# \u5206\u6790\u603b\u7ed3\nemail.add_title(\"\ud83d\udca1 \u5206\u6790\u603b\u7ed3\", TextType.SECTION_H2)\nsummary_text = f\"\"\"\n\u6839\u636e\u4e0a\u534a\u5e74\u6570\u636e\u5206\u6790\uff1a\n\n\u2705 **\u79ef\u6781\u6307\u6807**\n\u2022 \u9500\u552e\u989d\u7a33\u6b65\u589e\u957f\uff0c\u603b\u589e\u957f\u7387\u8fbe\u5230 {growth_rate:.1f}%\n\u2022 6\u6708\u4efd\u521b\u9020\u4e86\u5355\u6708\u6700\u9ad8\u9500\u552e\u989d \u00a5{df['\u9500\u552e\u989d'].max():,}\n\u2022 \u8ba2\u5355\u6570\u6301\u7eed\u589e\u957f\uff0c\u663e\u793a\u5ba2\u6237\u57fa\u7840\u6269\u5927\n\n\u26a0\ufe0f **\u9700\u8981\u5173\u6ce8**\n\u2022 4\u6708\u4efd\u51fa\u73b0\u5c0f\u5e45\u56de\u843d\uff0c\u9700\u5206\u6790\u539f\u56e0\n\u2022 \u5ba2\u5355\u4ef7\u6ce2\u52a8\u8f83\u5927\uff0c\u5efa\u8bae\u4f18\u5316\u4ea7\u54c1\u7ed3\u6784\n\n\ud83c\udfaf **\u4e0b\u534a\u5e74\u5efa\u8bae**\n\u2022 \u4fdd\u6301\u589e\u957f\u52bf\u5934\uff0c\u76ee\u6807\u5e74\u9500\u552e\u989d \u00a5{total_sales * 2:,}\n\u2022 \u52a0\u5f3a4\u6708\u4efd\u540c\u671f\u5e02\u573a\u6d3b\u52a8\n\u2022 \u7a33\u5b9a\u5ba2\u5355\u4ef7\uff0c\u63d0\u5347\u4ea7\u54c1\u4ef7\u503c\n\"\"\"\n\nemail.add_text(summary_text.strip())\n\nemail.export_html(\"sales_report.html\")\nprint(\"\u2705 \u9500\u552e\u6570\u636e\u62a5\u544a\u5df2\u751f\u6210\uff1asales_report.html\")\n</code></pre> 2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u62a5\u544a 2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:27:39 <p>\ud83d\udcca 2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u5206\u6790</p> <p>\u62a5\u544a\u751f\u6210\u65f6\u95f4: 2025-07-07 23:27</p> 1. \ud83d\udcc8 \u5173\u952e\u6307\u6807 \u00a51,275,000 3,810 \u00a5335 86.7% 2. \ud83d\udccb \u8be6\u7ec6\u6570\u636e \u6708\u4efd \u9500\u552e\u989d \u8ba2\u5355\u6570 \u5ba2\u5355\u4ef7 1\u6708 \u00a5150,000 450 \u00a5333 2\u6708 \u00a5180,000 520 \u00a5346 3\u6708 \u00a5220,000 680 \u00a5324 4\u6708 \u00a5195,000 590 \u00a5331 5\u6708 \u00a5250,000 720 \u00a5347 6\u6708 \u00a5280,000 850 \u00a5329 3. \ud83d\udcc9 \u8d8b\u52bf\u5206\u6790 <p>\u663e\u793a\u4e0a\u534a\u5e74\u9500\u552e\u989d\u7684\u6708\u5ea6\u53d8\u5316\u60c5\u51b5</p> 4. \ud83d\udca1 \u5206\u6790\u603b\u7ed3 <p>\u6839\u636e\u4e0a\u534a\u5e74\u6570\u636e\u5206\u6790\uff1a</p> <p>\u2705 **\u79ef\u6781\u6307\u6807**</p> <p>\u2022 \u9500\u552e\u989d\u7a33\u6b65\u589e\u957f\uff0c\u603b\u589e\u957f\u7387\u8fbe\u5230 86.7%</p> <p>\u2022 6\u6708\u4efd\u521b\u9020\u4e86\u5355\u6708\u6700\u9ad8\u9500\u552e\u989d \u00a5280,000</p> <p>\u2022 \u8ba2\u5355\u6570\u6301\u7eed\u589e\u957f\uff0c\u663e\u793a\u5ba2\u6237\u57fa\u7840\u6269\u5927</p> <p>\u26a0\ufe0f **\u9700\u8981\u5173\u6ce8**</p> <p>\u2022 4\u6708\u4efd\u51fa\u73b0\u5c0f\u5e45\u56de\u843d\uff0c\u9700\u5206\u6790\u539f\u56e0</p> <p>\u2022 \u5ba2\u5355\u4ef7\u6ce2\u52a8\u8f83\u5927\uff0c\u5efa\u8bae\u4f18\u5316\u4ea7\u54c1\u7ed3\u6784</p> <p>\ud83c\udfaf **\u4e0b\u534a\u5e74\u5efa\u8bae**</p> <p>\u2022 \u4fdd\u6301\u589e\u957f\u52bf\u5934\uff0c\u76ee\u6807\u5e74\u9500\u552e\u989d \u00a52,550,000</p> <p>\u2022 \u52a0\u5f3a4\u6708\u4efd\u540c\u671f\u5e02\u573a\u6d3b\u52a8</p> <p>\u2022 \u7a33\u5b9a\u5ba2\u5355\u4ef7\uff0c\u63d0\u5347\u4ea7\u54c1\u4ef7\u503c</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Key Features: - Automatic calculation of key business metrics - Direct DataFrame to table conversion - Integrated matplotlib trend chart generation - Data formatting and visualization</p>"},{"location":"examples/data-reports/#financial-report","title":"Financial Report","text":""},{"location":"examples/data-reports/#income-statement-display","title":"Income Statement Display \ud83d\udcb0 \u8425\u4e1a\u6536\u5165                  \ud83d\udcc8 \u51c0\u5229\u6da6                  \ud83d\udcca \u6bdb\u5229\u7387                  \ud83c\udfaf \u51c0\u5229\u7387","text":"Python<pre><code>import pandas as pd\nfrom email_widget import Email, TableWidget, ProgressWidget, AlertWidget\nfrom email_widget.core.enums import TextType, ProgressTheme, AlertType\n\n# \u8d22\u52a1\u6570\u636e\nfinancial_data = {\n    '\u79d1\u76ee': ['\u8425\u4e1a\u6536\u5165', '\u8425\u4e1a\u6210\u672c', '\u6bdb\u5229\u6da6', '\u9500\u552e\u8d39\u7528', '\u7ba1\u7406\u8d39\u7528', '\u8d22\u52a1\u8d39\u7528', '\u8425\u4e1a\u5229\u6da6', '\u51c0\u5229\u6da6'],\n    '\u672c\u671f\u91d1\u989d': [2800000, 1680000, 1120000, 280000, 350000, 45000, 445000, 356000],\n    '\u4e0a\u671f\u91d1\u989d': [2400000, 1440000, 960000, 240000, 320000, 40000, 360000, 288000],\n    '\u9884\u7b97\u91d1\u989d': [3000000, 1800000, 1200000, 300000, 360000, 50000, 490000, 392000]\n}\n\ndf_financial = pd.DataFrame(financial_data)\n\n# \u8ba1\u7b97\u540c\u6bd4\u548c\u9884\u7b97\u5b8c\u6210\u7387\ndf_financial['\u540c\u6bd4\u589e\u957f'] = ((df_financial['\u672c\u671f\u91d1\u989d'] - df_financial['\u4e0a\u671f\u91d1\u989d']) / df_financial['\u4e0a\u671f\u91d1\u989d'] * 100).round(1)\ndf_financial['\u9884\u7b97\u5b8c\u6210\u7387'] = (df_financial['\u672c\u671f\u91d1\u989d'] / df_financial['\u9884\u7b97\u91d1\u989d'] * 100).round(1)\n\n# \u521b\u5efa\u8d22\u52a1\u62a5\u544a\nemail = Email(\"2024\u5e74Q2\u8d22\u52a1\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udcbc 2024\u5e74\u7b2c\u4e8c\u5b63\u5ea6\u8d22\u52a1\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u6838\u5fc3\u8d22\u52a1\u6307\u6807\nemail.add_title(\"\ud83c\udfaf \u6838\u5fc3\u6307\u6807\", TextType.SECTION_H2)\n\n# \u5173\u952e\u6307\u6807\u5361\u7247\nkey_metrics = [\n    (\"\u8425\u4e1a\u6536\u5165\", df_financial.loc[0, '\ufffd\ufffd\ufffd\u671f\u91d1\u989d'], \"\ud83d\udcb0\"),\n    (\"\u51c0\u5229\u6da6\", df_financial.loc[7, '\u672c\u671f\u91d1\u989d'], \"\ud83d\udcc8\"),\n    (\"\u6bdb\u5229\u7387\", f\"{(df_financial.loc[2, '\u672c\u671f\u91d1\u989d'] / df_financial.loc[0, '\u672c\u671f\u91d1\u989d'] * 100):.1f}%\", \"\ud83d\udcca\"),\n    (\"\u51c0\u5229\u7387\", f\"{(df_financial.loc[7, '\u672c\u671f\u91d1\u989d'] / df_financial.loc[0, '\u672c\u671f\u91d1\u989d'] * 100):.1f}%\", \"\ud83c\udfaf\")\n]\n\nfor title, value, icon in key_metrics:\n    if isinstance(value, (int, float)):\n        value = f\"\u00a5{value:,}\"\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u8d22\u52a1\u6570\u636e\u8be6\u8868\nemail.add_title(\"\ud83d\udcca \u8d22\u52a1\u660e\u7ec6\", TextType.SECTION_H2)\n\ntable = TableWidget()\ntable.set_headers(['\u79d1\u76ee', '\u672c\u671f\u91d1\u989d', '\u4e0a\u671f\u91d1\u989d', '\u540c\u6bd4\u589e\u957f', '\u9884\u7b97\u5b8c\u6210\u7387'])\n\nfor _, row in df_financial.iterrows():\n    formatted_row = [\n        row['\u79d1\u76ee'],\n        f\"\u00a5{row['\u672c\u671f\u91d1\u989d']:,}\",\n        f\"\u00a5{row['\u4e0a\u671f\u91d1\u989d']:,}\",\n        f\"{row['\u540c\u6bd4\u589e\u957f']:+.1f}%\",\n        f\"{row['\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\"\n    ]\n    table.add_row(formatted_row)\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u9884\u7b97\u6267\u884c\u60c5\u51b5\nemail.add_title(\"\ud83c\udfaf \u9884\u7b97\u6267\u884c\u5206\u6790\", TextType.SECTION_H2)\n\n# \u4e3a\u4e3b\u8981\u79d1\u76ee\u663e\u793a\u9884\u7b97\u5b8c\u6210\u8fdb\u5ea6\nkey_items = ['\u8425\u4e1a\u6536\u5165', '\u8425\u4e1a\u5229\u6da6', '\u51c0\u5229\u6da6']\nfor item in key_items:\n    row = df_financial[df_financial['\u79d1\u76ee'] == item].iloc[0]\n    completion_rate = row['\u9884\u7b97\u5b8c\u6210\u7387']\n\n    # \u6839\u636e\u5b8c\u6210\u7387\u9009\u62e9\u4e3b\u9898\u8272\n    if completion_rate &gt;= 100:\n        theme = ProgressTheme.SUCCESS\n    elif completion_rate &gt;= 80:\n        theme = ProgressTheme.INFO\n    elif completion_rate &gt;= 60:\n        theme = ProgressTheme.WARNING\n    else:\n        theme = ProgressTheme.ERROR\n\n    email.add_text(f\"\ud83d\udccb {item}\")\n    email.add_progress(\n        value=min(completion_rate, 100),  # \u9650\u5236\u5728100%\u5185\u663e\u793a\n        label=f\"\u9884\u7b97\u5b8c\u6210\u7387: {completion_rate:.1f}%\",\n        theme=theme\n    )\n\n# \u98ce\u9669\u63d0\u793a\nemail.add_title(\"\u26a0\ufe0f \u98ce\u9669\u63d0\u793a\", TextType.SECTION_H2)\n\n# \u5206\u6790\u9884\u7b97\u5b8c\u6210\u60c5\u51b5\uff0c\u751f\u6210\u63d0\u9192\nrisk_items = df_financial[df_financial['\u9884\u7b97\u5b8c\u6210\u7387'] &lt; 90]\nif not risk_items.empty:\n    for _, item in risk_items.iterrows():\n        alert_type = AlertType.WARNING if item['\u9884\u7b97\u5b8c\u6210\u7387'] &gt;= 80 else AlertType.CAUTION\n        email.add_alert(\n            f\"{item['\u79d1\u76ee']}\u9884\u7b97\u5b8c\u6210\u7387\u4ec5\u4e3a{item['\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\uff0c\u9700\u8981\u91cd\u70b9\u5173\u6ce8\",\n            alert_type,\n            \"\u9884\u7b97\u6267\u884c\u9884\u8b66\"\n        )\n\n# \u8d22\u52a1\u5206\u6790\nemail.add_title(\"\ud83d\udcc8 \u8d22\u52a1\u5206\u6790\", TextType.SECTION_H2)\n\nrevenue_growth = df_financial.loc[0, '\u540c\u6bd4\u589e\u957f']\nprofit_growth = df_financial.loc[7, '\u540c\u6bd4\u589e\u957f']\n\nanalysis = f\"\"\"\n**\u7ecf\u8425\u4e1a\u7ee9\u5206\u6790\uff1a**\n\n\ud83d\udcca **\u6536\u5165\u5206\u6790**\n\u2022 \u8425\u4e1a\u6536\u5165\u540c\u6bd4\u589e\u957f {revenue_growth:.1f}%\uff0c\u8868\u73b0{('\u4f18\u79c0' if revenue_growth &gt; 15 else '\u826f\u597d' if revenue_growth &gt; 5 else '\u4e00\u822c')}\n\u2022 \u6536\u5165\u9884\u7b97\u5b8c\u6210\u7387 {df_financial.loc[0, '\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\n\n\ud83d\udcb0 **\u76c8\u5229\u80fd\u529b**\n\u2022 \u51c0\u5229\u6da6\u540c\u6bd4\u589e\u957f {profit_growth:.1f}%\uff0c\u76c8\u5229\u80fd\u529b{'\u663e\u8457\u63d0\u5347' if profit_growth &gt; 20 else '\u7a33\u6b65\u63d0\u5347' if profit_growth &gt; 0 else '\u6709\u6240\u4e0b\u964d'}\n\u2022 \u51c0\u5229\u7387 {(df_financial.loc[7, '\u672c\u671f\u91d1\u989d'] / df_financial.loc[0, '\u672c\u671f\u91d1\u989d'] * 100):.1f}%\uff0c\u4fdd\u6301\u5065\u5eb7\u6c34\u5e73\n\n\ud83c\udfaf **\u9884\u7b97\u6267\u884c**\n\u2022 \u8425\u4e1a\u6536\u5165\u9884\u7b97\u5b8c\u6210\u7387 {df_financial.loc[0, '\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\n\u2022 \u51c0\u5229\u6da6\u9884\u7b97\u5b8c\u6210\u7387 {df_financial.loc[7, '\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\n\"\"\"\n\nemail.add_text(analysis.strip())\n\nemail.export_html(\"financial_report.html\")\nprint(\"\u2705 \u8d22\u52a1\u62a5\u544a\u5df2\u751f\u6210\uff1afinancial_report.html\")\n</code></pre> 2024\u5e74Q2\u8d22\u52a1\u62a5\u544a 2024\u5e74Q2\u8d22\u52a1\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:30:18 <p>\ud83d\udcbc 2024\u5e74\u7b2c\u4e8c\u5b63\u5ea6\u8d22\u52a1\u62a5\u544a</p> 1. \ud83c\udfaf \u6838\u5fc3\u6307\u6807 2800000 356000 40.0% 12.7% 2. \ud83d\udcca \u8d22\u52a1\u660e\u7ec6 \u79d1\u76ee \u672c\u671f\u91d1\u989d \u4e0a\u671f\u91d1\u989d \u540c\u6bd4\u589e\u957f \u9884\u7b97\u5b8c\u6210\u7387 \u8425\u4e1a\u6536\u5165 \u00a52,800,000 \u00a52,400,000 16.7% 93.3% \u8425\u4e1a\u6210\u672c \u00a51,680,000 \u00a51,440,000 16.7% 93.3% \u6bdb\u5229\u6da6 \u00a51,120,000 \u00a5960,000 16.7% 93.3% \u9500\u552e\u8d39\u7528 \u00a5280,000 \u00a5240,000 16.7% 93.3% \u7ba1\u7406\u8d39\u7528 \u00a5350,000 \u00a5320,000 9.4% 97.2% \u8d22\u52a1\u8d39\u7528 \u00a545,000 \u00a540,000 12.5% 90.0% \u8425\u4e1a\u5229\u6da6 \u00a5445,000 \u00a5360,000 23.6% 90.8% \u51c0\u5229\u6da6 \u00a5356,000 \u00a5288,000 23.6% 90.8% 3. \ud83c\udfaf \u9884\u7b97\u6267\u884c\u5206\u6790 <p>\ud83d\udccb \u8425\u4e1a\u6536\u5165</p> \u9884\u7b97\u5b8c\u6210\u7387: 93.3% 93.3% <p>\ud83d\udccb \u8425\u4e1a\u5229\u6da6</p> \u9884\u7b97\u5b8c\u6210\u7387: 90.8% 90.8% <p>\ud83d\udccb \u51c0\u5229\u6da6</p> \u9884\u7b97\u5b8c\u6210\u7387: 90.8% 90.8% 4. \u26a0\ufe0f \u98ce\u9669\u63d0\u793a 5. \ud83d\udcc8 \u8d22\u52a1\u5206\u6790 <p>**\u7ecf\u8425\u4e1a\u7ee9\u5206\u6790\uff1a**</p> <p>\ud83d\udcca **\u6536\u5165\u5206\u6790**</p> <p>\u2022 \u8425\u4e1a\u6536\u5165\u540c\u6bd4\u589e\u957f 16.7%\uff0c\u8868\u73b0\u4f18\u79c0</p> <p>\u2022 \u6536\u5165\u9884\u7b97\u5b8c\u6210\u7387 93.3%</p> <p>\ud83d\udcb0 **\u76c8\u5229\u80fd\u529b**</p> <p>\u2022 \u51c0\u5229\u6da6\u540c\u6bd4\u589e\u957f 23.6%\uff0c\u76c8\u5229\u80fd\u529b\u663e\u8457\u63d0\u5347</p> <p>\u2022 \u51c0\u5229\u7387 12.7%\uff0c\u4fdd\u6301\u5065\u5eb7\u6c34\u5e73</p> <p>\ud83c\udfaf **\u9884\u7b97\u6267\u884c**</p> <p>\u2022 \u8425\u4e1a\u6536\u5165\u9884\u7b97\u5b8c\u6210\u7387 93.3%</p> <p>\u2022 \u51c0\u5229\u6da6\u9884\u7b97\u5b8c\u6210\u7387 90.8%</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Professional Features: - Complete financial statement structure - Automatic calculation of YoY growth and budget completion - Risk alerts and intelligent reminders - Professional financial analysis terminology</p>"},{"location":"examples/data-reports/#product-analysis-report","title":"Product Analysis Report","text":""},{"location":"examples/data-reports/#multi-dimensional-product-data-analysis","title":"Multi-dimensional Product Data Analysis \ud83d\udcb0 \u603b\u9500\u552e\u989d                  \ud83d\udcc8 \u603b\u6bdb\u5229\u6da6                  \u2b50 \u5e73\u5747\u8bc4\u5206                  \ud83c\udfc6 \u6700\u4f73\u9500\u91cf                 \u4ea7\u54c1\u9500\u552e\u989d\u5206\u5e03\u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5173\u7cfb","text":"Python<pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom email_widget import Email, ChartWidget, TableWidget\nfrom email_widget.core.enums import TextType\n\n# \u8bbe\u7f6e\u4e2d\u6587\u5b57\u4f53\uff08\u6839\u636e\u7cfb\u7edf\u8c03\u6574\uff09\nplt.rcParams['font.sans-serif'] = ['SimHei', 'Arial Unicode MS', 'DejaVu Sans']\nplt.rcParams['axes.unicode_minus'] = False\n\n# \u4ea7\u54c1\u9500\u552e\u6570\u636e\nproducts_data = {\n    '\u4ea7\u54c1\u540d\u79f0': ['\u667a\u80fd\u624b\u673aA', '\u667a\u80fd\u624b\u673aB', '\u5e73\u677f\u7535\u8111C', '\u7b14\u8bb0\u672cD', '\u8033\u673aE', '\u5145\u7535\u5668F'],\n    '\u9500\u552e\u6570\u91cf': [1200, 800, 600, 450, 2000, 1500],\n    '\u5355\u4ef7': [2999, 3999, 1999, 5999, 299, 99],\n    '\u6210\u672c': [2100, 2800, 1400, 4200, 180, 60],\n    '\u5e93\u5b58': [300, 150, 200, 100, 500, 800],\n    '\u8bc4\u5206': [4.5, 4.7, 4.2, 4.8, 4.3, 4.0]\n}\n\ndf_products = pd.DataFrame(products_data)\n\n# \u8ba1\u7b97\u884d\u751f\u6307\u6807\ndf_products['\u9500\u552e\u989d'] = df_products['\u9500\u552e\u6570\u91cf'] * df_products['\u5355\u4ef7']\ndf_products['\u6bdb\u5229\u6da6'] = (df_products['\u5355\u4ef7'] - df_products['\u6210\u672c']) * df_products['\u9500\u552e\u6570\u91cf']\ndf_products['\u6bdb\u5229\u7387'] = ((df_products['\u5355\u4ef7'] - df_products['\u6210\u672c']) / df_products['\u5355\u4ef7'] * 100).round(1)\ndf_products['\u5e93\u5b58\u5468\u8f6c'] = (df_products['\u9500\u552e\u6570\u91cf'] / (df_products['\u5e93\u5b58'] + df_products['\u9500\u552e\u6570\u91cf']) * 100).round(1)\n\n# \u521b\u5efa\u4ea7\u54c1\u5206\u6790\u62a5\u544a\nemail = Email(\"\u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udcf1 \u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u4ea7\u54c1\u7ec4\u5408\u6982\u89c8\nemail.add_title(\"\ud83c\udfaf \u4ea7\u54c1\u7ec4\u5408\u6982\u89c8\", TextType.SECTION_H2)\n\n# \u8ba1\u7b97\u603b\u4f53\u6307\u6807\ntotal_revenue = df_products['\u9500\u552e\u989d'].sum()\ntotal_profit = df_products['\u6bdb\u5229\u6da6'].sum()\navg_rating = df_products['\u8bc4\u5206'].mean()\nbest_seller = df_products.loc[df_products['\u9500\u552e\u6570\u91cf'].idxmax(), '\u4ea7\u54c1\u540d\u79f0']\n\noverview_metrics = [\n    (\"\u603b\u9500\u552e\u989d\", f\"\u00a5{total_revenue:,}\", \"\ud83d\udcb0\"),\n    (\"\u603b\u6bdb\u5229\u6da6\", f\"\u00a5{total_profit:,}\", \"\ud83d\udcc8\"),\n    (\"\u5e73\u5747\u8bc4\u5206\", f\"{avg_rating:.1f}\u2605\", \"\u2b50\"),\n    (\"\u6700\u4f73\u9500\u91cf\", best_seller, \"\ud83c\udfc6\")\n]\n\nfor title, value, icon in overview_metrics:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u4ea7\u54c1\u660e\u7ec6\u8868\nemail.add_title(\"\ud83d\udcca \u4ea7\u54c1\u9500\u552e\u660e\u7ec6\", TextType.SECTION_H2)\n\ntable = TableWidget()\ntable.set_headers(['\u4ea7\u54c1', '\u6570\u91cf', '\u5355\u4ef7', '\u9500\u552e\u989d', '\u6bdb\u5229\u7387', '\u8bc4\u5206'])\n\nfor _, row in df_products.iterrows():\n    formatted_row = [\n        row['\u4ea7\u54c1\u540d\u79f0'],\n        f\"{row['\u9500\u552e\u6570\u91cf']:,}\",\n        f\"\u00a5{row['\u5355\u4ef7']:,}\",\n        f\"\u00a5{row['\u9500\u552e\u989d']:,}\",\n        f\"{row['\u6bdb\u5229\u7387']:.1f}%\",\n        f\"{row['\u8bc4\u5206']:.1f}\u2605\"\n    ]\n    table.add_row(formatted_row)\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u9500\u552e\u989d\u5206\u5e03\u56fe\nemail.add_title(\"\ud83d\udcc8 \u9500\u552e\u989d\u5206\u5e03\", TextType.SECTION_H2)\n\nplt.figure(figsize=(10, 6))\ncolors = plt.cm.Set3(range(len(df_products)))\nplt.pie(df_products['\u9500\u552e\u989d'], labels=df_products['\u4ea7\u54c1\u540d\u79f0'], \n        autopct='%1.1f%%', startangle=90, colors=colors)\nplt.title('\u5404\u4ea7\u54c1\u9500\u552e\u989d\u5360\u6bd4', fontsize=14)\nplt.axis('equal')\n\npie_chart_path = \"sales_distribution.png\"\nplt.savefig(pie_chart_path, dpi=150, bbox_inches='tight')\nplt.close()\n\nchart1 = ChartWidget()\nchart1.set_chart_path(pie_chart_path) \\\n      .set_title(\"\u4ea7\u54c1\u9500\u552e\u989d\u5206\u5e03\") \\\n      .set_description(\"\u5c55\u793a\u5404\u4ea7\u54c1\u5bf9\u603b\u9500\u552e\u989d\u7684\u8d21\u732e\u6bd4\u4f8b\")\nemail.add_widget(chart1)\n\n# \u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5173\u7cfb\u5206\u6790\nemail.add_title(\"\ud83d\udd0d \u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5206\u6790\", TextType.SECTION_H2)\n\nplt.figure(figsize=(10, 6))\nscatter = plt.scatter(df_products['\u9500\u552e\u6570\u91cf'], df_products['\u6bdb\u5229\u7387'], \n                     s=df_products['\u8bc4\u5206']*50, alpha=0.7, c=colors)\n\n# \u6dfb\u52a0\u4ea7\u54c1\u6807\u7b7e\nfor i, txt in enumerate(df_products['\u4ea7\u54c1\u540d\u79f0']):\n    plt.annotate(txt, (df_products['\u9500\u552e\u6570\u91cf'].iloc[i], df_products['\u6bdb\u5229\u7387'].iloc[i]),\n                xytext=(5, 5), textcoords='offset points', fontsize=8)\n\nplt.xlabel('\u9500\u552e\u6570\u91cf')\nplt.ylabel('\u6bdb\u5229\u7387 (%)')\nplt.title('\u4ea7\u54c1\u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5173\u7cfb\uff08\u6c14\u6ce1\u5927\u5c0f\u4ee3\u8868\u8bc4\u5206\uff09', fontsize=14)\nplt.grid(True, alpha=0.3)\n\nscatter_chart_path = \"profit_sales_analysis.png\"\nplt.savefig(scatter_chart_path, dpi=150, bbox_inches='tight')\nplt.close()\n\nchart2 = ChartWidget()\nchart2.set_chart_path(scatter_chart_path) \\\n      .set_title(\"\u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5173\u7cfb\") \\\n      .set_description(\"\u5206\u6790\u5404\u4ea7\u54c1\u7684\u76c8\u5229\u80fd\u529b\u4e0e\u5e02\u573a\u8868\u73b0\u7684\u5173\u7cfb\")\nemail.add_widget(chart2)\n\n# \u4ea7\u54c1\u7b56\u7565\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u4ea7\u54c1\u7b56\u7565\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u5206\u6790\u5404\u4ea7\u54c1\u8868\u73b0\nhigh_margin_products = df_products[df_products['\u6bdb\u5229\u7387'] &gt; df_products['\u6bdb\u5229\u7387'].mean()]\nhigh_volume_products = df_products[df_products['\u9500\u552e\u6570\u91cf'] &gt; df_products['\u9500\u552e\u6570\u91cf'].mean()]\nlow_stock_products = df_products[df_products['\u5e93\u5b58\u5468\u8f6c'] &gt; 80]\n\nstrategy_text = f\"\"\"\n**\u57fa\u4e8e\u6570\u636e\u5206\u6790\u7684\u4ea7\u54c1\u7b56\u7565\u5efa\u8bae\uff1a**\n\n\ud83c\udf1f **\u4f18\u52bf\u4ea7\u54c1** (\u9ad8\u6bdb\u5229\u7387)\n{', '.join(high_margin_products['\u4ea7\u54c1\u540d\u79f0'].tolist())}\n\u2022 \u5efa\u8bae\u52a0\u5927\u8425\u9500\u6295\u5165\uff0c\u6269\u5927\u5e02\u573a\u4efd\u989d\n\n\ud83d\udcc8 **\u70ed\u9500\u4ea7\u54c1** (\u9ad8\u9500\u91cf)\n{', '.join(high_volume_products['\u4ea7\u54c1\u540d\u79f0'].tolist())}\n\u2022 \u4fdd\u6301\u5e93\u5b58\u5145\u8db3\uff0c\u4f18\u5316\u4f9b\u5e94\u94fe\n\n\u26a1 **\u5feb\u5468\u8f6c\u4ea7\u54c1** (\u5e93\u5b58\u5468\u8f6c\u7387&gt;80%)\n{', '.join(low_stock_products['\u4ea7\u54c1\u540d\u79f0'].tolist()) if not low_stock_products.empty else '\u6682\u65e0'}\n\u2022 \u53ca\u65f6\u8865\u8d27\uff0c\u907f\u514d\u7f3a\u8d27\u5f71\u54cd\u9500\u552e\n\n\ud83c\udfaf **\u7efc\u5408\u7b56\u7565**\n\u2022 \u91cd\u70b9\u5173\u6ce8\u9ad8\u6bdb\u5229\u7387\u4ea7\u54c1\u7684\u5e02\u573a\u63a8\u5e7f\n\u2022 \u4f18\u5316\u4f4e\u8bc4\u5206\u4ea7\u54c1\u7684\u7528\u6237\u4f53\u9a8c\n\u2022 \u5e73\u8861\u4ea7\u54c1\u7ec4\u5408\uff0c\u964d\u4f4e\u5355\u4e00\u4ea7\u54c1\u4f9d\u8d56\n\"\"\"\n\nemail.add_text(strategy_text.strip())\n\nemail.export_html(\"product_analysis.html\")\nprint(\"\u2705 \u4ea7\u54c1\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1aproduct_analysis.html\")\n</code></pre> \u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a \u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:32:02 <p>\ud83d\udcf1 \u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a</p> 1. \ud83c\udfaf \u4ea7\u54c1\u7ec4\u5408\u6982\u89c8 \u00a511,443,450 \u00a53,503,450 4.4\u2605 \u8033\u673aE 2. \ud83d\udcca \u4ea7\u54c1\u9500\u552e\u660e\u7ec6 \u4ea7\u54c1 \u6570\u91cf \u5355\u4ef7 \u9500\u552e\u989d \u6bdb\u5229\u7387 \u8bc4\u5206 \u667a\u80fd\u624b\u673aA 1,200 \u00a52,999 \u00a53,598,800 30.0% 4.5\u2605 \u667a\u80fd\u624b\u673aB 800 \u00a53,999 \u00a53,199,200 30.0% 4.7\u2605 \u5e73\u677f\u7535\u8111C 600 \u00a51,999 \u00a51,199,400 30.0% 4.2\u2605 \u7b14\u8bb0\u672cD 450 \u00a55,999 \u00a52,699,550 30.0% 4.8\u2605 \u8033\u673aE 2,000 \u00a5299 \u00a5598,000 39.8% 4.3\u2605 \u5145\u7535\u5668F 1,500 \u00a599 \u00a5148,500 39.4% 4.0\u2605 3. \ud83d\udcc8 \u9500\u552e\u989d\u5206\u5e03 <p>\u5c55\u793a\u5404\u4ea7\u54c1\u5bf9\u603b\u9500\u552e\u989d\u7684\u8d21\u732e\u6bd4\u4f8b</p> 4. \ud83d\udd0d \u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5206\u6790 <p>\u5206\u6790\u5404\u4ea7\u54c1\u7684\u76c8\u5229\u80fd\u529b\u4e0e\u5e02\u573a\u8868\u73b0\u7684\u5173\u7cfb</p> 5. \ud83d\udca1 \u4ea7\u54c1\u7b56\u7565\u5efa\u8bae <p>**\u57fa\u4e8e\u6570\u636e\u5206\u6790\u7684\u4ea7\u54c1\u7b56\u7565\u5efa\u8bae\uff1a**</p> <p>\ud83c\udf1f **\u4f18\u52bf\u4ea7\u54c1** (\u9ad8\u6bdb\u5229\u7387)</p> <p>\u8033\u673aE, \u5145\u7535\u5668F</p> <p>\u2022 \u5efa\u8bae\u52a0\u5927\u8425\u9500\u6295\u5165\uff0c\u6269\u5927\u5e02\u573a\u4efd\u989d</p> <p>\ud83d\udcc8 **\u70ed\u9500\u4ea7\u54c1** (\u9ad8\u9500\u91cf)</p> <p>\u667a\u80fd\u624b\u673aA, \u8033\u673aE, \u5145\u7535\u5668F</p> <p>\u2022 \u4fdd\u6301\u5e93\u5b58\u5145\u8db3\uff0c\u4f18\u5316\u4f9b\u5e94\u94fe</p> <p>\u26a1 **\u5feb\u5468\u8f6c\u4ea7\u54c1** (\u5e93\u5b58\u5468\u8f6c\u7387&gt;80%)</p> <p>\u667a\u80fd\u624b\u673aB, \u7b14\u8bb0\u672cD</p> <p>\u2022 \u53ca\u65f6\u8865\u8d27\uff0c\u907f\u514d\u7f3a\u8d27\u5f71\u54cd\u9500\u552e</p> <p>\ud83c\udfaf **\u7efc\u5408\u7b56\u7565**</p> <p>\u2022 \u91cd\u70b9\u5173\u6ce8\u9ad8\u6bdb\u5229\u7387\u4ea7\u54c1\u7684\u5e02\u573a\u63a8\u5e7f</p> <p>\u2022 \u4f18\u5316\u4f4e\u8bc4\u5206\u4ea7\u54c1\u7684\u7528\u6237\u4f53\u9a8c</p> <p>\u2022 \u5e73\u8861\u4ea7\u54c1\u7ec4\u5408\uff0c\u964d\u4f4e\u5355\u4e00\u4ea7\u54c1\u4f9d\u8d56</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Analysis Highlights: - Multi-dimensional product data analysis - Visual charts showing product relationships - Data-driven strategy recommendations - Comprehensive consideration of volume, profit, rating factors</p>"},{"location":"examples/data-reports/#customer-analysis-report","title":"Customer Analysis Report","text":""},{"location":"examples/data-reports/#rfm-customer-value-analysis","title":"RFM Customer Value Analysis \ud83d\udc65 \u5ba2\u6237\u603b\u6570                  \ud83d\udd04 \u5e73\u5747\u8d2d\u4e70\u9891\u6b21                  \ud83d\udcb0 \u5e73\u5747\u8d2d\u4e70\u91d1\u989d                  \ud83d\udcc5 \u5e73\u5747\u95f4\u9694\u5929\u6570","text":"Python<pre><code>import pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom email_widget import Email, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u751f\u6210\u5ba2\u6237\u6570\u636e\nnp.random.seed(42)\ncustomer_data = {\n    '\u5ba2\u6237ID': [f'C{str(i).zfill(4)}' for i in range(1, 101)],\n    '\u6700\u8fd1\u8d2d\u4e70\u5929\u6570': np.random.randint(1, 365, 100),\n    '\u8d2d\u4e70\u9891\u6b21': np.random.randint(1, 20, 100),\n    '\u8d2d\u4e70\u91d1\u989d': np.random.randint(100, 10000, 100)\n}\n\ndf_customers = pd.DataFrame(customer_data)\n\n# RFM\u5206\u6790\u51fd\u6570\ndef rfm_analysis(df):\n    \"\"\"RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\"\"\"\n    # \u8ba1\u7b97RFM\u5206\u4f4d\u6570\n    r_quartiles = pd.qcut(df['\u6700\u8fd1\u8d2d\u4e70\u5929\u6570'], 4, labels=[4, 3, 2, 1])  # \u6700\u8fd1\u8d2d\u4e70\uff0c\u5929\u6570\u8d8a\u5c11\u5206\u503c\u8d8a\u9ad8\n    f_quartiles = pd.qcut(df['\u8d2d\u4e70\u9891\u6b21'].rank(method='first'), 4, labels=[1, 2, 3, 4])\n    m_quartiles = pd.qcut(df['\u8d2d\u4e70\u91d1\u989d'], 4, labels=[1, 2, 3, 4])\n\n    df['R\u5206\u503c'] = r_quartiles\n    df['F\u5206\u503c'] = f_quartiles  \n    df['M\u5206\u503c'] = m_quartiles\n\n    # \u8ba1\u7b97RFM\u7efc\u5408\u5206\u503c\n    df['RFM\u7efc\u5408\u5206\u503c'] = df['R\u5206\u503c'].astype(str) + df['F\u5206\u503c'].astype(str) + df['M\u5206\u503c'].astype(str)\n\n    # \u5ba2\u6237\u5206\u7ea7\n    def customer_segment(rfm_score):\n        score = int(rfm_score)\n        if score &gt;= 444:\n            return '\u91cd\u8981\u4ef7\u503c\u5ba2\u6237'\n        elif score &gt;= 344:\n            return '\u91cd\u8981\u53d1\u5c55\u5ba2\u6237'\n        elif score &gt;= 244:\n            return '\u91cd\u8981\u4fdd\u6301\u5ba2\u6237'\n        elif score &gt;= 144:\n            return '\u91cd\u8981\u633d\u7559\u5ba2\u6237'\n        elif score &gt;= 134:\n            return '\u4e00\u822c\u4ef7\u503c\u5ba2\u6237'\n        elif score &gt;= 124:\n            return '\u4e00\u822c\u53d1\u5c55\u5ba2\u6237'\n        elif score &gt;= 114:\n            return '\u4e00\u822c\u4fdd\u6301\u5ba2\u6237'\n        else:\n            return '\u4e00\u822c\u633d\u7559\u5ba2\u6237'\n\n    df['\u5ba2\u6237\u5206\u7ea7'] = df['RFM\u7efc\u5408\u5206\u503c'].apply(customer_segment)\n    return df\n\n# \u6267\u884cRFM\u5206\u6790\ndf_rfm = rfm_analysis(df_customers.copy())\n\n# \u521b\u5efa\u5ba2\u6237\u5206\u6790\u62a5\u544a\nemail = Email(\"RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udc65 RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u5ba2\u6237\u603b\u4f53\u6982\u51b5\nemail.add_title(\"\ud83d\udcca \u5ba2\u6237\u603b\u4f53\u6982\u51b5\", TextType.SECTION_H2)\n\ntotal_customers = len(df_rfm)\navg_frequency = df_rfm['\u8d2d\u4e70\u9891\u6b21'].mean()\navg_monetary = df_rfm['\u8d2d\u4e70\u91d1\u989d'].mean()\navg_recency = df_rfm['\u6700\u8fd1\u8d2d\u4e70\u5929\u6570'].mean()\n\noverview_stats = [\n    (\"\u5ba2\u6237\u603b\u6570\", f\"{total_customers:,}\", \"\ud83d\udc65\"),\n    (\"\u5e73\u5747\u8d2d\u4e70\u9891\u6b21\", f\"{avg_frequency:.1f}\u6b21\", \"\ud83d\udd04\"),\n    (\"\u5e73\u5747\u8d2d\u4e70\u91d1\u989d\", f\"\u00a5{avg_monetary:,.0f}\", \"\ud83d\udcb0\"),\n    (\"\u5e73\u5747\u95f4\u9694\u5929\u6570\", f\"{avg_recency:.0f}\u5929\", \"\ud83d\udcc5\")\n]\n\nfor title, value, icon in overview_stats:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u5ba2\u6237\u5206\u7ea7\u7edf\u8ba1\nemail.add_title(\"\ud83c\udfaf \u5ba2\u6237\u5206\u7ea7\u5206\u5e03\", TextType.SECTION_H2)\n\nsegment_stats = df_rfm['\u5ba2\u6237\u5206\u7ea7'].value_counts().sort_index()\n\ntable = TableWidget()\ntable.set_headers(['\u5ba2\u6237\u7ea7\u522b', '\u5ba2\u6237\u6570\u91cf', '\u5360\u6bd4', '\u5e73\u5747\u91d1\u989d'])\n\nfor segment, count in segment_stats.items():\n    segment_customers = df_rfm[df_rfm['\u5ba2\u6237\u5206\u7ea7'] == segment]\n    avg_amount = segment_customers['\u8d2d\u4e70\u91d1\u989d'].mean()\n    percentage = (count / total_customers * 100)\n\n    table.add_row([\n        segment,\n        f\"{count:,}\",\n        f\"{percentage:.1f}%\",\n        f\"\u00a5{avg_amount:,.0f}\"\n    ])\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u5404\u7ea7\u522b\u5ba2\u6237\u5360\u6bd4\u8fdb\u5ea6\u6761\nemail.add_title(\"\ud83d\udcc8 \u5ba2\u6237\u5206\u7ea7\u5360\u6bd4\", TextType.SECTION_H2)\n\n# \u5b9a\u4e49\u5ba2\u6237\u7ea7\u522b\u5bf9\u5e94\u7684\u4e3b\u9898\u8272\nsegment_themes = {\n    '\u91cd\u8981\u4ef7\u503c\u5ba2\u6237': ProgressTheme.SUCCESS,\n    '\u91cd\u8981\u53d1\u5c55\u5ba2\u6237': ProgressTheme.INFO,\n    '\u91cd\u8981\u4fdd\u6301\u5ba2\u6237': ProgressTheme.WARNING,\n    '\u91cd\u8981\u633d\u7559\u5ba2\u6237': ProgressTheme.ERROR,\n    '\u4e00\u822c\u4ef7\u503c\u5ba2\u6237': ProgressTheme.SUCCESS,\n    '\u4e00\u822c\u53d1\u5c55\u5ba2\u6237': ProgressTheme.INFO,\n    '\u4e00\u822c\u4fdd\u6301\u5ba2\u6237': ProgressTheme.WARNING,\n    '\u4e00\u822c\u633d\u7559\u5ba2\u6237': ProgressTheme.ERROR\n}\n\nfor segment, count in segment_stats.items():\n    percentage = (count / total_customers * 100)\n    theme = segment_themes.get(segment, ProgressTheme.INFO)\n\n    email.add_text(f\"\ud83d\udd39 {segment}\")\n    email.add_progress(\n        value=percentage,\n        label=f\"{count}\u4eba ({percentage:.1f}%)\",\n        theme=theme\n    )\n\n# \u9ad8\u4ef7\u503c\u5ba2\u6237\u8be6\u60c5\nemail.add_title(\"\u2b50 \u9ad8\u4ef7\u503c\u5ba2\u6237\u5206\u6790\", TextType.SECTION_H2)\n\nhigh_value_customers = df_rfm[df_rfm['\u5ba2\u6237\u5206\u7ea7'].str.contains('\u91cd\u8981\u4ef7\u503c|\u91cd\u8981\u53d1\u5c55')]\n\nif not high_value_customers.empty:\n    hv_table = TableWidget()\n    hv_table.set_headers(['\u5ba2\u6237ID', 'R\u5206\u503c', 'F\u5206\u503c', 'M\u5206\u503c', '\u5ba2\u6237\u7ea7\u522b', '\u8d2d\u4e70\u91d1\u989d'])\n\n    # \u663e\u793a\u524d10\u4e2a\u9ad8\u4ef7\u503c\u5ba2\u6237\n    for _, customer in high_value_customers.head(10).iterrows():\n        hv_table.add_row([\n            customer['\u5ba2\u6237ID'],\n            str(customer['R\u5206\u503c']),\n            str(customer['F\u5206\u503c']),\n            str(customer['M\u5206\u503c']),\n            customer['\u5ba2\u6237\u5206\u7ea7'],\n            f\"\u00a5{customer['\u8d2d\u4e70\u91d1\u989d']:,}\"\n        ])\n\n    hv_table.set_striped(True)\n    email.add_widget(hv_table)\n\n# \u8425\u9500\u7b56\u7565\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u8425\u9500\u7b56\u7565\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u7edf\u8ba1\u5404\u7c7b\u5ba2\u6237\u6bd4\u4f8b\nimportant_customers_pct = (segment_stats.filter(regex='\u91cd\u8981').sum() / total_customers * 100)\nhigh_frequency_pct = (len(df_rfm[df_rfm['\u8d2d\u4e70\u9891\u6b21'] &gt; avg_frequency]) / total_customers * 100)\n\nstrategy_recommendations = f\"\"\"\n**\u57fa\u4e8eRFM\u5206\u6790\u7684\u8425\u9500\u7b56\u7565\u5efa\u8bae\uff1a**\n\n\ud83c\udfaf **\u91cd\u8981\u5ba2\u6237\u7ef4\u62a4** ({important_customers_pct:.1f}%\u7684\u5ba2\u6237)\n\u2022 \u91cd\u8981\u4ef7\u503c\u5ba2\u6237\uff1a\u63d0\u4f9bVIP\u670d\u52a1\uff0c\u4e2a\u6027\u5316\u63a8\u8350\n\u2022 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237\uff1a\u589e\u52a0\u89e6\u8fbe\u9891\u7387\uff0c\u63d0\u5347\u8d2d\u4e70\u9891\u6b21\n\u2022 \u91cd\u8981\u4fdd\u6301\u5ba2\u6237\uff1a\u5b9a\u671f\u5173\u6000\uff0c\u9632\u6b62\u6d41\u5931\n\u2022 \u91cd\u8981\u633d\u7559\u5ba2\u6237\uff1a\u7d27\u6025\u633d\u56de\u7b56\u7565\uff0c\u7279\u522b\u4f18\u60e0\n\n\ud83d\udcc8 **\u4e00\u822c\u5ba2\u6237\u63d0\u5347**\n\u2022 \u4e00\u822c\u4ef7\u503c\u5ba2\u6237\uff1a\u4ea4\u53c9\u9500\u552e\uff0c\u63d0\u5347\u5ba2\u5355\u4ef7\n\u2022 \u4e00\u822c\u53d1\u5c55\u5ba2\u6237\uff1a\u57f9\u517b\u5fe0\u8bda\u5ea6\uff0c\u589e\u52a0\u8d2d\u4e70\u9891\u6b21\n\u2022 \u4e00\u822c\u4fdd\u6301\u5ba2\u6237\uff1a\u4fdd\u6301\u73b0\u72b6\uff0c\u9002\u5ea6\u8425\u9500\n\u2022 \u4e00\u822c\u633d\u7559\u5ba2\u6237\uff1a\u6d41\u5931\u9884\u8b66\uff0c\u633d\u56de\u63aa\u65bd\n\n\ufffd\ufffd **\u91cd\u70b9\u5173\u6ce8\u6307\u6807**\n\u2022 \u9ad8\u9891\u8d2d\u4e70\u5ba2\u6237\u5360\u6bd4\uff1a{high_frequency_pct:.1f}%\n\u2022 \u5e73\u5747\u5ba2\u6237\u751f\u547d\u5468\u671f\uff1a{avg_recency:.0f}\u5929\n\u2022 \u5ba2\u6237\u4ef7\u503c\u63d0\u5347\u6f5c\u529b\uff1a\u5173\u6ce8F\u5206\u503c\u548cM\u5206\u503c\u8f83\u4f4e\u7684\u5ba2\u6237\n\n\ud83d\udcb0 **\u6295\u5165\u4ea7\u51fa\u4f18\u5316**\n\u2022 80%\u7684\u8425\u9500\u8d44\u6e90\u6295\u5165\u5230\u91cd\u8981\u5ba2\u6237\n\u2022 20%\u7684\u8d44\u6e90\u7528\u4e8e\u4e00\u822c\u5ba2\u6237\u7684\u4ef7\u503c\u63d0\u5347\n\u2022 \u5b9a\u671f\u590d\u8bc4RFM\u6a21\u578b\uff0c\u4f18\u5316\u5ba2\u6237\u5206\u7ea7\u6807\u51c6\n\"\"\"\n\nemail.add_text(strategy_recommendations.strip())\n\nemail.export_html(\"rfm_customer_analysis.html\")\nprint(\"\u2705 RFM\u5ba2\u6237\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1arfm_customer_analysis.html\")\n</code></pre> RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:33:03 <p>\ud83d\udc65 RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a</p> 1. \ud83d\udcca \u5ba2\u6237\u603b\u4f53\u6982\u51b5 100 8.8\u6b21 \u00a55,274 195\u5929 2. \ud83c\udfaf \u5ba2\u6237\u5206\u7ea7\u5206\u5e03 \u5ba2\u6237\u7ea7\u522b \u5ba2\u6237\u6570\u91cf \u5360\u6bd4 \u5e73\u5747\u91d1\u989d \u4e00\u822c\u4ef7\u503c\u5ba2\u6237 10 10.0% \u00a55,285 \u4e00\u822c\u4fdd\u6301\u5ba2\u6237 8 8.0% \u00a55,024 \u4e00\u822c\u53d1\u5c55\u5ba2\u6237 2 2.0% \u00a56,724 \u4e00\u822c\u633d\u7559\u5ba2\u6237 4 4.0% \u00a53,874 \u91cd\u8981\u4fdd\u6301\u5ba2\u6237 26 26.0% \u00a55,294 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 26 26.0% \u00a54,721 \u91cd\u8981\u633d\u7559\u5ba2\u6237 24 24.0% \u00a56,044 3. \ud83d\udcc8 \u5ba2\u6237\u5206\u7ea7\u5360\u6bd4 <p>\ud83d\udd39 \u4e00\u822c\u4ef7\u503c\u5ba2\u6237</p> 10\u4eba (10.0%) 10.0% <p>\ud83d\udd39 \u4e00\u822c\u4fdd\u6301\u5ba2\u6237</p> 8\u4eba (8.0%) 8.0% <p>\ud83d\udd39 \u4e00\u822c\u53d1\u5c55\u5ba2\u6237</p> 2\u4eba (2.0%) 2.0% <p>\ud83d\udd39 \u4e00\u822c\u633d\u7559\u5ba2\u6237</p> 4\u4eba (4.0%) 4.0% <p>\ud83d\udd39 \u91cd\u8981\u4fdd\u6301\u5ba2\u6237</p> 26\u4eba (26.0%) 26.0% <p>\ud83d\udd39 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237</p> 26\u4eba (26.0%) 26.0% <p>\ud83d\udd39 \u91cd\u8981\u633d\u7559\u5ba2\u6237</p> 24\u4eba (24.0%) 24.0% 4. \u2b50 \u9ad8\u4ef7\u503c\u5ba2\u6237\u5206\u6790 \u5ba2\u6237ID R\u5206\u503c F\u5206\u503c M\u5206\u503c \u5ba2\u6237\u7ea7\u522b \u8d2d\u4e70\u91d1\u989d C0004 3 4 4 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a58,104 C0005 4 4 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a53,031 C0007 4 1 1 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a5297 C0012 4 2 4 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a59,439 C0013 4 3 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a54,382 C0026 4 1 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a53,076 C0030 4 4 1 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a52,485 C0031 4 1 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a54,836 C0037 4 4 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a54,161 C0039 4 3 3 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a56,387 5. \ud83d\udca1 \u8425\u9500\u7b56\u7565\u5efa\u8bae <p>**\u57fa\u4e8eRFM\u5206\u6790\u7684\u8425\u9500\u7b56\u7565\u5efa\u8bae\uff1a**</p> <p>\ud83c\udfaf **\u91cd\u8981\u5ba2\u6237\u7ef4\u62a4** (76.0%\u7684\u5ba2\u6237)</p> <p>\u2022 \u91cd\u8981\u4ef7\u503c\u5ba2\u6237\uff1a\u63d0\u4f9bVIP\u670d\u52a1\uff0c\u4e2a\u6027\u5316\u63a8\u8350</p> <p>\u2022 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237\uff1a\u589e\u52a0\u89e6\u8fbe\u9891\u7387\uff0c\u63d0\u5347\u8d2d\u4e70\u9891\u6b21</p> <p>\u2022 \u91cd\u8981\u4fdd\u6301\u5ba2\u6237\uff1a\u5b9a\u671f\u5173\u6000\uff0c\u9632\u6b62\u6d41\u5931</p> <p>\u2022 \u91cd\u8981\u633d\u7559\u5ba2\u6237\uff1a\u7d27\u6025\u633d\u56de\u7b56\u7565\uff0c\u7279\u522b\u4f18\u60e0</p> <p>\ud83d\udcc8 **\u4e00\u822c\u5ba2\u6237\u63d0\u5347**</p> <p>\u2022 \u4e00\u822c\u4ef7\u503c\u5ba2\u6237\uff1a\u4ea4\u53c9\u9500\u552e\uff0c\u63d0\u5347\u5ba2\u5355\u4ef7</p> <p>\u2022 \u4e00\u822c\u53d1\u5c55\u5ba2\u6237\uff1a\u57f9\u517b\u5fe0\u8bda\u5ea6\uff0c\u589e\u52a0\u8d2d\u4e70\u9891\u6b21</p> <p>\u2022 \u4e00\u822c\u4fdd\u6301\u5ba2\u6237\uff1a\u4fdd\u6301\u73b0\u72b6\uff0c\u9002\u5ea6\u8425\u9500</p> <p>\u2022 \u4e00\u822c\u633d\u7559\u5ba2\u6237\uff1a\u6d41\u5931\u9884\u8b66\uff0c\u633d\u56de\u63aa\u65bd</p> <p>\ud83d\udd0d **\u91cd\u70b9\u5173\u6ce8\u6307\u6807**</p> <p>\u2022 \u9ad8\u9891\u8d2d\u4e70\u5ba2\u6237\u5360\u6bd4\uff1a49.0%</p> <p>\u2022 \u5e73\u5747\u5ba2\u6237\u751f\u547d\u5468\u671f\uff1a195\u5929</p> <p>\u2022 \u5ba2\u6237\u4ef7\u503c\u63d0\u5347\u6f5c\u529b\uff1a\u5173\u6ce8F\u5206\u503c\u548cM\u5206\u503c\u8f83\u4f4e\u7684\u5ba2\u6237</p> <p>\ud83d\udcb0 **\u6295\u5165\u4ea7\u51fa\u4f18\u5316**</p> <p>\u2022 80%\u7684\u8425\u9500\u8d44\u6e90\u6295\u5165\u5230\u91cd\u8981\u5ba2\u6237</p> <p>\u2022 20%\u7684\u8d44\u6e90\u7528\u4e8e\u4e00\u822c\u5ba2\u6237\u7684\u4ef7\u503c\u63d0\u5347</p> <p>\u2022 \u5b9a\u671f\u590d\u8bc4RFM\u6a21\u578b\uff0c\u4f18\u5316\u5ba2\u6237\u5206\u7ea7\u6807\u51c6</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Analysis Value: - Scientific RFM customer value analysis model - Automated customer segmentation and strategy recommendations - Visual display of customer distribution - Data support for precision marketing</p>"},{"location":"examples/data-reports/#chart-integration","title":"Chart Integration","text":""},{"location":"examples/data-reports/#example-chart-integration","title":"Example Chart Integration","text":"<p>This section can include an example of chart integration with code and explanations.</p>"},{"location":"examples/data-reports/#learning-summary","title":"Learning Summary","text":"<p>Through these data report examples, you have mastered:</p>"},{"location":"examples/data-reports/#core-skills","title":"\ud83c\udfaf Core Skills","text":"<ul> <li>pandas Integration - Seamless DataFrame to table conversion</li> <li>matplotlib Integration - Automatic chart generation and embedding</li> <li>Data Calculation - Automated business metric calculations</li> <li>Formatted Display - Professional data formatting</li> </ul>"},{"location":"examples/data-reports/#report-types","title":"\ud83d\udcca Report Types","text":"<ul> <li>Sales Analysis - Trend analysis and growth calculations</li> <li>Financial Reports - Income statements and budget analysis</li> <li>Product Analysis - Multi-dimensional product evaluation</li> <li>Customer Analysis - RFM value model application</li> </ul>"},{"location":"examples/data-reports/#best-practices","title":"\ud83d\udca1 Best Practices","text":"<ul> <li>Data-driven insight generation</li> <li>Combination of visualization and text explanation</li> <li>Automated metric calculation and anomaly alerts</li> <li>Data-based strategy recommendations</li> </ul>"},{"location":"examples/data-reports/#advanced-directions","title":"\ud83d\ude80 Advanced Directions","text":"<ul> <li>Learn System Monitoring for real-time data display</li> <li>Explore Advanced Examples for custom extensions</li> <li>Reference Real Applications to build complete analysis systems</li> </ul> <p>Continue exploring more advanced features to create professional data analysis reports!</p>"},{"location":"examples/real-world/","title":"Real-world Application Examples","text":"<p>This page showcases complete application cases of EmailWidget in real projects, including comprehensive applications in e-commerce analysis, DevOps monitoring, data science, and other fields.</p>"},{"location":"examples/real-world/#e-commerce-data-analysis-dashboard","title":"E-commerce Data Analysis Dashboard","text":""},{"location":"examples/real-world/#complete-e-commerce-operations-report","title":"Complete E-commerce Operations Report \ud83d\udcb0 \u603b\u9500\u552e\u989d                  \ud83d\udce6 \u8ba2\u5355\u6570\u91cf                  \ud83d\udc65 \u6d3b\u8dc3\u7528\u6237                  \ud83d\udcc8 \u8f6c\u5316\u7387                  \ud83d\udcb3 \u5ba2\u5355\u4ef7","text":"Python<pre><code>import pandas as pd\nfrom datetime import datetime, timedelta\nfrom email_widget import Email\nfrom email_widget.core.enums import TextType, ProgressTheme, AlertType\n\ndef create_ecommerce_dashboard():\n    \"\"\"\u521b\u5efa\u7535\u5546\u6570\u636e\u5206\u6790\u4eea\u8868\u677f\"\"\"\n\n    # \u6a21\u62df\u7535\u5546\u6570\u636e\n    ecommerce_data = {\n        'overview': {\n            'revenue': 12500000,\n            'orders': 8547,\n            'users': 125000,\n            'conversion_rate': 3.2,\n            'avg_order_value': 1462\n        },\n        'products': [\n            {'name': '\u667a\u80fd\u624b\u673a', 'sales': 3200000, 'units': 1200, 'margin': 22.5},\n            {'name': '\u7b14\u8bb0\u672c\u7535\u8111', 'sales': 4800000, 'units': 800, 'margin': 18.3},\n            {'name': '\u5e73\u677f\u7535\u8111', 'sales': 2100000, 'units': 1050, 'margin': 25.1},\n            {'name': '\u667a\u80fd\u624b\u8868', 'sales': 1800000, 'units': 1800, 'margin': 35.2},\n            {'name': '\u8033\u673a', 'sales': 600000, 'units': 2000, 'margin': 45.8}\n        ],\n        'channels': {\n            '\u5b98\u7f51\u76f4\u9500': {'revenue': 6250000, 'orders': 3500, 'rate': 50.0},\n            '\u5929\u732b\u65d7\u8230\u5e97': {'revenue': 3750000, 'orders': 2800, 'rate': 30.0},\n            '\u4eac\u4e1c\u5e97\u94fa': {'revenue': 1875000, 'orders': 1547, 'rate': 15.0},\n            '\u7ebf\u4e0b\u95e8\u5e97': {'revenue': 625000, 'orders': 700, 'rate': 5.0}\n        }\n    }\n\n    email = Email(\"\u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f\")\n\n    # \u62a5\u544a\u6807\u9898\u548c\u65f6\u95f4\n    email.add_title(\"\ud83d\uded2 \u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f\", TextType.TITLE_LARGE)\n    email.add_text(f\"\u62a5\u544a\u5468\u671f: {(datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')} \u81f3 {datetime.now().strftime('%Y-%m-%d')}\")\n\n    # \u6838\u5fc3\u6307\u6807\u6982\u89c8\n    email.add_title(\"\ud83d\udcca \u6838\u5fc3\u6307\u6807\u6982\u89c8\", TextType.SECTION_H2)\n\n    overview = ecommerce_data['overview']\n    metrics = [\n        (\"\u603b\u9500\u552e\u989d\", f\"\u00a5{overview['revenue']:,}\", \"\ud83d\udcb0\"),\n        (\"\u8ba2\u5355\u6570\u91cf\", f\"{overview['orders']:,}\", \"\ud83d\udce6\"),\n        (\"\u6d3b\u8dc3\u7528\u6237\", f\"{overview['users']:,}\", \"\ud83d\udc65\"),\n        (\"\u8f6c\u5316\u7387\", f\"{overview['conversion_rate']:.1f}%\", \"\ud83d\udcc8\"),\n        (\"\u5ba2\u5355\u4ef7\", f\"\u00a5{overview['avg_order_value']:,}\", \"\ud83d\udcb3\")\n    ]\n\n    for title, value, icon in metrics:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # \u4ea7\u54c1\u9500\u552e\u6392\u884c\n    email.add_title(\"\ud83c\udfc6 \u4ea7\u54c1\u9500\u552e\u6392\u884c\", TextType.SECTION_H2)\n\n    product_table_data = [[\"\u4ea7\u54c1\u540d\u79f0\", \"\u9500\u552e\u989d\", \"\u9500\u91cf\", \"\u6bdb\u5229\u7387\", \"\u5e02\u573a\u8868\u73b0\"]]\n\n    for product in ecommerce_data['products']:\n        performance = \"\ud83d\udd25 \u70ed\u9500\" if product['sales'] &gt; 3000000 else \\\n                     \"\ud83d\udcc8 \u826f\u597d\" if product['sales'] &gt; 1500000 else \"\ud83d\udcca \u4e00\u822c\"\n\n        product_table_data.append([\n            product['name'],\n            f\"\u00a5{product['sales']:,}\",\n            f\"{product['units']:,}\u53f0\",\n            f\"{product['margin']:.1f}%\",\n            performance\n        ])\n\n    email.add_table_from_data(\n        data=product_table_data[1:],\n        headers=product_table_data[0],\n        title=\"\u4ea7\u54c1\u9500\u552e\u660e\u7ec6\"\n    )\n\n    # \u9500\u552e\u6e20\u9053\u5206\u6790\n    email.add_title(\"\ud83c\udf10 \u9500\u552e\u6e20\u9053\u5206\u6790\", TextType.SECTION_H2)\n\n    for channel, data in ecommerce_data['channels'].items():\n        # \u6e20\u9053\u5360\u6bd4\u8fdb\u5ea6\u6761\n        theme = ProgressTheme.SUCCESS if data['rate'] &gt;= 30 else \\\n               ProgressTheme.INFO if data['rate'] &gt;= 15 else \\\n               ProgressTheme.WARNING if data['rate'] &gt;= 10 else ProgressTheme.ERROR\n\n        email.add_text(f\"\ud83d\udd39 {channel}\")\n        email.add_progress(\n            value=data['rate'],\n            label=f\"\u00a5{data['revenue']:,} ({data['orders']:,}\u5355)\",\n            theme=theme\n        )\n\n    # \u8fd0\u8425\u5efa\u8bae\n    email.add_title(\"\ud83d\udca1 \u8fd0\u8425\u7b56\u7565\u5efa\u8bae\", TextType.SECTION_H2)\n\n    # \u57fa\u4e8e\u6570\u636e\u5206\u6790\u751f\u6210\u5efa\u8bae\n    top_product = max(ecommerce_data['products'], key=lambda x: x['sales'])\n    high_margin_products = [p for p in ecommerce_data['products'] if p['margin'] &gt; 30]\n\n    suggestions = f\"\"\"\n**\u57fa\u4e8e\u6570\u636e\u5206\u6790\u7684\u8fd0\u8425\u5efa\u8bae\uff1a**\n\n\ud83c\udfaf **\u4ea7\u54c1\u7b56\u7565**\n\u2022 \u91cd\u70b9\u63a8\u5e7f {top_product['name']}\uff0c\u9500\u552e\u989d\u9886\u5148\n\u2022 \u63d0\u5347\u9ad8\u6bdb\u5229\u4ea7\u54c1\u63a8\u5e7f\uff1a{', '.join(p['name'] for p in high_margin_products)}\n\u2022 \u4f18\u5316\u4f4e\u8f6c\u5316\u4ea7\u54c1\u7684\u8425\u9500\u7b56\u7565\n\n\ud83d\udcc8 **\u6e20\u9053\u4f18\u5316**\n\u2022 \u52a0\u5f3a\u5b98\u7f51\u76f4\u9500\u6e20\u9053\u5efa\u8bbe\uff0c\u5360\u6bd4\u5df2\u8fbe50%\n\u2022 \u589e\u52a0\u4eac\u4e1c\u5e97\u94fa\u6295\u5165\uff0c\u63d0\u5347\u5e02\u573a\u4efd\u989d\n\u2022 \u8003\u8651\u5f00\u62d3\u65b0\u7684\u9500\u552e\u6e20\u9053\n\n\ud83d\udcb0 **\u6536\u76ca\u63d0\u5347**\n\u2022 \u5f53\u524d\u5ba2\u5355\u4ef7\u00a5{overview['avg_order_value']:,}\",\n\u2022 \u8f6c\u5316\u7387{overview['conversion_rate']:.1f}%\u6709\u63d0\u5347\u7a7a\u95f4\uff0c\u4f18\u5316\u7528\u6237\u4f53\u9a8c\n\"\"\"\n\n    email.add_text(suggestions.strip())\n\n    # \u98ce\u9669\u63d0\u9192\n    if overview['conversion_rate'] &lt; 3.0:\n        email.add_alert(\n            \"\u8f6c\u5316\u7387\u4f4e\u4e8e3%\uff0c\u5efa\u8bae\u4f18\u5316\u5546\u54c1\u9875\u9762\u548c\u8d2d\u4e70\u6d41\u7a0b\",\n            AlertType.WARNING,\n            \"\u26a0\ufe0f \u8f6c\u5316\u7387\u544a\u8b66\"\n        )\n\n    return email\n\n# \u751f\u6210\u7535\u5546\u4eea\u8868\u677f\necommerce_email = create_ecommerce_dashboard()\necommerce_email.export_html(\"ecommerce_dashboard.html\")\nprint(\"\u2705 \u7535\u5546\u6570\u636e\u4eea\u8868\u677f\u5df2\u751f\u6210\uff1aecommerce_dashboard.html\")\n</code></pre> \u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f \u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:56:58 <p>\ud83d\uded2 \u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f</p> <p>\u62a5\u544a\u5468\u671f: 2025-06-30 \u81f3 2025-07-07</p> 1. \ud83d\udcca \u6838\u5fc3\u6307\u6807\u6982\u89c8 \u00a512,500,000 8,547 125,000 3.2% \u00a51,462 2. \ud83c\udfc6 \u4ea7\u54c1\u9500\u552e\u6392\u884c \u4ea7\u54c1\u540d\u79f0 \u9500\u552e\u989d \u9500\u91cf \u6bdb\u5229\u7387 \u5e02\u573a\u8868\u73b0 \u667a\u80fd\u624b\u673a \u00a53,200,000 1,200\u53f0 22.5% \ud83d\udd25 \u70ed\u9500 \u7b14\u8bb0\u672c\u7535\u8111 \u00a54,800,000 800\u53f0 18.3% \ud83d\udd25 \u70ed\u9500 \u5e73\u677f\u7535\u8111 \u00a52,100,000 1,050\u53f0 25.1% \ud83d\udcc8 \u826f\u597d \u667a\u80fd\u624b\u8868 \u00a51,800,000 1,800\u53f0 35.2% \ud83d\udcc8 \u826f\u597d \u8033\u673a \u00a5600,000 2,000\u53f0 45.8% \ud83d\udcca \u4e00\u822c 3. \ud83c\udf10 \u9500\u552e\u6e20\u9053\u5206\u6790 <p>\ud83d\udd39 \u5b98\u7f51\u76f4\u9500</p> \u00a56,250,000 (3,500\u5355) 50.0% <p>\ud83d\udd39 \u5929\u732b\u65d7\u8230\u5e97</p> \u00a53,750,000 (2,800\u5355) 30.0% <p>\ud83d\udd39 \u4eac\u4e1c\u5e97\u94fa</p> \u00a51,875,000 (1,547\u5355) 15.0% <p>\ud83d\udd39 \u7ebf\u4e0b\u95e8\u5e97</p> \u00a5625,000 (700\u5355) 5.0% 4. \ud83d\udca1 \u8fd0\u8425\u7b56\u7565\u5efa\u8bae <p>**\u57fa\u4e8e\u6570\u636e\u5206\u6790\u7684\u8fd0\u8425\u5efa\u8bae\uff1a**</p> <p>\ud83c\udfaf **\u4ea7\u54c1\u7b56\u7565**</p> <p>\u2022 \u91cd\u70b9\u63a8\u5e7f \u7b14\u8bb0\u672c\u7535\u8111\uff0c\u9500\u552e\u989d\u9886\u5148</p> <p>\u2022 \u63d0\u5347\u9ad8\u6bdb\u5229\u4ea7\u54c1\u63a8\u5e7f\uff1a\u667a\u80fd\u624b\u8868, \u8033\u673a</p> <p>\u2022 \u4f18\u5316\u4f4e\u8f6c\u5316\u4ea7\u54c1\u7684\u8425\u9500\u7b56\u7565</p> <p>\ud83d\udcc8 **\u6e20\u9053\u4f18\u5316**</p> <p>\u2022 \u52a0\u5f3a\u5b98\u7f51\u76f4\u9500\u6e20\u9053\u5efa\u8bbe\uff0c\u5360\u6bd4\u5df2\u8fbe50%</p> <p>\u2022 \u589e\u52a0\u4eac\u4e1c\u5e97\u94fa\u6295\u5165\uff0c\u63d0\u5347\u5e02\u573a\u4efd\u989d</p> <p>\u2022 \u8003\u8651\u5f00\u62d3\u65b0\u7684\u9500\u552e\u6e20\u9053</p> <p>\ud83d\udcb0 **\u6536\u76ca\u63d0\u5347**</p> <p>\u2022 \u5f53\u524d\u5ba2\u5355\u4ef7\u00a51,462\",</p> <p>\u2022 \u8f6c\u5316\u73873.2%\u6709\u63d0\u5347\u7a7a\u95f4\uff0c\u4f18\u5316\u7528\u6237\u4f53\u9a8c</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>E-commerce Dashboard Features: - Core business metrics at a glance - Multi-dimensional product and channel analysis - Data-driven strategy recommendations - Intelligent risk alerts</p>"},{"location":"examples/real-world/#devops-operations-monitoring-center","title":"DevOps Operations Monitoring Center","text":""},{"location":"examples/real-world/#comprehensive-system-monitoring-report","title":"Comprehensive System Monitoring Report \ud83d\udda5\ufe0f \u670d\u52a1\u5668\u603b\u6570                  \u2705 \u5065\u5eb7\u72b6\u6001                  \u26a0\ufe0f \u8b66\u544a\u72b6\u6001                  \ud83c\udfaf \u96c6\u7fa4\u53ef\u7528\u6027","text":"Python<pre><code>def create_devops_monitoring():\n    \"\"\"\u521b\u5efaDevOps\u76d1\u63a7\u4e2d\u5fc3\u62a5\u544a\"\"\"\n\n    # \u6a21\u62df\u76d1\u63a7\u6570\u636e\n    monitoring_data = {\n        'infrastructure': {\n            'servers': [\n                {'name': 'Web-01', 'cpu': 45, 'memory': 68, 'disk': 72, 'status': 'healthy'},\n                {'name': 'Web-02', 'cpu': 52, 'memory': 71, 'disk': 69, 'status': 'healthy'},\n                {'name': 'DB-01', 'cpu': 78, 'memory': 85, 'disk': 91, 'status': 'warning'},\n                {'name': 'Cache-01', 'cpu': 35, 'memory': 42, 'disk': 55, 'status': 'healthy'}\n            ],\n            'services': [\n                {'name': 'API Gateway', 'uptime': 99.95, 'response_time': 120, 'requests': 1250000},\n                {'name': 'User Service', 'uptime': 99.87, 'response_time': 85, 'requests': 856000},\n                {'name': 'Order Service', 'uptime': 98.92, 'response_time': 155, 'requests': 445000},\n                {'name': 'Payment Service', 'uptime': 99.99, 'response_time': 95, 'requests': 198000}\n            ]\n        },\n        'deployment': {\n            'recent_deploys': [\n                {'service': 'User Service', 'version': 'v2.3.1', 'status': 'success', 'time': '2\u5c0f\u65f6\u524d'},\n                {'service': 'API Gateway', 'version': 'v1.8.2', 'status': 'success', 'time': '1\u5929\u524d'},\n                {'service': 'Order Service', 'version': 'v3.1.0', 'status': 'failed', 'time': '3\u5929\u524d'}\n            ]\n        }\n    }\n\n    email = Email(\"DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3\")\n\n    email.add_title(\"\ud83d\udd27 DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3\", TextType.TITLE_LARGE)\n    email.add_text(f\"\u76d1\u63a7\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n    # \u57fa\u7840\u8bbe\u65bd\u72b6\u6001\n    email.add_title(\"\ud83d\udda5\ufe0f \u57fa\u7840\u8bbe\u65bd\u72b6\u6001\", TextType.SECTION_H2)\n\n    # \u670d\u52a1\u5668\u72b6\u6001\u6982\u89c8\n    servers = monitoring_data['infrastructure']['servers']\n    healthy_servers = sum(1 for s in servers if s['status'] == 'healthy')\n    warning_servers = sum(1 for s in servers if s['status'] == 'warning')\n\n    infra_overview = [\n        (\"\u670d\u52a1\u5668\u603b\u6570\", f\"{len(servers)}\", \"\ud83d\udda5\ufe0f\"),\n        (\"\u5065\u5eb7\u72b6\u6001\", f\"{healthy_servers}\", \"\u2705\"),\n        (\"\u8b66\u544a\u72b6\u6001\", f\"{warning_servers}\", \"\u26a0\ufe0f\"),\n        (\"\u96c6\u7fa4\u53ef\u7528\u6027\", \"99.2%\", \"\ud83c\udfaf\")\n    ]\n\n    for title, value, icon in infra_overview:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # \u670d\u52a1\u5668\u8be6\u7ec6\u72b6\u6001\n    server_table_data = [[\"\u670d\u52a1\u5668\", \"CPU\u4f7f\u7528\u7387\", \"\u5185\u5b58\u4f7f\u7528\u7387\", \"\u78c1\u76d8\u4f7f\u7528\u7387\", \"\u72b6\u6001\"]]\n\n    for server in servers:\n        status_emoji = \"\ud83d\udfe2\" if server['status'] == 'healthy' else \\\n                      \"\ud83d\udfe1\" if server['status'] == 'warning' else \"\ud83d\udd34\"\n\n        server_table_data.append([\n            server['name'],\n            f\"{server['cpu']}%\",\n            f\"{server['memory']}%\",\n            f\"{server['disk']}%\",\n            f\"{status_emoji} {server['status']}\"\n        ])\n\n    email.add_table_from_data(\n        data=server_table_data[1:],\n        headers=server_table_data[0],\n        title=\"\u670d\u52a1\u5668\u8d44\u6e90\u4f7f\u7528\u8be6\u60c5\"\n    )\n\n    # \u5e94\u7528\u670d\u52a1\u76d1\u63a7\n    email.add_title(\"\ud83d\ude80 \u5e94\u7528\u670d\u52a1\u76d1\u63a7\", TextType.SECTION_H2)\n\n    services = monitoring_data['infrastructure']['services']\n\n    for service in services:\n        # \u670d\u52a1\u53ef\u7528\u6027\n        uptime_theme = ProgressTheme.SUCCESS if service['uptime'] &gt;= 99.5 else \\\n                      ProgressTheme.WARNING if service['uptime'] &gt;= 99.0 else ProgressTheme.ERROR\n\n        email.add_text(f\"\ud83d\udd39 {service['name']}\")\n        email.add_progress(\n            value=service['uptime'],\n            label=f\"\u53ef\u7528\u6027: {service['uptime']:.2f}% | \u54cd\u5e94\u65f6\u95f4: {service['response_time']}ms\",\n            theme=uptime_theme\n        )\n\n    # \u90e8\u7f72\u5386\u53f2\n    email.add_title(\"\ud83d\udce6 \u6700\u8fd1\u90e8\u7f72\u8bb0\u5f55\", TextType.SECTION_H2)\n\n    deploy_table_data = [[\"\u670d\u52a1\u540d\u79f0\", \"\u7248\u672c\", \"\u90e8\u7f72\u72b6\u6001\", \"\u90e8\u7f72\u65f6\u95f4\"]]\n\n    for deploy in monitoring_data['deployment']['recent_deploys']:\n        status_display = \"\u2705 \u6210\u529f\" if deploy['status'] == 'success' else \\\n                        \"\u274c \u5931\u8d25\" if deploy['status'] == 'failed' else \"\ud83d\udd04 \u8fdb\u884c\u4e2d\"\n\n        deploy_table_data.append([\n            deploy['service'],\n            deploy['version'],\n            status_display,\n            deploy['time']\n        ])\n\n    email.add_table_from_data(\n        data=deploy_table_data[1:],\n        headers=deploy_table_data[0],\n        title=\"\u90e8\u7f72\u8bb0\u5f55\"\n    )\n\n    # \u544a\u8b66\u548c\u5efa\u8bae\n    email.add_title(\"\ud83d\udea8 \u8fd0\u7ef4\u544a\u8b66\", TextType.SECTION_H2)\n\n    # \u68c0\u67e5\u9700\u8981\u5173\u6ce8\u7684\u95ee\u9898\n    alerts = []\n\n    for server in servers:\n        if server['status'] == 'warning':\n            if server['memory'] &gt; 80:\n                alerts.append(f\"{server['name']} \u5185\u5b58\u4f7f\u7528\u7387\u8fc7\u9ad8({server['memory']}%)\")\n            if server['disk'] &gt; 90:\n                alerts.append(f\"{server['name']} \u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3({server['disk']}%)\")\n\n    failed_deploys = [d for d in monitoring_data['deployment']['recent_deploys'] if d['status'] == 'failed']\n    if failed_deploys:\n        for deploy in failed_deploys:\n            alerts.append(f\"{deploy['service']} \u90e8\u7f72\u5931\u8d25\uff0c\u7248\u672c {deploy['version']}\")\n\n    if alerts:\n        for alert in alerts:\n            email.add_alert(alert, AlertType.WARNING, \"\u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66\")\n    else:\n        email.add_alert(\"\u7cfb\u7edf\u8fd0\u884c\u72b6\u6001\u826f\u597d\uff0c\u65e0\u5f02\u5e38\u544a\u8b66\", AlertType.TIP, \"\u2705 \u7cfb\u7edf\u6b63\u5e38\")\n\n    return email\n\n# \u751f\u6210DevOps\u76d1\u63a7\u62a5\u544a\ndevops_email = create_devops_monitoring()\ndevops_email.export_html(\"devops_monitoring.html\")\nprint(\"\u2705 DevOps\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1adevops_monitoring.html\")\n</code></pre> DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3 DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:57:58 <p>\ud83d\udd27 DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3</p> <p>\u76d1\u63a7\u65f6\u95f4: 2025-07-07 23:57:58</p> 1. \ud83d\udda5\ufe0f \u57fa\u7840\u8bbe\u65bd\u72b6\u6001 4 3 1 99.2% \u670d\u52a1\u5668 CPU\u4f7f\u7528\u7387 \u5185\u5b58\u4f7f\u7528\u7387 \u78c1\u76d8\u4f7f\u7528\u7387 \u72b6\u6001 Web-01 45% 68% 72% \ud83d\udfe2 healthy Web-02 52% 71% 69% \ud83d\udfe2 healthy DB-01 78% 85% 91% \ud83d\udfe1 warning Cache-01 35% 42% 55% \ud83d\udfe2 healthy 2. \ud83d\ude80 \u5e94\u7528\u670d\u52a1\u76d1\u63a7 <p>\ud83d\udd39 API Gateway</p> \u53ef\u7528\u6027: 99.95% | \u54cd\u5e94\u65f6\u95f4: 120ms 100.0% <p>\ud83d\udd39 User Service</p> \u53ef\u7528\u6027: 99.87% | \u54cd\u5e94\u65f6\u95f4: 85ms 99.9% <p>\ud83d\udd39 Order Service</p> \u53ef\u7528\u6027: 98.92% | \u54cd\u5e94\u65f6\u95f4: 155ms 98.9% <p>\ud83d\udd39 Payment Service</p> \u53ef\u7528\u6027: 99.99% | \u54cd\u5e94\u65f6\u95f4: 95ms 100.0% 3. \ud83d\udce6 \u6700\u8fd1\u90e8\u7f72\u8bb0\u5f55 \u670d\u52a1\u540d\u79f0 \u7248\u672c \u90e8\u7f72\u72b6\u6001 \u90e8\u7f72\u65f6\u95f4 User Service v2.3.1 \u2705 \u6210\u529f 2\u5c0f\u65f6\u524d API Gateway v1.8.2 \u2705 \u6210\u529f 1\u5929\u524d Order Service v3.1.0 \u274c \u5931\u8d25 3\u5929\u524d 4. \ud83d\udea8 \u8fd0\u7ef4\u544a\u8b66 \u26a0\ufe0f \u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66 DB-01 \u5185\u5b58\u4f7f\u7528\u7387\u8fc7\u9ad8(85%)  \u26a0\ufe0f \u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66 DB-01 \u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3(91%)  \u26a0\ufe0f \u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66 Order Service \u90e8\u7f72\u5931\u8d25\uff0c\u7248\u672c v3.1.0  <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>DevOps Monitoring Features: - Full-stack infrastructure monitoring - Application service health checks - Deployment pipeline tracking - Intelligent alert system</p>"},{"location":"examples/real-world/#data-science-experiment-report","title":"Data Science Experiment Report","text":""},{"location":"examples/real-world/#machine-learning-model-evaluation-report","title":"Machine Learning Model Evaluation Report \ud83d\udcca \u6570\u636e\u96c6\u5927\u5c0f                  \u23f1\ufe0f \u8bad\u7ec3\u65f6\u95f4                  \u2702\ufe0f \u9a8c\u8bc1\u96c6\u6bd4\u4f8b                  \ud83d\udd04 \u4ea4\u53c9\u9a8c\u8bc1                 \u7279\u5f81\u91cd\u8981\u6027\u5206\u5e03","text":"Python<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef create_ml_experiment_report():\n    \"\"\"\u521b\u5efa\u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\"\"\"\n\n    # \u6a21\u62df\u5b9e\u9a8c\u6570\u636e\n    experiment_data = {\n        'model_comparison': [\n            {'name': 'Random Forest', 'accuracy': 0.892, 'precision': 0.885, 'recall': 0.898, 'f1': 0.891},\n            {'name': 'XGBoost', 'accuracy': 0.907, 'precision': 0.902, 'recall': 0.911, 'f1': 0.906},\n            {'name': 'SVM', 'accuracy': 0.875, 'precision': 0.871, 'recall': 0.879, 'f1': 0.875},\n            {'name': 'Neural Network', 'accuracy': 0.923, 'precision': 0.919, 'recall': 0.927, 'f1': 0.923}\n        ],\n        'feature_importance': [\n            {'feature': '\u7528\u6237\u5e74\u9f84', 'importance': 0.23},\n            {'feature': '\u8d2d\u4e70\u5386\u53f2', 'importance': 0.19},\n            {'feature': '\u6d4f\u89c8\u65f6\u957f', 'importance': 0.15},\n            {'feature': '\u8bbe\u5907\u7c7b\u578b', 'importance': 0.12},\n            {'feature': '\u5730\u7406\u4f4d\u7f6e', 'importance': 0.10}\n        ],\n        'training_metrics': {\n            'dataset_size': 125000,\n            'training_time': 45.2,\n            'validation_split': 0.2,\n            'cross_validation_folds': 5\n        }\n    }\n\n    email = Email(\"\u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\")\n\n    email.add_title(\"\ud83e\udde0 \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\", TextType.TITLE_LARGE)\n    email.add_text(\"\u5b9e\u9a8c\u76ee\u6807: \u7528\u6237\u8d2d\u4e70\u610f\u5411\u9884\u6d4b\u6a21\u578b\")\n    email.add_text(f\"\u5b9e\u9a8c\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d')}\")\n\n    # \u5b9e\u9a8c\u6982\u89c8\n    email.add_title(\"\ud83d\udcca \u5b9e\u9a8c\u6982\u89c8\", TextType.SECTION_H2)\n\n    metrics = experiment_data['training_metrics']\n    exp_overview = [\n        (\"\u6570\u636e\u96c6\u5927\u5c0f\", f\"{metrics['dataset_size']:,\u6761\", \"\ud83d\udcca\"),\n        (\"\u8bad\u7ec3\u65f6\u95f4\", f\"{metrics['training_time']:.1f}\u5206\u949f\", \"\u23f1\ufe0f\"),\n        (\"\u9a8c\u8bc1\u96c6\u6bd4\u4f8b\", f\"{metrics['validation_split']*100:.0f}%\", \"\u2702\ufe0f\"),\n        (\"\u4ea4\u53c9\u9a8c\u8bc1\", f\"{metrics['cross_validation_folds']}\u6298\", \"\ud83d\udd04\")\n    ]\n\n    for title, value, icon in exp_overview:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # \u6a21\u578b\u6027\u80fd\u5bf9\u6bd4\n    email.add_title(\"\ud83c\udfc6 \u6a21\u578b\u6027\u80fd\u5bf9\u6bd4\", TextType.SECTION_H2)\n\n    model_table_data = [[\"\u6a21\u578b\", \"\u51c6\u786e\u7387\", \"\u7cbe\u786e\u7387\", \"\u53ec\u56de\u7387\", \"F1\u5206\u6570\", \"\u7efc\u5408\u8bc4\u4ef7\"]]\n\n    for model in experiment_data['model_comparison']:\n        # \u8ba1\u7b97\u7efc\u5408\u8bc4\u4ef7\n        avg_score = (model['accuracy'] + model['precision'] + model['recall'] + model['f1']) / 4\n        rating = \"\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\" if avg_score &gt;= 0.92 else \\\n                \"\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\" if avg_score &gt;= 0.90 else \\\n                \"\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\" if avg_score &gt;= 0.88 else \"\ud83c\udf1f\ud83c\udf1f\"\n\n        model_table_data.append([\n            model['name'],\n            f\"{model['accuracy']:.3f}\",\n            f\"{model['precision']:.3f}\",\n            f\"{model['recall']:.3f}\",\n            f\"{model['f1']:.3f}\",\n            rating\n        ])\n\n    email.add_table_from_data(\n        data=model_table_data[1:],\n        headers=model_table_data[0],\n        title=\"\u6a21\u578b\u6027\u80fd\u6307\u6807\u5bf9\u6bd4\"\n    )\n\n    # \u7279\u5f81\u91cd\u8981\u6027\u5206\u6790\n    email.add_title(\"\ud83d\udd0d \u7279\u5f81\u91cd\u8981\u6027\u5206\u6790\", TextType.SECTION_H2)\n\n    # \u521b\u5efa\u7279\u5f81\u91cd\u8981\u6027\u56fe\u8868\n    features = [f['feature'] for f in experiment_data['feature_importance']]\n    importance = [f['importance'] for f in experiment_data['feature_importance']]\n\n    plt.figure(figsize=(10, 6))\n    bars = plt.barh(features, importance, color=['#3498db', '#2ecc71', '#f39c12', '#e74c3c', '#9b59b6'])\n    plt.title('\u7279\u5f81\u91cd\u8981\u6027\u6392\u5e8f', fontsize=14)\n    plt.xlabel('\u91cd\u8981\u6027\u5206\u6570')\n\n    # \u6dfb\u52a0\u6570\u503c\u6807\u7b7e\n    for bar, imp in zip(bars, importance):\n        plt.text(bar.get_width() + 0.01, bar.get_y() + bar.get_height()/2, \n                f'{imp:.2f}', ha='left', va='center')\n\n    plt.tight_layout()\n    feature_chart_path = \"feature_importance.png\"\n    plt.savefig(feature_chart_path, dpi=150, bbox_inches='tight')\n    plt.close()\n\n    # \u6dfb\u52a0\u56fe\u8868\u5230\u90ae\u4ef6\n    email.add_chart(\n        chart_path=feature_chart_path,\n        title=\"\u7279\u5f81\u91cd\u8981\u6027\u5206\u5e03\",\n        description=\"\u663e\u793a\u5404\u7279\u5f81\u5bf9\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u7684\u5f71\u54cd\u7a0b\u5ea6\"\n    )\n\n    # \u5b9e\u9a8c\u7ed3\u8bba\n    email.add_title(\"\ud83d\udcdd \u5b9e\u9a8c\u7ed3\u8bba\", TextType.SECTION_H2)\n\n    best_model = max(experiment_data['model_comparison'], key=lambda x: x['f1'])\n    top_feature = experiment_data['feature_importance'][0]\n\n    conclusions = f\"\"\"\n**\u5b9e\u9a8c\u7ed3\u8bba\u4e0e\u5efa\u8bae\uff1a**\n\n\ud83c\udfc6 **\u6700\u4f18\u6a21\u578b**\n\u2022 {best_model['name']} \u8868\u73b0\u6700\u4f73\uff0cF1\u5206\u6570\u8fbe\u5230 {best_model['f1']:.3f}\n\u2022 \u5efa\u8bae\u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u7684\u4e3b\u8981\u6a21\u578b\n\n\ud83d\udd0d **\u5173\u952e\u53d1\u73b0**\n\u2022 {top_feature['feature']} \u662f\u6700\u91cd\u8981\u7684\u9884\u6d4b\u7279\u5f81 (\u91cd\u8981\u6027: {top_feature['importance']:.2f})\n\u2022 \u6a21\u578b\u6574\u4f53\u6027\u80fd\u7a33\u5b9a\uff0c\u5404\u6307\u6807\u5747\u8861\n\u2022 \u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c\u4e00\u81f4\uff0c\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u5f3a\n\n\ud83d\ude80 **\u540e\u7eed\u5de5\u4f5c**\n\u2022 \u8fdb\u884c\u8d85\u53c2\u6570\u4f18\u5316\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u6027\u80fd\n\u2022 \u6536\u96c6\u66f4\u591a\u6837\u672c\u6570\u636e\uff0c\u7279\u522b\u662f\u8fb9\u7f18\u6848\u4f8b\n\u2022 \u5f00\u53d1\u6a21\u578b\u89e3\u91ca\u6027\u5de5\u5177\uff0c\u63d0\u9ad8\u4e1a\u52a1\u53ef\u7406\u89e3\u6027\n\u2022 \u5efa\u7acbA/B\u6d4b\u8bd5\u6846\u67b6\uff0c\u9a8c\u8bc1\u7ebf\u4e0a\u6548\u679c\n\"\"\"\n\n    email.add_text(conclusions.strip())\n\n    # \u6a21\u578b\u90e8\u7f72\u5efa\u8bae\n    if best_model['accuracy'] &gt; 0.9:\n        email.add_alert(\n            f\"{best_model['name']} \u6a21\u578b\u6027\u80fd\u4f18\u79c0\uff0c\u5efa\u8bae\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\",\n            AlertType.TIP,\n            \"\u2705 \u90e8\u7f72\u5efa\u8bae\"\n        )\n    else:\n        email.add_alert(\n            \"\u6a21\u578b\u6027\u80fd\u6709\u5f85\u63d0\u5347\uff0c\u5efa\u8bae\u8fdb\u4e00\u6b65\u4f18\u5316\u540e\u518d\u90e8\u7f72\",\n            AlertType.WARNING,\n            \"\u26a0\ufe0f \u6027\u80fd\u63d0\u9192\"\n        )\n\n    return email\n\n# \u751f\u6210\u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\nml_email = create_ml_experiment_report()\nml_email.export_html(\"ml_experiment_report.html\")\nprint(\"\u2705 \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\u5df2\u751f\u6210\uff1aml_experiment_report.html\")\n</code></pre> \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:58:57 <p>\ud83e\udde0 \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a</p> <p>\u5b9e\u9a8c\u76ee\u6807: \u7528\u6237\u8d2d\u4e70\u610f\u5411\u9884\u6d4b\u6a21\u578b</p> <p>\u5b9e\u9a8c\u65f6\u95f4: 2025-07-07</p> 1. \ud83d\udcca \u5b9e\u9a8c\u6982\u89c8 125,000\u6761 45.2\u5206\u949f 20% 5\u6298 2. \ud83c\udfc6 \u6a21\u578b\u6027\u80fd\u5bf9\u6bd4 \u6a21\u578b \u51c6\u786e\u7387 \u7cbe\u786e\u7387 \u53ec\u56de\u7387 F1\u5206\u6570 \u7efc\u5408\u8bc4\u4ef7 Random Forest 0.892 0.885 0.898 0.891 \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f XGBoost 0.907 0.902 0.911 0.906 \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f SVM 0.875 0.871 0.879 0.875 \ud83c\udf1f\ud83c\udf1f Neural Network 0.923 0.919 0.927 0.923 \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f 3. \ud83d\udd0d \u7279\u5f81\u91cd\u8981\u6027\u5206\u6790 <p>\u663e\u793a\u5404\u7279\u5f81\u5bf9\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u7684\u5f71\u54cd\u7a0b\u5ea6</p> 4. \ud83d\udcdd \u5b9e\u9a8c\u7ed3\u8bba <p>**\u5b9e\u9a8c\u7ed3\u8bba\u4e0e\u5efa\u8bae\uff1a**</p> <p>\ud83c\udfc6 **\u6700\u4f18\u6a21\u578b**</p> <p>\u2022 Neural Network \u8868\u73b0\u6700\u4f73\uff0cF1\u5206\u6570\u8fbe\u5230 0.923</p> <p>\u2022 \u5efa\u8bae\u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u7684\u4e3b\u8981\u6a21\u578b</p> <p>\ud83d\udd0d **\u5173\u952e\u53d1\u73b0**</p> <p>\u2022 \u7528\u6237\u5e74\u9f84 \u662f\u6700\u91cd\u8981\u7684\u9884\u6d4b\u7279\u5f81 (\u91cd\u8981\u6027: 0.23)</p> <p>\u2022 \u6a21\u578b\u6574\u4f53\u6027\u80fd\u7a33\u5b9a\uff0c\u5404\u6307\u6807\u5747\u8861</p> <p>\u2022 \u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c\u4e00\u81f4\uff0c\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u5f3a</p> <p>\ud83d\ude80 **\u540e\u7eed\u5de5\u4f5c**</p> <p>\u2022 \u8fdb\u884c\u8d85\u53c2\u6570\u4f18\u5316\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u6027\u80fd</p> <p>\u2022 \u6536\u96c6\u66f4\u591a\u6837\u672c\u6570\u636e\uff0c\u7279\u522b\u662f\u8fb9\u7f18\u6848\u4f8b</p> <p>\u2022 \u5f00\u53d1\u6a21\u578b\u89e3\u91ca\u6027\u5de5\u5177\uff0c\u63d0\u9ad8\u4e1a\u52a1\u53ef\u7406\u89e3\u6027</p> <p>\u2022 \u5efa\u7acbA/B\u6d4b\u8bd5\u6846\u67b6\uff0c\u9a8c\u8bc1\u7ebf\u4e0a\u6548\u679c</p> \ud83d\udca1 \u2705 \u90e8\u7f72\u5efa\u8bae Neural Network \u6a21\u578b\u6027\u80fd\u4f18\u79c0\uff0c\u5efa\u8bae\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Data Science Report Features: - Comprehensive model evaluation metrics - Visual feature importance - Scientific experiment records - Actionable conclusion recommendations</p>"},{"location":"examples/real-world/#project-management-dashboard","title":"Project Management Dashboard","text":""},{"location":"examples/real-world/#agile-development-progress-tracking","title":"Agile Development Progress Tracking \ud83d\udc65 \u56e2\u961f\u89c4\u6a21                  \ud83d\udcc5 \u5f00\u59cb\u65f6\u95f4                  \ud83c\udfaf \u76ee\u6807\u65f6\u95f4                  \ud83d\udd04 \u5f53\u524d\u8fed\u4ee3                  \ud83d\udcca \u4ee3\u7801\u8986\u76d6\u7387                  \ud83d\udc1b \u5f85\u4fee\u590dBug                  \u2705 \u5df2\u4fee\u590dBug                  \u26a0\ufe0f \u6280\u672f\u503a\u52a1","text":"Python<pre><code>def create_project_management_dashboard():\n    \"\"\"\u521b\u5efa\u9879\u76ee\u7ba1\u7406\u770b\u677f\"\"\"\n\n    # \u9879\u76ee\u6570\u636e\n    project_data = {\n        'project_info': {\n            'name': 'EmailWidget v2.0',\n            'start_date': '2024-01-01',\n            'target_date': '2024-03-31',\n            'team_size': 8,\n            'current_sprint': 'Sprint 6'\n        },\n        'sprint_progress': {\n            'total_story_points': 120,\n            'completed_points': 95,\n            'in_progress_points': 15,\n            'remaining_points': 10\n        },\n        'tasks': [\n            {'title': '\u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf', 'status': 'completed', 'assignee': '\u5f20\u4e09', 'points': 13},\n            {'title': '\u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6', 'status': 'in_progress', 'assignee': '\u674e\u56db', 'points': 8},\n            {'title': '\u79fb\u52a8\u7aef\u9002\u914d', 'status': 'in_progress', 'assignee': '\u738b\u4e94', 'points': 5},\n            {'title': '\u6027\u80fd\u4f18\u5316', 'status': 'todo', 'assignee': '\u8d75\u516d', 'points': 8},\n            {'title': '\u6587\u6863\u66f4\u65b0', 'status': 'todo', 'assignee': '\u5b59\u4e03', 'points': 2}\n        ],\n        'quality_metrics': {\n            'code_coverage': 87.5,\n            'bugs_open': 12,\n            'bugs_resolved': 45,\n            'tech_debt_hours': 24\n        }\n    }\n\n    email = Email(\"\u9879\u76ee\u7ba1\u7406\u770b\u677f\")\n\n    email.add_title(\"\ud83d\udccb \u9879\u76ee\u7ba1\u7406\u770b\u677f\", TextType.TITLE_LARGE)\n\n    # \u9879\u76ee\u6982\u89c8\n    project_info = project_data['project_info']\n    email.add_text(f\"\u9879\u76ee\u540d\u79f0: {project_info['name']}\")\n    email.add_text(f\"\u5f53\u524d\u8fed\u4ee3: {project_info['current_sprint']}\")\n\n    project_overview = [\n        (\"\u56e2\u961f\u89c4\u6a21\", f\"{project_info['team_size']}\u4eba\", \"\ud83d\udc65\"),\n        (\"\u5f00\u59cb\u65f6\u95f4\", project_info['start_date'], \"\ud83d\udcc5\"),\n        (\"\u76ee\u6807\u65f6\u95f4\", project_info['target_date'], \"\ud83c\udfaf\"),\n        (\"\u5f53\u524d\u8fed\u4ee3\", project_info['current_sprint'], \"\ud83d\udd04\")\n    ]\n\n    for title, value, icon in project_overview:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # Sprint\u8fdb\u5ea6\n    email.add_title(\"\ud83d\ude80 Sprint \u8fdb\u5ea6\", TextType.SECTION_H2)\n\n    sprint = project_data['sprint_progress']\n    completed_rate = (sprint['completed_points'] / sprint['total_story_points']) * 100\n\n    email.add_progress(\n        value=completed_rate,\n        label=f\"\u5df2\u5b8c\u6210: {sprint['completed_points']}/{sprint['total_story_points']} \u6545\u4e8b\u70b9 ({completed_rate:.1f}%)\",\n        theme=ProgressTheme.SUCCESS if completed_rate &gt; 80 else ProgressTheme.INFO\n    )\n\n    # \u4efb\u52a1\u72b6\u6001\u5206\u5e03\n    email.add_title(\"\ud83d\udcca \u4efb\u52a1\u72b6\u6001\u5206\u5e03\", TextType.SECTION_H2)\n\n    tasks = project_data['tasks']\n    status_counts = {\n        'completed': len([t for t in tasks if t['status'] == 'completed']),\n        'in_progress': len([t for t in tasks if t['status'] == 'in_progress']),\n        'todo': len([t for t in tasks if t['status'] == 'todo'])\n    }\n\n    total_tasks = len(tasks)\n\n    for status, count in status_counts.items():\n        status_name = {'completed': '\u5df2\u5b8c\u6210', 'in_progress': '\u8fdb\u884c\u4e2d', 'todo': '\u5f85\u5f00\u59cb'}[status]\n        status_theme = {'completed': ProgressTheme.SUCCESS, 'in_progress': ProgressTheme.INFO, 'todo': ProgressTheme.WARNING}[status]\n        percentage = (count / total_tasks) * 100\n\n        email.add_text(f\"\ud83d\udd39 {status_name}\")\n        email.add_progress(percentage, f\"{count} \u4e2a\u4efb\u52a1 ({percentage:.1f}%)\", theme=status_theme)\n\n    # \u4efb\u52a1\u8be6\u60c5\n    email.add_title(\"\ud83d\udccb \u4efb\u52a1\u8be6\u60c5\", TextType.SECTION_H2)\n\n    task_table_data = [[\"\u4efb\u52a1\u540d\u79f0\", \"\u72b6\u6001\", \"\u8d1f\u8d23\u4eba\", \"\u6545\u4e8b\u70b9\", \"\u8fdb\u5ea6\"]]\n\n    for task in tasks:\n        status_emoji = {\"completed\": \"\u2705\", \"in_progress\": \"\ud83d\udd04\", \"todo\": \"\u23f3\"}[task['status']]\n        status_text = {\"completed\": \"\u5df2\u5b8c\u6210\", \"in_progress\": \"\u8fdb\u884c\u4e2d\", \"todo\": \"\u5f85\u5f00\u59cb\"}[task['status']]\n\n        task_table_data.append([\n            task['title'],\n            f\"{status_emoji} {status_text}\",\n            task['assignee'],\n            str(task['points']),\n            \"100%\" if task['status'] == 'completed' else \"50%\" if task['status'] == 'in_progress' else \"0%\"\n        ])\n\n    email.add_table_from_data(\n        data=task_table_data[1:],\n        headers=task_table_data[0],\n        title=\"\u4efb\u52a1\u5206\u914d\u548c\u8fdb\u5ea6\"\n    )\n\n    # \u8d28\u91cf\u6307\u6807\n    email.add_title(\"\ud83d\udd0d \u8d28\u91cf\u6307\u6807\", TextType.SECTION_H2)\n\n    quality = project_data['quality_metrics']\n\n    quality_overview = [\n        (\"\u4ee3\u7801\u8986\u76d6\u7387\", f\"{quality['code_coverage']:.1f}%\", \"\ud83d\udcca\"),\n        (\"\u5f85\u4fee\u590dBug\", f\"{quality['bugs_open']}\", \"\ud83d\udc1b\"),\n        (\"\u5df2\u4fee\u590dBug\", f\"{quality['bugs_resolved']}\", \"\u2705\"),\n        (\"\u6280\u672f\u503a\u52a1\", f\"{quality['tech_debt_hours']}\u5c0f\u65f6\", \"\u26a0\ufe0f\")\n    ]\n\n    for title, value, icon in quality_overview:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # \u9879\u76ee\u98ce\u9669\u548c\u5efa\u8bae\n    email.add_title(\"\ud83d\udca1 \u9879\u76ee\u72b6\u6001\u8bc4\u4f30\", TextType.SECTION_H2)\n\n    # \u57fa\u4e8e\u6570\u636e\u751f\u6210\u8bc4\u4f30\n    risks = []\n    if completed_rate &lt; 70:\n        risks.append(\"Sprint\u8fdb\u5ea6\u6ede\u540e\uff0c\u53ef\u80fd\u5f71\u54cd\u4ea4\u4ed8\u65f6\u95f4\")\n    if quality['code_coverage'] &lt; 80:\n        risks.append(\"\u4ee3\u7801\u8986\u76d6\u7387\u504f\u4f4e\uff0c\u9700\u8981\u52a0\u5f3a\u6d4b\u8bd5\")\n    if quality['bugs_open'] &gt; 15:\n        risks.append(\"\u5f85\u4fee\u590dBug\u8f83\u591a\uff0c\u5f71\u54cd\u4ea7\u54c1\u8d28\u91cf\")\n\n    if risks:\n        for risk in risks:\n            email.add_alert(risk, AlertType.WARNING, \"\u26a0\ufe0f \u9879\u76ee\u98ce\u9669\")\n    else:\n        email.add_alert(\"\u9879\u76ee\u8fdb\u5c55\u987a\u5229\uff0c\u5404\u9879\u6307\u6807\u6b63\u5e38\", AlertType.TIP, \"\u2705 \u9879\u76ee\u72b6\u6001\u826f\u597d\")\n\n    return email\n\n# \u751f\u6210\u9879\u76ee\u7ba1\u7406\u770b\u677f\npm_email = create_project_management_dashboard()\npm_email.export_html(\"project_management_dashboard.html\")\nprint(\"\u2705 \u9879\u76ee\u7ba1\u7406\u770b\u677f\u5df2\u751f\u6210\uff1aproject_management_dashboard.html\")\n</code></pre> \u9879\u76ee\u7ba1\u7406\u770b\u677f \u9879\u76ee\u7ba1\u7406\u770b\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670808\u65e5 00:00:15 <p>\ud83d\udccb \u9879\u76ee\u7ba1\u7406\u770b\u677f</p> <p>\u9879\u76ee\u540d\u79f0: EmailWidget v2.0</p> <p>\u5f53\u524d\u8fed\u4ee3: Sprint 6</p> 8\u4eba 2024-01-01 2024-03-31 Sprint 6 1. \ud83d\ude80 Sprint \u8fdb\u5ea6 \u5df2\u5b8c\u6210: 95/120 \u6545\u4e8b\u70b9 (79.2%) 79.2% 2. \ud83d\udcca \u4efb\u52a1\u72b6\u6001\u5206\u5e03 <p>\ud83d\udd39 \u5df2\u5b8c\u6210</p> 1 \u4e2a\u4efb\u52a1 (20.0%) 20.0% <p>\ud83d\udd39 \u8fdb\u884c\u4e2d</p> 2 \u4e2a\u4efb\u52a1 (40.0%) 40.0% <p>\ud83d\udd39 \u5f85\u5f00\u59cb</p> 2 \u4e2a\u4efb\u52a1 (40.0%) 40.0% 3. \ud83d\udccb \u4efb\u52a1\u8be6\u60c5 \u4efb\u52a1\u540d\u79f0 \u72b6\u6001 \u8d1f\u8d23\u4eba \u6545\u4e8b\u70b9 \u8fdb\u5ea6 \u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf \u2705 \u5df2\u5b8c\u6210 \u5f20\u4e09 13 100% \u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6 \ud83d\udd04 \u8fdb\u884c\u4e2d \u674e\u56db 8 50% \u79fb\u52a8\u7aef\u9002\u914d \ud83d\udd04 \u8fdb\u884c\u4e2d \u738b\u4e94 5 50% \u6027\u80fd\u4f18\u5316 \u23f3 \u5f85\u5f00\u59cb \u8d75\u516d 8 0% \u6587\u6863\u66f4\u65b0 \u23f3 \u5f85\u5f00\u59cb \u5b59\u4e03 2 0% 4. \ud83d\udd0d \u8d28\u91cf\u6307\u6807 87.5% 12 45 24\u5c0f\u65f6 5. \ud83d\udca1 \u9879\u76ee\u72b6\u6001\u8bc4\u4f30 \ud83d\udca1 \u2705 \u9879\u76ee\u72b6\u6001\u826f\u597d \u9879\u76ee\u8fdb\u5c55\u987a\u5229\uff0c\u5404\u9879\u6307\u6807\u6b63\u5e38 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Project Management Features: - Agile development progress tracking - Team task assignment management - Quality metrics monitoring - Risk identification and alerts</p>"},{"location":"examples/real-world/#learning-summary","title":"Learning Summary","text":"<p>Through these real-world application examples, you have seen:</p>"},{"location":"examples/real-world/#application-domains","title":"\ud83c\udf1f Application Domains","text":"<ul> <li>E-commerce Operations - Data-driven business decisions</li> <li>DevOps Operations - Full-stack system monitoring</li> <li>Data Science - Machine learning experiment management</li> <li>Project Management - Agile development tracking</li> </ul>"},{"location":"examples/real-world/#core-value","title":"\ud83c\udfaf Core Value","text":"<ul> <li>Transform complex data into intuitive reports</li> <li>Support professional applications across multiple domains</li> <li>Provide decision support and insights</li> <li>Automate report generation processes</li> </ul>"},{"location":"examples/real-world/#design-philosophy","title":"\ud83d\udca1 Design Philosophy","text":"<ul> <li>Data-driven visualization</li> <li>Business-oriented information display</li> <li>Intelligent analysis and recommendations</li> <li>Responsive interactive experience</li> </ul>"},{"location":"examples/real-world/#extension-directions","title":"\ud83d\ude80 Extension Directions","text":"<ul> <li>Integrate more data sources</li> <li>Develop industry-specific templates</li> <li>Enhance real-time monitoring capabilities</li> <li>Build report distribution systems</li> </ul> <p>These real-world application cases demonstrate the powerful capabilities of EmailWidget in real business scenarios. You can create professional data reporting systems based on these examples according to your business needs!</p>"},{"location":"examples/spider-reports/","title":"Spider Report Examples","text":"<p>This page demonstrates how to use EmailWidget to create professional monitoring reports for web scraping and data collection projects.</p>"},{"location":"examples/spider-reports/#spider-task-monitoring","title":"Spider Task Monitoring","text":""},{"location":"examples/spider-reports/#data-collection-progress-tracking","title":"Data Collection Progress Tracking \ud83c\udfaf \u4efb\u52a1\u603b\u6570                  \ud83d\udd04 \u8fd0\u884c\u4e2d                  \u2705 \u5df2\u5b8c\u6210                  \ud83d\udce6 \u603b\u91c7\u96c6\u91cf","text":"Python<pre><code>from datetime import datetime, timedelta\nimport random\nfrom email_widget import Email, ProgressWidget, TableWidget, StatusWidget\nfrom email_widget.core.enums import TextType, ProgressTheme, StatusType\n\n# \u6a21\u62df\u722c\u866b\u4efb\u52a1\u6570\u636e\nspider_tasks = [\n    {\n        'name': '\u7535\u5546\u4ea7\u54c1\u4fe1\u606f\u91c7\u96c6',\n        'target_count': 10000,\n        'completed_count': 8500,\n        'success_rate': 95.2,\n        'avg_speed': 120,  # \u6761/\u5206\u949f\n        'status': '\u8fd0\u884c\u4e2d',\n        'start_time': datetime.now() - timedelta(hours=2)\n    },\n    {\n        'name': '\u65b0\u95fb\u8d44\u8baf\u722c\u53d6',\n        'target_count': 5000,\n        'completed_count': 5000,\n        'success_rate': 98.8,\n        'avg_speed': 200,\n        'status': '\u5df2\u5b8c\u6210',\n        'start_time': datetime.now() - timedelta(hours=1, minutes=30)\n    },\n    {\n        'name': '\u7528\u6237\u8bc4\u8bba\u6570\u636e',\n        'target_count': 20000,\n        'completed_count': 12000,\n        'success_rate': 92.1,\n        'avg_speed': 80,\n        'status': '\u8fd0\u884c\u4e2d',\n        'start_time': datetime.now() - timedelta(hours=3)\n    }\n]\n\n# \u521b\u5efa\u722c\u866b\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udd77\ufe0f \u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u62a5\u544a\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n# \u4efb\u52a1\u6982\u89c8\u7edf\u8ba1\nemail.add_title(\"\ud83d\udcca \u4efb\u52a1\u6982\u89c8\", TextType.SECTION_H2)\n\ntotal_tasks = len(spider_tasks)\nrunning_tasks = sum(1 for task in spider_tasks if task['status'] == '\u8fd0\u884c\u4e2d')\ncompleted_tasks = sum(1 for task in spider_tasks if task['status'] == '\u5df2\u5b8c\u6210')\ntotal_collected = sum(task['completed_count'] for task in spider_tasks)\n\noverview_stats = [\n    (\"\u4efb\u52a1\u603b\u6570\", f\"{total_tasks}\", \"\ud83c\udfaf\"),\n    (\"\u8fd0\u884c\u4e2d\", f\"{running_tasks}\", \"\ud83d\udd04\"),\n    (\"\u5df2\u5b8c\u6210\", f\"{completed_tasks}\", \"\u2705\"),\n    (\"\u603b\u91c7\u96c6\u91cf\", f\"{total_collected:,}\", \"\ud83d\udce6\")\n]\n\nfor title, value, icon in overview_stats:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u5404\u4efb\u52a1\u8be6\u7ec6\u8fdb\u5ea6\nemail.add_title(\"\ud83d\udcc8 \u4efb\u52a1\u8fdb\u5ea6\u8be6\u60c5\", TextType.SECTION_H2)\n\nfor task in spider_tasks:\n    # \u8ba1\u7b97\u8fdb\u5ea6\u767e\u5206\u6bd4\n    progress_percent = (task['completed_count'] / task['target_count']) * 100\n\n    # \u6839\u636e\u72b6\u6001\u8bbe\u7f6e\u4e3b\u9898\u8272\n    if task['status'] == '\u5df2\u5b8c\u6210':\n        theme = ProgressTheme.SUCCESS\n        status_type = StatusType.SUCCESS\n    elif task['success_rate'] &gt; 95:\n        theme = ProgressTheme.INFO\n        status_type = StatusType.SUCCESS\n    elif task['success_rate'] &gt; 90:\n        theme = ProgressTheme.WARNING\n        status_type = StatusType.WARNING\n    else:\n        theme = ProgressTheme.ERROR\n        status_type = StatusType.ERROR\n\n    # \u4efb\u52a1\u72b6\u6001\u5361\u7247\n    status_widget = StatusWidget()\n    status_widget.set_title(task['name']) \\\n                 .set_status(task['status']) \\\n                 .set_status_type(status_type) \\\n                 .set_description(f\"\u6210\u529f\u7387: {task['success_rate']:.1f}% | \u901f\u5ea6: {task['avg_speed']}\u6761/\u5206\u949f\")\n    email.add_widget(status_widget)\n\n    # \u8fdb\u5ea6\u6761\n    email.add_progress(\n        value=progress_percent,\n        label=f\"{task['completed_count']:,}/{task['target_count']:,} ({progress_percent:.1f}%)\",\n        theme=theme\n    )\n\n# \u8be6\u7ec6\u6570\u636e\u8868\u683c\nemail.add_title(\"\ud83d\udccb \u4efb\u52a1\u8be6\u7ec6\u6570\u636e\", TextType.SECTION_H2)\n\ntable = TableWidget()\ntable.set_headers([\"\u4efb\u52a1\u540d\u79f0\", \"\u76ee\u6807\u6570\u91cf\", \"\u5df2\u5b8c\u6210\", \"\u5b8c\u6210\u7387\", \"\u6210\u529f\u7387\", \"\u5e73\u5747\u901f\u5ea6\", \"\u8fd0\u884c\u65f6\u957f\"])\n\nfor task in spider_tasks:\n    runtime = datetime.now() - task['start_time']\n    runtime_str = f\"{runtime.seconds // 3600}h {(runtime.seconds % 3600) // 60}m\"\n\n    progress_percent = (task['completed_count'] / task['target_count']) * 100\n\n    table.add_row([\n        task['name'],\n        f\"{task['target_count']:,}\",\n        f\"{task['completed_count']:,}\",\n        f\"{progress_percent:.1f}%\",\n        f\"{task['success_rate']:.1f}%\",\n        f\"{task['avg_speed']}\u6761/\u5206\u949f\",\n        runtime_str\n    ])\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u6027\u80fd\u5206\u6790\nemail.add_title(\"\u26a1 \u6027\u80fd\u5206\u6790\", TextType.SECTION_H2)\n\navg_success_rate = sum(task['success_rate'] for task in spider_tasks) / len(spider_tasks)\nfastest_task = max(spider_tasks, key=lambda x: x['avg_speed'])\nslowest_task = min(spider_tasks, key=lambda x: x['avg_speed'])\n\nperformance_text = f\"\"\"\n**\u722c\u866b\u6027\u80fd\u5206\u6790\uff1a**\n\n\ud83d\udcca **\u6574\u4f53\u8868\u73b0**\n\u2022 \u5e73\u5747\u6210\u529f\u7387: {avg_success_rate:.1f}%\n\u2022 \u6700\u5feb\u4efb\u52a1: {fastest_task['name']} ({fastest_task['avg_speed']}\u6761/\u5206\u949f)\n\u2022 \u6700\u6162\u4efb\u52a1: {slowest_task['name']} ({slowest_task['avg_speed']}\u6761/\u5206\u949f)\n\n\ud83d\udca1 **\u4f18\u5316\u5efa\u8bae**\n\u2022 \u6210\u529f\u7387\u4f4e\u4e8e90%\u7684\u4efb\u52a1\u9700\u8981\u68c0\u67e5\u53cd\u722c\u7b56\u7565\n\u2022 \u8003\u8651\u8c03\u6574\u5e76\u53d1\u6570\u4ee5\u63d0\u9ad8\u91c7\u96c6\u901f\u5ea6\n\u2022 \u76d1\u63a7\u76ee\u6807\u7f51\u7ad9\u7684\u54cd\u5e94\u65f6\u95f4\u53d8\u5316\n\"\"\"\n\nemail.add_text(performance_text.strip())\n\nemail.export_html(\"spider_monitor.html\")\nprint(\"\u2705 \u722c\u866b\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1aspider_monitor.html\")\n</code></pre> \u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a \u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:45:32 <p>\ud83d\udd77\ufe0f \u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a</p> <p>\u62a5\u544a\u65f6\u95f4: 2025-07-07 23:45:32</p> 1. \ud83d\udcca \u4efb\u52a1\u6982\u89c8 3 2 1 25,500 2. \ud83d\udcc8 \u4efb\u52a1\u8fdb\u5ea6\u8be6\u60c5 \u7535\u5546\u4ea7\u54c1\u4fe1\u606f\u91c7\u96c6 \u8fd0\u884c\u4e2d \u6210\u529f\u7387 95.2% \u901f\u5ea6 120\u6761/\u5206\u949f 8,500/10,000 (85.0%) 85.0% \u65b0\u95fb\u8d44\u8baf\u722c\u53d6 \u5df2\u5b8c\u6210 \u6210\u529f\u7387 98.8% \u901f\u5ea6 200\u6761/\u5206\u949f 5,000/5,000 (100.0%) 100.0% \u7528\u6237\u8bc4\u8bba\u6570\u636e \u8fd0\u884c\u4e2d \u6210\u529f\u7387 92.1% \u901f\u5ea6 80\u6761/\u5206\u949f 12,000/20,000 (60.0%) 60.0% 3. \ud83d\udccb \u4efb\u52a1\u8be6\u7ec6\u6570\u636e \u4efb\u52a1\u540d\u79f0 \u76ee\u6807\u6570\u91cf \u5df2\u5b8c\u6210 \u5b8c\u6210\u7387 \u6210\u529f\u7387 \u5e73\u5747\u901f\u5ea6 \u8fd0\u884c\u65f6\u957f \u7535\u5546\u4ea7\u54c1\u4fe1\u606f\u91c7\u96c6 10,000 8,500 85.0% 95.2% 120\u6761/\u5206\u949f 2h 0m \u65b0\u95fb\u8d44\u8baf\u722c\u53d6 5,000 5,000 100.0% 98.8% 200\u6761/\u5206\u949f 1h 30m \u7528\u6237\u8bc4\u8bba\u6570\u636e 20,000 12,000 60.0% 92.1% 80\u6761/\u5206\u949f 3h 0m 4. \u26a1 \u6027\u80fd\u5206\u6790 <p>**\u722c\u866b\u6027\u80fd\u5206\u6790\uff1a**</p> <p>\ud83d\udcca **\u6574\u4f53\u8868\u73b0**</p> <p>\u2022 \u5e73\u5747\u6210\u529f\u7387: 95.4%</p> <p>\u2022 \u6700\u5feb\u4efb\u52a1: \u65b0\u95fb\u8d44\u8baf\u722c\u53d6 (200\u6761/\u5206\u949f)</p> <p>\u2022 \u6700\u6162\u4efb\u52a1: \u7528\u6237\u8bc4\u8bba\u6570\u636e (80\u6761/\u5206\u949f)</p> <p>\ud83d\udca1 **\u4f18\u5316\u5efa\u8bae**</p> <p>\u2022 \u6210\u529f\u7387\u4f4e\u4e8e90%\u7684\u4efb\u52a1\u9700\u8981\u68c0\u67e5\u53cd\u722c\u7b56\u7565</p> <p>\u2022 \u8003\u8651\u8c03\u6574\u5e76\u53d1\u6570\u4ee5\u63d0\u9ad8\u91c7\u96c6\u901f\u5ea6</p> <p>\u2022 \u76d1\u63a7\u76ee\u6807\u7f51\u7ad9\u7684\u54cd\u5e94\u65f6\u95f4\u53d8\u5316</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Monitoring Features: - Real-time task progress tracking - Success rate and speed monitoring - Multi-task status aggregation - Performance analysis and optimization recommendations</p>"},{"location":"examples/spider-reports/#data-quality-report","title":"Data Quality Report","text":""},{"location":"examples/spider-reports/#collected-data-quality-check","title":"Collected Data Quality Check \ud83d\udce6 \u603b\u8bb0\u5f55\u6570                  \u2705 \u6709\u6548\u8bb0\u5f55                  \ud83c\udfaf \u6570\u636e\u8d28\u91cf\u7387                  \ud83d\udd04 \u91cd\u590d\u7387","text":"Python<pre><code>import pandas as pd\nfrom email_widget import Email, TableWidget, AlertWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, AlertType, ProgressTheme\n\n# \u6a21\u62df\u91c7\u96c6\u7684\u6570\u636e\u8d28\u91cf\u7edf\u8ba1\ndata_quality_stats = {\n    'total_records': 50000,\n    'valid_records': 47500,\n    'duplicate_records': 1200,\n    'incomplete_records': 800,\n    'invalid_format': 500,\n    'fields_quality': {\n        '\u6807\u9898': {'completeness': 98.5, 'validity': 99.2},\n        '\u4ef7\u683c': {'completeness': 95.2, 'validity': 92.8},\n        '\u56fe\u7247URL': {'completeness': 89.3, 'validity': 88.1},\n        '\u5546\u54c1\u63cf\u8ff0': {'completeness': 78.6, 'validity': 95.4},\n        '\u8bc4\u5206': {'completeness': 92.1, 'validity': 98.7}\n    }\n}\n\n# \u521b\u5efa\u6570\u636e\u8d28\u91cf\u62a5\u544a\nemail = Email(\"\u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udd0d \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u6570\u636e\u68c0\u67e5\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n# \u6570\u636e\u8d28\u91cf\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u6570\u636e\u8d28\u91cf\u6982\u89c8\", TextType.SECTION_H2)\n\ntotal = data_quality_stats['total_records']\nvalid = data_quality_stats['valid_records']\nduplicate = data_quality_stats['duplicate_records']\nincomplete = data_quality_stats['incomplete_records']\ninvalid = data_quality_stats['invalid_format']\n\nquality_rate = (valid / total) * 100\nduplicate_rate = (duplicate / total) * 100\n\nquality_overview = [\n    (\"\u603b\u8bb0\u5f55\u6570\", f\"{total:,}\", \"\ud83d\udce6\"),\n    (\"\u6709\u6548\u8bb0\u5f55\", f\"{valid:,}\", \"\u2705\"),\n    (\"\u6570\u636e\u8d28\u91cf\u7387\", f\"{quality_rate:.1f}%\", \"\ud83c\udfaf\"),\n    (\"\u91cd\u590d\u7387\", f\"{duplicate_rate:.1f}%\", \"\ud83d\udd04\")\n]\n\nfor title, value, icon in quality_overview:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u6570\u636e\u8d28\u91cf\u8be6\u7ec6\u5206\u6790\nemail.add_title(\"\ud83d\udcc8 \u8d28\u91cf\u6307\u6807\u5206\u6790\", TextType.SECTION_H2)\n\n# \u6574\u4f53\u8d28\u91cf\u8bc4\u5206\noverall_quality = (valid / total) * 100\nquality_theme = ProgressTheme.SUCCESS if overall_quality &gt; 95 else \\\n               ProgressTheme.WARNING if overall_quality &gt; 90 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u6574\u4f53\u6570\u636e\u8d28\u91cf\")\nemail.add_progress(overall_quality, f\"\u8d28\u91cf\u7387: {overall_quality:.1f}%\", theme=quality_theme)\n\n# \u91cd\u590d\u6570\u636e\u7387\ndup_theme = ProgressTheme.SUCCESS if duplicate_rate &lt; 2 else \\\n           ProgressTheme.WARNING if duplicate_rate &lt; 5 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u91cd\u590d\u6570\u636e\u6bd4\u4f8b\")\nemail.add_progress(duplicate_rate, f\"\u91cd\u590d\u7387: {duplicate_rate:.1f}%\", theme=dup_theme)\n\n# \u5b57\u6bb5\u8d28\u91cf\u8be6\u60c5\nemail.add_title(\"\ud83d\udd0d \u5b57\u6bb5\u8d28\u91cf\u8be6\u60c5\", TextType.SECTION_H2)\n\nfield_table = TableWidget()\nfield_table.set_headers([\"\u5b57\u6bb5\u540d\u79f0\", \"\u5b8c\u6574\u6027\", \"\u6709\u6548\u6027\", \"\u8d28\u91cf\u8bc4\u7ea7\"])\n\nfor field_name, quality in data_quality_stats['fields_quality'].items():\n    completeness = quality['completeness']\n    validity = quality['validity']\n    avg_quality = (completeness + validity) / 2\n\n    # \u8d28\u91cf\u8bc4\u7ea7\n    if avg_quality &gt;= 95:\n        grade = \"\ud83d\udfe2 \u4f18\u79c0\"\n    elif avg_quality &gt;= 90:\n        grade = \"\ud83d\udfe1 \u826f\u597d\"\n    elif avg_quality &gt;= 80:\n        grade = \"\ud83d\udfe0 \u4e00\u822c\"\n    else:\n        grade = \"\ud83d\udd34 \u8f83\u5dee\"\n\n    field_table.add_row([\n        field_name,\n        f\"{completeness:.1f}%\",\n        f\"{validity:.1f}%\",\n        grade\n    ])\n\nfield_table.set_striped(True)\nemail.add_widget(field_table)\n\n# \u6570\u636e\u95ee\u9898\u7edf\u8ba1\nemail.add_title(\"\u26a0\ufe0f \u6570\u636e\u95ee\u9898\u7edf\u8ba1\", TextType.SECTION_H2)\n\nproblem_table = TableWidget()\nproblem_table.set_headers([\"\u95ee\u9898\u7c7b\u578b\", \"\u8bb0\u5f55\u6570\", \"\u5360\u6bd4\", \"\u5f71\u54cd\u7b49\u7ea7\"])\n\nproblems = [\n    (\"\u91cd\u590d\u8bb0\u5f55\", duplicate, (duplicate/total)*100, \"\u4e2d\u7b49\"),\n    (\"\u4e0d\u5b8c\u6574\u8bb0\u5f55\", incomplete, (incomplete/total)*100, \"\u9ad8\"),\n    (\"\u683c\u5f0f\u9519\u8bef\", invalid, (invalid/total)*100, \"\u9ad8\"),\n]\n\nfor problem_type, count, percentage, impact in problems:\n    impact_emoji = \"\ud83d\udfe2\" if impact == \"\u4f4e\" else \"\ud83d\udfe1\" if impact == \"\u4e2d\u7b49\" else \"\ud83d\udd34\"\n    problem_table.add_row([\n        problem_type,\n        f\"{count:,}\",\n        f\"{percentage:.1f}%\",\n        f\"{impact_emoji} {impact}\"\n    ])\n\nproblem_table.set_striped(True)\nemail.add_widget(problem_table)\n\n# \u8d28\u91cf\u6539\u8fdb\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u8d28\u91cf\u6539\u8fdb\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u6839\u636e\u6570\u636e\u8d28\u91cf\u60c5\u51b5\u751f\u6210\u5efa\u8bae\nif overall_quality &lt; 90:\n    email.add_alert(\n        \"\u6570\u636e\u8d28\u91cf\u4f4e\u4e8e90%\uff0c\u5efa\u8bae\u7acb\u5373\u4f18\u5316\u722c\u866b\u903b\u8f91\u548c\u6570\u636e\u6e05\u6d17\u6d41\u7a0b\",\n        AlertType.CAUTION,\n        \"\ud83d\udea8 \u8d28\u91cf\u544a\u8b66\"\n    )\n\nif duplicate_rate &gt; 5:\n    email.add_alert(\n        f\"\u91cd\u590d\u6570\u636e\u7387\u8fbe\u5230{duplicate_rate:.1f}%\uff0c\u5efa\u8bae\u589e\u5f3a\u53bb\u91cd\u673a\u5236\",\n        AlertType.WARNING,\n        \"\u26a0\ufe0f \u91cd\u590d\u6570\u636e\u544a\u8b66\"\n    )\n\n# \u6539\u8fdb\u5efa\u8bae\nimprovement_suggestions = f\"\"\"\n**\u6570\u636e\u8d28\u91cf\u6539\u8fdb\u5efa\u8bae\uff1a**\n\n\ud83d\udd27 **\u6280\u672f\u6539\u8fdb**\n\u2022 \u52a0\u5f3a\u6570\u636e\u9a8c\u8bc1\u89c4\u5219\uff0c\u63d0\u9ad8\u5b57\u6bb5\u6709\u6548\u6027\n\u2022 \u4f18\u5316\u53bb\u91cd\u7b97\u6cd5\uff0c\u964d\u4f4e\u91cd\u590d\u6570\u636e\u7387\n\u2022 \u5b8c\u5584\u5f02\u5e38\u5904\u7406\uff0c\u51cf\u5c11\u4e0d\u5b8c\u6574\u8bb0\u5f55\n\n\ud83d\udcca **\u8d28\u91cf\u76d1\u63a7**\n\u2022 \u8bbe\u7f6e\u8d28\u91cf\u9608\u503c\u544a\u8b66 (\u5efa\u8bae: \u8d28\u91cf\u7387&gt;95%, \u91cd\u590d\u7387&lt;2%)\n\u2022 \u5b9e\u65f6\u76d1\u63a7\u5173\u952e\u5b57\u6bb5\u7684\u5b8c\u6574\u6027\n\u2022 \u5b9a\u671f\u8fdb\u884c\u6570\u636e\u8d28\u91cf\u8bc4\u4f30\n\n\u26a1 **\u6d41\u7a0b\u4f18\u5316**\n\u2022 \u5728\u6570\u636e\u5165\u5e93\u524d\u8fdb\u884c\u8d28\u91cf\u68c0\u67e5\n\u2022 \u5efa\u7acb\u6570\u636e\u8d28\u91cf\u8bc4\u5206\u4f53\u7cfb\n\u2022 \u81ea\u52a8\u5316\u6570\u636e\u6e05\u6d17\u548c\u4fee\u590d\u6d41\u7a0b\n\"\"\"\n\nemail.add_text(improvement_suggestions.strip())\n\nemail.export_html(\"data_quality_report.html\")\nprint(\"\u2705 \u6570\u636e\u8d28\u91cf\u62a5\u544a\u5df2\u751f\u6210\uff1adata_quality_report.html\")\n</code></pre> \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:46:46 <p>\ud83d\udd0d \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a</p> <p>\u6570\u636e\u68c0\u67e5\u65f6\u95f4: 2025-07-07 23:46:46</p> 1. \ud83d\udcca \u6570\u636e\u8d28\u91cf\u6982\u89c8 50,000 47,500 95.0% 2.4% 2. \ud83d\udcc8 \u8d28\u91cf\u6307\u6807\u5206\u6790 <p>\ud83d\udd39 \u6574\u4f53\u6570\u636e\u8d28\u91cf</p> \u8d28\u91cf\u7387: 95.0% 95.0% <p>\ud83d\udd39 \u91cd\u590d\u6570\u636e\u6bd4\u4f8b</p> \u91cd\u590d\u7387: 2.4% 2.4% 3. \ud83d\udd0d \u5b57\u6bb5\u8d28\u91cf\u8be6\u60c5 \u5b57\u6bb5\u540d\u79f0 \u5b8c\u6574\u6027 \u6709\u6548\u6027 \u8d28\u91cf\u8bc4\u7ea7 \u6807\u9898 98.5% 99.2% \ud83d\udfe2 \u4f18\u79c0 \u4ef7\u683c 95.2% 92.8% \ud83d\udfe1 \u826f\u597d \u56fe\u7247URL 89.3% 88.1% \ud83d\udfe0 \u4e00\u822c \u5546\u54c1\u63cf\u8ff0 78.6% 95.4% \ud83d\udfe0 \u4e00\u822c \u8bc4\u5206 92.1% 98.7% \ud83d\udfe2 \u4f18\u79c0 4. \u26a0\ufe0f \u6570\u636e\u95ee\u9898\u7edf\u8ba1 \u95ee\u9898\u7c7b\u578b \u8bb0\u5f55\u6570 \u5360\u6bd4 \u5f71\u54cd\u7b49\u7ea7 \u91cd\u590d\u8bb0\u5f55 1,200 2.4% \ud83d\udfe1 \u4e2d\u7b49 \u4e0d\u5b8c\u6574\u8bb0\u5f55 800 1.6% \ud83d\udd34 \u9ad8 \u683c\u5f0f\u9519\u8bef 500 1.0% \ud83d\udd34 \u9ad8 5. \ud83d\udca1 \u8d28\u91cf\u6539\u8fdb\u5efa\u8bae <p>**\u6570\u636e\u8d28\u91cf\u6539\u8fdb\u5efa\u8bae\uff1a**</p> <p>\ud83d\udd27 **\u6280\u672f\u6539\u8fdb**</p> <p>\u2022 \u52a0\u5f3a\u6570\u636e\u9a8c\u8bc1\u89c4\u5219\uff0c\u63d0\u9ad8\u5b57\u6bb5\u6709\u6548\u6027</p> <p>\u2022 \u4f18\u5316\u53bb\u91cd\u7b97\u6cd5\uff0c\u964d\u4f4e\u91cd\u590d\u6570\u636e\u7387</p> <p>\u2022 \u5b8c\u5584\u5f02\u5e38\u5904\u7406\uff0c\u51cf\u5c11\u4e0d\u5b8c\u6574\u8bb0\u5f55</p> <p>\ud83d\udcca **\u8d28\u91cf\u76d1\u63a7**</p> <p>\u2022 \u8bbe\u7f6e\u8d28\u91cf\u9608\u503c\u544a\u8b66 (\u5efa\u8bae: \u8d28\u91cf\u7387&gt;95%, \u91cd\u590d\u7387&lt;2%)</p> <p>\u2022 \u5b9e\u65f6\u76d1\u63a7\u5173\u952e\u5b57\u6bb5\u7684\u5b8c\u6574\u6027</p> <p>\u2022 \u5b9a\u671f\u8fdb\u884c\u6570\u636e\u8d28\u91cf\u8bc4\u4f30</p> <p>\u26a1 **\u6d41\u7a0b\u4f18\u5316**</p> <p>\u2022 \u5728\u6570\u636e\u5165\u5e93\u524d\u8fdb\u884c\u8d28\u91cf\u68c0\u67e5</p> <p>\u2022 \u5efa\u7acb\u6570\u636e\u8d28\u91cf\u8bc4\u5206\u4f53\u7cfb</p> <p>\u2022 \u81ea\u52a8\u5316\u6570\u636e\u6e05\u6d17\u548c\u4fee\u590d\u6d41\u7a0b</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Quality Check Features: - Multi-dimensional quality assessment - Field-level quality analysis - Automated issue identification - Improvement recommendation generation</p>"},{"location":"examples/spider-reports/#exception-monitoring-report","title":"Exception Monitoring Report","text":""},{"location":"examples/spider-reports/#spider-exception-and-error-analysis","title":"Spider Exception and Error Analysis \ud83d\udea8 \u5f02\u5e38\u603b\u6570                  \ud83d\udd0d \u5f02\u5e38\u7c7b\u578b                  \u26a0\ufe0f \u6700\u591a\u5f02\u5e38                  \u23f0 \u65f6\u95f4\u8303\u56f4                 \u5f02\u5e38\u7c7b\u578b\u5206\u5e03\u56fe","text":"Python<pre><code>from collections import Counter\nfrom email_widget import Email, ChartWidget, TableWidget, AlertWidget\nfrom email_widget.core.enums import TextType, AlertType\nimport matplotlib.pyplot as plt\n\n# \u6a21\u62df\u722c\u866b\u5f02\u5e38\u6570\u636e\nspider_errors = [\n    {'timestamp': '2024-01-20 10:15', 'error_type': 'HTTP_TIMEOUT', 'url': 'example1.com', 'message': '\u8bf7\u6c42\u8d85\u65f6'},\n    {'timestamp': '2024-01-20 10:16', 'error_type': 'PARSING_ERROR', 'url': 'example2.com', 'message': '\u89e3\u6790\u5931\u8d25'},\n    {'timestamp': '2024-01-20 10:17', 'error_type': 'HTTP_404', 'url': 'example3.com', 'message': '\u9875\u9762\u4e0d\u5b58\u5728'},\n    {'timestamp': '2024-01-20 10:18', 'error_type': 'RATE_LIMITED', 'url': 'example4.com', 'message': '\u8bf7\u6c42\u88ab\u9650\u5236'},\n    {'timestamp': '2024-01-20 10:19', 'error_type': 'HTTP_TIMEOUT', 'url': 'example5.com', 'message': '\u8fde\u63a5\u8d85\u65f6'},\n    {'timestamp': '2024-01-20 10:20', 'error_type': 'CAPTCHA_DETECTED', 'url': 'example6.com', 'message': '\u68c0\u6d4b\u5230\u9a8c\u8bc1\u7801'},\n    {'timestamp': '2024-01-20 10:21', 'error_type': 'PARSING_ERROR', 'url': 'example7.com', 'message': '\u6570\u636e\u7ed3\u6784\u53d8\u5316'},\n    {'timestamp': '2024-01-20 10:22', 'error_type': 'HTTP_403', 'url': 'example8.com', 'message': '\u8bbf\u95ee\u88ab\u7981\u6b62'},\n]\n\n# \u521b\u5efa\u5f02\u5e38\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udea8 \u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u5f02\u5e38\u7edf\u8ba1\u65f6\u95f4: \u6700\u8fd11\u5c0f\u65f6\")\n\n# \u5f02\u5e38\u7edf\u8ba1\u6982\u89c8\nerror_counts = Counter(error['error_type'] for error in spider_errors)\ntotal_errors = len(spider_errors)\n\nemail.add_title(\"\ud83d\udcca \u5f02\u5e38\u7edf\u8ba1\u6982\u89c8\", TextType.SECTION_H2)\n\nerror_overview = [\n    (\"\u5f02\u5e38\u603b\u6570\", f\"{total_errors}\", \"\ud83d\udea8\"),\n    (\"\u5f02\u5e38\u7c7b\u578b\", f\"{len(error_counts)}\", \"\ud83d\udd0d\"),\n    (\"\u6700\u591a\u5f02\u5e38\", f\"{error_counts.most_common(1)[0][0]}\", \"\u26a0\ufe0f\"),\n    (\"\u65f6\u95f4\u8303\u56f4\", \"\u6700\u8fd11\u5c0f\u65f6\", \"\u23f0\")\n]\n\nfor title, value, icon in error_overview:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u5f02\u5e38\u7c7b\u578b\u5206\u5e03\nemail.add_title(\"\ud83d\udcc8 \u5f02\u5e38\u7c7b\u578b\u5206\u5e03\", TextType.SECTION_H2)\n\n# \u521b\u5efa\u5f02\u5e38\u5206\u5e03\u56fe\u8868\nplt.figure(figsize=(10, 6))\nerror_types = list(error_counts.keys())\nerror_values = list(error_counts.values())\n\nbars = plt.bar(error_types, error_values, color=['#e74c3c', '#f39c12', '#3498db', '#9b59b6', '#1abc9c', '#95a5a6'])\nplt.title('\u5f02\u5e38\u7c7b\u578b\u5206\u5e03', fontsize=14)\nplt.xlabel('\u5f02\u5e38\u7c7b\u578b')\nplt.ylabel('\u53d1\u751f\u6b21\u6570')\nplt.xticks(rotation=45)\n\n# \u6dfb\u52a0\u6570\u503c\u6807\u7b7e\nfor bar, value in zip(bars, error_values):\n    plt.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 0.1, \n             str(value), ha='center', va='bottom')\n\nplt.tight_layout()\nerror_chart_path = \"spider_errors_distribution.png\"\nplt.savefig(error_chart_path, dpi=150, bbox_inches='tight')\nplt.close()\n\nchart = ChartWidget()\nchart.set_chart_path(error_chart_path) \\\n     .set_title(\"\u5f02\u5e38\u7c7b\u578b\u5206\u5e03\u56fe\") \\\n     .set_description(\"\u663e\u793a\u5404\u7c7b\u5f02\u5e38\u7684\u53d1\u751f\u9891\u7387\")\nemail.add_widget(chart)\n\n# \u5f02\u5e38\u8be6\u60c5\u8868\u683c\nemail.add_title(\"\ud83d\udccb \u5f02\u5e38\u8be6\u60c5\u5217\u8868\", TextType.SECTION_H2)\n\nerror_table = TableWidget()\nerror_table.set_headers([\"\u65f6\u95f4\", \"\u5f02\u5e38\u7c7b\u578b\", \"\u76ee\u6807URL\", \"\u9519\u8bef\u4fe1\u606f\"])\n\nfor error in spider_errors[-10:]:  # \u663e\u793a\u6700\u8fd110\u6761\u5f02\u5e38\n    error_table.add_row([\n        error['timestamp'],\n        error['error_type'],\n        error['url'][:30] + \"...\" if len(error['url']) &gt; 30 else error['url'],\n        error['message']\n    ])\n\nerror_table.set_striped(True)\nemail.add_widget(error_table)\n\n# \u5f02\u5e38\u5206\u6790\u548c\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u5f02\u5e38\u5206\u6790\u4e0e\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u57fa\u4e8e\u5f02\u5e38\u7c7b\u578b\u751f\u6210\u544a\u8b66\u548c\u5efa\u8bae\ncritical_errors = ['RATE_LIMITED', 'CAPTCHA_DETECTED', 'HTTP_403']\ntimeout_errors = ['HTTP_TIMEOUT']\nparsing_errors = ['PARSING_ERROR']\n\nfor error_type, count in error_counts.items():\n    if error_type in critical_errors:\n        email.add_alert(\n            f\"{error_type} \u53d1\u751f {count} \u6b21\uff0c\u53ef\u80fd\u89e6\u53d1\u53cd\u722c\u866b\u673a\u5236\",\n            AlertType.CAUTION,\n            f\"\ud83d\udea8 {error_type} \u544a\u8b66\"\n        )\n    elif error_type in timeout_errors and count &gt; 3:\n        email.add_alert(\n            f\"\u8d85\u65f6\u9519\u8bef\u9891\u53d1 ({count} \u6b21)\uff0c\u5efa\u8bae\u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\u548c\u8d85\u65f6\u8bbe\u7f6e\",\n            AlertType.WARNING,\n            \"\u26a0\ufe0f \u8d85\u65f6\u544a\u8b66\"\n        )\n\nanalysis_text = f\"\"\"\n**\u5f02\u5e38\u5206\u6790\u7ed3\u679c\uff1a**\n\n\ud83d\udd0d **\u4e3b\u8981\u95ee\u9898**\n\u2022 {error_counts.most_common(1)[0][0]} \u662f\u6700\u9891\u7e41\u7684\u5f02\u5e38\u7c7b\u578b ({error_counts.most_common(1)[0][1]} \u6b21)\n\u2022 \u603b\u5f02\u5e38\u7387\u9700\u8981\u5173\u6ce8\uff0c\u5efa\u8bae\u4f18\u5316\u722c\u866b\u7b56\u7565\n\n\ud83d\udee0\ufe0f **\u89e3\u51b3\u5efa\u8bae**\n\"\"\"\n\n# \u9488\u5bf9\u4e0d\u540c\u5f02\u5e38\u7c7b\u578b\u7ed9\u51fa\u5efa\u8bae\nif 'HTTP_TIMEOUT' in error_counts:\n    analysis_text += f\"\\n\u2022 \u8d85\u65f6\u5f02\u5e38 ({error_counts['HTTP_TIMEOUT']} \u6b21): \u589e\u52a0\u8d85\u65f6\u65f6\u95f4\uff0c\u4f18\u5316\u7f51\u7edc\u8fde\u63a5\"\n\nif 'RATE_LIMITED' in error_counts:\n    analysis_text += f\"\\n\u2022 \u9650\u6d41\u5f02\u5e38 ({error_counts['RATE_LIMITED']} \u6b21): \u964d\u4f4e\u8bf7\u6c42\u9891\u7387\uff0c\u589e\u52a0\u4ee3\u7406\u6c60\"\n\nif 'CAPTCHA_DETECTED' in error_counts:\n    analysis_text += f\"\\n\u2022 \u9a8c\u8bc1\u7801\u5f02\u5e38 ({error_counts['CAPTCHA_DETECTED']} \u6b21): \u96c6\u6210\u9a8c\u8bc1\u7801\u8bc6\u522b\u670d\u52a1\"\n\nif 'PARSING_ERROR' in error_counts:\n    analysis_text += f\"\\n\u2022 \u89e3\u6790\u5f02\u5e38 ({error_counts['PARSING_ERROR']} \u6b21): \u66f4\u65b0\u89e3\u6790\u89c4\u5219\uff0c\u589e\u5f3a\u5bb9\u9519\u6027\"\n\nanalysis_text += f\"\"\"\n\n\u26a1 **\u4f18\u5316\u63aa\u65bd**\n\u2022 \u5b9e\u65bd\u667a\u80fd\u91cd\u8bd5\u673a\u5236\n\u2022 \u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91\n\u2022 \u76d1\u63a7\u76ee\u6807\u7f51\u7ad9\u53d8\u5316\n\u2022 \u5b9a\u671f\u66f4\u65b0\u722c\u866b\u7b56\u7565\n\"\"\"\n\nemail.add_text(analysis_text.strip())\n\nemail.export_html(\"spider_error_analysis.html\")\nprint(\"\u2705 \u722c\u866b\u5f02\u5e38\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1aspider_error_analysis.html\")\n</code></pre> \u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a \u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:47:35 <p>\ud83d\udea8 \u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a</p> <p>\u5f02\u5e38\u7edf\u8ba1\u65f6\u95f4: \u6700\u8fd11\u5c0f\u65f6</p> 1. \ud83d\udcca \u5f02\u5e38\u7edf\u8ba1\u6982\u89c8 8 6 HTTP_TIMEOUT \u6700\u8fd11\u5c0f\u65f6 2. \ud83d\udcc8 \u5f02\u5e38\u7c7b\u578b\u5206\u5e03 <p>\u663e\u793a\u5404\u7c7b\u5f02\u5e38\u7684\u53d1\u751f\u9891\u7387</p> 3. \ud83d\udccb \u5f02\u5e38\u8be6\u60c5\u5217\u8868 \u65f6\u95f4 \u5f02\u5e38\u7c7b\u578b \u76ee\u6807URL \u9519\u8bef\u4fe1\u606f 2024-01-20 10:15 HTTP_TIMEOUT example1.com \u8bf7\u6c42\u8d85\u65f6 2024-01-20 10:16 PARSING_ERROR example2.com \u89e3\u6790\u5931\u8d25 2024-01-20 10:17 HTTP_404 example3.com \u9875\u9762\u4e0d\u5b58\u5728 2024-01-20 10:18 RATE_LIMITED example4.com \u8bf7\u6c42\u88ab\u9650\u5236 2024-01-20 10:19 HTTP_TIMEOUT example5.com \u8fde\u63a5\u8d85\u65f6 2024-01-20 10:20 CAPTCHA_DETECTED example6.com \u68c0\u6d4b\u5230\u9a8c\u8bc1\u7801 2024-01-20 10:21 PARSING_ERROR example7.com \u6570\u636e\u7ed3\u6784\u53d8\u5316 2024-01-20 10:22 HTTP_403 example8.com \u8bbf\u95ee\u88ab\u7981\u6b62 4. \ud83d\udca1 \u5f02\u5e38\u5206\u6790\u4e0e\u5efa\u8bae \ud83d\udea8 \ud83d\udea8 RATE_LIMITED \u544a\u8b66 RATE_LIMITED \u53d1\u751f 1 \u6b21\uff0c\u53ef\u80fd\u89e6\u53d1\u53cd\u722c\u866b\u673a\u5236 \ud83d\udea8 \ud83d\udea8 CAPTCHA_DETECTED \u544a\u8b66 CAPTCHA_DETECTED \u53d1\u751f 1 \u6b21\uff0c\u53ef\u80fd\u89e6\u53d1\u53cd\u722c\u866b\u673a\u5236 \ud83d\udea8 \ud83d\udea8 HTTP_403 \u544a\u8b66 HTTP_403 \u53d1\u751f 1 \u6b21\uff0c\u53ef\u80fd\u89e6\u53d1\u53cd\u722c\u866b\u673a\u5236 <p>**\u5f02\u5e38\u5206\u6790\u7ed3\u679c\uff1a**</p> <p>\ud83d\udd0d **\u4e3b\u8981\u95ee\u9898**</p> <p>\u2022 HTTP_TIMEOUT \u662f\u6700\u9891\u7e41\u7684\u5f02\u5e38\u7c7b\u578b (2 \u6b21)</p> <p>\u2022 \u603b\u5f02\u5e38\u7387\u9700\u8981\u5173\u6ce8\uff0c\u5efa\u8bae\u4f18\u5316\u722c\u866b\u7b56\u7565</p> <p>\ud83d\udee0\ufe0f **\u89e3\u51b3\u5efa\u8bae**</p> <p>\u2022 \u8d85\u65f6\u5f02\u5e38 (2 \u6b21): \u589e\u52a0\u8d85\u65f6\u65f6\u95f4\uff0c\u4f18\u5316\u7f51\u7edc\u8fde\u63a5</p> <p>\u2022 \u9650\u6d41\u5f02\u5e38 (1 \u6b21): \u964d\u4f4e\u8bf7\u6c42\u9891\u7387\uff0c\u589e\u52a0\u4ee3\u7406\u6c60</p> <p>\u2022 \u9a8c\u8bc1\u7801\u5f02\u5e38 (1 \u6b21): \u96c6\u6210\u9a8c\u8bc1\u7801\u8bc6\u522b\u670d\u52a1</p> <p>\u2022 \u89e3\u6790\u5f02\u5e38 (2 \u6b21): \u66f4\u65b0\u89e3\u6790\u89c4\u5219\uff0c\u589e\u5f3a\u5bb9\u9519\u6027</p> <p>\u26a1 **\u4f18\u5316\u63aa\u65bd**</p> <p>\u2022 \u5b9e\u65bd\u667a\u80fd\u91cd\u8bd5\u673a\u5236</p> <p>\u2022 \u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91</p> <p>\u2022 \u76d1\u63a7\u76ee\u6807\u7f51\u7ad9\u53d8\u5316</p> <p>\u2022 \u5b9a\u671f\u66f4\u65b0\u722c\u866b\u7b56\u7565</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Exception Monitoring Highlights: - Exception type statistical analysis - Visual exception distribution - Intelligent alert mechanism - Targeted solution recommendations</p>"},{"location":"examples/spider-reports/#collection-efficiency-optimization","title":"Collection Efficiency Optimization","text":""},{"location":"examples/spider-reports/#spider-performance-analysis-report","title":"Spider Performance Analysis Report","text":"Python<pre><code>from email_widget import Email, ProgressWidget, TableWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u722c\u866b\u6027\u80fd\u6570\u636e\nperformance_data = {\n    'spider_configs': [\n        {'name': '\u5355\u7ebf\u7a0b\u6a21\u5f0f', 'threads': 1, 'success_rate': 98.5, 'speed': 50, 'cpu_usage': 15, 'memory_mb': 128},\n        {'name': '\u591a\u7ebf\u7a0b\u6a21\u5f0f', 'threads': 5, 'success_rate': 95.2, 'speed': 200, 'cpu_usage': 45, 'memory_mb': 512},\n        {'name': '\u5f02\u6b65\u6a21\u5f0f', 'threads': 10, 'success_rate': 92.8, 'speed': 450, 'cpu_usage': 35, 'memory_mb': 256},\n        {'name': '\u5206\u5e03\u5f0f\u6a21\u5f0f', 'threads': 20, 'success_rate': 89.1, 'speed': 800, 'cpu_usage': 25, 'memory_mb': 1024}\n    ]\n}\n\n# \u521b\u5efa\u6027\u80fd\u5206\u6790\u62a5\u544a\nemail = Email(\"\u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790\")\n\nemail.add_title(\"\u26a1 \u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790\", TextType.TITLE_LARGE)\n\n# \u6027\u80fd\u5bf9\u6bd4\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u6027\u80fd\u914d\u7f6e\u5bf9\u6bd4\", TextType.SECTION_H2)\n\nperf_table = TableWidget()\nperf_table.set_headers([\"\u914d\u7f6e\u6a21\u5f0f\", \"\u7ebf\u7a0b\u6570\", \"\u6210\u529f\u7387\", \"\u91c7\u96c6\u901f\u5ea6\", \"CPU\u4f7f\u7528\", \"\u5185\u5b58\u4f7f\u7528\"])\n\nfor config in performance_data['spider_configs']:\n    perf_table.add_row([\n        config['name'],\n        str(config['threads']),\n        f\"{config['success_rate']:.1f}%\",\n        f\"{config['speed']} \u6761/\u5206\u949f\",\n        f\"{config['cpu_usage']}%\",\n        f\"{config['memory_mb']} MB\"\n    ])\n\nperf_table.set_striped(True)\nemail.add_widget(perf_table)\n\n# \u5404\u914d\u7f6e\u8be6\u7ec6\u5206\u6790\nemail.add_title(\"\ud83d\udd0d \u914d\u7f6e\u8be6\u7ec6\u5206\u6790\", TextType.SECTION_H2)\n\nfor config in performance_data['spider_configs']:\n    email.add_text(f\"\ud83d\udccb {config['name']}\")\n\n    # \u6210\u529f\u7387\u8fdb\u5ea6\u6761\n    success_theme = ProgressTheme.SUCCESS if config['success_rate'] &gt; 95 else \\\n                   ProgressTheme.WARNING if config['success_rate'] &gt; 90 else ProgressTheme.ERROR\n\n    # \u6548\u7387\u8bc4\u5206 (\u7efc\u5408\u8003\u8651\u901f\u5ea6\u548c\u6210\u529f\u7387)\n    efficiency_score = (config['speed'] / 10) * (config['success_rate'] / 100)\n    efficiency_percent = min(efficiency_score, 100)\n\n    email.add_progress(config['success_rate'], f\"\u6210\u529f\u7387: {config['success_rate']:.1f}%\", theme=success_theme)\n    email.add_progress(efficiency_percent, f\"\u6548\u7387\u8bc4\u5206: {efficiency_score:.1f}\", theme=ProgressTheme.INFO)\n\n# \u4f18\u5316\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u6027\u80fd\u4f18\u5316\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u627e\u51fa\u6700\u4f73\u914d\u7f6e\nbest_config = max(performance_data['spider_configs'], \n                 key=lambda x: (x['speed'] / 10) * (x['success_rate'] / 100))\n\noptimization_text = f\"\"\"\n**\u6027\u80fd\u4f18\u5316\u5206\u6790\u7ed3\u679c\uff1a**\n\n\ud83c\udfc6 **\u63a8\u8350\u914d\u7f6e**\n\u2022 \u6700\u4f73\u7efc\u5408\u6027\u80fd: {best_config['name']}\n\u2022 \u91c7\u96c6\u901f\u5ea6: {best_config['speed']} \u6761/\u5206\u949f\n\u2022 \u6210\u529f\u7387: {best_config['success_rate']:.1f}%\n\u2022 \u8d44\u6e90\u6d88\u8017: CPU {best_config['cpu_usage']}%, \u5185\u5b58 {best_config['memory_mb']}MB\n\n\u2696\ufe0f **\u914d\u7f6e\u6743\u8861**\n\u2022 \u5355\u7ebf\u7a0b\u6a21\u5f0f: \u9ad8\u6210\u529f\u7387\uff0c\u4f4e\u8d44\u6e90\u6d88\u8017\uff0c\u9002\u5408\u5c0f\u89c4\u6a21\u91c7\u96c6\n\u2022 \u591a\u7ebf\u7a0b\u6a21\u5f0f: \u5e73\u8861\u6027\u80fd\uff0c\u9002\u5408\u4e2d\u7b49\u89c4\u6a21\u9879\u76ee\n\u2022 \u5f02\u6b65\u6a21\u5f0f: \u9ad8\u6548\u7387\u4f4e\u8d44\u6e90\uff0c\u9002\u5408\u5927\u89c4\u6a21\u5feb\u901f\u91c7\u96c6\n\u2022 \u5206\u5e03\u5f0f\u6a21\u5f0f: \u8d85\u9ad8\u901f\u5ea6\uff0c\u9002\u5408\u8d85\u5927\u89c4\u6a21\u9879\u76ee\n\n\ud83c\udfaf **\u4f18\u5316\u5efa\u8bae**\n\u2022 \u6839\u636e\u76ee\u6807\u7f51\u7ad9\u7279\u6027\u9009\u62e9\u5408\u9002\u7684\u5e76\u53d1\u6a21\u5f0f\n\u2022 \u76d1\u63a7\u6210\u529f\u7387\u53d8\u5316\uff0c\u53ca\u65f6\u8c03\u6574\u5e76\u53d1\u6570\n\u2022 \u5728\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\u4e4b\u95f4\u627e\u5230\u6700\u4f73\u5e73\u8861\u70b9\n\u2022 \u8003\u8651\u7f51\u7ad9\u53cd\u722c\u7b56\u7565\uff0c\u907f\u514d\u8fc7\u5ea6\u6fc0\u8fdb\u7684\u914d\u7f6e\n\"\"\"\n\nemail.add_text(optimization_text.strip())\n\nemail.export_html(\"spider_performance_analysis.html\")\nprint(\"\u2705 \u722c\u866b\u6027\u80fd\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1aspider_performance_analysis.html\")\n</code></pre> \u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790 \u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:48:08 <p>\u26a1 \u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790</p> 1. \ud83d\udcca \u6027\u80fd\u914d\u7f6e\u5bf9\u6bd4 \u914d\u7f6e\u6a21\u5f0f \u7ebf\u7a0b\u6570 \u6210\u529f\u7387 \u91c7\u96c6\u901f\u5ea6 CPU\u4f7f\u7528 \u5185\u5b58\u4f7f\u7528 \u5355\u7ebf\u7a0b\u6a21\u5f0f 1 98.5% 50 \u6761/\u5206\u949f 15% 128 MB \u591a\u7ebf\u7a0b\u6a21\u5f0f 5 95.2% 200 \u6761/\u5206\u949f 45% 512 MB \u5f02\u6b65\u6a21\u5f0f 10 92.8% 450 \u6761/\u5206\u949f 35% 256 MB \u5206\u5e03\u5f0f\u6a21\u5f0f 20 89.1% 800 \u6761/\u5206\u949f 25% 1024 MB 2. \ud83d\udd0d \u914d\u7f6e\u8be6\u7ec6\u5206\u6790 <p>\ud83d\udccb \u5355\u7ebf\u7a0b\u6a21\u5f0f</p> \u6210\u529f\u7387: 98.5% 98.5% \u6548\u7387\u8bc4\u5206: 4.9 4.9% <p>\ud83d\udccb \u591a\u7ebf\u7a0b\u6a21\u5f0f</p> \u6210\u529f\u7387: 95.2% 95.2% \u6548\u7387\u8bc4\u5206: 19.0 19.0% <p>\ud83d\udccb \u5f02\u6b65\u6a21\u5f0f</p> \u6210\u529f\u7387: 92.8% 92.8% \u6548\u7387\u8bc4\u5206: 41.8 41.8% <p>\ud83d\udccb \u5206\u5e03\u5f0f\u6a21\u5f0f</p> \u6210\u529f\u7387: 89.1% 89.1% \u6548\u7387\u8bc4\u5206: 71.3 71.3% 3. \ud83d\udca1 \u6027\u80fd\u4f18\u5316\u5efa\u8bae <p>**\u6027\u80fd\u4f18\u5316\u5206\u6790\u7ed3\u679c\uff1a**</p> <p>\ud83c\udfc6 **\u63a8\u8350\u914d\u7f6e**</p> <p>\u2022 \u6700\u4f73\u7efc\u5408\u6027\u80fd: \u5206\u5e03\u5f0f\u6a21\u5f0f</p> <p>\u2022 \u91c7\u96c6\u901f\u5ea6: 800 \u6761/\u5206\u949f</p> <p>\u2022 \u6210\u529f\u7387: 89.1%</p> <p>\u2022 \u8d44\u6e90\u6d88\u8017: CPU 25%, \u5185\u5b58 1024MB</p> <p>\u2696\ufe0f **\u914d\u7f6e\u6743\u8861**</p> <p>\u2022 \u5355\u7ebf\u7a0b\u6a21\u5f0f: \u9ad8\u6210\u529f\u7387\uff0c\u4f4e\u8d44\u6e90\u6d88\u8017\uff0c\u9002\u5408\u5c0f\u89c4\u6a21\u91c7\u96c6</p> <p>\u2022 \u591a\u7ebf\u7a0b\u6a21\u5f0f: \u5e73\u8861\u6027\u80fd\uff0c\u9002\u5408\u4e2d\u7b49\u89c4\u6a21\u9879\u76ee</p> <p>\u2022 \u5f02\u6b65\u6a21\u5f0f: \u9ad8\u6548\u7387\u4f4e\u8d44\u6e90\uff0c\u9002\u5408\u5927\u89c4\u6a21\u5feb\u901f\u91c7\u96c6</p> <p>\u2022 \u5206\u5e03\u5f0f\u6a21\u5f0f: \u8d85\u9ad8\u901f\u5ea6\uff0c\u9002\u5408\u8d85\u5927\u89c4\u6a21\u9879\u76ee</p> <p>\ud83c\udfaf **\u4f18\u5316\u5efa\u8bae**</p> <p>\u2022 \u6839\u636e\u76ee\u6807\u7f51\u7ad9\u7279\u6027\u9009\u62e9\u5408\u9002\u7684\u5e76\u53d1\u6a21\u5f0f</p> <p>\u2022 \u76d1\u63a7\u6210\u529f\u7387\u53d8\u5316\uff0c\u53ca\u65f6\u8c03\u6574\u5e76\u53d1\u6570</p> <p>\u2022 \u5728\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\u4e4b\u95f4\u627e\u5230\u6700\u4f73\u5e73\u8861\u70b9</p> <p>\u2022 \u8003\u8651\u7f51\u7ad9\u53cd\u722c\u7b56\u7565\uff0c\u907f\u514d\u8fc7\u5ea6\u6fc0\u8fdb\u7684\u914d\u7f6e</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Performance Analysis Features: - Multi-dimensional performance comparison - Comprehensive efficiency scoring - Resource consumption analysis - Configuration optimization recommendations</p>"},{"location":"examples/spider-reports/#data-collection-summary","title":"Data Collection Summary","text":""},{"location":"examples/spider-reports/#complete-spider-project-report","title":"Complete Spider Project Report \ud83c\udf10 \u76ee\u6807\u7f51\u7ad9                  \ud83d\udce6 \u603b\u91c7\u96c6\u91cf                  \u2705 \u5e73\u5747\u6210\u529f\u7387                  \ud83c\udfaf \u6570\u636e\u8d28\u91cf\u7387","text":"Python<pre><code>from email_widget import Email, ColumnWidget, StatusWidget, CardWidget\nfrom email_widget.core.enums import TextType, StatusType\n\n# \u521b\u5efa\u7efc\u5408\u722c\u866b\u9879\u76ee\u62a5\u544a\nemail = Email(\"\u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udd77\ufe0f \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u9879\u76ee\u5468\u671f: 2024\u5e741\u670815\u65e5 - 2024\u5e741\u670821\u65e5\")\n\n# \u9879\u76ee\u6574\u4f53\u6982\u51b5\nemail.add_title(\"\ud83d\udcca \u9879\u76ee\u6574\u4f53\u6982\u51b5\", TextType.SECTION_H2)\n\nproject_summary = [\n    (\"\u76ee\u6807\u7f51\u7ad9\", \"15\u4e2a\", \"\ud83c\udf10\"),\n    (\"\u603b\u91c7\u96c6\u91cf\", \"125,000\u6761\", \"\ud83d\udce6\"),\n    (\"\u5e73\u5747\u6210\u529f\u7387\", \"94.3%\", \"\u2705\"),\n    (\"\u6570\u636e\u8d28\u91cf\u7387\", \"92.8%\", \"\ud83c\udfaf\")\n]\n\nfor title, value, icon in project_summary:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u5173\u952e\u6210\u679c\u5c55\u793a\nemail.add_title(\"\ud83c\udfc6 \u5173\u952e\u6210\u679c\", TextType.SECTION_H2)\n\nachievements = f\"\"\"\n**\u9879\u76ee\u4e3b\u8981\u6210\u679c\uff1a**\n\n\u2705 **\u91c7\u96c6\u6210\u679c**\n\u2022 \u6210\u529f\u5b8c\u621015\u4e2a\u76ee\u6807\u7f51\u7ad9\u7684\u6570\u636e\u91c7\u96c6\n\u2022 \u7d2f\u8ba1\u83b7\u53d6\u6709\u6548\u6570\u636e125,000\u6761\n\u2022 \u6570\u636e\u8986\u76d6\u7387\u8fbe\u5230\u9884\u671f\u76ee\u6807\u7684105%\n\n\ud83c\udfaf **\u8d28\u91cf\u4fdd\u8bc1**\n\u2022 \u6570\u636e\u8d28\u91cf\u738792.8%\uff0c\u8d85\u8fc7\u9884\u671f90%\n\u2022 \u91cd\u590d\u6570\u636e\u7387\u63a7\u5236\u57282.1%\u4ee5\u5185\n\u2022 \u5173\u952e\u5b57\u6bb5\u5b8c\u6574\u6027\u8fbe\u523095%\u4ee5\u4e0a\n\n\u26a1 **\u6280\u672f\u7a81\u7834**\n\u2022 \u6210\u529f\u5e94\u5bf95\u79cd\u4e0d\u540c\u7684\u53cd\u722c\u673a\u5236\n\u2022 \u5f00\u53d1\u4e86\u667a\u80fd\u91cd\u8bd5\u548c\u964d\u7ea7\u7b56\u7565\n\u2022 \u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u91c7\u96c6\u67b6\u6784\n\n\ud83d\udcc8 **\u6548\u7387\u63d0\u5347**\n\u2022 \u76f8\u6bd4\u4f20\u7edf\u65b9\u5f0f\uff0c\u6548\u7387\u63d0\u5347300%\n\u2022 \u5f02\u5e38\u5904\u7406\u673a\u5236\u51cf\u5c11\u4eba\u5de5\u5e72\u988480%\n\u2022 \u81ea\u52a8\u5316\u7a0b\u5ea6\u8fbe\u523095%\n\"\"\"\n\nemail.add_text(achievements.strip())\n\n# \u7ecf\u9a8c\u603b\u7ed3\nemail.add_title(\"\ud83d\udca1 \u7ecf\u9a8c\u603b\u7ed3\", TextType.SECTION_H2)\n\nlessons_learned = f\"\"\"\n**\u9879\u76ee\u7ecf\u9a8c\u4e0e\u6559\u8bad\uff1a**\n\n\ud83c\udf93 **\u6210\u529f\u7ecf\u9a8c**\n\u2022 \u5145\u5206\u7684\u524d\u671f\u8c03\u7814\u548c\u6280\u672f\u9009\u578b\n\u2022 \u5b8c\u5584\u7684\u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236\n\u2022 \u7075\u6d3b\u7684\u7b56\u7565\u8c03\u6574\u548c\u4f18\u5316\n\n\ud83d\udea7 **\u9047\u5230\u7684\u6311\u6218**\n\u2022 \u76ee\u6807\u7f51\u7ad9\u9891\u7e41\u66f4\u65b0\u53cd\u722c\u7b56\u7565\n\u2022 \u6570\u636e\u7ed3\u6784\u53d8\u5316\u9700\u8981\u53ca\u65f6\u9002\u914d\n\u2022 \u9ad8\u5e76\u53d1\u4e0b\u7684\u8d44\u6e90\u7ba1\u7406\u4f18\u5316\n\n\ud83d\udd04 **\u6301\u7eed\u6539\u8fdb**\n\u2022 \u5efa\u7acb\u7f51\u7ad9\u53d8\u5316\u76d1\u63a7\u673a\u5236\n\u2022 \u5b8c\u5584\u81ea\u52a8\u5316\u6d4b\u8bd5\u6d41\u7a0b\n\u2022 \u4f18\u5316\u6570\u636e\u8d28\u91cf\u68c0\u67e5\u89c4\u5219\n\"\"\"\n\nemail.add_text(lessons_learned.strip())\n\nemail.export_html(\"spider_project_summary.html\")\nprint(\"\u2705 \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a\u5df2\u751f\u6210\uff1aspider_project_summary.html\")\n</code></pre> \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:49:25 <p>\ud83d\udd77\ufe0f \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a</p> <p>\u9879\u76ee\u5468\u671f: 2024\u5e741\u670815\u65e5 - 2024\u5e741\u670821\u65e5</p> 1. \ud83d\udcca \u9879\u76ee\u6574\u4f53\u6982\u51b5 15\u4e2a 125,000\u6761 94.3% 92.8% 2. \ud83c\udfc6 \u5173\u952e\u6210\u679c <p>**\u9879\u76ee\u4e3b\u8981\u6210\u679c\uff1a**</p> <p>\u2705 **\u91c7\u96c6\u6210\u679c**</p> <p>\u2022 \u6210\u529f\u5b8c\u621015\u4e2a\u76ee\u6807\u7f51\u7ad9\u7684\u6570\u636e\u91c7\u96c6</p> <p>\u2022 \u7d2f\u8ba1\u83b7\u53d6\u6709\u6548\u6570\u636e125,000\u6761</p> <p>\u2022 \u6570\u636e\u8986\u76d6\u7387\u8fbe\u5230\u9884\u671f\u76ee\u6807\u7684105%</p> <p>\ud83c\udfaf **\u8d28\u91cf\u4fdd\u8bc1**</p> <p>\u2022 \u6570\u636e\u8d28\u91cf\u738792.8%\uff0c\u8d85\u8fc7\u9884\u671f90%</p> <p>\u2022 \u91cd\u590d\u6570\u636e\u7387\u63a7\u5236\u57282.1%\u4ee5\u5185</p> <p>\u2022 \u5173\u952e\u5b57\u6bb5\u5b8c\u6574\u6027\u8fbe\u523095%\u4ee5\u4e0a</p> <p>\u26a1 **\u6280\u672f\u7a81\u7834**</p> <p>\u2022 \u6210\u529f\u5e94\u5bf95\u79cd\u4e0d\u540c\u7684\u53cd\u722c\u673a\u5236</p> <p>\u2022 \u5f00\u53d1\u4e86\u667a\u80fd\u91cd\u8bd5\u548c\u964d\u7ea7\u7b56\u7565</p> <p>\u2022 \u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u91c7\u96c6\u67b6\u6784</p> <p>\ud83d\udcc8 **\u6548\u7387\u63d0\u5347**</p> <p>\u2022 \u76f8\u6bd4\u4f20\u7edf\u65b9\u5f0f\uff0c\u6548\u7387\u63d0\u5347300%</p> <p>\u2022 \u5f02\u5e38\u5904\u7406\u673a\u5236\u51cf\u5c11\u4eba\u5de5\u5e72\u988480%</p> <p>\u2022 \u81ea\u52a8\u5316\u7a0b\u5ea6\u8fbe\u523095%</p> 3. \ud83d\udca1 \u7ecf\u9a8c\u603b\u7ed3 <p>**\u9879\u76ee\u7ecf\u9a8c\u4e0e\u6559\u8bad\uff1a**</p> <p>\ud83c\udf93 **\u6210\u529f\u7ecf\u9a8c**</p> <p>\u2022 \u5145\u5206\u7684\u524d\u671f\u8c03\u7814\u548c\u6280\u672f\u9009\u578b</p> <p>\u2022 \u5b8c\u5584\u7684\u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236</p> <p>\u2022 \u7075\u6d3b\u7684\u7b56\u7565\u8c03\u6574\u548c\u4f18\u5316</p> <p>\ud83d\udea7 **\u9047\u5230\u7684\u6311\u6218**</p> <p>\u2022 \u76ee\u6807\u7f51\u7ad9\u9891\u7e41\u66f4\u65b0\u53cd\u722c\u7b56\u7565</p> <p>\u2022 \u6570\u636e\u7ed3\u6784\u53d8\u5316\u9700\u8981\u53ca\u65f6\u9002\u914d</p> <p>\u2022 \u9ad8\u5e76\u53d1\u4e0b\u7684\u8d44\u6e90\u7ba1\u7406\u4f18\u5316</p> <p>\ud83d\udd04 **\u6301\u7eed\u6539\u8fdb**</p> <p>\u2022 \u5efa\u7acb\u7f51\u7ad9\u53d8\u5316\u76d1\u63a7\u673a\u5236</p> <p>\u2022 \u5b8c\u5584\u81ea\u52a8\u5316\u6d4b\u8bd5\u6d41\u7a0b</p> <p>\u2022 \u4f18\u5316\u6570\u636e\u8d28\u91cf\u68c0\u67e5\u89c4\u5219</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Comprehensive Report Value: - Complete project overview - Quantified achievement statistics - Experience summary and insights - Decision support information</p>"},{"location":"examples/spider-reports/#learning-summary","title":"Learning Summary","text":"<p>Through spider report examples, you have mastered:</p>"},{"location":"examples/spider-reports/#professional-skills","title":"\ud83c\udfaf Professional Skills","text":"<ul> <li>Task Monitoring - Real-time progress tracking and status management</li> <li>Quality Check - Multi-dimensional data quality assessment</li> <li>Exception Analysis - Intelligent exception identification and handling recommendations</li> <li>Performance Optimization - Configuration comparison and efficiency analysis</li> </ul>"},{"location":"examples/spider-reports/#report-types","title":"\ud83d\udcca Report Types","text":"<ul> <li>Spider task progress reports</li> <li>Data quality check reports</li> <li>Exception monitoring analysis reports</li> <li>Performance optimization analysis reports</li> </ul>"},{"location":"examples/spider-reports/#best-practices","title":"\ud83d\udca1 Best Practices","text":"<ul> <li>Real-time monitoring and alert mechanisms</li> <li>Data-driven optimization decisions</li> <li>Automated exception detection and handling</li> <li>Visual display of complex data relationships</li> </ul>"},{"location":"examples/spider-reports/#application-value","title":"\ud83d\ude80 Application Value","text":"<ul> <li>Improve spider project management efficiency</li> <li>Ensure data collection quality</li> <li>Timely discovery and problem resolution</li> <li>Provide basis for technical optimization</li> </ul> <p>Continue learning Real Applications to explore more professional application scenarios!</p>"},{"location":"examples/system-monitoring/","title":"System Monitoring Examples","text":"<p>This page demonstrates how to use EmailWidget to create system monitoring reports, implementing service health checks, resource monitoring, and alert notifications.</p>"},{"location":"examples/system-monitoring/#server-resource-monitoring","title":"Server Resource Monitoring","text":""},{"location":"examples/system-monitoring/#system-resource-usage-report","title":"System Resource Usage Report \ud83d\udcbb \u670d\u52a1\u5668\u72b6\u6001                  \u23f0 \u8fd0\u884c\u65f6\u95f4                  \u2699\ufe0f CPU\u6838\u5fc3\u6570                  \ud83d\udcbe \u5185\u5b58\u603b\u91cf","text":"Python<pre><code>import psutil\nfrom datetime import datetime\nfrom email_widget import Email, ProgressWidget, StatusWidget, AlertWidget\nfrom email_widget.core.enums import TextType, ProgressTheme, StatusType, AlertType\n\n# \u83b7\u53d6\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\ndef get_system_info():\n    \"\"\"\u83b7\u53d6\u7cfb\u7edf\u57fa\u672c\u4fe1\u606f\"\"\"\n    return {\n        'cpu_percent': psutil.cpu_percent(interval=1),\n        'memory': psutil.virtual_memory(),\n        'disk': psutil.disk_usage('/'),\n        'network': psutil.net_io_counters(),\n        'boot_time': datetime.fromtimestamp(psutil.boot_time())\n    }\n\n# \u521b\u5efa\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udda5\ufe0f \u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u76d1\u63a7\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\", \n               color=\"#666666\")\n\n# \u83b7\u53d6\u7cfb\u7edf\u4fe1\u606f\nsys_info = get_system_info()\n\n# \u7cfb\u7edf\u6982\u51b5\nemail.add_title(\"\ud83d\udcca \u7cfb\u7edf\u6982\u51b5\", TextType.SECTION_H2)\n\nuptime = datetime.now() - sys_info['boot_time']\noverview_info = [\n    (\"\u670d\u52a1\u5668\u72b6\u6001\", \"\ud83d\udfe2 \u6b63\u5e38\u8fd0\u884c\", \"\ud83d\udcbb\"),\n    (\"\u8fd0\u884c\u65f6\u95f4\", f\"{uptime.days}\u5929 {uptime.seconds//3600}\u5c0f\u65f6\", \"\u23f0\"),\n    (\"CPU\u6838\u5fc3\u6570\", f\"{psutil.cpu_count()}\u6838\", \"\u2699\ufe0f\"),\n    (\"\u5185\u5b58\u603b\u91cf\", f\"{sys_info['memory'].total / (1024**3):.1f} GB\", \"\ud83d\udcbe\")\n]\n\nfor title, value, icon in overview_info:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u8d44\u6e90\u4f7f\u7528\u8be6\u60c5\nemail.add_title(\"\ud83d\udcc8 \u8d44\u6e90\u4f7f\u7528\u8be6\u60c5\", TextType.SECTION_H2)\n\n# CPU\u4f7f\u7528\u7387\ncpu_usage = sys_info['cpu_percent']\ncpu_theme = ProgressTheme.SUCCESS if cpu_usage &lt; 50 else \\\n            ProgressTheme.WARNING if cpu_usage &lt; 80 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 CPU\u4f7f\u7528\u7387\")\nemail.add_progress(cpu_usage, f\"CPU: {cpu_usage:.1f}%\", theme=cpu_theme)\n\n# \u5185\u5b58\u4f7f\u7528\u7387\nmemory = sys_info['memory']\nmemory_usage = memory.percent\nmemory_theme = ProgressTheme.SUCCESS if memory_usage &lt; 60 else \\\n               ProgressTheme.WARNING if memory_usage &lt; 85 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u5185\u5b58\u4f7f\u7528\u7387\")\nemail.add_progress(memory_usage, f\"\u5185\u5b58: {memory_usage:.1f}%\", theme=memory_theme)\n\n# \u78c1\u76d8\u4f7f\u7528\u7387\ndisk = sys_info['disk']\ndisk_usage = (disk.used / disk.total) * 100\ndisk_theme = ProgressTheme.SUCCESS if disk_usage &lt; 70 else \\\n             ProgressTheme.WARNING if disk_usage &lt; 90 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u78c1\u76d8\u4f7f\u7528\u7387\")\nemail.add_progress(disk_usage, f\"\u78c1\u76d8: {disk_usage:.1f}%\", theme=disk_theme)\n\n# \u544a\u8b66\u68c0\u67e5\nemail.add_title(\"\u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66\", TextType.SECTION_H2)\n\n# \u68c0\u67e5\u5404\u9879\u6307\u6807\u662f\u5426\u9700\u8981\u544a\u8b66\nalerts = []\nif cpu_usage &gt; 80:\n    alerts.append((\"CPU\u4f7f\u7528\u7387\u8fc7\u9ad8\", f\"\u5f53\u524dCPU\u4f7f\u7528\u7387{cpu_usage:.1f}%\uff0c\u5efa\u8bae\u68c0\u67e5\u9ad8CPU\u8fdb\u7a0b\", AlertType.CAUTION))\nif memory_usage &gt; 85:\n    alerts.append((\"\u5185\u5b58\u4e0d\u8db3\", f\"\u5185\u5b58\u4f7f\u7528\u7387{memory_usage:.1f}%\uff0c\u53ef\u80fd\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\", AlertType.WARNING))\nif disk_usage &gt; 90:\n    alerts.append((\"\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\", f\"\u78c1\u76d8\u4f7f\u7528\u7387{disk_usage:.1f}%\uff0c\u5efa\u8bae\u6e05\u7406\u65e0\u7528\u6587\u4ef6\", AlertType.CAUTION))\n\nif alerts:\n    for title, content, alert_type in alerts:\n        email.add_alert(content, alert_type, title)\nelse:\n    email.add_alert(\"\u7cfb\u7edf\u8fd0\u884c\u6b63\u5e38\uff0c\u6240\u6709\u6307\u6807\u5747\u5728\u6b63\u5e38\u8303\u56f4\u5185\", AlertType.TIP, \"\u2705 \u7cfb\u7edf\u72b6\u6001\u826f\u597d\")\n\nemail.export_html(\"system_monitor.html\")\nprint(\"\u2705 \u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1asystem_monitor.html\")\n</code></pre> \u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a \u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:36:48 <p>\ud83d\udda5\ufe0f \u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a</p> <p>\u76d1\u63a7\u65f6\u95f4: 2025-07-07 23:36:48</p> 1. \ud83d\udcca \u7cfb\u7edf\u6982\u51b5 \ud83d\udfe2 \u6b63\u5e38\u8fd0\u884c 5\u5929 0\u5c0f\u65f6 8\u6838 16.0 GB 2. \ud83d\udcc8 \u8d44\u6e90\u4f7f\u7528\u8be6\u60c5 <p>\ud83d\udd39 CPU\u4f7f\u7528\u7387</p> CPU: 45.0% 45.0% <p>\ud83d\udd39 \u5185\u5b58\u4f7f\u7528\u7387</p> \u5185\u5b58: 65.5% 65.5% <p>\ud83d\udd39 \u78c1\u76d8\u4f7f\u7528\u7387</p> \u78c1\u76d8: 50.0% 50.0% 3. \u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66 \ud83d\udca1 \u2705 \u7cfb\u7edf\u72b6\u6001\u826f\u597d \u7cfb\u7edf\u8fd0\u884c\u6b63\u5e38\uff0c\u6240\u6709\u6307\u6807\u5747\u5728\u6b63\u5e38\u8303\u56f4\u5185 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Monitoring Features: - Real-time system resource usage acquisition - Intelligent alert threshold settings - Intuitive progress bar displays - Automated status assessment</p>"},{"location":"examples/system-monitoring/#application-service-monitoring","title":"Application Service Monitoring","text":""},{"location":"examples/system-monitoring/#multi-service-health-check","title":"Multi-Service Health Check \ud83d\udee0\ufe0f \u670d\u52a1\u603b\u6570                  \u2705 \u6b63\u5e38\u670d\u52a1                  \u274c \u5f02\u5e38\u670d\u52a1                  \ud83d\udc9a \u5065\u5eb7\u7387","text":"Python<pre><code>import requests\nfrom datetime import datetime\nfrom email_widget import Email, StatusWidget, TableWidget, AlertWidget\nfrom email_widget.core.enums import TextType, StatusType, AlertType\n\n# \u5b9a\u4e49\u8981\u76d1\u63a7\u7684\u670d\u52a1\nservices = [\n    {\"name\": \"Web\u670d\u52a1\", \"url\": \"http://localhost:8080/health\", \"timeout\": 5},\n    {\"name\": \"API\u670d\u52a1\", \"url\": \"http://localhost:3000/api/health\", \"timeout\": 5},\n    {\"name\": \"\u6570\u636e\u5e93\", \"url\": \"http://localhost:5432/health\", \"timeout\": 3},\n    {\"name\": \"Redis\u7f13\u5b58\", \"url\": \"http://localhost:6379/ping\", \"timeout\": 3},\n    {\"name\": \"\u6d88\u606f\u961f\u5217\", \"url\": \"http://localhost:5672/health\", \"timeout\": 5}\n]\n\ndef check_service_health(service):\n    \"\"\"\u68c0\u67e5\u5355\u4e2a\u670d\u52a1\u5065\u5eb7\u72b6\u6001\"\"\"\n    try:\n        start_time = datetime.now()\n        response = requests.get(service[\"url\"], timeout=service[\"timeout\"])\n        response_time = (datetime.now() - start_time).total_seconds() * 1000\n\n        if response.status_code == 200:\n            return {\n                \"status\": \"\u6b63\u5e38\",\n                \"response_time\": response_time,\n                \"status_type\": StatusType.SUCCESS,\n                \"error\": None\n            }\n        else:\n            return {\n                \"status\": \"\u5f02\u5e38\",\n                \"response_time\": response_time,\n                \"status_type\": StatusType.ERROR,\n                \"error\": f\"HTTP {response.status_code}\"\n            }\n    except requests.exceptions.Timeout:\n        return {\n            \"status\": \"\u8d85\u65f6\",\n            \"response_time\": service[\"timeout\"] * 1000,\n            \"status_type\": StatusType.WARNING,\n            \"error\": \"\u8bf7\u6c42\u8d85\u65f6\"\n        }\n    except Exception as e:\n        return {\n            \"status\": \"\u4e0d\u53ef\u8fbe\",\n            \"response_time\": 0,\n            \"status_type\": StatusType.ERROR,\n            \"error\": str(e)\n        }\n\n# \u521b\u5efa\u670d\u52a1\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udee0\ufe0f \u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u68c0\u67e5\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n# \u6267\u884c\u5065\u5eb7\u68c0\u67e5\nservice_results = []\nfor service in services:\n    result = check_service_health(service)\n    service_results.append({\n        \"name\": service[\"name\"],\n        \"url\": service[\"url\"],\n        **result\n    })\n\n# \u670d\u52a1\u72b6\u6001\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u670d\u52a1\u72b6\u6001\u6982\u89c8\", TextType.SECTION_H2)\n\nnormal_count = sum(1 for r in service_results if r[\"status\"] == \"\u6b63\u5e38\")\ntotal_count = len(service_results)\nhealth_rate = (normal_count / total_count) * 100\n\noverview_metrics = [\n    (\"\u670d\u52a1\u603b\u6570\", f\"{total_count}\", \"\ud83d\udee0\ufe0f\"),\n    (\"\u6b63\u5e38\u670d\u52a1\", f\"{normal_count}\", \"\u2705\"),\n    (\"\u5f02\u5e38\u670d\u52a1\", f\"{total_count - normal_count}\", \"\u274c\"),\n    (\"\u5065\u5eb7\u7387\", f\"{health_rate:.1f}%\", \"\ud83d\udc9a\")\n]\n\nfor title, value, icon in overview_metrics:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u670d\u52a1\u72b6\u6001\u8be6\u60c5\nemail.add_title(\"\ud83d\udd0d \u670d\u52a1\u72b6\u6001\u8be6\u60c5\", TextType.SECTION_H2)\n\nfor result in service_results:\n    status_widget = StatusWidget()\n    status_widget.set_title(result[\"name\"]) \\\n                 .set_status(result[\"status\"]) \\\n                 .set_status_type(result[\"status_type\"]) \\\n                 .set_description(f\"\u54cd\u5e94\u65f6\u95f4: {result['response_time']:.0f}ms\")\n    email.add_widget(status_widget)\n\n# \u8be6\u7ec6\u670d\u52a1\u8868\u683c\nemail.add_title(\"\ud83d\udccb \u8be6\u7ec6\u76d1\u63a7\u6570\u636e\", TextType.SECTION_H2)\n\ntable = TableWidget()\ntable.set_headers([\"\u670d\u52a1\u540d\u79f0\", \"\u72b6\u6001\", \"\u54cd\u5e94\u65f6\u95f4\", \"\u9519\u8bef\u4fe1\u606f\"])\n\nfor result in service_results:\n    status_emoji = \"\ud83d\udfe2\" if result[\"status\"] == \"\u6b63\u5e38\" else \\\n                  \"\ud83d\udfe1\" if result[\"status\"] == \"\u8d85\u65f6\" else \"\ud83d\udd34\"\n\n    table.add_row([\n        result[\"name\"],\n        f\"{status_emoji} {result['status']}\",\n        f\"{result['response_time']:.0f}ms\",\n        result[\"error\"] or \"\u65e0\"\n    ])\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u5f02\u5e38\u544a\u8b66\nemail.add_title(\"\ud83d\udea8 \u5f02\u5e38\u544a\u8b66\", TextType.SECTION_H2)\n\nerror_services = [r for r in service_results if r[\"status\"] != \"\u6b63\u5e38\"]\nif error_services:\n    for service in error_services:\n        alert_type = AlertType.WARNING if service[\"status\"] == \"\u8d85\u65f6\" else AlertType.CAUTION\n        email.add_alert(\n            f\"{service['name']} \u72b6\u6001\u5f02\u5e38: {service['error']}\",\n            alert_type,\n            f\"\u26a0\ufe0f {service['name']} \u5f02\u5e38\"\n        )\nelse:\n    email.add_alert(\"\u6240\u6709\u670d\u52a1\u8fd0\u884c\u6b63\u5e38\", AlertType.TIP, \"\u2705 \u7cfb\u7edf\u72b6\u6001\u826f\u597d\")\n\nemail.export_html(\"service_monitor.html\")\nprint(\"\u2705 \u670d\u52a1\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1aservice_monitor.html\")\n</code></pre> \u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a \u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:40:33 <p>\ud83d\udee0\ufe0f \u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a</p> <p>\u68c0\u67e5\u65f6\u95f4: 2025-07-07 23:40:33</p> 1. \ud83d\udcca \u670d\u52a1\u72b6\u6001\u6982\u89c8 5 3 2 60.0% 2. \ud83d\udd0d \u670d\u52a1\u72b6\u6001\u8be6\u60c5 Web\u670d\u52a1 \u54cd\u5e94\u65f6\u95f4: 0ms API\u670d\u52a1 \u54cd\u5e94\u65f6\u95f4: 0ms \u6570\u636e\u5e93 \u54cd\u5e94\u65f6\u95f4: 3000ms Redis\u7f13\u5b58 \u54cd\u5e94\u65f6\u95f4: 0ms \u6d88\u606f\u961f\u5217 \u54cd\u5e94\u65f6\u95f4: 0ms 3. \ud83d\udccb \u8be6\u7ec6\u76d1\u63a7\u6570\u636e \u670d\u52a1\u540d\u79f0 \u72b6\u6001 \u54cd\u5e94\u65f6\u95f4 \u9519\u8bef\u4fe1\u606f Web\u670d\u52a1 \ud83d\udfe2 \u6b63\u5e38 0ms \u65e0 API\u670d\u52a1 \ud83d\udfe2 \u6b63\u5e38 0ms \u65e0 \u6570\u636e\u5e93 \ud83d\udfe1 \u8d85\u65f6 3000ms \u8bf7\u6c42\u8d85\u65f6 Redis\u7f13\u5b58 \ud83d\udfe2 \u6b63\u5e38 0ms \u65e0 \u6d88\u606f\u961f\u5217 \ud83d\udd34 \u5f02\u5e38 0ms HTTP 500 4. \ud83d\udea8 \u5f02\u5e38\u544a\u8b66 \u26a0\ufe0f \u26a0\ufe0f \u6570\u636e\u5e93 \u5f02\u5e38 \u6570\u636e\u5e93 \u72b6\u6001\u5f02\u5e38: \u8bf7\u6c42\u8d85\u65f6 \ud83d\udea8 \u26a0\ufe0f \u6d88\u606f\u961f\u5217 \u5f02\u5e38 \u6d88\u606f\u961f\u5217 \u72b6\u6001\u5f02\u5e38: HTTP 500 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Monitoring Highlights: - Multi-service concurrent checking - Response time statistics - Automatic exception alerts - Health rate calculation</p>"},{"location":"examples/system-monitoring/#log-analysis-monitoring","title":"Log Analysis Monitoring","text":""},{"location":"examples/system-monitoring/#system-log-statistical-analysis","title":"System Log Statistical Analysis \ud83d\udcc4 \u65e5\u5fd7\u603b\u6570                  \ud83d\udd34 \u9519\u8bef\u65e5\u5fd7                  \ud83d\udfe1 \u8b66\u544a\u65e5\u5fd7                  \ud83d\udfe2 \u4fe1\u606f\u65e5\u5fd7","text":"Python<pre><code>import re\nfrom datetime import datetime, timedelta\nfrom collections import Counter\nfrom email_widget import Email, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u6a21\u62df\u65e5\u5fd7\u6570\u636e\uff08\u5b9e\u9645\u5e94\u7528\u4e2d\u4ece\u65e5\u5fd7\u6587\u4ef6\u8bfb\u53d6\uff09\nsample_logs = [\n    \"2024-01-20 10:15:23 INFO User login successful: user123\",\n    \"2024-01-20 10:16:45 ERROR Database connection failed: timeout\",\n    \"2024-01-20 10:17:12 WARN High memory usage detected: 85%\",\n    \"2024-01-20 10:18:30 INFO User logout: user123\",\n    \"2024-01-20 10:19:55 ERROR API request failed: 500 Internal Server Error\",\n    \"2024-01-20 10:20:18 INFO New user registration: user456\",\n    \"2024-01-20 10:21:44 WARN Slow query detected: 3.2s\",\n    \"2024-01-20 10:22:17 ERROR File not found: config.xml\",\n    \"2024-01-20 10:23:35 INFO Backup completed successfully\",\n    \"2024-01-20 10:24:52 ERROR Network timeout: redis connection\",\n]\n\ndef analyze_logs(logs):\n    \"\"\"\u5206\u6790\u65e5\u5fd7\u6570\u636e\"\"\"\n    log_pattern = r'(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}) (\\w+) (.+)'\n\n    parsed_logs = []\n    for log in logs:\n        match = re.match(log_pattern, log)\n        if match:\n            timestamp, level, message = match.groups()\n            parsed_logs.append({\n                'timestamp': datetime.strptime(timestamp, '%Y-%m-%d %H:%M:%S'),\n                'level': level,\n                'message': message\n            })\n\n    # \u7edf\u8ba1\u5206\u6790\n    level_counts = Counter(log['level'] for log in parsed_logs)\n    error_messages = [log['message'] for log in parsed_logs if log['level'] == 'ERROR']\n\n    return {\n        'total_logs': len(parsed_logs),\n        'level_counts': level_counts,\n        'error_messages': error_messages,\n        'parsed_logs': parsed_logs\n    }\n\n# \u521b\u5efa\u65e5\u5fd7\u5206\u6790\u62a5\u544a\nemail = Email(\"\u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udcdd \u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u5206\u6790\u65f6\u95f4\u8303\u56f4: \u6700\u8fd11\u5c0f\u65f6\")\n\n# \u5206\u6790\u65e5\u5fd7\nlog_analysis = analyze_logs(sample_logs)\n\n# \u65e5\u5fd7\u7edf\u8ba1\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u65e5\u5fd7\u7edf\u8ba1\u6982\u89c8\", TextType.SECTION_H2)\n\ntotal_logs = log_analysis['total_logs']\nerror_count = log_analysis['level_counts'].get('ERROR', 0)\nwarn_count = log_analysis['level_counts'].get('WARN', 0)\ninfo_count = log_analysis['level_counts'].get('INFO', 0)\n\nlog_stats = [\n    (\"\u65e5\u5fd7\u603b\u6570\", f\"{total_logs:,}\", \"\ud83d\udcc4\"),\n    (\"\u9519\u8bef\u65e5\u5fd7\", f\"{error_count}\", \"\ud83d\udd34\"),\n    (\"\u8b66\u544a\u65e5\u5fd7\", f\"{warn_count}\", \"\ud83d\udfe1\"),\n    (\"\u4fe1\u606f\u65e5\u5fd7\", f\"{info_count}\", \"\ud83d\udfe2\")\n]\n\nfor title, value, icon in log_stats:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u65e5\u5fd7\u7ea7\u522b\u5206\u5e03\nemail.add_title(\"\ud83d\udcc8 \u65e5\u5fd7\u7ea7\u522b\u5206\u5e03\", TextType.SECTION_H2)\n\nfor level, count in log_analysis['level_counts'].items():\n    percentage = (count / total_logs) * 100\n\n    # \u6839\u636e\u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e\u4e3b\u9898\u8272\n    if level == 'ERROR':\n        theme = ProgressTheme.ERROR\n    elif level == 'WARN':\n        theme = ProgressTheme.WARNING\n    elif level == 'INFO':\n        theme = ProgressTheme.SUCCESS\n    else:\n        theme = ProgressTheme.INFO\n\n    email.add_text(f\"\ud83d\udd39 {level} \u7ea7\u522b\")\n    email.add_progress(percentage, f\"{count} \u6761 ({percentage:.1f}%)\", theme=theme)\n\n# \u9519\u8bef\u65e5\u5fd7\u8be6\u60c5\nif error_count &gt; 0:\n    email.add_title(\"\ud83d\udea8 \u9519\u8bef\u65e5\u5fd7\u8be6\u60c5\", TextType.SECTION_H2)\n\n    error_table = TableWidget()\n    error_table.set_headers([\"\u5e8f\u53f7\", \"\u9519\u8bef\u4fe1\u606f\"])\n\n    for i, error_msg in enumerate(log_analysis['error_messages'], 1):\n        error_table.add_row([str(i), error_msg])\n\n    error_table.set_striped(True)\n    email.add_widget(error_table)\n\n# \u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30\nemail.add_title(\"\ud83d\udca1 \u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30\", TextType.SECTION_H2)\n\nerror_rate = (error_count / total_logs) * 100 if total_logs &gt; 0 else 0\nwarn_rate = (warn_count / total_logs) * 100 if total_logs &gt; 0 else 0\n\nhealth_assessment = f\"\"\"\n**\u57fa\u4e8e\u65e5\u5fd7\u5206\u6790\u7684\u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30\uff1a**\n\n\ud83d\udcca **\u5173\u952e\u6307\u6807**\n\u2022 \u9519\u8bef\u7387: {error_rate:.1f}% ({error_count}/{total_logs})\n\u2022 \u8b66\u544a\u7387: {warn_rate:.1f}% ({warn_count}/{total_logs})\n\u2022 \u7cfb\u7edf\u72b6\u6001: {'\ud83d\udd34 \u9700\u8981\u5173\u6ce8' if error_rate &gt; 10 else '\ud83d\udfe1 \u6709\u5f85\u6539\u5584' if error_rate &gt; 5 else '\ud83d\udfe2 \u8fd0\u884c\u826f\u597d'}\n\n\ud83d\udca1 **\u5efa\u8bae\u63aa\u65bd**\n\"\"\"\n\nif error_rate &gt; 10:\n    health_assessment += \"\"\"\n\u2022 \u7acb\u5373\u68c0\u67e5\u9519\u8bef\u65e5\u5fd7\uff0c\u4fee\u590d\u5173\u952e\u95ee\u9898\n\u2022 \u589e\u52a0\u76d1\u63a7\u9891\u7387\uff0c\u5b9e\u65f6\u8ddf\u8e2a\u7cfb\u7edf\u72b6\u6001\n\u2022 \u8003\u8651\u7cfb\u7edf\u7ef4\u62a4\u548c\u4f18\u5316\n\"\"\"\nelif error_rate &gt; 5:\n    health_assessment += \"\"\"\n\u2022 \u5b9a\u671f\u68c0\u67e5\u9519\u8bef\u65e5\u5fd7\uff0c\u9884\u9632\u95ee\u9898\u6269\u5927\n\u2022 \u4f18\u5316\u7cfb\u7edf\u914d\u7f6e\uff0c\u51cf\u5c11\u9519\u8bef\u53d1\u751f\n\u2022 \u5efa\u7acb\u66f4\u5b8c\u5584\u7684\u76d1\u63a7\u673a\u5236\n\"\"\"\nelse:\n    health_assessment += \"\"\"\n\u2022 \u4fdd\u6301\u5f53\u524d\u8fd0\u7ef4\u6c34\u5e73\n\u2022 \u7ee7\u7eed\u5b9a\u671f\u76d1\u63a7\u548c\u5206\u6790\n\u2022 \u4f18\u5316\u7cfb\u7edf\u6027\u80fd\u548c\u7a33\u5b9a\u6027\n\"\"\"\n\nemail.add_text(health_assessment.strip())\n\nemail.export_html(\"log_analysis.html\")\nprint(\"\u2705 \u65e5\u5fd7\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1alog_analysis.html\")\n</code></pre> \u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a \u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:41:37 <p>\ud83d\udcdd \u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a</p> <p>\u5206\u6790\u65f6\u95f4\u8303\u56f4: \u6700\u8fd11\u5c0f\u65f6</p> 1. \ud83d\udcca \u65e5\u5fd7\u7edf\u8ba1\u6982\u89c8 10 4 2 4 2. \ud83d\udcc8 \u65e5\u5fd7\u7ea7\u522b\u5206\u5e03 <p>\ud83d\udd39 INFO \u7ea7\u522b</p> 4 \u6761 (40.0%) 40.0% <p>\ud83d\udd39 ERROR \u7ea7\u522b</p> 4 \u6761 (40.0%) 40.0% <p>\ud83d\udd39 WARN \u7ea7\u522b</p> 2 \u6761 (20.0%) 20.0% 3. \ud83d\udea8 \u9519\u8bef\u65e5\u5fd7\u8be6\u60c5 \u5e8f\u53f7 \u9519\u8bef\u4fe1\u606f 1 Database connection failed: timeout 2 API request failed: 500 Internal Server Error 3 File not found: config.xml 4 Network timeout: redis connection 4. \ud83d\udca1 \u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30 <p>**\u57fa\u4e8e\u65e5\u5fd7\u5206\u6790\u7684\u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30\uff1a**</p> <p>\ud83d\udcca **\u5173\u952e\u6307\u6807**</p> <p>\u2022 \u9519\u8bef\u7387: 40.0% (4/10)</p> <p>\u2022 \u8b66\u544a\u7387: 20.0% (2/10)</p> <p>\u2022 \u7cfb\u7edf\u72b6\u6001: \ud83d\udd34 \u9700\u8981\u5173\u6ce8</p> <p>\ud83d\udca1 **\u5efa\u8bae\u63aa\u65bd**</p> <p>\u2022 \u7acb\u5373\u68c0\u67e5\u9519\u8bef\u65e5\u5fd7\uff0c\u4fee\u590d\u5173\u952e\u95ee\u9898</p> <p>\u2022 \u589e\u52a0\u76d1\u63a7\u9891\u7387\uff0c\u5b9e\u65f6\u8ddf\u8e2a\u7cfb\u7edf\u72b6\u6001</p> <p>\u2022 \u8003\u8651\u7cfb\u7edf\u7ef4\u62a4\u548c\u4f18\u5316</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Analysis Value: - Automated log parsing and statistics - Error rate and warning rate calculation - Intelligent health assessment - Problem identification and recommendations</p>"},{"location":"examples/system-monitoring/#database-monitoring","title":"Database Monitoring","text":""},{"location":"examples/system-monitoring/#database-performance-monitoring","title":"Database Performance Monitoring \ud83d\udcbe \u6570\u636e\u5e93\u72b6\u6001                  \ud83d\udd17 \u6d3b\u8dc3\u8fde\u63a5                  \ud83d\udcca \u8fde\u63a5\u4f7f\u7528\u7387                  \ud83d\udcbf \u6570\u636e\u5e93\u5927\u5c0f","text":"Python<pre><code># \u6a21\u62df\u6570\u636e\u5e93\u76d1\u63a7\u6570\u636e\ndatabase_metrics = {\n    'connections': {'active': 45, 'max': 100, 'idle': 15},\n    'queries': {'slow_queries': 12, 'total_queries': 8547, 'avg_response_time': 0.8},\n    'storage': {'size': 2.4, 'growth_rate': 0.15, 'fragmentation': 8.2},\n    'performance': {'cpu_usage': 35.2, 'memory_usage': 72.1, 'io_wait': 5.8}\n}\n\nfrom email_widget import Email, ProgressWidget, TableWidget, StatusWidget\nfrom email_widget.core.enums import TextType, ProgressTheme, StatusType\n\n# \u521b\u5efa\u6570\u636e\u5e93\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\uddc4\ufe0f \u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u6570\u636e\u5e93\u72b6\u6001\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u6570\u636e\u5e93\u72b6\u6001\u6982\u89c8\", TextType.SECTION_H2)\n\n# \u8fde\u63a5\u6c60\u72b6\u6001\nconnections = database_metrics['connections']\nconn_usage = (connections['active'] / connections['max']) * 100\n\ndb_overview = [\n    (\"\u6570\u636e\u5e93\u72b6\u6001\", \"\ud83d\udfe2 \u6b63\u5e38\u8fd0\u884c\", \"\ud83d\udcbe\"),\n    (\"\u6d3b\u8dc3\u8fde\u63a5\", f\"{connections['active']}/{connections['max']}\", \"\ud83d\udd17\"),\n    (\"\u8fde\u63a5\u4f7f\u7528\u7387\", f\"{conn_usage:.1f}%\", \"\ud83d\udcca\"),\n    (\"\u6570\u636e\u5e93\u5927\u5c0f\", f\"{database_metrics['storage']['size']:.1f} GB\", \"\ud83d\udcbf\")\n]\n\nfor title, value, icon in db_overview:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u6027\u80fd\u6307\u6807\u76d1\u63a7\nemail.add_title(\"\u26a1 \u6027\u80fd\u6307\u6807\", TextType.SECTION_H2)\n\nperformance = database_metrics['performance']\n\n# CPU\u4f7f\u7528\u7387\ncpu_theme = ProgressTheme.SUCCESS if performance['cpu_usage'] &lt; 50 else \\\n           ProgressTheme.WARNING if performance['cpu_usage'] &lt; 80 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u6570\u636e\u5e93CPU\u4f7f\u7528\u7387\")\nemail.add_progress(performance['cpu_usage'], f\"CPU: {performance['cpu_usage']:.1f}%\", theme=cpu_theme)\n\n# \u5185\u5b58\u4f7f\u7528\u7387\nmemory_theme = ProgressTheme.SUCCESS if performance['memory_usage'] &lt; 70 else \\\n              ProgressTheme.WARNING if performance['memory_usage'] &lt; 90 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u6570\u636e\u5e93\u5185\u5b58\u4f7f\u7528\u7387\")\nemail.add_progress(performance['memory_usage'], f\"\u5185\u5b58: {performance['memory_usage']:.1f}%\", theme=memory_theme)\n\n# \u8fde\u63a5\u6c60\u4f7f\u7528\u7387\nconn_theme = ProgressTheme.SUCCESS if conn_usage &lt; 60 else \\\n            ProgressTheme.WARNING if conn_usage &lt; 85 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u8fde\u63a5\u6c60\u4f7f\u7528\u7387\")\nemail.add_progress(conn_usage, f\"\u8fde\u63a5\u6c60: {conn_usage:.1f}%\", theme=conn_theme)\n\n# \u67e5\u8be2\u6027\u80fd\u5206\u6790\nemail.add_title(\"\ud83d\udd0d \u67e5\u8be2\u6027\u80fd\u5206\u6790\", TextType.SECTION_H2)\n\nqueries = database_metrics['queries']\nslow_query_rate = (queries['slow_queries'] / queries['total_queries']) * 100\n\nquery_table = TableWidget()\nquery_table.set_headers([\"\u6307\u6807\", \"\u6570\u503c\", \"\u72b6\u6001\"])\n\nquery_metrics = [\n    (\"\u603b\u67e5\u8be2\u6570\", f\"{queries['total_queries']:,}\", \"\u6b63\u5e38\"),\n    (\"\u6162\u67e5\u8be2\u6570\", f\"{queries['slow_queries']}\", \"\u9700\u5173\u6ce8\" if queries['slow_queries'] &gt; 10 else \"\u6b63\u5e38\"),\n    (\"\u6162\u67e5\u8be2\u7387\", f\"{slow_query_rate:.2f}%\", \"\u8b66\u544a\" if slow_query_rate &gt; 1 else \"\u6b63\u5e38\"),\n    (\"\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\", f\"{queries['avg_response_time']:.1f}ms\", \"\u4f18\u79c0\" if queries['avg_response_time'] &lt; 1 else \"\u6b63\u5e38\")\n]\n\nfor metric, value, status in query_metrics:\n    status_emoji = \"\ud83d\udfe2\" if status == \"\u6b63\u5e38\" or status == \"\u4f18\u79c0\" else \\\n                  \"\ud83d\udfe1\" if status == \"\u9700\u5173\u6ce8\" else \"\ud83d\udd34\"\n    query_table.add_row([metric, value, f\"{status_emoji} {status}\"])\n\nquery_table.set_striped(True)\nemail.add_widget(query_table)\n\nemail.export_html(\"database_monitor.html\")\nprint(\"\u2705 \u6570\u636e\u5e93\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1adatabase_monitor.html\")\n</code></pre> \u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a \u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:42:34 <p>\ud83d\uddc4\ufe0f \u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a</p> 1. \ud83d\udcca \u6570\u636e\u5e93\u72b6\u6001\u6982\u89c8 \ud83d\udfe2 \u6b63\u5e38\u8fd0\u884c 45/100 45.0% 2.4 GB 2. \u26a1 \u6027\u80fd\u6307\u6807 <p>\ud83d\udd39 \u6570\u636e\u5e93CPU\u4f7f\u7528\u7387</p> CPU: 35.2% 35.2% <p>\ud83d\udd39 \u6570\u636e\u5e93\u5185\u5b58\u4f7f\u7528\u7387</p> \u5185\u5b58: 72.1% 72.1% <p>\ud83d\udd39 \u8fde\u63a5\u6c60\u4f7f\u7528\u7387</p> \u8fde\u63a5\u6c60: 45.0% 45.0% 3. \ud83d\udd0d \u67e5\u8be2\u6027\u80fd\u5206\u6790 \u6307\u6807 \u6570\u503c \u72b6\u6001 \u603b\u67e5\u8be2\u6570 8,547 \ud83d\udfe2 \u6b63\u5e38 \u6162\u67e5\u8be2\u6570 12 \ud83d\udfe1 \u9700\u5173\u6ce8 \u6162\u67e5\u8be2\u7387 0.14% \ud83d\udfe2 \u6b63\u5e38 \u5e73\u5747\u54cd\u5e94\u65f6\u95f4 0.8ms \ud83d\udfe2 \u4f18\u79c0 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Monitoring Focus: - Connection pool usage - Query performance analysis - Resource usage monitoring - Storage growth trends</p>"},{"location":"examples/system-monitoring/#comprehensive-monitoring-dashboard","title":"Comprehensive Monitoring Dashboard","text":""},{"location":"examples/system-monitoring/#complete-system-monitoring-overview","title":"Complete System Monitoring OverviewWeb\u670d\u52a1\u6570\u636e\u5e93CPU\u4f7f\u7528\u7387\u5185\u5b58\u4f7f\u7528","text":"Python<pre><code>from email_widget import Email, ColumnWidget, StatusWidget\nfrom email_widget.core.enums import TextType, StatusType\n\n# \u521b\u5efa\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f\nemail = Email(\"\u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f\")\n\nemail.add_title(\"\ud83c\udf9b\ufe0f \u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u6700\u540e\u66f4\u65b0: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n# \u4f7f\u7528\u5217\u5e03\u5c40\u5c55\u793a\u591a\u4e2a\u76d1\u63a7\u6a21\u5757\ncolumn_layout = ColumnWidget()\n\n# \u5de6\u5217\uff1a\u7cfb\u7edf\u72b6\u6001\nleft_column = ColumnWidget()\nleft_column.add_widget(StatusWidget()\n                      .set_title(\"Web\u670d\u52a1\")\n                      .set_status(\"\u6b63\u5e38\")\n                      .set_status_type(StatusType.SUCCESS)\n                      .set_description(\"\u54cd\u5e94\u65f6\u95f4: 120ms\"))\n\nleft_column.add_widget(StatusWidget()\n                      .set_title(\"\u6570\u636e\u5e93\")\n                      .set_status(\"\u6b63\u5e38\")\n                      .set_status_type(StatusType.SUCCESS)\n                      .set_description(\"\u8fde\u63a5\u6570: 45/100\"))\n\n# \u53f3\u5217\uff1a\u8d44\u6e90\u76d1\u63a7\nright_column = ColumnWidget()\nright_column.add_widget(StatusWidget()\n                       .set_title(\"CPU\u4f7f\u7528\u7387\")\n                       .set_status(\"45%\")\n                       .set_status_type(StatusType.SUCCESS)\n                       .set_description(\"\u8d1f\u8f7d\u9002\u4e2d\"))\n\nright_column.add_widget(StatusWidget()\n                       .set_title(\"\u5185\u5b58\u4f7f\u7528\")\n                       .set_status(\"72%\")\n                       .set_status_type(StatusType.WARNING)\n                       .set_description(\"\u4f7f\u7528\u7387\u504f\u9ad8\"))\n\n# \u7ec4\u5408\u5217\u5e03\u5c40\ncolumn_layout.add_column(left_column)\ncolumn_layout.add_column(right_column)\nemail.add_widget(column_layout)\n\n# \u5f53\u524d\u544a\u8b66\u6c47\u603b\nemail.add_title(\"\ud83d\udea8 \u5f53\u524d\u544a\u8b66\", TextType.SECTION_H2)\nemail.add_alert(\"\u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523072%\uff0c\u5efa\u8bae\u76d1\u63a7\", AlertType.WARNING, \"\u5185\u5b58\u544a\u8b66\")\n\nemail.export_html(\"monitoring_dashboard.html\")\nprint(\"\u2705 \u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f\u5df2\u751f\u6210\uff1amonitoring_dashboard.html\")\n</code></pre> \u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f \u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:44:39 <p>\ud83c\udf9b\ufe0f \u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f</p> <p>\u6700\u540e\u66f4\u65b0: 2025-07-07 23:44:39</p> Web\u670d\u52a1 \u6b63\u5e38 \u54cd\u5e94\u65f6\u95f4 120ms \u6570\u636e\u5e93 \u6b63\u5e38 \u8fde\u63a5\u6570 45/100 CPU\u4f7f\u7528\u7387 45% \u8d1f\u8f7d \u9002\u4e2d \u5185\u5b58\u4f7f\u7528 72% \u4f7f\u7528\u7387 \u504f\u9ad8 1. \ud83d\udea8 \u5f53\u524d\u544a\u8b66 \u26a0\ufe0f \u5185\u5b58\u544a\u8b66 \u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523072%\uff0c\u5efa\u8bae\u76d1\u63a7 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>Dashboard Features: - Modular design - Real-time status display - Multi-dimensional monitoring - Responsive layout</p>"},{"location":"examples/system-monitoring/#learning-summary","title":"Learning Summary","text":"<p>Through system monitoring examples, you have mastered:</p>"},{"location":"examples/system-monitoring/#monitoring-skills","title":"\ud83c\udfaf Monitoring Skills","text":"<ul> <li>Resource Monitoring - CPU, memory, disk usage</li> <li>Service Monitoring - Health checks and status management</li> <li>Log Analysis - Automated log parsing and statistics</li> <li>Performance Monitoring - Database and application performance</li> </ul>"},{"location":"examples/system-monitoring/#technical-points","title":"\ud83d\udee0\ufe0f Technical Points","text":"<ul> <li>Real-time data acquisition and display</li> <li>Intelligent alert threshold settings</li> <li>Multi-service status aggregation</li> <li>Visual monitoring dashboards</li> </ul>"},{"location":"examples/system-monitoring/#best-practices","title":"\ud83d\udca1 Best Practices","text":"<ul> <li>Layered monitoring architecture</li> <li>Automated anomaly detection</li> <li>Intuitive status display</li> <li>Timely alert notifications</li> </ul>"},{"location":"examples/system-monitoring/#application-scenarios","title":"\ud83d\ude80 Application Scenarios","text":"<ul> <li>DevOps operations monitoring</li> <li>Server resource management</li> <li>Application performance monitoring</li> <li>System health checks</li> </ul> <p>Continue learning Spider Reports and Real Applications to explore more professional applications!</p>"},{"location":"getting-started/","title":"\ud83d\ude80 Getting Started","text":"<p>Welcome to EmailWidget! This section will help you get started with EmailWidget and create your first professional email report in just a few minutes.</p>"},{"location":"getting-started/#30-second-experience","title":"\u26a1 30-Second Experience","text":"<p>If you want to experience the powerful features of EmailWidget right away, here's the simplest example:</p> Python<pre><code>from email_widget import Email, TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u6211\u7684\u7b2c\u4e00\u4efd\u62a5\u544a\")\n\n# \u6dfb\u52a0\u6807\u9898\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u6b22\u8fce\u4f7f\u7528 EmailWidget! \ud83c\udf89\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nfile_path = email.export_html(\"my_first_report.html\")\nprint(f\"\u62a5\u544a\u5df2\u751f\u6210: {file_path}\")\n</code></pre> <p>Run this code and you'll get a beautiful HTML email file!</p> \u6211\u7684\u7b2c\u4e00\u4efd\u62a5\u544a \u6211\u7684\u7b2c\u4e00\u4efd\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670804\u65e5 10:00:48 <p>\u6b22\u8fce\u4f7f\u7528 EmailWidget! \ud83c\udf89</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"getting-started/#related-resources","title":"\ud83d\udcd6 Related Resources","text":"<p>In addition to getting started, you might also be interested in these resources:</p>"},{"location":"getting-started/#deep-learning","title":"\ud83d\udcda Deep Learning","text":"<ul> <li>User Guide - Detailed component usage tutorials</li> <li>API Reference - Complete API documentation</li> <li>Example Code - Real-world application scenarios</li> </ul>"},{"location":"getting-started/#get-help","title":"\ud83e\udd1d Get Help","text":"<ul> <li>GitHub Issues - Bug reports and feature requests</li> <li>GitHub Discussions - Community discussions</li> <li>Bilibili Videos - Video tutorials</li> </ul>"},{"location":"getting-started/#development-related","title":"\ud83d\udd27 Development Related","text":"<ul> <li>Development Guide - Contributing to the project</li> <li>Contributing Code - Code contribution guidelines</li> </ul>"},{"location":"getting-started/concepts/","title":"\ud83d\udcda Basic Concepts","text":"<p>Before diving into EmailWidget, understanding its core concepts will help you build better email reports. This chapter introduces EmailWidget's design philosophy and key concepts.</p>"},{"location":"getting-started/concepts/#email-class-overview","title":"\ud83d\udce7 Email Class Overview","text":""},{"location":"getting-started/concepts/#basic-concepts_1","title":"Basic Concepts","text":"<p>The <code>Email</code> class is the core of EmailWidget, serving as the container and manager for all Widgets:</p> Python<pre><code>from email_widget import Email, TextWidget\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\nemail = Email(title=\"\u62a5\u544a\u6807\u9898\")\n\n# \u8bbe\u7f6e\u5143\u4fe1\u606f\nemail.set_subtitle(\"\u526f\u6807\u9898\")\nemail.set_footer(\"\u811a\u6ce8\u4fe1\u606f\")\n\n# \u7ba1\u7406Widget\nemail.add_widget(TextWidget('Hello, World!'))\nemail.remove_widget(\"Hello, World!\")\nemail.clear_widgets()\n\n# \u5bfc\u51fa\u7ed3\u679c\nhtml_content = email.export_str()\nfile_path = email.export_html(\"report.html\")\n</code></pre>"},{"location":"getting-started/concepts/#lifecycle","title":"Lifecycle","text":"<p>The typical lifecycle of an Email object:</p> <ol> <li>Creation - Initialize email object</li> <li>Configuration - Set title, subtitle, footer, etc.</li> <li>Content Addition - Add various Widget components</li> <li>Rendering - Generate HTML content</li> <li>Export - Save to file or get string</li> </ol>"},{"location":"getting-started/concepts/#features","title":"Features","text":"Convenience MethodsWidget ManagementMethod Chaining Python<pre><code># \u76f4\u63a5\u6dfb\u52a0\u5e38\u7528\u5185\u5bb9\nemail.add_text(\"\u6807\u9898\", text_type=\"title_large\")\nemail.add_table_from_data(data, headers)\nemail.add_progress(75, \"\u5b8c\u6210\u5ea6\")\nemail.add_chart_from_plt(title=\"\u56fe\u8868\")\n</code></pre> Python<pre><code># \u83b7\u53d6Widget\nwidget = email.get_widget(\"my_widget_id\")\n\n# \u79fb\u9664Widget\nemail.remove_widget(\"widget_id\")\n\n# \u6e05\u7a7a\u6240\u6709Widget\nemail.clear_widgets()\n\n# \u83b7\u53d6Widget\u6570\u91cf\ncount = email.get_widget_count()\n</code></pre> Python<pre><code># \u6d41\u7545\u7684API\u8bbe\u8ba1\nemail = (Email(\"\u6807\u9898\")\n         .set_subtitle(\"\u526f\u6807\u9898\")\n         .set_footer(\"\u811a\u6ce8\")\n         .add_widget(widget1)\n         .add_widget(widget2))\n</code></pre>"},{"location":"getting-started/concepts/#widget-component-system","title":"\ud83e\udde9 Widget Component System","text":""},{"location":"getting-started/concepts/#design-philosophy","title":"Design Philosophy","text":"<p>All Widget components inherit from <code>BaseWidget</code>, ensuring API consistency:</p> Python<pre><code>from email_widget.core.base import BaseWidget\n\nclass MyCustomWidget(BaseWidget):\n    def __init__(self):\n        super().__init__()\n        self.widget_type = \"custom\"\n\n    def render(self) -&gt; str:\n        # \u6e32\u67d3\u903b\u8f91\n        return self._render_template(\"custom.html\", context)\n</code></pre>"},{"location":"getting-started/concepts/#common-features","title":"Common Features","text":"<p>All Widgets share the following common features:</p> ID ManagementTemplate Rendering Python<pre><code># \u8bbe\u7f6e\u552f\u4e00ID\nwidget.set_widget_id(\"my_unique_id\")\n\n# \u83b7\u53d6ID\nwidget_id = widget.widget_id\n\n# \u83b7\u53d6\u7c7b\u578b\nwidget_type = widget.widget_type\n</code></pre> Python<pre><code># \u83b7\u53d6\u6e32\u67d3\u4e0a\u4e0b\u6587\ncontext = widget.get_template_context()\n\n# \u6e32\u67d3\u4e3aHTML\nhtml = widget.render_html()\n</code></pre>"},{"location":"getting-started/concepts/#widget-categories","title":"Widget Categories","text":"<p>EmailWidget provides 12 professional components, categorized by function:</p>"},{"location":"getting-started/concepts/#content-components","title":"\ud83d\udcdd Content Components","text":"<ul> <li>TextWidget - Text content, 8 styles</li> <li>ImageWidget - Image display, multi-source support</li> <li>QuoteWidget - Quote style, author information</li> </ul>"},{"location":"getting-started/concepts/#data-components","title":"\ud83d\udcca Data Components","text":"<ul> <li>TableWidget - Data tables, DataFrame integration</li> <li>ChartWidget - Chart display, matplotlib support</li> <li>LogWidget - Log display, level classification</li> </ul>"},{"location":"getting-started/concepts/#metric-components","title":"\ud83d\udcc8 Metric Components","text":"<ul> <li>ProgressWidget - Linear progress bar, 5 themes</li> <li>CircularProgressWidget - Circular progress, multiple sizes</li> <li>StatusWidget - Status management, dynamic updates</li> </ul>"},{"location":"getting-started/concepts/#interface-components","title":"\ud83c\udfa8 Interface Components","text":"<ul> <li>AlertWidget - Alert reminders, 5 types</li> <li>CardWidget - Information cards, icon support</li> <li>ColumnWidget - Layout container, responsive design</li> </ul>"},{"location":"getting-started/concepts/#best-practices","title":"\ud83c\udfaf Best Practices","text":""},{"location":"getting-started/concepts/#code-organization","title":"Code Organization","text":"<p>Recommended code organization:</p> Python<pre><code># 1. \u5bfc\u5165\u5fc5\u8981\u7684\u5e93\nfrom email_widget import Email, TextWidget, TableWidget, EmailConfig\nfrom email_widget.core.enums import TextType\n\n\n# 2. \u6570\u636e\u51c6\u5907\ndef prepare_data():\n    return {\"sales\": [100, 200, 300]}\n\n\n# 3. \u90ae\u4ef6\u6784\u5efa\ndef build_email(data):\n    email = Email(\"\u9500\u552e\u62a5\u544a\")\n    # \u6dfb\u52a0\u5185\u5bb9\n    email.add_widget(\n        TextWidget().set_content(\"\u9500\u552e\u6570\u636e\u5206\u6790\").set_type(TextType.TITLE_LARGE)\n    )\n\n    return email\n\n\n# 4. \u4e3b\u51fd\u6570\ndef main():\n    data = prepare_data()\n    email = build_email(data)\n    email.export_html(\"report.html\")\n</code></pre>"},{"location":"getting-started/concepts/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<p>Now that you understand EmailWidget's core concepts, you can:</p> <ul> <li>Check out User Guide to learn detailed component usage</li> <li>Browse API Reference to understand the complete API</li> <li>Study Example Code to learn practical applications</li> <li>Read Development Guide to participate in project development</li> </ul>"},{"location":"getting-started/faq/","title":"\u2753 Frequently Asked Questions","text":"<p>This section collects common questions and solutions encountered while using EmailWidget. If your problem is not listed here, please feel free to ask in GitHub Issues.</p>"},{"location":"getting-started/faq/#installation-related","title":"\ud83d\ude80 Installation Related","text":""},{"location":"getting-started/faq/#installation-failed-insufficient-permissions","title":"\u2753 Installation Failed: Insufficient Permissions","text":"<p>Problem: Permission denied when installing on Windows or MacOS</p> <p>Solution:</p> WindowsMacOS/Linux Batchfile<pre><code># Option 1: User installation\npip install --user EmailWidget\n\n# Option 2: Run command prompt as administrator\n# Right-click and select \"Run as administrator\"\npip install EmailWidget\n\n# Option 3: Use virtual environment\npython -m venv email_env\nemail_env\\Scripts\\activate\npip install EmailWidget\n</code></pre> Bash<pre><code># Option 1: User installation\npip install --user EmailWidget\n\n# Option 2: Use sudo (not recommended)\nsudo pip install EmailWidget\n\n# Option 3: Use virtual environment (recommended)\npython3 -m venv email_env\nsource email_env/bin/activate\npip install EmailWidget\n</code></pre>"},{"location":"getting-started/faq/#slow-installation-or-failure-network-issues","title":"\u2753 Slow Installation or Failure: Network Issues","text":"<p>Problem: Slow download speed or connection timeout</p> <p>Solution:</p> Bash<pre><code># Use domestic mirror source\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple EmailWidget\n\n# Or set default mirror source\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\npip install EmailWidget\n\n# Other mirror source options\n# Alibaba Cloud: https://mirrors.aliyun.com/pypi/simple/\n# USTC: https://pypi.mirrors.ustc.edu.cn/simple/\n# Huawei Cloud: https://repo.huaweicloud.com/repository/pypi/simple/\n</code></pre>"},{"location":"getting-started/faq/#python-version-incompatibility","title":"\u2753 Python Version Incompatibility","text":"<p>Problem: Python version too low error</p> <p>Solution:</p> Bash<pre><code># Check current Python version\npython --version\n\n# EmailWidget requires Python 3.10+\n# If version is too low, please upgrade Python or use virtual environment\n\n# Create virtual environment with specific Python version\npython3.10 -m venv email_env\nsource email_env/bin/activate  # Linux/MacOS\n# or email_env\\Scripts\\activate  # Windows\n\npip install EmailWidget\n</code></pre>"},{"location":"getting-started/faq/#chart-related","title":"\ud83d\udcca Chart Related","text":""},{"location":"getting-started/faq/#chinese-text-in-charts-displays-as-squares","title":"\u2753 Chinese Text in Charts Displays as Squares","text":"<p>Problem: Chinese text in matplotlib charts displays as squares or garbled characters</p> <p>Solution:</p> <p>EmailWidget automatically handles Chinese fonts, but if issues persist:</p> Python<pre><code>import matplotlib.pyplot as plt\nfrom matplotlib import font_manager\n\n# \u65b9\u68481\uff1a\u8bbe\u7f6e\u7cfb\u7edf\u5b57\u4f53\nplt.rcParams['font.sans-serif'] = ['SimHei', 'Microsoft YaHei', 'DejaVu Sans']\nplt.rcParams['axes.unicode_minus'] = False\n\n# \u65b9\u68482\uff1a\u68c0\u67e5\u53ef\u7528\u5b57\u4f53\navailable_fonts = [f.name for f in font_manager.fontManager.ttflist]\nchinese_fonts = [f for f in available_fonts if '\u5fae\u8f6f\u96c5\u9ed1' in f or 'SimHei' in f]\nprint(\"\u53ef\u7528\u4e2d\u6587\u5b57\u4f53\uff1a\", chinese_fonts)\n\n# \u65b9\u68483\uff1a\u4f7f\u7528EmailWidget\u7684\u5b57\u4f53\u8bbe\u7f6e\nfrom email_widget import Email\nemail = Email(\"\u6d4b\u8bd5\")\nemail.config.set_font_family(\"Microsoft YaHei\")  # \u8fd9\u4f1a\u5f71\u54cd\u6574\u4e2a\u90ae\u4ef6\n</code></pre>"},{"location":"getting-started/faq/#debugging-related","title":"\ud83d\udc1b Debugging Related","text":""},{"location":"getting-started/faq/#how-to-debug-template-rendering-issues","title":"\u2753 How to Debug Template Rendering Issues","text":"<p>Problem: Custom templates don't render correctly</p> <p>Solution:</p> Python<pre><code># 1. \u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n\nfrom email_widget.core.logger import logger\nlogger.set_level(\"DEBUG\")\n\n# 2. \u68c0\u67e5\u6a21\u677f\u53d8\u91cf\nwidget = TextWidget()\ncontext = widget.get_template_context()\nprint(\"\u6a21\u677f\u4e0a\u4e0b\u6587\uff1a\", context)\n\n# 3. \u624b\u52a8\u6e32\u67d3\u6a21\u677f\nfrom email_widget.core.template_engine import TemplateEngine\nengine = TemplateEngine()\ntemplate = engine.get_template(\"text_widget.html\")\nhtml = template.render(**context)\nprint(\"\u6e32\u67d3\u7ed3\u679c\uff1a\", html)\n\n# 4. \u9a8c\u8bc1\u6a21\u677f\u8bed\u6cd5\ntry:\n    email.export_html(\"test.html\")\nexcept Exception as e:\n    print(f\"\u6e32\u67d3\u9519\u8bef\uff1a{e}\")\n    import traceback\n    traceback.print_exc()\n</code></pre>"},{"location":"getting-started/faq/#integration-related","title":"\ud83d\udd17 Integration Related","text":""},{"location":"getting-started/faq/#integration-with-jupyter-notebook","title":"\u2753 Integration with Jupyter Notebook","text":"<p>Problem: Best practices for using EmailWidget in Jupyter</p> <p>Solution:</p> Python<pre><code># 1. \u5728Jupyter\u4e2d\u9884\u89c8HTML\nfrom IPython.display import HTML, display\n\nemail = Email(\"Jupyter\u6d4b\u8bd5\")\n# ... \u6dfb\u52a0\u5185\u5bb9\nhtml_content = email.export_str()\ndisplay(HTML(html_content))\n</code></pre>"},{"location":"getting-started/faq/#integration-with-pandas","title":"\u2753 Integration with Pandas","text":"<p>Problem: How to better handle Pandas data</p> <p>Solution:</p> Python<pre><code>import pandas as pd\nfrom email_widget.widgets import TableWidget\n\n# 1. \u76f4\u63a5\u4eceDataFrame\u521b\u5efa\u8868\u683c\ndf = pd.read_csv('data.csv')\ntable = TableWidget()\ntable.set_data_from_dataframe(df)\n\n# 3. \u6570\u636e\u9884\u5904\u7406\ndf_clean = df.dropna()  # \u5220\u9664\u7a7a\u503c\ndf_formatted = df_clean.round(2)  # \u683c\u5f0f\u5316\u6570\u5b57\ntable.set_data_from_dataframe(df_formatted)\n\n# 4. \u6dfb\u52a0\u6570\u636e\u6458\u8981\nsummary = df.describe()\nsummary_table = TableWidget()\nsummary_table.set_title(\"\u6570\u636e\u6458\u8981\")\nsummary_table.set_data_from_dataframe(summary)\n</code></pre>"},{"location":"getting-started/faq/#get-more-help","title":"\ud83c\udd98 Get More Help","text":"<p>If the above FAQ doesn't solve your problem, you can get help through the following channels:</p>"},{"location":"getting-started/faq/#documentation-resources","title":"\ud83d\udcd6 Documentation Resources","text":"<ul> <li>User Guide - Detailed usage tutorials</li> <li>API Reference - Complete API documentation</li> <li>Example Code - Real-world use cases</li> </ul>"},{"location":"getting-started/faq/#community-support","title":"\ud83e\udd1d Community Support","text":"<ul> <li>GitHub Issues - Bug reports and feature requests</li> <li>GitHub Discussions - Community discussions</li> <li>Bilibili Videos - Video tutorials</li> </ul>"},{"location":"getting-started/faq/#issue-report-template","title":"\ud83d\udca1 Issue Report Template","text":"<p>When submitting issues, please provide the following information:</p> Markdown<pre><code>**Environment Information**\n- EmailWidget Version:\n- Python Version:\n- Operating System:\n- Related Dependency Versions:\n\n**Problem Description**\n[Detailed description of the problem encountered]\n\n**Reproduction Steps**\n1. First step\n2. Second step\n3. ...\n\n**Expected Behavior**\n[Describe the expected correct behavior]\n\n**Actual Behavior**\n[Describe what actually happened]\n\n**Code Example**\n```python\n# \u6700\u5c0f\u590d\u73b0\u4ee3\u7801\n</code></pre> <p>Error Information Text Only<pre><code>[Paste complete error stack trace]\n</code></pre></p> <p>Additional Information [Any other relevant information] ```</p>"},{"location":"getting-started/first-email/","title":"\ud83d\udce7 Creating Your First Email","text":"<p>This tutorial will guide you through creating your first EmailWidget email report. We'll start with the simplest example and gradually add more features.</p>"},{"location":"getting-started/first-email/#chapter-goals","title":"\ud83c\udfaf Chapter Goals","text":"<ul> <li>Create a basic email object</li> <li>Add text, tables, charts, and other components</li> <li>Export HTML files</li> <li>Send emails to mailboxes</li> </ul>"},{"location":"getting-started/first-email/#step-1-the-simplest-email","title":"\ud83d\ude80 Step 1: The Simplest Email","text":"<p>Let's start with the simplest example:</p> Python<pre><code>from email_widget import Email, TextWidget, TextType\n\nemail = Email(\"\u6211\u7684\u7b2c\u4e00\u4efd\u62a5\u544a\")\n\n# \u6dfb\u52a0\u6b22\u8fce\u6587\u672c\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u6b22\u8fce\u4f7f\u7528 EmailWidget! \ud83c\udf89\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nfile_path = email.export_html(\"first_email.html\")\nprint(f\"\u90ae\u4ef6\u5df2\u751f\u6210: {file_path}\")\n</code></pre> <p>After running this code, you'll see a file named <code>first_email.html</code> in the current directory. Open it with a browser and you'll see a beautiful email page!</p> <p></p> <p>\ud83c\udf89 Congratulations!</p> <p>You've successfully created your first EmailWidget email!</p>"},{"location":"getting-started/first-email/#step-2-adding-more-content","title":"\ud83d\udcdd Step 2: Adding More Content","text":"<p>Now let's add more content to create a more complete report:</p> Python<pre><code>from email_widget import Email, TextWidget, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u526f\u6807\u9898\u548c\u811a\u6ce8\nemail = Email(\"\ud83d\udcca \u9500\u552e\u6570\u636e\u5468\u62a5\")\nemail.set_subtitle(\"2024\u5e74\u7b2c3\u5468\u9500\u552e\u60c5\u51b5\u6c47\u603b\")\nemail.set_footer(\"\u672c\u62a5\u544a\u7531\u9500\u552e\u56e2\u961f\u81ea\u52a8\u751f\u6210\")\n\n# 1. \u6dfb\u52a0\u4e3b\u6807\u9898\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u9500\u552e\u4e1a\u7ee9\u6982\u89c8\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# 2. \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\n    .set_value(85)\n    .set_label(\"\u672c\u5468\u76ee\u6807\u5b8c\u6210\u7387\")\n    .set_theme(ProgressTheme.SUCCESS)\n)\n\n# 3. \u6dfb\u52a0\u6570\u636e\u8868\u683c\ntable = TableWidget()\ntable.set_title(\"\ud83c\udfc6 \u9500\u552e\u6392\u884c\u699c\")\ntable.set_headers([\"\u9500\u552e\u5458\", \"\u9500\u552e\u989d\", \"\u5b8c\u6210\u7387\", \"\u72b6\u6001\"])\ntable.add_row([\"\u5f20\u4e09\", \"\u00a5125,000\", \"125%\", \"success\"])\ntable.add_row([\"\u674e\u56db\", \"\u00a598,000\", \"98%\", \"warning\"])\ntable.add_row([\"\u738b\u4e94\", \"\u00a587,000\", \"87%\", \"info\"])\nemail.add_widget(table)\n\n# 4. \u6dfb\u52a0\u603b\u7ed3\u6587\u672c\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u672c\u5468\u9500\u552e\u4e1a\u7ee9\u6574\u4f53\u8868\u73b0\u826f\u597d\uff0c\u8d85\u989d\u5b8c\u6210\u65e2\u5b9a\u76ee\u6807\u3002\")\n    .set_type(TextType.BODY)\n)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nfile_path = email.export_html(\"sales_report.html\")\nprint(f\"\u9500\u552e\u62a5\u544a\u5df2\u751f\u6210: {file_path}\")\n</code></pre> <p></p>"},{"location":"getting-started/first-email/#send-to-mailbox","title":"Send to Mailbox","text":""},{"location":"getting-started/first-email/#using-built-in-emailsender-to-send-emails-recommended","title":"Using Built-in <code>EmailSender</code> to Send Emails (Recommended)","text":"<p>The most convenient way is to directly use the <code>EmailSender</code> that comes with <code>EmailWidget</code>. Just select the appropriate <code>EmailSender</code> and call the <code>send</code> method with an <code>Email</code> object. Here's a simple example:</p> Python<pre><code>from email_widget import Email, QQEmailSender\n\nemail = Email(\"\u6b22\u8fce\u4f7f\u7528EmailWidget\")\n\nemail.add_card(\"Python\u7248\u672c\", \"\u60a8\u9700\u8981Python3.10\u6216\u4ee5\u4e0a\u624d\u80fd\u4f7f\u7528EmailWidget\", metadata={\"Python\u7248\u672c\": \"3.10+\"})\n\nemail.add_quote(\"EmailWidget\u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u548c\u53d1\u9001HTML\u90ae\u4ef6\u7684Python\u5e93\u3002\", \"EmailWidget\")\n\n# \u4e00\u884c\u4ee3\u7801\u6210\u529f\u53d1\u9001\u90ae\u4ef6\nQQEmailSender(\"\u4f60\u7684QQ\u90ae\u7bb1\", \"\u4f60\u7684QQ\u90ae\u7bb1\u6388\u6743\u7801\").send(email)\n</code></pre> <p>Here's the actual effect after sending the email. You can see that the email has been successfully sent and the styling is normal:</p> <p></p>"},{"location":"getting-started/first-email/#using-smtplib-standard-library","title":"Using smtplib Standard Library","text":"<p>Here we use the standard library smtplib to send emails. In actual development, you can also use other email sending libraries, such as redmail.</p> <p>Note</p> <p>yagmail has a built-in HTML processing step that removes EmailWidget's CSS styles, so it's currently incompatible. Please use email sending libraries other than yagmail, such as redmail.</p> Python<pre><code>from email_widget import Email, TextWidget, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u526f\u6807\u9898\u548c\u811a\u6ce8\nemail = Email(\"\ud83d\udcca \u9500\u552e\u6570\u636e\u5468\u62a5\")\nemail.set_subtitle(\"2024\u5e74\u7b2c3\u5468\u9500\u552e\u60c5\u51b5\u6c47\u603b\")\nemail.set_footer(\"\u672c\u62a5\u544a\u7531\u9500\u552e\u56e2\u961f\u81ea\u52a8\u751f\u6210\")\n\n# 1. \u6dfb\u52a0\u4e3b\u6807\u9898\nemail.add_widget(\n    TextWidget().set_content(\"\u9500\u552e\u4e1a\u7ee9\u6982\u89c8\").set_type(TextType.TITLE_LARGE)\n)\n\n# 2. \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\n    .set_value(85)\n    .set_label(\"\u672c\u5468\u76ee\u6807\u5b8c\u6210\u7387\")\n    .set_theme(ProgressTheme.SUCCESS)\n)\n\n# 3. \u6dfb\u52a0\u6570\u636e\u8868\u683c\ntable = TableWidget()\ntable.set_title(\"\ud83c\udfc6 \u9500\u552e\u6392\u884c\u699c\")\ntable.set_headers([\"\u9500\u552e\u5458\", \"\u9500\u552e\u989d\", \"\u5b8c\u6210\u7387\", \"\u72b6\u6001\"])\ntable.add_row([\"\u5f20\u4e09\", \"\u00a5125,000\", \"125%\", \"success\"])\ntable.add_row([\"\u674e\u56db\", \"\u00a598,000\", \"98%\", \"warning\"])\ntable.add_row([\"\u738b\u4e94\", \"\u00a587,000\", \"87%\", \"info\"])\nemail.add_widget(table)\n\n# 4. \u6dfb\u52a0\u603b\u7ed3\u6587\u672c\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u672c\u5468\u9500\u552e\u4e1a\u7ee9\u6574\u4f53\u8868\u73b0\u826f\u597d\uff0c\u8d85\u989d\u5b8c\u6210\u65e2\u5b9a\u76ee\u6807\u3002\")\n    .set_type(TextType.BODY)\n)\n\n# \u7f16\u5199HTML\u7c7b\u578b\u7684\u90ae\u4ef6\u6b63\u6587\n# \u8fd9\u91cc\u4e0d\u5bfc\u51fa\u4e3a\u6587\u4ef6\uff0c\u800c\u662f\u4f7f\u7528 export_str \u76f4\u63a5\u5bfc\u51fa\u4e3a\u5b57\u7b26\u4e32\nmsg = MIMEText(email.export_str(), \"html\", \"utf-8\")\nmsg[\"Subject\"] = Header(\"\u90ae\u4ef6\u6807\u9898\", \"utf-8\")\nmsg[\"From\"] = \"\u4f60\u7684\u90ae\u7bb1@qq.com\"  # \u6dfb\u52a0\u53d1\u4ef6\u4eba\nmsg[\"To\"] = \"\u4f60\u7684\u90ae\u7bb1@qq.com\"  # \u6dfb\u52a0\u6536\u4ef6\u4eba\n\n# \u8fde\u63a5\u53d1\u9001\u90ae\u4ef6(\u4f7f\u7528QQ\u90ae\u7bb1\u4e3a\u4f8b)\nsmtp = smtplib.SMTP_SSL(\"smtp.qq.com\", 465)\nsmtp.login(\"\u4f60\u7684\u90ae\u7bb1@qq.com\", \"jjhbkryjybwjbjbh\")\nsmtp.sendmail(\"\u4f60\u7684\u90ae\u7bb1@qq.com\", \"\u4f60\u7684\u90ae\u7bb1@qq.com\", msg.as_string())\nsmtp.quit()\n</code></pre> <p>After running, check your mailbox and you'll find the email has been successfully sent:</p> <p></p> <p>You can also see the beautiful report on mobile:</p> <p></p>"},{"location":"getting-started/first-email/#using-redmail-to-send-emails","title":"Using redmail to Send Emails","text":"<p>Using redmail to send emails is relatively simpler, but requires installing additional dependencies:</p> Bash<pre><code>pip install redmail\n</code></pre> Python<pre><code>from redmail import EmailSender\nimport os\nfrom smtplib import SMTP_SSL\nfrom email_widget import Email, TextWidget, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u526f\u6807\u9898\u548c\u811a\u6ce8\nemail = Email(\"\ud83d\udcca \u9500\u552e\u6570\u636e\u5468\u62a5\")\nemail.set_subtitle(\"2024\u5e74\u7b2c3\u5468\u9500\u552e\u60c5\u51b5\u6c47\u603b\")\nemail.set_footer(\"\u672c\u62a5\u544a\u7531\u9500\u552e\u56e2\u961f\u81ea\u52a8\u751f\u6210\")\n\n# 1. \u6dfb\u52a0\u4e3b\u6807\u9898\nemail.add_widget(\n    TextWidget().set_content(\"\u9500\u552e\u4e1a\u7ee9\u6982\u89c8\").set_type(TextType.TITLE_LARGE)\n)\n\n# 2. \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\n    .set_value(85)\n    .set_label(\"\u672c\u5468\u76ee\u6807\u5b8c\u6210\u7387\")\n    .set_theme(ProgressTheme.SUCCESS)\n)\n\n# 3. \u6dfb\u52a0\u6570\u636e\u8868\u683c\ntable = TableWidget()\ntable.set_title(\"\ud83c\udfc6 \u9500\u552e\u6392\u884c\u699c\")\ntable.set_headers([\"\u9500\u552e\u5458\", \"\u9500\u552e\u989d\", \"\u5b8c\u6210\u7387\", \"\u72b6\u6001\"])\ntable.add_row([\"\u5f20\u4e09\", \"\u00a5125,000\", \"125%\", \"success\"])\ntable.add_row([\"\u674e\u56db\", \"\u00a598,000\", \"98%\", \"warning\"])\ntable.add_row([\"\u738b\u4e94\", \"\u00a587,000\", \"87%\", \"info\"])\nemail.add_widget(table)\n\n# 4. \u6dfb\u52a0\u603b\u7ed3\u6587\u672c\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u672c\u5468\u9500\u552e\u4e1a\u7ee9\u6574\u4f53\u8868\u73b0\u826f\u597d\uff0c\u8d85\u989d\u5b8c\u6210\u65e2\u5b9a\u76ee\u6807\u3002\")\n    .set_type(TextType.BODY)\n)\n\n# \u914d\u7f6eQQ\u90ae\u7bb1\u53d1\u9001\u5668\nemail_sender = EmailSender(\n    host=\"smtp.qq.com\",\n    port=465,\n    username=\"\u4f60\u7684\u90ae\u7bb1@qq.com\",  # \u66ff\u6362\u4e3a\u4f60\u7684QQ\u90ae\u7bb1\n    password=\"\u6388\u6743\u7801\",  # SMTP\u6388\u6743\u7801\n    use_starttls=False,\n    cls_smtp=SMTP_SSL,\n)\n\n# \u53d1\u9001\u90ae\u4ef6\nemail_sender.send(\n    subject=\"HTML\u6d4b\u8bd5\u90ae\u4ef6\",\n    sender=\"\u4f60\u7684\u90ae\u7bb1@qq.com\",  # \u66ff\u6362\u4e3a\u4f60\u7684QQ\u90ae\u7bb1\n    receivers=[\"\u4f60\u7684\u90ae\u7bb1@qq.com\"],  # \u66ff\u6362\u4e3a\u63a5\u6536\u90ae\u4ef6\u7684\u90ae\u7bb1\n    html=email.export_str(),\n)\n\nprint(\"\u90ae\u4ef6\u53d1\u9001\u6210\u529f\uff01\")\n</code></pre>"},{"location":"getting-started/first-email/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<p>Now that you've mastered the basic usage, you can continue learning:</p> <ul> <li>Basic Concepts - Deep dive into EmailWidget's design philosophy</li> <li>User Guide - Learn detailed usage of all components</li> <li>Example Code - See more real-world application scenarios</li> </ul> <p>Having Problems?</p> <p>If you encounter any issues while creating your first email, you can:</p> <ul> <li>Check FAQ</li> <li>Ask questions in GitHub Issues</li> <li>Refer to API Documentation for detailed usage</li> </ul>"},{"location":"getting-started/installation/","title":"\ud83d\udce6 Installation Guide","text":""},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":"<p>Environment Requirements</p> <ul> <li>Python: 3.10 or higher</li> <li>Operating System: Windows, macOS, Linux</li> <li>Memory: Recommended 512MB+ available memory</li> </ul>"},{"location":"getting-started/installation/#installation-methods","title":"Installation Methods","text":""},{"location":"getting-started/installation/#install-with-pip-recommended","title":"\ud83d\ude80 Install with pip (Recommended)","text":"Latest Stable VersionSpecific VersionUpgrade to Latest Bash<pre><code>pip install EmailWidget\n</code></pre> Bash<pre><code>pip install EmailWidget==0.1.0\n</code></pre> Bash<pre><code>pip install EmailWidget -U\n</code></pre>"},{"location":"getting-started/installation/#install-from-source","title":"\ud83d\udd27 Install from Source","text":"<p>If you want to use the latest development version or participate in development:</p> Bash<pre><code># Clone repository\ngit clone https://github.com/271374667/EmailWidget.git\ncd EmailWidget\n\n# Install development dependencies\npip install -e \".[dev]\"\n</code></pre>"},{"location":"getting-started/installation/#verify-installation","title":"Verify Installation","text":"<p>After installation, you can verify the installation was successful in the following ways:</p>"},{"location":"getting-started/installation/#1-import-test","title":"1. Import Test","text":"Python<pre><code>try:\n    from email_widget import Email\n    from email_widget.widgets import TextWidget\n    print(\"\u2705 EmailWidget \u5b89\u88c5\u6210\u529f\uff01\")\nexcept ImportError as e:\n    print(f\"\u274c \u5b89\u88c5\u5931\u8d25: {e}\")\n</code></pre>"},{"location":"getting-started/installation/#2-version-check","title":"2. Version Check","text":"Python<pre><code>import email_widget\nprint(f\"EmailWidget \u7248\u672c: {email_widget.__version__}\")\n</code></pre>"},{"location":"getting-started/installation/#3-create-test-email","title":"3. Create Test Email","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u6d4b\u8bd5\u90ae\u4ef6\nemail = Email(\"\u5b89\u88c5\u6d4b\u8bd5\")\nemail.add_widget(\n    TextWidget()\n    .set_content(\"EmailWidget \u5b89\u88c5\u6210\u529f\uff01\ud83c\udf89\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u5bfc\u51fa\u6d4b\u8bd5\u6587\u4ef6\nfile_path = email.export_html(\"installation_test.html\")\nprint(f\"\u6d4b\u8bd5\u6587\u4ef6\u5df2\u751f\u6210: {file_path}\")\n</code></pre>"},{"location":"getting-started/installation/#optional-dependencies","title":"Optional Dependencies","text":"<p>Some features of EmailWidget require additional dependencies:</p>"},{"location":"getting-started/installation/#chart-features","title":"\ud83d\udcca Chart Features","text":"<p>If you need to use chart components (this content is installed on-demand, not included by default):</p> Bash<pre><code>pip install matplotlib seaborn\n</code></pre>"},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":""},{"location":"getting-started/installation/#installation-failed","title":"\u2753 Installation Failed?","text":"Permission IssuesNetwork IssuesPython Version Issues Bash<pre><code># Use --user parameter\npip install --user EmailWidget\n\n# Or use virtual environment\npython -m venv email_widget_env\nsource email_widget_env/bin/activate  # Linux/macOS\n# or email_widget_env\\Scripts\\activate  # Windows\npip install EmailWidget\n</code></pre> Bash<pre><code># Use domestic mirror source\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple EmailWidget\n</code></pre> Bash<pre><code># Check Python version\npython --version\n\n# If version is too low, please upgrade to Python 3.10+\n</code></pre>"},{"location":"getting-started/installation/#charts-not-displaying-chinese-text-properly","title":"\u2753 Charts Not Displaying Chinese Text Properly?","text":"<p>This is usually a font configuration issue:</p> Python<pre><code># \u624b\u52a8\u914d\u7f6e\u4e2d\u6587\u5b57\u4f53\nimport matplotlib.pyplot as plt\nplt.rcParams['font.sans-serif'] = ['SimHei', 'Microsoft YaHei']\nplt.rcParams['axes.unicode_minus'] = False\n</code></pre> <p>EmailWidget will automatically handle this issue, but if problems persist, please check if Chinese fonts are installed on your system.</p>"},{"location":"getting-started/installation/#using-in-jupyter-notebook","title":"\u2753 Using in Jupyter Notebook","text":"<p>EmailWidget is fully compatible with Jupyter Notebook:</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TextWidget\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"Jupyter \u6d4b\u8bd5\")\nemail.add_widget(TextWidget().set_content(\"\u5728 Jupyter \u4e2d\u4f7f\u7528 EmailWidget\"))\n\n# \u9884\u89c8 HTML\uff08\u5728 Jupyter \u4e2d\u76f4\u63a5\u663e\u793a\uff09\nfrom IPython.display import HTML\nHTML(email.export_str())\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>After installation, you can:</p> <ol> <li>\ud83d\udcda Create Your First Email - 5-minute quick start</li> <li>\ud83d\udcd6 Understand Basic Concepts - Learn core concepts</li> <li>\ud83d\udca1 View Example Code - Learn practical usage</li> </ol> <p>Need Help?</p> <p>If you encounter any installation issues, please feel free to ask in GitHub Issues!</p>"},{"location":"user-guide/","title":"User Guide","text":"<p>Welcome to the EmailWidget User Guide! This comprehensive guide will help you master all features of EmailWidget, from basic concepts to advanced usage.</p>"},{"location":"user-guide/#learning-path","title":"\ud83d\udcda Learning Path","text":""},{"location":"user-guide/#quick-start","title":"\ud83d\ude80 Quick Start","text":"<p>If you're a new user, we recommend reading in the following order:</p> <ol> <li>Core Classes - Understand the basic architecture of EmailWidget</li> <li>Widget Overview - Learn about all available widget types</li> <li>Text Widget - Start with the most basic text widget</li> </ol>"},{"location":"user-guide/#system-architecture","title":"\ud83c\udfd7\ufe0f System Architecture","text":"<p>EmailWidget uses a component-based architecture that allows you to flexibly build various types of email content:</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TextWidget, TableWidget, ChartWidget, ButtonWidget\n\n# \u521b\u5efa\u90ae\u4ef6\u5bb9\u5668\nemail = Email(\"\u6570\u636e\u62a5\u544a\")\n\n# \u6dfb\u52a0\u7ec4\u4ef6\nemail.add_widget(TextWidget().set_content(\"\u672c\u5468\u6570\u636e\u6982\u89c8\"))\nemail.add_widget(TableWidget().set_headers([\"\u9879\u76ee\", \"\u6570\u503c\"]))\nemail.add_widget(ChartWidget().set_image_url(\"chart.png\"))\nemail.add_button(\"\u67e5\u770b\u5b8c\u6574\u62a5\u544a\", \"https://dashboard.example.com\")\n\n# \u751f\u6210HTML\nhtml = email.render_html()\n</code></pre>"},{"location":"user-guide/#widget-types-overview","title":"\ud83d\udcca Widget Types Overview","text":"Widget Type Purpose Example Use Cases Text Widget Display text content Titles, descriptions, notes Table Widget Show structured data Data reports, statistical tables Chart Widget Visualize data Trend charts, bar charts, pie charts Progress Widget Show progress status Task completion, system load Status Widget Display status information System monitoring, health checks Layout Widget Organize page layout Multi-column layout, grouped display Button Widget User interaction Link navigation, action buttons Other Widgets Special features Quotes, alerts, cards"},{"location":"user-guide/#design-philosophy","title":"\ud83c\udfa8 Design Philosophy","text":"<p>EmailWidget follows these design principles:</p>"},{"location":"user-guide/#email-compatibility-first","title":"\ud83d\udcf1 Email Compatibility First","text":"<ul> <li>Use table-based layout to ensure correct display in various email clients</li> <li>Avoid modern CSS features to ensure broad compatibility</li> <li>Inline styles guarantee consistent rendering</li> </ul>"},{"location":"user-guide/#simple-and-easy-to-use","title":"\ud83d\udd27 Simple and Easy to Use","text":"<ul> <li>Chain API design for clean and intuitive code</li> <li>Reasonable default configurations for out-of-the-box usage</li> <li>Rich configuration options to meet customization needs</li> </ul>"},{"location":"user-guide/#secure-and-reliable","title":"\ud83d\udee1\ufe0f Secure and Reliable","text":"<ul> <li>Input validation ensures data security</li> <li>Error handling ensures system stability</li> <li>Logging facilitates troubleshooting</li> </ul>"},{"location":"user-guide/#core-features","title":"\ud83d\udd27 Core Features","text":""},{"location":"user-guide/#template-engine","title":"\u2728 Template Engine","text":"<ul> <li>Powerful template system based on Jinja2</li> <li>Support for conditional rendering and loops</li> <li>Template caching improves performance</li> </ul>"},{"location":"user-guide/#image-processing","title":"\ud83d\uddbc\ufe0f Image Processing","text":"<ul> <li>Smart image caching mechanism</li> <li>Support for multiple image formats</li> <li>Automatic image size optimization</li> </ul>"},{"location":"user-guide/#logging-system","title":"\ud83d\udcdd Logging System","text":"<ul> <li>Hierarchical log recording</li> <li>Environment variable control</li> <li>Convenient for debugging and monitoring</li> </ul>"},{"location":"user-guide/#performance-optimization","title":"\u26a1 Performance Optimization","text":"<ul> <li>LRU caching strategy</li> <li>Template precompilation</li> <li>Memory usage optimization</li> </ul>"},{"location":"user-guide/#best-practices","title":"\ud83c\udfaf Best Practices","text":""},{"location":"user-guide/#content-organization","title":"\ud83d\udcdd Content Organization","text":"<ol> <li>Logical Layering: Organize content by importance</li> <li>Moderate Segmentation: Avoid excessive content in single widgets</li> <li>Clear Titles: Use hierarchical title structure</li> </ol>"},{"location":"user-guide/#visual-design","title":"\ud83c\udfa8 Visual Design","text":"<ol> <li>Maintain Consistency: Unified font and color scheme</li> <li>Reasonable Whitespace: Appropriate spacing improves reading experience</li> <li>Highlight Key Points: Use color and font weight to emphasize important information</li> </ol>"},{"location":"user-guide/#code-quality","title":"\ud83d\udd27 Code Quality","text":"<ol> <li>Parameter Validation: Use built-in validators to ensure data validity</li> <li>Error Handling: Properly handle exceptional situations</li> <li>Performance Considerations: Avoid creating large numbers of objects in loops</li> </ol>"},{"location":"user-guide/#getting-help","title":"\ud83c\udd98 Getting Help","text":"<p>If you encounter problems during use:</p> <ol> <li>\ud83d\udcd6 Check FAQ</li> <li>\ud83d\udd0d Search API Reference for detailed information</li> <li>\ud83d\udca1 Refer to Example Code for inspiration</li> <li>\ud83d\udc1b Submit issues on GitHub</li> </ol> <p>Now start your EmailWidget learning journey! We recommend beginning with Core Classes.</p>"},{"location":"user-guide/alert-widget/","title":"AlertWidget","text":"<p>AlertWidget is a GitHub-style alert box component used to display various types of notification messages. It supports multiple alert levels, each with corresponding color themes and icons, effectively capturing user attention and conveying important information.</p>"},{"location":"user-guide/alert-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview2. \u8b66\u544a\u7ec4\u4ef6\u7c7b\u578b\u5c55\u793a","text":"\u8b66\u544a\u7ec4\u4ef6\u9884\u89c8 \u8b66\u544a\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:24:49 \ud83d\udca1 \u63d0\u793a \u8fd9\u662f\u63d0\u793a\u4fe1\u606f (TIP) \u2139\ufe0f \u6ce8\u610f \u8fd9\u662f\u6ce8\u610f\u4e8b\u9879 (NOTE) \u2757 \u91cd\u8981 \u8fd9\u662f\u91cd\u8981\u4fe1\u606f (IMPORTANT) \u26a0\ufe0f \u8b66\u544a \u8fd9\u662f\u8b66\u544a\u4fe1\u606f (WARNING) \ud83d\udea8 \u5371\u9669 \u8fd9\u662f\u6ce8\u610f\u4fe1\u606f (CAUTION) <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/alert-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83c\udfa8 Multiple Alert Types: Supports NOTE, TIP, IMPORTANT, WARNING, and CAUTION types</li> <li>\ud83c\udfaf GitHub-Style Design: Unified visual style and color themes, with dedicated icons for each type</li> <li>\u2699\ufe0f Flexible Configuration: Custom titles and icons, with controllable icon display/hide</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> <li>\ud83d\udd17 Method Chaining: Supports method chaining for clean and readable code</li> </ul>"},{"location":"user-guide/alert-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/alert-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import AlertWidget\nfrom email_widget.core.enums import AlertType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u8b66\u544a\u7ec4\u4ef6\u793a\u4f8b\")\n\n# \u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u8b66\u544a\u6846\nnote = AlertWidget().set_content(\"\u8bf7\u6ce8\u610f\u67e5\u6536\u90ae\u4ef6\u4e2d\u7684\u9644\u4ef6\").set_alert_type(AlertType.NOTE)\nemail.add_widget(note)\n\ntip = AlertWidget().set_content(\"\u4f7f\u7528\u5feb\u6377\u952e Ctrl+S \u53ef\u4ee5\u5feb\u901f\u4fdd\u5b58\").set_alert_type(AlertType.TIP)\nemail.add_widget(tip)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_alert(\"\u7cfb\u7edf\u5c06\u5728\u4eca\u665a22:00\u8fdb\u884c\u5347\u7ea7\u7ef4\u62a4\", AlertType.IMPORTANT)\n\n# \u5bfc\u51faHTML\nemail.export_html(\"alert_demo.html\")\n</code></pre>"},{"location":"user-guide/alert-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u81ea\u5b9a\u4e49\u6807\u9898\u548c\u56fe\u6807\ncustom_alert = (AlertWidget()\n    .set_content(\"\u65b0\u7248\u672c\u5df2\u53d1\u5e03\uff0c\u5305\u542b\u91cd\u8981\u5b89\u5168\u66f4\u65b0\")\n    .set_alert_type(AlertType.IMPORTANT)\n    .set_title(\"\u7248\u672c\u66f4\u65b0\u901a\u77e5\")\n    .set_icon(\"\ud83d\ude80\"))\n\nemail.add_widget(custom_alert)\n\n# \u9690\u85cf\u56fe\u6807\ntext_only = (AlertWidget()\n    .set_content(\"\u7eaf\u6587\u672c\u8b66\u544a\u4fe1\u606f\")\n    .set_alert_type(AlertType.NOTE)\n    .show_icon(False))\n\nemail.add_widget(text_only)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: AlertWidget API</p>"},{"location":"user-guide/alert-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/alert-widget/#alert-types-and-theme-colors","title":"Alert Types and Theme Colors","text":"<ul> <li>NOTE: Blue (#3b82f6) - General tips, explanations, remarks</li> <li>TIP: Green (#22c55e) - Useful suggestions, tips, tricks  </li> <li>IMPORTANT: Purple (#8b5cf6) - Important notices, key information</li> <li>WARNING: Orange (#f97316) - Warning information, risk alerts</li> <li>CAUTION: Red (#ef4444) - Serious warnings, dangerous operation alerts</li> </ul>"},{"location":"user-guide/alert-widget/#usage-recommendations","title":"Usage Recommendations","text":"<ul> <li>NOTE: For general explanations and reference information</li> <li>TIP: For providing useful suggestions and optimization tips</li> <li>IMPORTANT: For emphasizing important information and must-know content</li> <li>WARNING: For alerting users to risks and potential issues</li> <li>CAUTION: For serious warnings and dangerous operation alerts</li> </ul>"},{"location":"user-guide/alert-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/alert-widget/#1-system-notification-email","title":"1. System Notification Email","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import AlertWidget\nfrom email_widget.core.enums import AlertType\n\n# \u521b\u5efa\u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6\")\n\n# \u91cd\u8981\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\nemail.add_alert(\n    \"\u7cfb\u7edf\u5c06\u5728\u4eca\u665a22:00-24:00\u8fdb\u884c\u7ef4\u62a4\u5347\u7ea7\uff0c\u671f\u95f4\u670d\u52a1\u5c06\u6682\u505c\u4f7f\u7528\",\n    AlertType.IMPORTANT,\n    \"\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\"\n)\n\n# \u5907\u4efd\u63d0\u9192\nemail.add_alert(\n    \"\u5efa\u8bae\u5728\u7ef4\u62a4\u524d\u5907\u4efd\u60a8\u7684\u91cd\u8981\u6570\u636e\",\n    AlertType.TIP,\n    \"\u6570\u636e\u5907\u4efd\u5efa\u8bae\"\n)\n\n# \u7d27\u6025\u8054\u7cfb\u65b9\u5f0f\nemail.add_alert(\n    \"\u5982\u9047\u7d27\u6025\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb\u6280\u672f\u652f\u6301\uff1a400-123-4567\",\n    AlertType.WARNING,\n    \"\u7d27\u6025\u8054\u7cfb\u65b9\u5f0f\"\n)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"system_notification.html\")\n</code></pre> \u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6 \u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:18:47 \u2757 \u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5 \u7cfb\u7edf\u5c06\u5728\u4eca\u665a22:00-24:00\u8fdb\u884c\u7ef4\u62a4\u5347\u7ea7\uff0c\u671f\u95f4\u670d\u52a1\u5c06\u6682\u505c\u4f7f\u7528 \ud83d\udca1 \u6570\u636e\u5907\u4efd\u5efa\u8bae \u5efa\u8bae\u5728\u7ef4\u62a4\u524d\u5907\u4efd\u60a8\u7684\u91cd\u8981\u6570\u636e \u26a0\ufe0f \u7d27\u6025\u8054\u7cfb\u65b9\u5f0f \u5982\u9047\u7d27\u6025\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb\u6280\u672f\u652f\u6301\uff1a400-123-4567 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/alert-widget/#2-product-release-announcement","title":"2. Product Release Announcement","text":"Python<pre><code># \u521b\u5efa\u4ea7\u54c1\u53d1\u5e03\u516c\u544a\u90ae\u4ef6\nemail = Email(\"\u4ea7\u54c1\u53d1\u5e03\u516c\u544a\")\n\n# \u65b0\u529f\u80fd\u53d1\u5e03\nemail.add_alert(\n    \"EmailWidget v2.0\u6b63\u5f0f\u53d1\u5e03\uff01\u65b0\u589e\u65f6\u95f4\u7ebf\u548c\u6307\u6807\u7ec4\u4ef6\uff0c\u63d0\u5347\u90ae\u4ef6\u5c55\u793a\u6548\u679c\",\n    AlertType.TIP,\n    \"\u65b0\u7248\u672c\u53d1\u5e03\"\n)\n\n# \u91cd\u8981\u53d8\u66f4\u63d0\u9192\nemail.add_alert(\n    \"\u672c\u6b21\u66f4\u65b0\u5305\u542b\u91cd\u8981\u7684\u5b89\u5168\u4fee\u590d\uff0c\u5efa\u8bae\u6240\u6709\u7528\u6237\u5c3d\u5feb\u5347\u7ea7\",\n    AlertType.IMPORTANT,\n    \"\u5b89\u5168\u66f4\u65b0\"\n)\n\n# \u517c\u5bb9\u6027\u8b66\u544a\nemail.add_alert(\n    \"\u65b0\u7248\u672c\u8981\u6c42Python 3.8+\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u8fd0\u884c\u73af\u5883\",\n    AlertType.WARNING,\n    \"\u517c\u5bb9\u6027\u8981\u6c42\"\n)\n\nemail.export_html(\"product_release_announcement.html\")\n</code></pre> \u4ea7\u54c1\u53d1\u5e03\u516c\u544a \u4ea7\u54c1\u53d1\u5e03\u516c\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:18:47 \ud83d\udca1 \u65b0\u7248\u672c\u53d1\u5e03 EmailWidget v2.0\u6b63\u5f0f\u53d1\u5e03\uff01\u65b0\u589e\u65f6\u95f4\u7ebf\u548c\u6307\u6807\u7ec4\u4ef6\uff0c\u63d0\u5347\u90ae\u4ef6\u5c55\u793a\u6548\u679c \u2757 \u5b89\u5168\u66f4\u65b0 \u672c\u6b21\u66f4\u65b0\u5305\u542b\u91cd\u8981\u7684\u5b89\u5168\u4fee\u590d\uff0c\u5efa\u8bae\u6240\u6709\u7528\u6237\u5c3d\u5feb\u5347\u7ea7 \u26a0\ufe0f \u517c\u5bb9\u6027\u8981\u6c42 \u65b0\u7248\u672c\u8981\u6c42Python 3.8+\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u8fd0\u884c\u73af\u5883 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/alert-widget/#3-learning-guide-email","title":"3. Learning Guide Email","text":"Python<pre><code># \u521b\u5efa\u5b66\u4e60\u6307\u5357\u90ae\u4ef6\nemail = Email(\"EmailWidget\u5b66\u4e60\u6307\u5357\")\n\n# \u5b66\u4e60\u63d0\u793a\nemail.add_alert(\n    \"\u5efa\u8bae\u4ece\u57fa\u7840\u7ec4\u4ef6\u5f00\u59cb\u5b66\u4e60\uff0c\u9010\u6b65\u638c\u63e1\u9ad8\u7ea7\u529f\u80fd\",\n    AlertType.TIP,\n    \"\u5b66\u4e60\u5efa\u8bae\"\n)\n\n# \u6587\u6863\u94fe\u63a5\nemail.add_alert(\n    \"\u5b8c\u6574\u7684API\u6587\u6863\u548c\u793a\u4f8b\u4ee3\u7801\u53ef\u5728\u5b98\u7f51\u67e5\u770b\",\n    AlertType.NOTE,\n    \"\u6587\u6863\u8d44\u6e90\"\n)\n\n# \u6ce8\u610f\u4e8b\u9879\nemail.add_alert(\n    \"\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u524d\uff0c\u8bf7\u5145\u5206\u6d4b\u8bd5\u90ae\u4ef6\u5728\u4e0d\u540c\u5ba2\u6237\u7aef\u7684\u663e\u793a\u6548\u679c\",\n    AlertType.CAUTION,\n    \"\u4f7f\u7528\u6ce8\u610f\"\n)\n\nemail.export_html(\"learning_guide.html\")\n</code></pre> EmailWidget\u5b66\u4e60\u6307\u5357 EmailWidget\u5b66\u4e60\u6307\u5357 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:18:47 \ud83d\udca1 \u5b66\u4e60\u5efa\u8bae \u5efa\u8bae\u4ece\u57fa\u7840\u7ec4\u4ef6\u5f00\u59cb\u5b66\u4e60\uff0c\u9010\u6b65\u638c\u63e1\u9ad8\u7ea7\u529f\u80fd \u2139\ufe0f \u6587\u6863\u8d44\u6e90 \u5b8c\u6574\u7684API\u6587\u6863\u548c\u793a\u4f8b\u4ee3\u7801\u53ef\u5728\u5b98\u7f51\u67e5\u770b \ud83d\udea8 \u4f7f\u7528\u6ce8\u610f \u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u524d\uff0c\u8bf7\u5145\u5206\u6d4b\u8bd5\u90ae\u4ef6\u5728\u4e0d\u540c\u5ba2\u6237\u7aef\u7684\u663e\u793a\u6548\u679c <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/alert-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_alert</code> shortcut method:</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_alert(\"\u63d0\u793a\u5185\u5bb9\", AlertType.NOTE)\n\n# \u5e26\u6807\u9898\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_alert(\"\u91cd\u8981\u901a\u77e5\u5185\u5bb9\", AlertType.IMPORTANT, \"\u901a\u77e5\u6807\u9898\")\n\n# \u6279\u91cf\u6dfb\u52a0\u8b66\u544a\nalerts = [\n    (\"\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\", AlertType.WARNING, \"\u7ef4\u62a4\u63d0\u9192\"),\n    (\"\u65b0\u529f\u80fd\u53d1\u5e03\", AlertType.TIP, \"\u529f\u80fd\u66f4\u65b0\"), \n    (\"\u5b89\u5168\u66f4\u65b0\", AlertType.IMPORTANT, \"\u5b89\u5168\u63d0\u9192\")\n]\n\nfor content, alert_type, title in alerts:\n    email.add_alert(content, alert_type, title)\n</code></pre>"},{"location":"user-guide/alert-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/alert-widget/#q-alert-box-displays-abnormally-in-some-email-clients","title":"Q: Alert box displays abnormally in some email clients?","text":"<p>A: AlertWidget uses email client-compatible CSS implementation, supporting mainstream email clients. If issues occur, please check if custom CSS has overridden component styles.</p>"},{"location":"user-guide/alert-widget/#q-how-to-customize-alert-box-colors","title":"Q: How to customize alert box colors?","text":"<p>A: We recommend using predefined AlertType types for consistency. If customization is needed, it can be achieved through CSS override methods.</p>"},{"location":"user-guide/alert-widget/#q-can-multiple-lines-be-displayed-in-one-alert-box","title":"Q: Can multiple lines be displayed in one alert box?","text":"<p>A: Multi-line content is supported. Use <code>\\n</code> or HTML <code>&lt;br&gt;</code> tags for line breaks in the content.</p>"},{"location":"user-guide/alert-widget/#q-how-to-hide-or-customize-icons","title":"Q: How to hide or customize icons?","text":"<p>A: Use <code>show_icon(False)</code> to hide icons, or use <code>set_icon(\"\ud83c\udf89\")</code> to set custom icons.</p>"},{"location":"user-guide/alert-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>CardWidget - Can use alert boxes within cards</li> <li>TextWidget - For body content accompanying alert boxes</li> <li>SeparatorWidget - For separating different types of alert information</li> <li>ButtonWidget - Can add action buttons after alert boxes</li> </ul>"},{"location":"user-guide/button-widget/","title":"ButtonWidget","text":"<p>ButtonWidget is a component specifically designed for creating clickable buttons in emails. It provides powerful customization features, supports various styles, colors, and alignment options, and is fully compatible with major email clients.</p>"},{"location":"user-guide/button-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview1. \u6309\u94ae\u7ec4\u4ef6\u5c55\u793a","text":"\u6309\u94ae\u7ec4\u4ef6\u9884\u89c8 \u6309\u94ae\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:01:25 1.1. \u4e3b\u8981\u6309\u94ae \u7acb\u5373\u8d2d\u4e70 1.2. \u6210\u529f\u6309\u94ae \u786e\u8ba4\u8ba2\u5355 1.3. \u8b66\u544a\u6309\u94ae \u53d6\u6d88\u8ba2\u5355 1.4. \u81ea\u5b9a\u4e49\u6837\u5f0f\u6309\u94ae \u8054\u7cfb\u5ba2\u670d <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/button-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcf1 Email Client Compatible: Optimized for major email clients (Outlook, Gmail, Apple Mail, etc.)</li> <li>\ud83c\udfa8 Style Customization: Supports background color, text color, width, alignment, and many other style options</li> <li>\ud83d\udd17 Link Navigation: Supports various link types including web links, email links, etc.</li> <li>\ud83d\udcd0 Flexible Alignment: Supports left, center, and right alignment</li> <li>\ud83c\udfaf Responsive Design: Automatically adapts to different devices and email client displays</li> </ul>"},{"location":"user-guide/button-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/button-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u6309\u94ae\u793a\u4f8b\")\n\n# \u521b\u5efa\u57fa\u7840\u6309\u94ae\nbutton = ButtonWidget().set_text(\"\u70b9\u51fb\u8bbf\u95ee\").set_href(\"https://example.com\")\nemail.add_widget(button)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_button(\"\u7acb\u5373\u8d2d\u4e70\", \"https://shop.example.com\")\n\n# \u5bfc\u51faHTML\nemail.export_html(\"button_demo.html\")\n</code></pre>"},{"location":"user-guide/button-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u521b\u5efa\u5e26\u6837\u5f0f\u7684\u6309\u94ae\nstyled_button = (ButtonWidget()\n    .set_text(\"\u7acb\u5373\u5f00\u59cb\")\n    .set_href(\"https://app.example.com/start\")\n    .set_background_color(\"#22c55e\")  # \u7eff\u8272\u80cc\u666f\n    .set_text_color(\"#ffffff\")        # \u767d\u8272\u6587\u5b57\n    .set_width(\"200px\")               # \u56fa\u5b9a\u5bbd\u5ea6\n    .set_align(\"center\"))             # \u5c45\u4e2d\u5bf9\u9f50\n\nemail.add_widget(styled_button)\n\n# \u591a\u6837\u5f0f\u6309\u94ae\u7ec4\u5408\nprimary_button = (ButtonWidget()\n    .set_text(\"\u4e3b\u8981\u64cd\u4f5c\")\n    .set_href(\"https://example.com/primary\")\n    .set_background_color(\"#3b82f6\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"180px\"))\n\nsecondary_button = (ButtonWidget()\n    .set_text(\"\u6b21\u8981\u64cd\u4f5c\")\n    .set_href(\"https://example.com/secondary\")\n    .set_background_color(\"#6b7280\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"150px\"))\n\nemail.add_widget(primary_button)\nemail.add_widget(secondary_button)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: ButtonWidget API</p>"},{"location":"user-guide/button-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/button-widget/#recommended-color-combinations","title":"Recommended Color Combinations","text":""},{"location":"user-guide/button-widget/#primary-button","title":"Primary Button","text":"<ul> <li>Background: #3b82f6 (Blue)</li> <li>Text: #ffffff (White)</li> <li>Usage: Main actions, important buttons</li> </ul>"},{"location":"user-guide/button-widget/#success-button","title":"Success Button","text":"<ul> <li>Background: #22c55e (Green)</li> <li>Text: #ffffff (White)</li> <li>Usage: Confirm actions, purchase buttons</li> </ul>"},{"location":"user-guide/button-widget/#warning-button","title":"Warning Button","text":"<ul> <li>Background: #f59e0b (Orange)</li> <li>Text: #ffffff (White)</li> <li>Usage: Actions requiring attention</li> </ul>"},{"location":"user-guide/button-widget/#danger-button","title":"Danger Button","text":"<ul> <li>Background: #ef4444 (Red)</li> <li>Text: #ffffff (White)</li> <li>Usage: Delete actions, unsubscribe</li> </ul>"},{"location":"user-guide/button-widget/#secondary-button","title":"Secondary Button","text":"<ul> <li>Background: #6b7280 (Gray)</li> <li>Text: #ffffff (White)</li> <li>Usage: Auxiliary actions, learn more</li> </ul>"},{"location":"user-guide/button-widget/#size-recommendations","title":"Size Recommendations","text":"<ul> <li>Small Button: 120px - for auxiliary actions</li> <li>Medium Button: 180px - standard button size</li> <li>Large Button: 250px - important actions</li> <li>Full-width Button: 100% - mobile-friendly</li> </ul>"},{"location":"user-guide/button-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/button-widget/#1-e-commerce-marketing-email","title":"1. E-commerce Marketing Email","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget\n\nemail = Email(\"\u9650\u65f6\u7279\u60e0\u6d3b\u52a8\")\n\n# \u4e3b\u8981\u8d2d\u4e70\u6309\u94ae\nbuy_button = (ButtonWidget()\n    .set_text(\"\u7acb\u5373\u62a2\u8d2d\")\n    .set_href(\"https://shop.example.com/sale\")\n    .set_background_color(\"#ef4444\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"100%\")\n    .set_align(\"center\"))\n\nemail.add_widget(buy_button)\n\n# \u6b21\u8981\u4e86\u89e3\u6309\u94ae\ninfo_button = (ButtonWidget()\n    .set_text(\"\u67e5\u770b\u8be6\u60c5\")\n    .set_href(\"https://shop.example.com/products\")\n    .set_background_color(\"#6b7280\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"150px\")\n    .set_align(\"center\"))\n\nemail.add_widget(info_button)\n</code></pre> \u65b0\u54c1\u53d1\u5e03\u4fc3\u9500 \u65b0\u54c1\u53d1\u5e03\u4fc3\u9500 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:31:21 <p>\ud83c\udf89 \u5168\u65b0 EmailWidget Pro \u9686\u91cd\u53d1\u5e03\uff01</p> <p>\u4e13\u4e3a Python \u5f00\u53d1\u8005\u8bbe\u8ba1\u7684\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u8ba9\u60a8\u7684\u90ae\u4ef6\u66f4\u4e13\u4e1a\u66f4\u7f8e\u89c2\u3002</p> \u7acb\u5373\u8d2d\u4e70 - \u9650\u65f68\u6298 \u4e86\u89e3\u66f4\u591a <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/button-widget/#2-system-notification-email","title":"2. System Notification Email","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget\n\nemail = Email(\"\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\")\n\nemail.add_text(\"\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a\u8fdb\u884c\u7ef4\u62a4\uff0c\u9884\u8ba1\u8017\u65f62\u5c0f\u65f6\u3002\")\n\n# \u67e5\u770b\u8be6\u60c5\u6309\u94ae\ndetail_button = (ButtonWidget()\n    .set_text(\"\u67e5\u770b\u7ef4\u62a4\u8be6\u60c5\")\n    .set_href(\"https://status.example.com/maintenance\")\n    .set_background_color(\"#3b82f6\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"180px\")\n    .set_align(\"center\"))\n\nemail.add_widget(detail_button)\n</code></pre> \u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5 \u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:31:21 <p>\u26a0\ufe0f \u91cd\u8981\u901a\u77e5</p> <p>\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a 22:00-24:00 \u8fdb\u884c\u7ef4\u62a4\u5347\u7ea7\uff0c\u671f\u95f4\u670d\u52a1\u5c06\u6682\u65f6\u4e2d\u65ad\u3002</p> <p>\u7ef4\u62a4\u671f\u95f4\u53ef\u80fd\u4f1a\u5f71\u54cd\u4ee5\u4e0b\u670d\u52a1\uff1a</p> <p>\u2022 \u7528\u6237\u767b\u5f55\u548c\u6ce8\u518c</p> <p>\u2022 \u6570\u636e\u540c\u6b65\u529f\u80fd</p> <p>\u2022 \u90ae\u4ef6\u53d1\u9001\u670d\u52a1</p> \u67e5\u770b\u7ef4\u62a4\u8be6\u60c5 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/button-widget/#3-product-introduction-email","title":"3. Product Introduction Email","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget, ColumnWidget\n\nemail = Email(\"\u4ea7\u54c1\u529f\u80fd\u4ecb\u7ecd\")\n\n# \u4f7f\u7528\u5217\u5e03\u5c40\u5e76\u6392\u663e\u793a\u6309\u94ae\ncolumn = ColumnWidget().set_columns(2)\n\n# \u514d\u8d39\u8bd5\u7528\u6309\u94ae\ntrial_button = (ButtonWidget()\n    .set_text(\"\u514d\u8d39\u8bd5\u7528\")\n    .set_href(\"https://app.example.com/trial\")\n    .set_background_color(\"#22c55e\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"100%\"))\n\n# \u67e5\u770b\u5b9a\u4ef7\u6309\u94ae\npricing_button = (ButtonWidget()\n    .set_text(\"\u67e5\u770b\u5b9a\u4ef7\")\n    .set_href(\"https://example.com/pricing\")\n    .set_background_color(\"#3b82f6\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"100%\"))\n\ncolumn.add_widgets([trial_button, pricing_button])\nemail.add_widget(column)\n</code></pre> EmailWidget \u4ea7\u54c1\u4ecb\u7ecd EmailWidget \u4ea7\u54c1\u4ecb\u7ecd \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:31:21 <p>\ud83d\udce7 EmailWidget Pro</p> <p>Python \u90ae\u4ef6\u7ec4\u4ef6\u7684\u7ec8\u6781\u89e3\u51b3\u65b9\u6848</p> <p>\u2728 \u4e3b\u8981\u7279\u6027\uff1a</p> <p>\u2022 15+ \u7cbe\u7f8e\u7ec4\u4ef6\uff0c\u8986\u76d6\u6240\u6709\u90ae\u4ef6\u573a\u666f</p> <p>\u2022 \u5b8c\u7f8e\u9002\u914d\u5404\u5927\u90ae\u4ef6\u5ba2\u6237\u7aef</p> <p>\u2022 \u7b80\u5355\u6613\u7528\u7684 API \u8bbe\u8ba1</p> <p>\u2022 \u5b8c\u6574\u7684\u7c7b\u578b\u6ce8\u89e3\u548c\u6587\u6863</p> \u514d\u8d39\u8bd5\u7528 \u67e5\u770b\u5b9a\u4ef7 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/button-widget/#4-email-client-compatibility-optimization","title":"4. Email Client Compatibility Optimization","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget\n\nemail = Email(\"\u517c\u5bb9\u6027\u4f18\u5316\u793a\u4f8b\")\n\n# \u63a8\u8350\u505a\u6cd5\ncompatible_button = (ButtonWidget()\n    .set_text(\"\u7acb\u5373\u8bbf\u95ee\")\n    .set_href(\"https://example.com\")\n    .set_background_color(\"#3b82f6\")  # \u4f7f\u7528\u5177\u4f53\u989c\u8272\u503c\n    .set_text_color(\"#ffffff\")        # \u786e\u4fdd\u9ad8\u5bf9\u6bd4\u5ea6\n    .set_width(\"180px\")               # \u8bbe\u7f6e\u660e\u786e\u5bbd\u5ea6\n    .set_align(\"center\"))\n\nemail.add_widget(compatible_button)\n</code></pre> \u5ba2\u6237\u7aef\u517c\u5bb9\u6027\u6d4b\u8bd5 \u5ba2\u6237\u7aef\u517c\u5bb9\u6027\u6d4b\u8bd5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:31:21 <p>\ud83d\udd27 \u5ba2\u6237\u7aef\u517c\u5bb9\u6027\u4f18\u5316</p> <p>\u4ee5\u4e0b\u6309\u94ae\u7ecf\u8fc7\u7279\u6b8a\u4f18\u5316\uff0c\u786e\u4fdd\u5728\u6240\u6709\u4e3b\u6d41\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u6b63\u786e\u663e\u793a\uff1a</p> \u517c\u5bb9\u6027\u4f18\u5316\u6309\u94ae <p>\u2705 \u652f\u6301\u7684\u90ae\u4ef6\u5ba2\u6237\u7aef\uff1a</p> <p>\u2022 Outlook (Windows/Mac/Web)</p> <p>\u2022 Gmail (Web/Mobile)</p> <p>\u2022 Apple Mail</p> <p>\u2022 Yahoo Mail</p> <p>\u2022 Thunderbird</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/button-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_button</code> shortcut method:</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_button(\"\u6309\u94ae\u6587\u672c\", \"\u94fe\u63a5\u5730\u5740\")\n\n# \u5e26\u6837\u5f0f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_button(\n    \"\u7acb\u5373\u8d2d\u4e70\",\n    \"https://shop.example.com\",\n    background_color=\"#22c55e\",\n    text_color=\"#ffffff\", \n    width=\"200px\",\n    align=\"center\"\n)\n\n# \u4e0d\u540c\u7c7b\u578b\u7684\u94fe\u63a5\nemail.add_button(\"\u53d1\u9001\u90ae\u4ef6\", \"mailto:contact@example.com\")\nemail.add_button(\"\u62e8\u6253\u7535\u8bdd\", \"tel:+1234567890\")\nemail.add_button(\"\u8bbf\u95ee\u7f51\u7ad9\", \"https://example.com\")\n</code></pre>"},{"location":"user-guide/button-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/button-widget/#q-button-displays-abnormally-in-some-email-clients","title":"Q: Button displays abnormally in some email clients?","text":"<p>A: Ensure using recommended style settings, avoid complex CSS properties: Python<pre><code># \u63a8\u8350\u505a\u6cd5\nbutton.set_background_color(\"#3b82f6\")  # \u5177\u4f53\u989c\u8272\u503c\nbutton.set_width(\"180px\")               # \u660e\u786e\u5bbd\u5ea6\n</code></pre></p>"},{"location":"user-guide/button-widget/#q-how-to-ensure-button-text-is-clear-and-readable","title":"Q: How to ensure button text is clear and readable?","text":"<p>A: Ensure sufficient contrast between text and background: Python<pre><code># \u9ad8\u5bf9\u6bd4\u5ea6\u7ec4\u5408\nbutton.set_background_color(\"#1f2937\").set_text_color(\"#ffffff\")  # \u2705\n# \u907f\u514d\u4f4e\u5bf9\u6bd4\u5ea6\n# button.set_background_color(\"#e5e7eb\").set_text_color(\"#f3f4f6\")  # \u274c\n</code></pre></p>"},{"location":"user-guide/button-widget/#q-can-icons-be-added-to-buttons","title":"Q: Can icons be added to buttons?","text":"<p>A: Yes, use Unicode icon characters: Python<pre><code>button.set_text(\"\ud83d\udce7 \u53d1\u9001\u90ae\u4ef6\")\nbutton.set_text(\"\ud83d\uded2 \u7acb\u5373\u8d2d\u4e70\")\nbutton.set_text(\"\ud83d\udcde \u8054\u7cfb\u6211\u4eec\")\n</code></pre></p>"},{"location":"user-guide/button-widget/#q-how-to-design-mobile-friendly-buttons","title":"Q: How to design mobile-friendly buttons?","text":"<p>A: Use appropriate sizes and full-width design: Python<pre><code>mobile_button = (ButtonWidget()\n    .set_text(\"\u79fb\u52a8\u7aef\u6309\u94ae\")\n    .set_width(\"100%\")          # \u5168\u5bbd\u9002\u914d\n    .set_align(\"center\"))       # \u5c45\u4e2d\u5bf9\u9f50\n</code></pre></p>"},{"location":"user-guide/button-widget/#q-button-link-security-considerations","title":"Q: Button link security considerations?","text":"<p>A: Always use HTTPS links to ensure security: Python<pre><code>button.set_href(\"https://example.com\")  # \u2705 \u5b89\u5168\n# button.set_href(\"http://example.com\")   # \u274c \u4e0d\u5b89\u5168\n</code></pre></p>"},{"location":"user-guide/button-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>TextWidget - For explanatory text around buttons</li> <li>ColumnWidget - For multi-button layout management</li> <li>CardWidget - Card container that can contain buttons</li> <li>AlertWidget - Alert information that can be combined with buttons</li> </ul>"},{"location":"user-guide/card-widget/","title":"CardWidget","text":"<p>CardWidget is a versatile card container component used to display structured content information. It supports combined display of titles, content, icons, and metadata, making it ideal for building information panels, product showcases, and content summaries.</p>"},{"location":"user-guide/card-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview5. \u5361\u7247\u7ec4\u4ef6\u5c55\u793a","text":"\u5361\u7247\u7ec4\u4ef6\u9884\u89c8 \u5361\u7247\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:24:49  \u2139\ufe0f \u9879\u76ee\u72b6\u6001                  \u5f53\u524d\u9879\u76ee\u8fdb\u5c55\u826f\u597d\uff0c\u9884\u8ba1\u4e0b\u5468\u5b8c\u6210\u4e3b\u8981\u529f\u80fd\u5f00\u53d1\u3002 \u8d1f\u8d23\u4eba: \u5f00\u53d1\u56e2\u961f                          \u622a\u6b62\u65e5\u671f: 2024-07-20                           \u2139\ufe0f \u7cfb\u7edf\u76d1\u63a7                  \u670d\u52a1\u5668\u8fd0\u884c\u7a33\u5b9a\uff0cCPU\u4f7f\u7528\u738765%\uff0c\u5185\u5b58\u4f7f\u7528\u738772%\u3002 \u76d1\u63a7\u65f6\u95f4: 2024-07-11 23:15                          \u72b6\u6001: \u6b63\u5e38                          <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/card-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udccb Content Display: Supports combined display of titles, content, and icons</li> <li>\ud83c\udff7\ufe0f Metadata Management: Supports key-value pair metadata information display</li> <li>\ud83c\udfa8 Style Customization: Optional card shadows, border radius, and padding adjustments</li> <li>\ud83d\udcf1 Status Indication: Supports visual feedback and status display for different states</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/card-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/card-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CardWidget\nfrom email_widget.core.enums import StatusType, IconType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u5361\u7247\u7ec4\u4ef6\u793a\u4f8b\")\n\n# \u521b\u5efa\u57fa\u7840\u5361\u7247\ncard = CardWidget()\ncard.set_title(\"\u4ea7\u54c1\u4ecb\u7ecd\")\ncard.set_content(\"\u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684UI\u7ec4\u4ef6\u3002\")\ncard.set_icon(IconType.INFO)\n\nemail.add_widget(card)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\"\u5feb\u6377\u5361\u7247\", \"\u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\u521b\u5efa\u7684\u5361\u7247\u7ec4\u4ef6\")\n\n# \u5bfc\u51faHTML\nemail.export_html(\"card_demo.html\")\n</code></pre>"},{"location":"user-guide/card-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u521b\u5efa\u5e26\u5143\u6570\u636e\u7684\u8be6\u7ec6\u5361\u7247\nproduct_card = CardWidget()\nproduct_card.set_title(\"EmailWidget Pro\")\nproduct_card.set_content(\"\u4e13\u4e1a\u7684Python\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684UI\u7ec4\u4ef6\u548c\u5f3a\u5927\u7684\u90ae\u4ef6\u6e32\u67d3\u80fd\u529b\u3002\")\nproduct_card.set_icon(IconType.SUCCESS)\nproduct_card.set_status(StatusType.SUCCESS)\n\n# \u6dfb\u52a0\u5143\u6570\u636e\u4fe1\u606f\nproduct_card.add_metadata(\"\u7248\u672c\", \"v2.1.0\")\nproduct_card.add_metadata(\"\u8bb8\u53ef\u8bc1\", \"MIT\")\nproduct_card.add_metadata(\"\u652f\u6301Python\", \"3.8+\")\nproduct_card.add_metadata(\"\u6700\u540e\u66f4\u65b0\", \"2024-01-15\")\n\nemail.add_widget(product_card)\n\n# \u6279\u91cf\u8bbe\u7f6e\u5143\u6570\u636e\nmetadata = {\n    \"\u4f5c\u8005\": \"Python\u5f00\u53d1\u56e2\u961f\",\n    \"\u5927\u5c0f\": \"2.5MB\",\n    \"\u4e0b\u8f7d\u91cf\": \"10K+\"\n}\nproduct_card.set_metadata(metadata)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: CardWidget API</p>"},{"location":"user-guide/card-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/card-widget/#status-types-and-colors","title":"Status Types and Colors","text":"<ul> <li>SUCCESS: Green (#107c10) - Success status, normal operation, completed status</li> <li>WARNING: Orange (#ff8c00) - Warning status, needs attention, pending</li> <li>ERROR: Red (#d13438) - Error status, failed status, exception situation</li> <li>INFO: Blue (#0078d4) - Information status, general information, tips</li> <li>PRIMARY: Blue (#0078d4) - Primary content, important information, core features</li> </ul>"},{"location":"user-guide/card-widget/#icon-usage-recommendations","title":"Icon Usage Recommendations","text":"<ul> <li>IconType.INFO: \ud83d\udcc4 For information display, document descriptions</li> <li>IconType.SUCCESS: \u2705 For success status, completed tasks</li> <li>IconType.WARNING: \u26a0\ufe0f For warning information, precautions</li> <li>IconType.ERROR: \u274c For error information, failure status</li> <li>Custom Icons: \ud83c\udfaf \ud83d\udcca \ud83d\ude80 etc., choose appropriate icons based on content</li> </ul>"},{"location":"user-guide/card-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/card-widget/#1-product-showcase-card","title":"1. Product Showcase Card \ud83c\udfaf EmailWidget Pro                  \u26a1 \u6838\u5fc3\u529f\u80fd","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CardWidget\nfrom email_widget.core.enums import StatusType, IconType\n\n# \u521b\u5efa\u4ea7\u54c1\u5c55\u793a\u90ae\u4ef6\nemail = Email(\"\u4ea7\u54c1\u5c55\u793a\")\n\n# \u4e3b\u8981\u4ea7\u54c1\u5361\u7247\nproduct_card = CardWidget()\nproduct_card.set_title(\"EmailWidget Pro\")\nproduct_card.set_content(\"\u4e13\u4e1a\u7684Python\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684UI\u7ec4\u4ef6\u548c\u5f3a\u5927\u7684\u90ae\u4ef6\u6e32\u67d3\u80fd\u529b\u3002\u652f\u6301\u591a\u79cd\u7ec4\u4ef6\u7c7b\u578b\uff0c\u5b8c\u7f8e\u9002\u914d\u5404\u79cd\u90ae\u4ef6\u5ba2\u6237\u7aef\u3002\")\nproduct_card.set_icon(\"\ud83c\udfaf\")\nproduct_card.set_status(StatusType.SUCCESS)\n\n# \u6dfb\u52a0\u4ea7\u54c1\u4fe1\u606f\nproduct_card.add_metadata(\"\u7248\u672c\", \"v2.1.0\")\nproduct_card.add_metadata(\"\u8bb8\u53ef\u8bc1\", \"MIT\")\nproduct_card.add_metadata(\"\u652f\u6301Python\", \"3.8+\")\nproduct_card.add_metadata(\"\u6700\u540e\u66f4\u65b0\", \"2024-01-15\")\n\nemail.add_widget(product_card)\n\n# \u529f\u80fd\u7279\u6027\u5361\u7247\nfeature_card = CardWidget()\nfeature_card.set_title(\"\u6838\u5fc3\u529f\u80fd\")\nfeature_card.set_content(\"\u63d0\u4f9b15+\u4e2a\u7cbe\u7f8e\u7ec4\u4ef6\uff0c\u652f\u6301\u8868\u683c\u3001\u56fe\u8868\u3001\u8fdb\u5ea6\u6761\u3001\u65f6\u95f4\u7ebf\u7b49\u591a\u79cd\u5c55\u793a\u65b9\u5f0f\uff0c\u6ee1\u8db3\u5404\u79cd\u90ae\u4ef6\u573a\u666f\u9700\u6c42\u3002\")\nfeature_card.set_icon(\"\u26a1\")\n\nemail.add_widget(feature_card)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"product_showcase.html\")\n</code></pre> \u4ea7\u54c1\u5c55\u793a \u4ea7\u54c1\u5c55\u793a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:21:21 \u4e13\u4e1a\u7684Python\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684UI\u7ec4\u4ef6\u548c\u5f3a\u5927\u7684\u90ae\u4ef6\u6e32\u67d3\u80fd\u529b\u3002\u652f\u6301\u591a\u79cd\u7ec4\u4ef6\u7c7b\u578b\uff0c\u5b8c\u7f8e\u9002\u914d\u5404\u79cd\u90ae\u4ef6\u5ba2\u6237\u7aef\u3002 \u7248\u672c: v2.1.0                          \u8bb8\u53ef\u8bc1: MIT                          \u652f\u6301Python: 3.8+                          \u6700\u540e\u66f4\u65b0: 2024-01-15                          \u63d0\u4f9b15+\u4e2a\u7cbe\u7f8e\u7ec4\u4ef6\uff0c\u652f\u6301\u8868\u683c\u3001\u56fe\u8868\u3001\u8fdb\u5ea6\u6761\u3001\u65f6\u95f4\u7ebf\u7b49\u591a\u79cd\u5c55\u793a\u65b9\u5f0f\uff0c\u6ee1\u8db3\u5404\u79cd\u90ae\u4ef6\u573a\u666f\u9700\u6c42\u3002 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/card-widget/#2-user-information-panel","title":"2. User Information Panel \ud83d\udc64 \u7528\u6237\u6863\u6848                  \ud83d\udee0\ufe0f \u6280\u80fd\u4e13\u957f","text":"Python<pre><code># \u521b\u5efa\u7528\u6237\u4fe1\u606f\u9762\u677f\u90ae\u4ef6\nemail = Email(\"\u7528\u6237\u4fe1\u606f\u9762\u677f\")\n\n# \u7528\u6237\u57fa\u672c\u4fe1\u606f\u5361\u7247\nuser_card = CardWidget()\nuser_card.set_title(\"\u7528\u6237\u6863\u6848\")\nuser_card.set_content(\"\u9ad8\u7ea7\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0c\u4e13\u6ce8\u4e8ePython\u540e\u7aef\u5f00\u53d1\u548c\u6570\u636e\u5206\u6790\u3002\u62e5\u67095\u5e74\u4ee5\u4e0a\u7684\u9879\u76ee\u7ecf\u9a8c\uff0c\u719f\u6089\u591a\u79cd\u5f00\u53d1\u6846\u67b6\u548c\u5de5\u5177\u3002\")\nuser_card.set_icon(\"\ud83d\udc64\")\nuser_card.set_status(StatusType.SUCCESS)\n\n# \u6dfb\u52a0\u7528\u6237\u8be6\u7ec6\u4fe1\u606f\nuser_card.add_metadata(\"\u59d3\u540d\", \"\u674e\u5f00\u53d1\")\nuser_card.add_metadata(\"\u804c\u4f4d\", \"\u9ad8\u7ea7\u5de5\u7a0b\u5e08\")\nuser_card.add_metadata(\"\u90e8\u95e8\", \"\u6280\u672f\u90e8\")\nuser_card.add_metadata(\"\u5165\u804c\u65f6\u95f4\", \"2019-03-15\")\nuser_card.add_metadata(\"\u90ae\u7bb1\", \"li.dev@example.com\")\n\nemail.add_widget(user_card)\n\n# \u6280\u80fd\u5c55\u793a\u5361\u7247\nskill_card = CardWidget()\nskill_card.set_title(\"\u6280\u80fd\u4e13\u957f\")\nskill_card.set_content(\"\u7cbe\u901aPython\u3001Django\u3001FastAPI\u7b49\u540e\u7aef\u6280\u672f\u6808\uff0c\u5177\u5907\u4e30\u5bcc\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\u548cAPI\u5f00\u53d1\u7ecf\u9a8c\u3002\")\nskill_card.set_icon(\"\ud83d\udee0\ufe0f\")\n\nskill_card.add_metadata(\"\u4e3b\u8981\u6280\u80fd\", \"Python, Django, FastAPI\")\nskill_card.add_metadata(\"\u6570\u636e\u5e93\", \"MySQL, PostgreSQL, Redis\")\nskill_card.add_metadata(\"\u9879\u76ee\u7ecf\u9a8c\", \"5\u5e74+\")\n\nemail.add_widget(skill_card)\n\nemail.export_html(\"user_profile.html\")\n</code></pre> \u7528\u6237\u4fe1\u606f\u9762\u677f \u7528\u6237\u4fe1\u606f\u9762\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:21:21 \u9ad8\u7ea7\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0c\u4e13\u6ce8\u4e8ePython\u540e\u7aef\u5f00\u53d1\u548c\u6570\u636e\u5206\u6790\u3002\u62e5\u67095\u5e74\u4ee5\u4e0a\u7684\u9879\u76ee\u7ecf\u9a8c\uff0c\u719f\u6089\u591a\u79cd\u5f00\u53d1\u6846\u67b6\u548c\u5de5\u5177\u3002 \u59d3\u540d: \u674e\u5f00\u53d1                          \u804c\u4f4d: \u9ad8\u7ea7\u5de5\u7a0b\u5e08                          \u90e8\u95e8: \u6280\u672f\u90e8                          \u5165\u804c\u65f6\u95f4: 2019-03-15                          \u90ae\u7bb1: li.dev@example.com                          \u7cbe\u901aPython\u3001Django\u3001FastAPI\u7b49\u540e\u7aef\u6280\u672f\u6808\uff0c\u5177\u5907\u4e30\u5bcc\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\u548cAPI\u5f00\u53d1\u7ecf\u9a8c\u3002 \u4e3b\u8981\u6280\u80fd: Python, Django, FastAPI                          \u6570\u636e\u5e93: MySQL, PostgreSQL, Redis                          \u9879\u76ee\u7ecf\u9a8c: 5\u5e74+                          <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/card-widget/#3-project-status-dashboard","title":"3. Project Status Dashboard \ud83d\udcca \u9879\u76ee\u8fdb\u5c55                  \ud83d\udc65 \u56e2\u961f\u72b6\u6001","text":"Python<pre><code># \u521b\u5efa\u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f\u90ae\u4ef6\nemail = Email(\"\u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f\")\n\n# \u9879\u76ee\u8fdb\u5c55\u5361\u7247\nproject_card = CardWidget()\nproject_card.set_title(\"\u9879\u76ee\u8fdb\u5c55\")\nproject_card.set_content(\"EmailWidget\u9879\u76ee\u5f00\u53d1\u8fdb\u5c55\u987a\u5229\uff0c\u76ee\u524d\u5df2\u5b8c\u6210\u6838\u5fc3\u529f\u80fd\u5f00\u53d1\uff0c\u6b63\u5728\u8fdb\u884c\u6d4b\u8bd5\u548c\u6587\u6863\u7f16\u5199\u9636\u6bb5\u3002\u9884\u8ba1\u672c\u6708\u5e95\u53d1\u5e03\u6b63\u5f0f\u7248\u672c\u3002\")\nproject_card.set_icon(\"\ud83d\udcca\")\nproject_card.set_status(StatusType.SUCCESS)\n\nproject_card.add_metadata(\"\u9879\u76ee\u540d\u79f0\", \"EmailWidget\")\nproject_card.add_metadata(\"\u5f53\u524d\u7248\u672c\", \"v2.1.0-beta\")\nproject_card.add_metadata(\"\u5b8c\u6210\u8fdb\u5ea6\", \"85%\")\nproject_card.add_metadata(\"\u9884\u8ba1\u53d1\u5e03\", \"2024-01-30\")\n\nemail.add_widget(project_card)\n\n# \u56e2\u961f\u72b6\u6001\u5361\u7247\nteam_card = CardWidget()\nteam_card.set_title(\"\u56e2\u961f\u72b6\u6001\")\nteam_card.set_content(\"\u5f00\u53d1\u56e2\u961f\u8fd0\u8f6c\u6b63\u5e38\uff0c\u6240\u6709\u6210\u5458\u79ef\u6781\u53c2\u4e0e\u9879\u76ee\u5f00\u53d1\u3002\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u6700\u540e\u7684\u6d4b\u8bd5\u548c\u4f18\u5316\u5de5\u4f5c\u3002\")\nteam_card.set_icon(\"\ud83d\udc65\")\n\nteam_card.add_metadata(\"\u56e2\u961f\u89c4\u6a21\", \"6\u4eba\")\nteam_card.add_metadata(\"\u5f00\u53d1\u4eba\u5458\", \"4\u4eba\")\nteam_card.add_metadata(\"\u6d4b\u8bd5\u4eba\u5458\", \"2\u4eba\")\n\nemail.add_widget(team_card)\n\nemail.export_html(\"project_dashboard.html\")\n</code></pre> \u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f \u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:21:21 EmailWidget\u9879\u76ee\u5f00\u53d1\u8fdb\u5c55\u987a\u5229\uff0c\u76ee\u524d\u5df2\u5b8c\u6210\u6838\u5fc3\u529f\u80fd\u5f00\u53d1\uff0c\u6b63\u5728\u8fdb\u884c\u6d4b\u8bd5\u548c\u6587\u6863\u7f16\u5199\u9636\u6bb5\u3002\u9884\u8ba1\u672c\u6708\u5e95\u53d1\u5e03\u6b63\u5f0f\u7248\u672c\u3002 \u9879\u76ee\u540d\u79f0: EmailWidget                          \u5f53\u524d\u7248\u672c: v2.1.0-beta                          \u5b8c\u6210\u8fdb\u5ea6: 85%                          \u9884\u8ba1\u53d1\u5e03: 2024-01-30                          \u5f00\u53d1\u56e2\u961f\u8fd0\u8f6c\u6b63\u5e38\uff0c\u6240\u6709\u6210\u5458\u79ef\u6781\u53c2\u4e0e\u9879\u76ee\u5f00\u53d1\u3002\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u6700\u540e\u7684\u6d4b\u8bd5\u548c\u4f18\u5316\u5de5\u4f5c\u3002 \u56e2\u961f\u89c4\u6a21: 6\u4eba                          \u5f00\u53d1\u4eba\u5458: 4\u4eba                          \u6d4b\u8bd5\u4eba\u5458: 2\u4eba                          <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/card-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_card</code> shortcut method:</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\"\u5361\u7247\u6807\u9898\", \"\u5361\u7247\u5185\u5bb9\")\n\n# \u5e26\u56fe\u6807\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\"\u4ea7\u54c1\u4ecb\u7ecd\", \"\u8fd9\u662f\u4e00\u4e2a\u4f18\u79c0\u7684\u4ea7\u54c1\", icon=\"\ud83c\udfaf\")\n\n# \u5e26\u5143\u6570\u636e\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\n    title=\"\u7528\u6237\u4fe1\u606f\",\n    content=\"\u7528\u6237\u8be6\u7ec6\u4fe1\u606f\u5c55\u793a\",\n    metadata={\n        \"\u59d3\u540d\": \"\u5f20\u4e09\",\n        \"\u90e8\u95e8\": \"\u6280\u672f\u90e8\",\n        \"\u804c\u4f4d\": \"\u5de5\u7a0b\u5e08\"\n    }\n)\n\n# \u5e26\u72b6\u6001\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\n    title=\"\u7cfb\u7edf\u72b6\u6001\",\n    content=\"\u7cfb\u7edf\u8fd0\u884c\u6b63\u5e38\",\n    status=StatusType.SUCCESS,\n    icon=IconType.SUCCESS\n)\n</code></pre>"},{"location":"user-guide/card-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/card-widget/#q-how-to-handle-overly-long-card-content","title":"Q: How to handle overly long card content?","text":"<p>A: CardWidget automatically handles line breaks and layout for long content. It's recommended to split overly long content into multiple cards or use metadata to organize information.</p>"},{"location":"user-guide/card-widget/#q-how-to-customize-card-styles","title":"Q: How to customize card styles?","text":"<p>A: You can change card theme colors by setting different StatusType values. For more customization, use CSS override methods.</p>"},{"location":"user-guide/card-widget/#q-what-to-do-when-metadata-information-is-not-fully-displayed","title":"Q: What to do when metadata information is not fully displayed?","text":"<p>A: Check if metadata keys and values are too long. Recommend using short key names and appropriate value lengths. If there's a lot of information, display it across multiple cards.</p>"},{"location":"user-guide/card-widget/#q-card-displays-abnormally-in-some-email-clients","title":"Q: Card displays abnormally in some email clients?","text":"<p>A: CardWidget uses email client-compatible layout methods. If issues occur, try simplifying card content or using alternative widgets.</p>"},{"location":"user-guide/card-widget/#q-how-to-manage-multiple-cards-in-batch","title":"Q: How to manage multiple cards in batch?","text":"<p>A: Organize card information into lists, then use loops to create in batch: Python<pre><code>cards_data = [\n    {\"title\": \"\u5361\u72471\", \"content\": \"\u5185\u5bb91\"},\n    {\"title\": \"\u5361\u72472\", \"content\": \"\u5185\u5bb92\"}\n]\nfor data in cards_data:\n    email.add_card(data[\"title\"], data[\"content\"])\n</code></pre></p>"},{"location":"user-guide/card-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>StatusWidget - For displaying simple status information</li> <li>AlertWidget - Can add alert information in cards</li> <li>TextWidget - For detailed text content in cards</li> <li>SeparatorWidget - For separating different card groups</li> </ul>"},{"location":"user-guide/chart-widget/","title":"ChartWidget","text":"<p>ChartWidget is specifically designed for displaying various charts and data visualization content in emails. It not only supports displaying charts in image formats but also provides rich configuration options to enhance chart presentation.</p>"},{"location":"user-guide/chart-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview1. Chart Component Display","text":"Chart Component Preview Chart Component Preview Generated: July 12, 2025 00:02:23 2024 Annual Sales Performance <p>Quarterly sales comparison showing steady growth trend</p> <p>Generated by EmailWidget</p>"},{"location":"user-guide/chart-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcca Multiple Chart Types: Supports line charts, bar charts, pie charts, and various other chart types</li> <li>\ud83d\uddbc\ufe0f Image Display: Supports network images, local files, and Base64 encoded images</li> <li>\ud83d\udcdd Detailed Annotations: Supports titles, descriptions, and data summaries</li> <li>\ud83d\udcf1 Responsive: Automatically adapts to different device displays</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/chart-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/chart-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChartWidget\n\n# \u521b\u5efa\u57fa\u672c\u56fe\u8868\nemail = Email(\"\u6570\u636e\u62a5\u544a\")\n\nchart = ChartWidget()\nchart.set_image_url(\"https://example.com/sales_chart.png\")\nchart.set_title(\"\u6708\u5ea6\u9500\u552e\u8d8b\u52bf\")\nchart.set_description(\"\u663e\u793a\u6700\u8fd16\u4e2a\u6708\u7684\u9500\u552e\u6570\u636e\u53d8\u5316\")\n\nemail.add_widget(chart)\n</code></pre>"},{"location":"user-guide/chart-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u5e26\u6570\u636e\u6458\u8981\u7684\u8be6\u7ec6\u56fe\u8868\nperformance_chart = ChartWidget()\nperformance_chart.set_image_url(\"performance_chart.png\")\nperformance_chart.set_title(\"\u7cfb\u7edf\u6027\u80fd\u76d1\u63a7\")\nperformance_chart.set_description(\"\u5c55\u793a\u7cfb\u7edf\u5173\u952e\u6027\u80fd\u6307\u6807\u7684\u5b9e\u65f6\u72b6\u6001\")\nperformance_chart.set_data_summary(\"\u5e73\u5747\u54cd\u5e94\u65f6\u95f4: 245ms | \u5cf0\u503cQPS: 12,500 | \u9519\u8bef\u7387: 0.02%\")\nperformance_chart.set_alt_text(\"\u7cfb\u7edf\u6027\u80fd\u76d1\u63a7\u56fe\u8868\")\nperformance_chart.set_max_width(\"800px\")\n\nemail.add_widget(performance_chart)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: ChartWidget API</p>"},{"location":"user-guide/chart-widget/#chart-type-examples","title":"\ud83d\udcca Chart Type Examples","text":""},{"location":"user-guide/chart-widget/#trend-line-chart","title":"Trend Line Chart","text":"Python<pre><code>trend_chart = ChartWidget()\ntrend_chart.set_image_url(\"trend_line.png\")\ntrend_chart.set_title(\"\u7528\u6237\u589e\u957f\u8d8b\u52bf\")\ntrend_chart.set_description(\"\u663e\u793a\u8fc7\u53bb12\u4e2a\u6708\u7684\u7528\u6237\u6ce8\u518c\u548c\u6d3b\u8dc3\u7528\u6237\u6570\u91cf\u53d8\u5316\")\ntrend_chart.set_data_summary(\"\u65b0\u589e\u7528\u6237: +15% | \u6d3b\u8dc3\u7528\u6237: +8% | \u7559\u5b58\u7387: 76%\")\n</code></pre>"},{"location":"user-guide/chart-widget/#bar-chart","title":"Bar Chart","text":"Python<pre><code>bar_chart = ChartWidget()\nbar_chart.set_image_url(\"sales_by_region.png\")\nbar_chart.set_title(\"\u5404\u5730\u533a\u9500\u552e\u5bf9\u6bd4\")\nbar_chart.set_description(\"\u5c55\u793a\u4e0d\u540c\u5730\u533a\u7684\u9500\u552e\u4e1a\u7ee9\u548c\u5e02\u573a\u5360\u6bd4\")\nbar_chart.set_data_summary(\"\u534e\u4e1c: 35% | \u534e\u5357: 28% | \u534e\u5317: 22% | \u5176\u4ed6: 15%\")\n</code></pre>"},{"location":"user-guide/chart-widget/#pie-chart","title":"Pie Chart","text":"Python<pre><code>pie_chart = ChartWidget()\npie_chart.set_image_url(\"market_share.png\")\npie_chart.set_title(\"\u5e02\u573a\u4efd\u989d\u5206\u5e03\")\npie_chart.set_description(\"\u5404\u4ea7\u54c1\u7ebf\u5728\u603b\u8425\u6536\u4e2d\u7684\u5360\u6bd4\u60c5\u51b5\")\npie_chart.set_data_summary(\"\u4ea7\u54c1A: 45% | \u4ea7\u54c1B: 30% | \u4ea7\u54c1C: 15% | \u5176\u4ed6: 10%\")\n</code></pre>"},{"location":"user-guide/chart-widget/#integration-with-data-analysis-libraries","title":"\ud83d\udd17 Integration with Data Analysis Libraries","text":""},{"location":"user-guide/chart-widget/#matplotlib-integration","title":"Matplotlib Integration","text":"Python<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nfrom email_widget import Email\nfrom email_widget.widgets import ChartWidget\n\n# \u751f\u6210\u6570\u636e\u5e76\u521b\u5efa\u56fe\u8868\nmonths = ['1\u6708', '2\u6708', '3\u6708', '4\u6708', '5\u6708', '6\u6708']\nsales = [120, 135, 148, 162, 178, 195]\n\nplt.figure(figsize=(10, 6))\nplt.plot(months, sales, marker='o', linewidth=2, markersize=8)\nplt.title('\u6708\u5ea6\u9500\u552e\u8d8b\u52bf', fontsize=16, fontweight='bold')\nplt.xlabel('\u6708\u4efd')\nplt.ylabel('\u9500\u552e\u989d(\u4e07\u5143)')\nplt.grid(True, alpha=0.3)\nplt.tight_layout()\n\n# \u4fdd\u5b58\u56fe\u8868\nchart_path = 'monthly_sales.png'\nplt.savefig(chart_path, dpi=300, bbox_inches='tight')\nplt.close()\n\n# \u5728\u90ae\u4ef6\u4e2d\u5c55\u793a\nemail = Email(\"\u9500\u552e\u6570\u636e\u62a5\u544a\")\nchart_widget = ChartWidget()\nchart_widget.set_image_url(chart_path)\nchart_widget.set_title(\"\u6708\u5ea6\u9500\u552e\u8d8b\u52bf\u5206\u6790\")\nchart_widget.set_description(\"\u5c55\u793a2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u4e1a\u7ee9\u7684\u6301\u7eed\u589e\u957f\u6001\u52bf\")\nchart_widget.set_data_summary(f\"\u603b\u9500\u552e\u989d: {sum(sales)}\u4e07\u5143 | \u5e73\u5747\u589e\u957f\u7387: {((sales[-1]/sales[0])-1)*100:.1f}%\")\n\nemail.add_widget(chart_widget)\n</code></pre>"},{"location":"user-guide/chart-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/chart-widget/#1-choosing-appropriate-chart-types","title":"1. Choosing Appropriate Chart Types","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChartWidget\n\nemail = Email(\"\u6570\u636e\u53ef\u89c6\u5316\u6700\u4f73\u5b9e\u8df5\")\n\n# \u8d8b\u52bf\u6570\u636e -&gt; \u7ebf\u56fe\ntrend_chart = ChartWidget()\ntrend_chart.set_image_url(\"time_series.png\")\ntrend_chart.set_title(\"\u65f6\u95f4\u5e8f\u5217\u8d8b\u52bf\")\ntrend_chart.set_description(\"\u9002\u5408\u5c55\u793a\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6570\u636e\")\n\n# \u5206\u7c7b\u5bf9\u6bd4 -&gt; \u67f1\u72b6\u56fe  \ncomparison_chart = ChartWidget()\ncomparison_chart.set_image_url(\"category_comparison.png\")\ncomparison_chart.set_title(\"\u5206\u7c7b\u6570\u636e\u5bf9\u6bd4\")\ncomparison_chart.set_description(\"\u9002\u5408\u5c55\u793a\u4e0d\u540c\u7c7b\u522b\u4e4b\u95f4\u7684\u6bd4\u8f83\")\n\n# \u5360\u6bd4\u5173\u7cfb -&gt; \u997c\u56fe\nproportion_chart = ChartWidget()\nproportion_chart.set_image_url(\"proportion_chart.png\")\nproportion_chart.set_title(\"\u6bd4\u4f8b\u5206\u5e03\")\nproportion_chart.set_description(\"\u9002\u5408\u5c55\u793a\u90e8\u5206\u4e0e\u6574\u4f53\u7684\u5173\u7cfb\")\n\nemail.add_widgets([trend_chart, comparison_chart, proportion_chart])\n</code></pre> Chart Type Selection Guide Chart Type Selection Guide Generated: July 12, 2025 15:25:20 Time Series Trend Best for showing data changes over time - Website traffic over 6 months 25K 20K 15K 10K 5K 0 Jan Feb Mar Apr May Jun Category Comparison Best for comparing different categories - Regional sales performance 150M 120M 90M 60M 30M 0 120M East 85M South 150M North 95M West Proportion Distribution Best for showing part-to-whole relationships - Product sales breakdown Product A (45%) Product B (30%) Product C (15%) Others (10%) <p>Generated by EmailWidget</p>"},{"location":"user-guide/chart-widget/#2-business-data-dashboard","title":"2. Business Data Dashboard","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChartWidget, TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u4eea\u8868\u677f\u90ae\u4ef6\ndashboard = Email(\"\u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f\")\n\n# \u6dfb\u52a0\u6807\u9898\ntitle = TextWidget()\ntitle.set_content(\"\u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f\")\ntitle.set_type(TextType.TITLE_LARGE)\ntitle.set_align(\"center\")\ndashboard.add_widget(title)\n\n# \u521b\u5efa\u591a\u4e2a\u56fe\u8868\ncharts_data = [\n    {\n        'file': 'revenue_trend.png',\n        'title': '\u8425\u6536\u8d8b\u52bf',\n        'desc': '\u6708\u5ea6\u8425\u6536\u589e\u957f\u60c5\u51b5',\n        'summary': '\u540c\u6bd4\u589e\u957f: +23%'\n    },\n    {\n        'file': 'user_analytics.png', \n        'title': '\u7528\u6237\u5206\u6790',\n        'desc': '\u7528\u6237\u6d3b\u8dc3\u5ea6\u548c\u7559\u5b58\u5206\u6790',\n        'summary': '\u6708\u6d3b\u7528\u6237: 2.4M'\n    },\n    {\n        'file': 'product_performance.png',\n        'title': '\u4ea7\u54c1\u8868\u73b0', \n        'desc': '\u5404\u4ea7\u54c1\u7ebf\u4e1a\u7ee9\u5bf9\u6bd4',\n        'summary': '\u6838\u5fc3\u4ea7\u54c1\u5360\u6bd4: 68%'\n    }\n]\n\nfor chart_info in charts_data:\n    chart = ChartWidget()\n    chart.set_image_url(chart_info['file'])\n    chart.set_title(chart_info['title'])\n    chart.set_description(chart_info['desc'])\n    chart.set_data_summary(chart_info['summary'])\n    dashboard.add_widget(chart)\n</code></pre> Business Data Dashboard Business Data Dashboard Generated: July 12, 2025 15:07:30 \ud83d\udcca Business Data Dashboard \ud83d\udcc8Revenue Trends                  Monthly revenue growth - Shows revenue trend changes over the last 6 months 5M 4M 3M 2M 1M 0 Jan Feb Mar Apr May Jun \ud83d\udcca YoY Growth: +23% | MoM Growth: +8.5% | Annual Target: 67% \ud83d\udc65User Analytics                  User activity and retention analysis - Cross-platform user data comparison 3M 2.5M 2M 1.5M 1M 0.5M 0 2.8M Mobile 2.2M Desktop 3.2M Mini-app 2.5M H5 Page \ud83d\udc64 MAU: 2.4M | New Users: +45K | Retention Rate: 78.5% \ud83d\udcf1Product Performance                  Product line performance comparison - Product performance by revenue share Core Products 68% Premium Products 18% Basic Products 10% Other Products 4% \ud83c\udfaf Core Products: 68% | Premium Growth: +25% | Total Product Lines: 12 <p>Generated by EmailWidget</p>"},{"location":"user-guide/chart-widget/#3-complete-business-report","title":"3. Complete Business Report","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChartWidget, TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u4e1a\u52a1\u62a5\u544a\nreport = Email(\"Q4\u4e1a\u52a1\u5206\u6790\u62a5\u544a\")\n\n# \u62a5\u544a\u6807\u9898\nreport_title = TextWidget()\nreport_title.set_content(\"\u7b2c\u56db\u5b63\u5ea6\u4e1a\u52a1\u5206\u6790\u62a5\u544a\")\nreport_title.set_type(TextType.TITLE_LARGE)\nreport_title.set_align(\"center\")\nreport_title.set_color(\"#0078d4\")\nreport.add_widget(report_title)\n\n# \u8425\u6536\u5206\u6790\u56fe\u8868\nrevenue_chart = ChartWidget()\nrevenue_chart.set_image_url(\"q4_revenue_analysis.png\")\nrevenue_chart.set_title(\"\u8425\u6536\u5206\u6790\")\nrevenue_chart.set_description(\"\u7b2c\u56db\u5b63\u5ea6\u5404\u6708\u8425\u6536\u60c5\u51b5\u53ca\u4e0e\u53bb\u5e74\u540c\u671f\u5bf9\u6bd4\")\nrevenue_chart.set_data_summary(\"Q4\u603b\u8425\u6536: \u00a518.5M | \u540c\u6bd4\u589e\u957f: +15.2% | \u73af\u6bd4\u589e\u957f: +8.7%\")\n\n# \u7528\u6237\u589e\u957f\u56fe\u8868  \ngrowth_chart = ChartWidget()\ngrowth_chart.set_image_url(\"user_growth_funnel.png\")\ngrowth_chart.set_title(\"\u7528\u6237\u589e\u957f\u6f0f\u6597\")\ngrowth_chart.set_description(\"\u4ece\u8bbf\u95ee\u5230\u8f6c\u5316\u7684\u7528\u6237\u6d41\u5931\u60c5\u51b5\u5206\u6790\")\ngrowth_chart.set_data_summary(\"\u8bbf\u95ee\u7528\u6237: 2.4M | \u6ce8\u518c\u8f6c\u5316: 12% | \u4ed8\u8d39\u8f6c\u5316: 3.2%\")\n\n# \u4ea7\u54c1\u8868\u73b0\u56fe\u8868\nproduct_chart = ChartWidget()\nproduct_chart.set_image_url(\"product_performance_matrix.png\") \nproduct_chart.set_title(\"\u4ea7\u54c1\u8868\u73b0\u77e9\u9635\")\nproduct_chart.set_description(\"\u5404\u4ea7\u54c1\u7ebf\u7684\u5e02\u573a\u8868\u73b0\u548c\u589e\u957f\u6f5c\u529b\u5206\u6790\")\nproduct_chart.set_data_summary(\"\u660e\u661f\u4ea7\u54c1: 3\u4e2a | \u95ee\u9898\u4ea7\u54c1: 1\u4e2a | \u73b0\u91d1\u725b\u4ea7\u54c1: 2\u4e2a\")\n\n# \u6dfb\u52a0\u5230\u62a5\u544a\nreport.add_widgets([revenue_chart, growth_chart, product_chart])\n</code></pre> Q4 Business Analysis Report Q4 Business Analysis Report Generated: July 12, 2025 15:09:45 Q4 Business Analysis Report Report Period: October 2024 - December 2024 \ud83d\udcb0Revenue Analysis                  Q4 monthly revenue comparison with year-over-year analysis, showing business growth trends and seasonal characteristics 20M 16M 12M 8M 4M 0 Oct Nov Dec Oct(LY) Nov(LY) Dec(LY) 1.2M 1.4M 1.85M 1.0M 1.3M 1.7M \ud83d\udcb9 Q4 Total Revenue: $18.5M | YoY Growth: +15.2% | QoQ Growth: +8.7% | Dec Record High \ud83d\udd04User Growth Funnel                  User conversion analysis from visit to purchase, identifying key bottlenecks and optimization opportunities Website Visitors - 2.4M Registered Users - 288K Active Users - 180K Paying Users - 76.8K Visit\u2192Register 12.0% Register\u2192Active 62.5% Active\u2192Paying 42.7% Total Conversion 3.2% \ud83c\udfaf Visitors: 2.4M | Registration Rate: 12% | Payment Rate: 3.2% | User LTV: $67 \ud83d\udcc8Product Performance Matrix                  Product line market performance and growth potential analysis using BCG matrix based on market share and growth rate Star Products Question Mark Dogs Cash Cow High Growth Low Growth Low Share High Share                              Core SaaS38%                                                       Mobile18%                                                       Enterprise30%                                                       API Service8%                                                       Trial4%                                                       Others2%                          Star Products (3) Cash Cow (2) Question Mark (1) \u2b50 Star Products: 3 | \ud83d\udcb0 Cash Cow: 2 | \u2753 Question Mark: 1 | \ud83d\udc15 Dogs: 0 <p>Generated by EmailWidget | Report by Business Analytics Team</p>"},{"location":"user-guide/chart-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_chart</code> shortcut method:</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_chart(\n    image_url=\"sales_chart.png\",\n    title=\"\u9500\u552e\u56fe\u8868\"\n)\n\n# \u5e26\u8be6\u7ec6\u4fe1\u606f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_chart(\n    image_url=\"performance_chart.png\",\n    title=\"\u6027\u80fd\u76d1\u63a7\",\n    description=\"\u7cfb\u7edf\u5173\u952e\u6307\u6807\u5b9e\u65f6\u76d1\u63a7\",\n    data_summary=\"\u54cd\u5e94\u65f6\u95f4: 245ms | QPS: 12.5K\",\n    max_width=\"800px\"\n)\n</code></pre>"},{"location":"user-guide/chart-widget/#style-and-size-control","title":"\ud83c\udfaf Style and Size Control","text":""},{"location":"user-guide/chart-widget/#image-size-optimization","title":"Image Size Optimization","text":"Python<pre><code># \u8bbe\u7f6e\u6700\u5927\u5bbd\u5ea6\u907f\u514d\u56fe\u7247\u8fc7\u5927\nlarge_chart = ChartWidget()\nlarge_chart.set_image_url(\"wide_chart.png\")\nlarge_chart.set_max_width(\"800px\")\n\n# \u79fb\u52a8\u7aef\u81ea\u9002\u5e94\nresponsive_chart = ChartWidget()\nresponsive_chart.set_image_url(\"responsive_chart.png\")\nresponsive_chart.set_max_width(\"100%\")  # \u81ea\u52a8\u9002\u914d\u5bb9\u5668\u5bbd\u5ea6\n</code></pre>"},{"location":"user-guide/chart-widget/#provide-clear-titles-and-descriptions","title":"Provide Clear Titles and Descriptions","text":"Python<pre><code>chart = ChartWidget()\nchart.set_title(\"Q4\u8425\u6536\u5206\u6790\")  # \u7b80\u6d01\u660e\u786e\u7684\u6807\u9898\nchart.set_description(\"\u5c55\u793a\u7b2c\u56db\u5b63\u5ea6\u6708\u5ea6\u8425\u6536\u53d8\u5316\u53ca\u540c\u6bd4\u589e\u957f\u60c5\u51b5\")  # \u8be6\u7ec6\u8bf4\u660e\nchart.set_data_summary(\"\u603b\u8425\u6536: \u00a52.4M | \u589e\u957f\u7387: +15%\")  # \u5173\u952e\u6570\u636e\nchart.set_alt_text(\"Q4\u8425\u6536\u5206\u6790\u67f1\u72b6\u56fe\")  # \u65e0\u969c\u788d\u8bbf\u95ee\n</code></pre>"},{"location":"user-guide/chart-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/chart-widget/#q-what-to-do-when-images-dont-display","title":"Q: What to do when images don't display?","text":"<p>A: Check the following: - Confirm image URL is correct - Verify image file exists - Check network connection and access permissions</p>"},{"location":"user-guide/chart-widget/#q-how-to-choose-appropriate-image-formats","title":"Q: How to choose appropriate image formats?","text":"<p>A: Recommend using PNG format for best compatibility: Python<pre><code>chart.set_image_url(\"chart.png\")  # \u2705 \u63a8\u8350\n# chart.set_image_url(\"chart.webp\")  # \u274c \u517c\u5bb9\u6027\u8f83\u5dee\n</code></pre></p>"},{"location":"user-guide/chart-widget/#q-chart-displays-abnormally-on-mobile","title":"Q: Chart displays abnormally on mobile?","text":"<p>A: Set appropriate maximum width: Python<pre><code>chart.set_max_width(\"100%\")  # \u81ea\u52a8\u9002\u914d\nchart.set_max_width(\"600px\")  # \u9650\u5236\u6700\u5927\u5bbd\u5ea6\n</code></pre></p>"},{"location":"user-guide/chart-widget/#q-how-to-add-data-summaries","title":"Q: How to add data summaries?","text":"<p>A: Use the <code>set_data_summary()</code> method: Python<pre><code>chart.set_data_summary(\"\u5173\u952e\u6307\u6807: \u8f6c\u5316\u7387 12% | ROI 3.2x | \u5ba2\u5355\u4ef7 \u00a5890\")\n</code></pre></p>"},{"location":"user-guide/chart-widget/#important-notes","title":"\ud83d\udea8 Important Notes","text":"<ol> <li>Image Format: Recommend PNG format for best compatibility</li> <li>File Size: Control image file size to avoid oversized emails</li> <li>Network Access: Ensure network image URLs are accessible when sending emails</li> <li>Alternative Text: Set meaningful alt_text for all charts</li> <li>Mobile Adaptation: Use percentage widths to ensure proper mobile display</li> </ol>"},{"location":"user-guide/chart-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>ImageWidget - Basic image display widget</li> <li>MetricWidget - Data metrics display widget</li> <li>CardWidget - Card widget that can contain charts</li> <li>TextWidget - Chart titles and descriptions</li> </ul>"},{"location":"user-guide/checklist-widget/","title":"ChecklistWidget","text":"<p>ChecklistWidget is a component for creating task lists, to-do items, or checklists in emails. It supports multiple status displays, progress statistics, and flexible style configurations, helping users clearly present project progress and task completion status.</p>"},{"location":"user-guide/checklist-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview1. \u6e05\u5355\u7ec4\u4ef6\u5c55\u793a","text":"\u6e05\u5355\u7ec4\u4ef6\u9884\u89c8 \u6e05\u5355\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:54:04 \u9879\u76ee\u5f00\u53d1\u6e05\u5355 \u5b8c\u6210\u8fdb\u5ea6 2/5 (40.0%)                      \u2713                  \u5b8c\u6210\u9879\u76ee\u9700\u6c42\u5206\u6790 \u5df2\u5b8c\u6210\u9700\u6c42\u8c03\u7814\u548c\u7528\u6237\u8bbf\u8c08 \u5b8c\u6210                      \u2713                  \u8bbe\u8ba1\u7cfb\u7edf\u67b6\u6784 \u5b8c\u6210\u6574\u4f53\u67b6\u6784\u8bbe\u8ba1\u548c\u6280\u672f\u9009\u578b \u5b8c\u6210                      \u25cb                  \u7f16\u5199\u6838\u5fc3\u4ee3\u7801 \u6b63\u5728\u5f00\u53d1\u6838\u5fc3\u529f\u80fd\u6a21\u5757                      \u25cb                  \u8fdb\u884c\u5355\u5143\u6d4b\u8bd5 \u7f16\u5199\u548c\u6267\u884c\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b                      \u2014                  \u7cfb\u7edf\u96c6\u6210\u6d4b\u8bd5 \u7b49\u5f85\u5f00\u53d1\u5b8c\u6210\u540e\u8fdb\u884c \u8df3\u8fc7                      \u25cb                  \u90e8\u7f72\u4e0a\u7ebf \u751f\u4ea7\u73af\u5883\u90e8\u7f72\u548c\u914d\u7f6e <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/checklist-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcdd Multiple Statuses: Supports completed, incomplete, skipped, and other item statuses</li> <li>\ud83c\udfa8 Status Themes: Theme color configuration based on StatusType, such as success, warning, error, etc.</li> <li>\ud83d\udcca Progress Statistics: Optional progress bar and completion percentage display</li> <li>\ud83d\udd27 Flexible Configuration: Supports compact mode, custom descriptions, status text, etc.</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/checklist-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/checklist-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChecklistWidget\n\n# \u521b\u5efa\u57fa\u7840\u6e05\u5355\nchecklist = ChecklistWidget()\nchecklist.set_title(\"\u5f00\u53d1\u4efb\u52a1\")\nchecklist.add_item(\"\u5b8c\u6210\u9700\u6c42\u5206\u6790\", True)\nchecklist.add_item(\"\u8bbe\u8ba1\u6570\u636e\u5e93\", True)\nchecklist.add_item(\"\u7f16\u5199\u4ee3\u7801\", False)\n\nemail = Email(\"\u9879\u76ee\u8fdb\u5ea6\u62a5\u544a\")\nemail.add_widget(checklist)\n</code></pre>"},{"location":"user-guide/checklist-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u5e26\u8fdb\u5ea6\u7edf\u8ba1\u548c\u72b6\u6001\u7684\u6e05\u5355\nchecklist = ChecklistWidget()\nchecklist.set_title(\"\u9879\u76ee\u91cc\u7a0b\u7891\")\nchecklist.add_item(\"\u9879\u76ee\u542f\u52a8\", True, \"success\", \"\u9879\u76ee\u5df2\u6b63\u5f0f\u542f\u52a8\")\nchecklist.add_item(\"\u9700\u6c42\u786e\u8ba4\", True, \"success\", \"\u6240\u6709\u9700\u6c42\u5df2\u786e\u8ba4\")\nchecklist.add_item(\"\u8bbe\u8ba1\u8bc4\u5ba1\", False, \"warning\", \"\u8bbe\u8ba1\u65b9\u6848\u5f85\u5ba1\u6838\")\nchecklist.add_item(\"\u5f00\u53d1\u5b9e\u65bd\", False, \"pending\", \"\u7b49\u5f85\u5f00\u53d1\u56e2\u961f\")\nchecklist.show_progress_stats(True)\nchecklist.set_compact_mode(True)\n\nemail.add_widget(checklist)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: ChecklistWidget API</p>"},{"location":"user-guide/checklist-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/checklist-widget/#status-types-and-theme-colors","title":"Status Types and Theme Colors","text":"<ul> <li>success: Green (#107c10) - Completed important tasks</li> <li>warning: Orange (#ff8c00) - Items needing attention</li> <li>error: Red (#d13438) - Failed or blocked tasks</li> <li>info: Blue (#0078d4) - Informational or reference items</li> <li>primary: Blue (#0078d4) - Important ongoing tasks</li> </ul>"},{"location":"user-guide/checklist-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/checklist-widget/#1-project-management-checklist","title":"1. Project Management Checklist\u9879\u76ee\u91cc\u7a0b\u7891\u5f53\u524d\u51b2\u523a","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.checklist_widget import ChecklistWidget\n\n# \u521b\u5efa\u9879\u76ee\u7ba1\u7406\u62a5\u544a\u90ae\u4ef6\nemail = Email(\"\u9879\u76ee\u7ba1\u7406\u62a5\u544a\")\n\n# \u4e3b\u8981\u91cc\u7a0b\u7891\nchecklist1 = ChecklistWidget()\nchecklist1.set_title(\"\u9879\u76ee\u91cc\u7a0b\u7891\")\nchecklist1.add_item(\"\u9879\u76ee\u542f\u52a8\", True, \"success\")\nchecklist1.add_item(\"\u9700\u6c42\u5206\u6790\", True, \"success\")\nchecklist1.add_item(\"\u6982\u8981\u8bbe\u8ba1\", True, \"success\")\nchecklist1.add_item(\"\u8be6\u7ec6\u8bbe\u8ba1\", False, \"warning\")\nchecklist1.add_item(\"\u5f00\u53d1\u5b9e\u65bd\", False, \"pending\")\nchecklist1.show_progress_stats(True)\n\nemail.add_widget(checklist1)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"project_management_report.html\")\n</code></pre> \u9879\u76ee\u7ba1\u7406\u62a5\u544a \u9879\u76ee\u7ba1\u7406\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:12:22 \u5b8c\u6210\u8fdb\u5ea6 3/7 (42.9%)                      \u2713                  \u9879\u76ee\u542f\u52a8 \u5b8c\u6210                      \u2713                  \u9700\u6c42\u5206\u6790 \u5b8c\u6210                      \u2713                  \u6982\u8981\u8bbe\u8ba1 \u5b8c\u6210                      !                  \u8be6\u7ec6\u8bbe\u8ba1                      \u25cb                  \u5f00\u53d1\u5b9e\u65bd                      \u25cb                  \u6d4b\u8bd5\u9a8c\u6536                      \u25cb                  \u4e0a\u7ebf\u90e8\u7f72 \u5b8c\u6210\u8fdb\u5ea6 1/3 (33.3%)                      \u2713                  \u7528\u6237\u767b\u5f55\u529f\u80fd \u5df2\u901a\u8fc7\u4ee3\u7801\u5ba1\u67e5 \u5b8c\u6210                      !                  \u6570\u636e\u5bfc\u51fa\u529f\u80fd API\u8bbe\u8ba1\u5f85\u786e\u8ba4                      \u25cf                  \u90ae\u4ef6\u901a\u77e5\u529f\u80fd \u5f00\u53d1\u4e2d                      i                  \u6027\u80fd\u76d1\u63a7 \u4e0b\u4e2a\u51b2\u523a\u5904\u7406 \u4fe1\u606f <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/checklist-widget/#2-system-operations-checklist","title":"2. System Operations Checklist\u7cfb\u7edf\u5065\u5eb7\u68c0\u67e5\u5b89\u5168\u68c0\u67e5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.checklist_widget import ChecklistWidget\n\n# \u521b\u5efa\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\")\n\n# \u65e5\u5e38\u68c0\u67e5\u6e05\u5355\nchecklist = ChecklistWidget()\nchecklist.set_title(\"\u7cfb\u7edf\u5065\u5eb7\u68c0\u67e5\")\nchecklist.add_item(\"\u670d\u52a1\u5668\u72b6\u6001\", True, \"success\")\nchecklist.add_item(\"\u6570\u636e\u5e93\u8fde\u63a5\", True, \"success\")\nchecklist.add_item(\"\u78c1\u76d8\u7a7a\u95f4\", False, \"warning\", \"\u9700\u8981\u5173\u6ce8\")\nchecklist.add_item(\"\u5185\u5b58\u4f7f\u7528\", True, \"success\")\nchecklist.add_item(\"\u7f51\u7edc\u8fde\u901a\", True, \"success\")\nchecklist.show_progress_stats(True)\n\nemail.add_widget(checklist)\n</code></pre> \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:12:42 \u5b8c\u6210\u8fdb\u5ea6 4/5 (80.0%)                      \u2713                  \u670d\u52a1\u5668\u72b6\u6001 \u5b8c\u6210                      \u2713                  \u6570\u636e\u5e93\u8fde\u63a5 \u5b8c\u6210                      !                  \u78c1\u76d8\u7a7a\u95f4 \u9700\u8981\u5173\u6ce8                      \u2713                  \u5185\u5b58\u4f7f\u7528 \u5b8c\u6210                      \u2713                  \u7f51\u7edc\u8fde\u901a \u5b8c\u6210 \u5b8c\u6210\u8fdb\u5ea6 2/4 (50.0%)                      \u2713                  SSL\u8bc1\u4e66 \u6709\u6548\u671f\u81f32024\u5e7412\u6708 \u5b8c\u6210                      \u2713                  \u9632\u706b\u5899\u89c4\u5219 \u5df2\u66f4\u65b0 \u5b8c\u6210                      !                  \u6f0f\u6d1e\u626b\u63cf \u53d1\u73b03\u4e2a\u4e2d\u7ea7\u6f0f\u6d1e                      \u2717                  \u8bbf\u95ee\u65e5\u5fd7 \u53d1\u73b0\u5f02\u5e38\u8bbf\u95ee <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/checklist-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_checklist</code> shortcut method:</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_checklist(\n    title=\"\u4efb\u52a1\u6e05\u5355\",\n    items=[\n        (\"\u4efb\u52a11\", True),\n        (\"\u4efb\u52a12\", False),\n        (\"\u4efb\u52a13\", False)\n    ],\n    show_progress=True,\n    compact_mode=True\n)\n</code></pre>"},{"location":"user-guide/checklist-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/checklist-widget/#q-how-to-create-tasks-with-different-priorities","title":"Q: How to create tasks with different priorities?","text":"<p>A: Use different status_type values to represent priorities: Python<pre><code>checklist.add_item(\"\u9ad8\u4f18\u5148\u7ea7\", False, \"error\")    # \u7ea2\u8272-\u7d27\u6025\nchecklist.add_item(\"\u4e2d\u4f18\u5148\u7ea7\", False, \"warning\")  # \u6a59\u8272-\u91cd\u8981\nchecklist.add_item(\"\u4f4e\u4f18\u5148\u7ea7\", False, \"info\")     # \u84dd\u8272-\u666e\u901a\n</code></pre></p>"},{"location":"user-guide/checklist-widget/#q-whats-the-difference-between-skipped-and-incomplete-status","title":"Q: What's the difference between skipped and incomplete status?","text":"<p>A:  - Incomplete (False): Counted in total progress, tasks that need completion - Skipped (None): Not counted in progress statistics, skipped tasks</p>"},{"location":"user-guide/checklist-widget/#q-why-doesnt-the-progress-bar-show","title":"Q: Why doesn't the progress bar show?","text":"<p>A: Make sure you called the <code>show_progress_stats(True)</code> method.</p>"},{"location":"user-guide/checklist-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>ProgressWidget - Single item progress display</li> <li>StatusWidget - Status information display</li> <li>CardWidget - Card that can contain checklists</li> <li>AlertWidget - Alerts that can be used with checklists</li> </ul>"},{"location":"user-guide/circular-progress-widget/","title":"CircularProgressWidget","text":"<p>CircularProgressWidget is a component for displaying circular progress bars, providing a more compact visual effect than linear progress bars, suitable for showing progress information in limited spaces. It supports multiple theme colors, size settings, and progress management functions, making it ideal for system monitoring and task progress display.</p>"},{"location":"user-guide/circular-progress-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview","text":"\u2b55 \u5706\u5f62\u8fdb\u5ea6\u7ec4\u4ef6 75% \u4efb\u52a1\u8fdb\u5ea6 60% CPU\u4f7f\u7528\u7387 90% \u78c1\u76d8\u7a7a\u95f4 \u591a\u79cd\u4e3b\u9898 \u8fdb\u5ea6\u7ba1\u7406 \u6837\u5f0f\u5b9a\u5236"},{"location":"user-guide/circular-progress-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83c\udfa8 Multiple Themes: Supports PRIMARY, SUCCESS, WARNING, ERROR, INFO and other theme colors</li> <li>\ud83d\udcca Progress Management: Supports value setting, increment/decrement operations, completion reset and other convenient functions</li> <li>\ud83d\udd27 Style Customization: Flexible size control, line width, label display settings</li> <li>\ud83d\udcc8 Non-percentage: Supports custom maximum values, not limited to percentage display</li> <li>\u26a1 Convenient Operations: Provides increment, decrement, complete, reset and other shortcut methods</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/circular-progress-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/circular-progress-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CircularProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\n# \u521b\u5efa\u57fa\u7840\u5706\u5f62\u8fdb\u5ea6\u6761\nprogress = CircularProgressWidget()\nprogress.set_value(65)\nprogress.set_label(\"\u4e0b\u8f7d\u8fdb\u5ea6\")\nprogress.set_theme(ProgressTheme.PRIMARY)\n\nemail = Email(\"\u8fdb\u5ea6\u62a5\u544a\")\nemail.add_widget(progress)\n</code></pre>"},{"location":"user-guide/circular-progress-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u7cfb\u7edf\u76d1\u63a7\u6307\u6807\u7ec4\u5408\nfrom email_widget.widgets import ColumnWidget\n\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u4eea\u8868\u677f\")\n\n# CPU\u4f7f\u7528\u7387\ncpu_progress = (CircularProgressWidget()\n                .set_value(35)\n                .set_label(\"CPU\u4f7f\u7528\u7387\")\n                .set_theme(ProgressTheme.SUCCESS)\n                .set_size(\"100px\")\n                .set_stroke_width(\"8px\"))\n\n# \u5185\u5b58\u4f7f\u7528\u7387\nmemory_progress = (CircularProgressWidget()\n                   .set_value(68)\n                   .set_label(\"\u5185\u5b58\u4f7f\u7528\u7387\")\n                   .set_theme(ProgressTheme.WARNING)\n                   .set_size(\"100px\")\n                   .set_stroke_width(\"8px\"))\n\n# \u78c1\u76d8\u4f7f\u7528\u7387\ndisk_progress = (CircularProgressWidget()\n                 .set_value(85)\n                 .set_label(\"\u78c1\u76d8\u4f7f\u7528\u7387\")\n                 .set_theme(ProgressTheme.ERROR)\n                 .set_size(\"100px\")\n                 .set_stroke_width(\"8px\"))\n\n# \u4f7f\u7528\u5217\u5e03\u5c40\u7ec4\u5408\ncolumn = ColumnWidget().set_columns(3)\ncolumn.add_widgets([cpu_progress, memory_progress, disk_progress])\nemail.add_widget(column)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: CircularProgressWidget API</p>"},{"location":"user-guide/circular-progress-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/circular-progress-widget/#theme-colors-and-application-scenarios","title":"Theme Colors and Application Scenarios","text":"<ul> <li>PRIMARY: Blue (#0078d4) - Main progress, important metrics</li> <li>SUCCESS: Green (#107c10) - Normal status, successful completion</li> <li>WARNING: Orange (#ff8c00) - Needs attention, approaching threshold</li> <li>ERROR: Red (#d13438) - Error status, exceeding limits</li> <li>INFO: Blue (#0078d4) - Information display, reference data</li> </ul>"},{"location":"user-guide/circular-progress-widget/#size-specifications-recommendations","title":"Size Specifications Recommendations","text":"<ul> <li>Small Metrics: 60px - 80px, suitable for integrated display</li> <li>Regular Metrics: 100px - 120px, suitable for main display</li> <li>Important Metrics: 150px - 200px, suitable for prominent display</li> <li>Line Width: 4-6px for small sizes, 8-12px for large sizes</li> </ul>"},{"location":"user-guide/circular-progress-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/circular-progress-widget/#1-system-resource-monitoring","title":"1. System Resource Monitoring","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CircularProgressWidget, ColumnWidget\nfrom email_widget.core.enums import ProgressTheme\n\nemail = Email(\"\u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7\")\n\n# \u6839\u636e\u6570\u503c\u9009\u62e9\u5408\u9002\u4e3b\u9898\ndef get_theme_by_value(value):\n    if value &lt; 50:\n        return ProgressTheme.SUCCESS\n    elif value &lt; 80:\n        return ProgressTheme.WARNING\n    else:\n        return ProgressTheme.ERROR\n\n# \u521b\u5efa\u76d1\u63a7\u6307\u6807\nmetrics = [\n    {\"label\": \"CPU\", \"value\": 45, \"size\": \"80px\"},\n    {\"label\": \"\u5185\u5b58\", \"value\": 72, \"size\": \"80px\"},\n    {\"label\": \"\u7f51\u7edc\", \"value\": 28, \"size\": \"80px\"},\n    {\"label\": \"\u78c1\u76d8\", \"value\": 91, \"size\": \"80px\"}\n]\n\nprogress_widgets = []\nfor metric in metrics:\n    progress = (CircularProgressWidget()\n                .set_value(metric[\"value\"])\n                .set_label(metric[\"label\"])\n                .set_theme(get_theme_by_value(metric[\"value\"]))\n                .set_size(metric[\"size\"])\n                .set_stroke_width(\"6px\"))\n    progress_widgets.append(progress)\n\n# \u4f7f\u75284\u5217\u5e03\u5c40\ndashboard = ColumnWidget().set_columns(4)\ndashboard.add_widgets(progress_widgets)\nemail.add_widget(dashboard)\n</code></pre> \u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7 \u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:54:12 45%                                      CPU                                  72%                                      \u5185\u5b58                                  28%                                      \u7f51\u7edc                                  91%                                      \u78c1\u76d8                                  \u81ea\u52a8\u4e3b\u9898\u9009\u62e9\u89c4\u5219\uff1a                      &lt;50% \u6b63\u5e38                                       50-80% \u8b66\u544a                                       &gt;80% \u9519\u8bef                                       \u5176\u4ed6\u4fe1\u606f                  <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/circular-progress-widget/#2-project-progress-display","title":"2. Project Progress Display","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CircularProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\nemail = Email(\"\u9879\u76ee\u8fdb\u5ea6\u62a5\u544a\")\n\n# \u4e3b\u8981\u9879\u76ee\u8fdb\u5ea6\nmain_progress = (CircularProgressWidget()\n                 .set_value(75)\n                 .set_label(\"\u9879\u76ee\u603b\u4f53\u8fdb\u5ea6\")\n                 .set_theme(ProgressTheme.INFO)\n                 .set_size(\"150px\")\n                 .set_stroke_width(\"12px\"))\n\nemail.add_widget(main_progress)\n\n# \u5404\u9636\u6bb5\u8fdb\u5ea6\nphases = [\n    {\"name\": \"\u9700\u6c42\u5206\u6790\", \"progress\": 100, \"theme\": ProgressTheme.SUCCESS},\n    {\"name\": \"\u7cfb\u7edf\u8bbe\u8ba1\", \"progress\": 100, \"theme\": ProgressTheme.SUCCESS},\n    {\"name\": \"\u5f00\u53d1\u5b9e\u65bd\", \"progress\": 80, \"theme\": ProgressTheme.WARNING},\n    {\"name\": \"\u6d4b\u8bd5\u9a8c\u6536\", \"progress\": 30, \"theme\": ProgressTheme.INFO}\n]\n\nphase_widgets = []\nfor phase in phases:\n    progress = (CircularProgressWidget()\n                .set_value(phase[\"progress\"])\n                .set_label(phase[\"name\"])\n                .set_theme(phase[\"theme\"])\n                .set_size(\"100px\")\n                .set_stroke_width(\"8px\"))\n    phase_widgets.append(progress)\n\nphases_column = ColumnWidget().set_columns(2)\nphases_column.add_widgets(phase_widgets)\nemail.add_widget(phases_column)\n</code></pre> \u9879\u76ee\u8fdb\u5ea6\u62a5\u544a \u9879\u76ee\u8fdb\u5ea6\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:55:03 \u9879\u76ee\u603b\u4f53\u8fdb\u5ea6 75% \u9879\u76ee\u603b\u4f53\u8fdb\u5ea6 \u5404\u9636\u6bb5\u8be6\u7ec6\u8fdb\u5ea6 100% \u9700\u6c42\u5206\u6790 \u5df2\u5b8c\u6210 100% \u7cfb\u7edf\u8bbe\u8ba1 \u5df2\u5b8c\u6210 80% \u5f00\u53d1\u5b9e\u65bd \u8fdb\u884c\u4e2d 30% \u6d4b\u8bd5\u9a8c\u6536 \u5df2\u5f00\u59cb <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/circular-progress-widget/#3-non-percentage-progress","title":"3. Non-percentage Progress","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CircularProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\nemail = Email(\"\u6570\u636e\u5904\u7406\u8fdb\u5ea6\")\n\n# \u6587\u4ef6\u5904\u7406\u8fdb\u5ea6\uff08\u4ee5\u6587\u4ef6\u6570\u4e3a\u5355\u4f4d\uff09\nfile_progress = (CircularProgressWidget()\n                 .set_max_value(1000)      # \u603b\u51711000\u4e2a\u6587\u4ef6\n                 .set_value(750)           # \u5df2\u5904\u7406750\u4e2a\n                 .set_label(\"\u6587\u4ef6\u5904\u7406\")     # \u663e\u793a75%\n                 .set_theme(ProgressTheme.INFO)\n                 .set_size(\"120px\"))\n\nemail.add_widget(file_progress)\n\n# \u6570\u636e\u4e0b\u8f7d\u8fdb\u5ea6\uff08\u4ee5MB\u4e3a\u5355\u4f4d\uff09\ndownload_progress = (CircularProgressWidget()\n                     .set_max_value(500)      # \u603b\u5927\u5c0f500MB\n                     .set_value(350)          # \u5df2\u4e0b\u8f7d350MB\n                     .set_label(\"\u6570\u636e\u4e0b\u8f7d\")    # \u663e\u793a70%\n                     .set_theme(ProgressTheme.PRIMARY)\n                     .set_size(\"120px\"))\n\nemail.add_widget(download_progress)\n</code></pre> \u6570\u636e\u5904\u7406\u8fdb\u5ea6 \u6570\u636e\u5904\u7406\u8fdb\u5ea6 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:55:48 \u975e\u767e\u5206\u6bd4\u8fdb\u5ea6\u5c55\u793a                 \u4ee5\u4e0b\u8fdb\u5ea6\u6761\u5c55\u793a\u7684\u662f\u5177\u4f53\u7684\u6570\u503c\u5355\u4f4d\uff08\u6587\u4ef6\u6570\u3001\u6570\u636e\u5927\u5c0f\u7b49\uff09\uff0c\u800c\u975e\u4f20\u7edf\u7684\u767e\u5206\u6bd4\u5f62\u5f0f\uff0c\u63d0\u4f9b\u66f4\u76f4\u89c2\u7684\u8fdb\u5ea6\u4fe1\u606f\u3002                                               75% 750/1000 \u6587\u4ef6\u5904\u7406                              \u6b63\u5728\u5904\u7406\u6570\u636e\u6587\u4ef6\uff0c\u5df2\u5b8c\u6210750\u4e2a\u6587\u4ef6\uff0c\u51711000\u4e2a\u6587\u4ef6                          750 \u5df2\u5904\u7406 250 \u5269\u4f59 1000 \u603b\u8ba1                                  70% 350/500MB \u6570\u636e\u4e0b\u8f7d                              \u6b63\u5728\u4e0b\u8f7d\u6570\u636e\u5305\uff0c\u5df2\u4e0b\u8f7d350MB\uff0c\u603b\u5927\u5c0f500MB                          350MB \u5df2\u4e0b\u8f7d 150MB \u5269\u4f59 500MB \u603b\u8ba1 \u6280\u672f\u5b9e\u73b0\u8bf4\u660e                 \u901a\u8fc7\u8bbe\u7f6e <code>max_value</code> \u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u5355\u4f4d\u4f5c\u4e3a\u8fdb\u5ea6\u57fa\u51c6\uff1a                 <ul> <li>\u6587\u4ef6\u5904\u7406\uff1amax_value=1000\uff0c\u5f53\u524d\u503c750\uff0c\u663e\u793a75%</li> <li>\u6570\u636e\u4e0b\u8f7d\uff1amax_value=500\uff0c\u5f53\u524d\u503c350\uff0c\u663e\u793a70%</li> </ul> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/circular-progress-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_circular_progress</code> shortcut method:</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_circular_progress(\n    value=75,\n    label=\"\u4efb\u52a1\u8fdb\u5ea6\",\n    theme=\"success\"\n)\n\n# \u5e26\u6837\u5f0f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_circular_progress(\n    value=68,\n    label=\"CPU\u4f7f\u7528\u7387\",\n    theme=\"warning\",\n    size=\"100px\",\n    stroke_width=\"8px\"\n)\n\n# \u975e\u767e\u5206\u6bd4\u8fdb\u5ea6\nemail.add_circular_progress(\n    value=750,\n    max_value=1000,\n    label=\"\u6587\u4ef6\u5904\u7406\",\n    theme=\"info\",\n    size=\"120px\"\n)\n</code></pre>"},{"location":"user-guide/circular-progress-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/circular-progress-widget/#q-how-to-automatically-choose-theme-based-on-value","title":"Q: How to automatically choose theme based on value?","text":"<p>A: Create a theme selection function: Python<pre><code>def auto_theme(value):\n    if value &lt; 50:\n        return ProgressTheme.SUCCESS\n    elif value &lt; 80:\n        return ProgressTheme.WARNING\n    else:\n        return ProgressTheme.ERROR\n\nprogress.set_theme(auto_theme(85))  # \u81ea\u52a8\u9009\u62e9ERROR\u4e3b\u9898\n</code></pre></p>"},{"location":"user-guide/circular-progress-widget/#q-how-to-implement-dynamic-progress-updates","title":"Q: How to implement dynamic progress updates?","text":"<p>A: Use increment and decrement methods: Python<pre><code>progress = CircularProgressWidget().set_value(50)\nprogress.increment(10)  # \u589e\u52a0\u523060%\nprogress.decrement(5)   # \u51cf\u5c11\u523055%\nprogress.complete()     # \u8bbe\u7f6e\u4e3a100%\nprogress.reset()        # \u91cd\u7f6e\u4e3a0%\n</code></pre></p>"},{"location":"user-guide/circular-progress-widget/#q-what-if-circular-progress-bar-is-too-small-or-too-large","title":"Q: What if circular progress bar is too small or too large?","text":"<p>A: Adjust size and line width: Python<pre><code># \u5c0f\u5c3a\u5bf8\nprogress.set_size(\"60px\").set_stroke_width(\"4px\")\n# \u5927\u5c3a\u5bf8\nprogress.set_size(\"200px\").set_stroke_width(\"15px\")\n</code></pre></p>"},{"location":"user-guide/circular-progress-widget/#q-what-happens-when-progress-value-exceeds-range","title":"Q: What happens when progress value exceeds range?","text":"<p>A: Values are automatically limited between 0 and max_value: Python<pre><code>progress.set_max_value(100)\nprogress.set_value(150)  # \u81ea\u52a8\u9650\u5236\u4e3a100\nprogress.set_value(-10)  # \u81ea\u52a8\u9650\u5236\u4e3a0\n</code></pre></p>"},{"location":"user-guide/circular-progress-widget/#q-how-to-create-multiple-progress-bars-with-same-style","title":"Q: How to create multiple progress bars with same style?","text":"<p>A: Use configuration function: Python<pre><code>def create_standard_progress(value, label):\n    return (CircularProgressWidget()\n            .set_value(value)\n            .set_label(label)\n            .set_size(\"80px\")\n            .set_stroke_width(\"6px\")\n            .set_theme(get_theme_by_value(value)))\n\nprogress1 = create_standard_progress(60, \"CPU\")\nprogress2 = create_standard_progress(80, \"\u5185\u5b58\")\n</code></pre></p>"},{"location":"user-guide/circular-progress-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>ProgressWidget - Linear progress bar widget</li> <li>MetricWidget - Data metrics display widget</li> <li>StatusWidget - Status information display widget</li> <li>CardWidget - Card widget that can contain progress bars</li> <li>ColumnWidget - Used for laying out multiple progress bar widgets</li> </ul>"},{"location":"user-guide/column-widget/","title":"ColumnWidget","text":"<p>ColumnWidget is a powerful layout component used to create multi-column layouts, arranging multiple widgets in columns. It supports automatic column mode and manual column setting, using table layout to ensure compatibility across various email clients, making it a core component for building complex email layouts.</p>"},{"location":"user-guide/column-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview","text":"\ud83d\udcd0 \u5217\u5e03\u5c40\u7ec4\u4ef6 \u5217 1 <p>\u7b2c\u4e00\u5217\u5185\u5bb9\u5c55\u793a</p> \u5217 2 <p>\u7b2c\u4e8c\u5217\u5185\u5bb9\u5c55\u793a</p> \u5217 3 <p>\u7b2c\u4e09\u5217\u5185\u5bb9\u5c55\u793a</p> \u591a\u5217\u5e03\u5c40 \u81ea\u52a8\u5217\u6570 \u90ae\u4ef6\u517c\u5bb9"},{"location":"user-guide/column-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udccf Auto Layout: Automatically calculates optimal column count based on widget quantity</li> <li>\ud83d\udd27 Manual Control: Supports manual setting of 1-4 columns</li> <li>\ud83d\udce7 Email Compatible: Uses table layout to ensure email client compatibility</li> <li>\ud83c\udfa8 Flexible Configuration: Supports column gap adjustment and responsive design</li> <li>\u26a1 Dynamic Management: Supports dynamic adding, removing, and updating of widgets</li> <li>\ud83d\udcf1 Responsive: Maintains good display across different email clients</li> </ul>"},{"location":"user-guide/column-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/column-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ColumnWidget, TextWidget\n\n# \u521b\u5efa\u5217\u5e03\u5c40\u7ec4\u4ef6\ncolumn = ColumnWidget()\n\n# \u521b\u5efa\u5b50\u7ec4\u4ef6\nwidget1 = TextWidget().set_content(\"\u7b2c\u4e00\u5217\u5185\u5bb9\")\nwidget2 = TextWidget().set_content(\"\u7b2c\u4e8c\u5217\u5185\u5bb9\")  \nwidget3 = TextWidget().set_content(\"\u7b2c\u4e09\u5217\u5185\u5bb9\")\n\n# \u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\uff083\u4e2aWidget\u81ea\u52a8\u4f7f\u75283\u5217\uff09\ncolumn.add_widgets([widget1, widget2, widget3])\n\nemail = Email(\"\u591a\u5217\u5e03\u5c40\u793a\u4f8b\")\nemail.add_widget(column)\n</code></pre>"},{"location":"user-guide/column-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u56fa\u5b9a\u5217\u6570\u5e03\u5c40\ncolumn = ColumnWidget()\ncolumn.set_columns(2)  # \u56fa\u5b9a\u4f7f\u75282\u5217\ncolumn.set_gap(\"25px\")  # \u8bbe\u7f6e\u5217\u95f4\u8ddd\n\n# \u521b\u5efa\u591a\u4e2a\u7ec4\u4ef6\nfrom email_widget.widgets import StatusWidget, MetricWidget\n\nstatus = StatusWidget().set_title(\"\u7cfb\u7edf\u72b6\u6001\")\nstatus.add_status(\"CPU\", \"68%\", \"warning\")\nstatus.add_status(\"\u5185\u5b58\", \"4.2GB\", \"info\")\n\nmetric = MetricWidget().set_title(\"\u6838\u5fc3\u6307\u6807\")\nmetric.add_metric(\"\u7528\u6237\u6570\", 12345, \"\u4eba\", \"+15.6%\", \"success\")\n\ncolumn.add_widgets([status, metric])\nemail.add_widget(column)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: ColumnWidget API</p>"},{"location":"user-guide/column-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/column-widget/#auto-column-algorithm","title":"Auto Column Algorithm","text":"Widget Count Auto Columns Layout Description 1 1 column Single column full width 2 2 columns Left and right columns evenly distributed 3 3 columns Three columns evenly distributed 4 2 columns 2\u00d72 grid layout 5-6 3 columns Three column layout, last row may not be full 7-8 2 columns Two column layout, multi-row display 9+ 3 columns Three column layout, multi-row display"},{"location":"user-guide/column-widget/#column-gap-recommendations","title":"Column Gap Recommendations","text":"<ul> <li>Text Content: 15px - 20px</li> <li>Card Components: 20px - 25px  </li> <li>Image Components: 10px - 15px</li> <li>Status Components: 20px - 30px</li> </ul>"},{"location":"user-guide/column-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/column-widget/#1-auto-column-layout","title":"1. Auto Column Layout","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ColumnWidget, CardWidget\n\nemail = Email(\"\u4eea\u8868\u677f\u62a5\u544a\")\n\n# \u521b\u5efa\u81ea\u52a8\u5217\u6570\u5e03\u5c40\nauto_column = ColumnWidget()  # \u9ed8\u8ba4\u81ea\u52a8\u6a21\u5f0f\n\n# \u521b\u5efa\u591a\u4e2a\u5361\u7247\uff086\u4e2aWidget\u81ea\u52a8\u4f7f\u75283\u5217\uff09\ncards = []\nfor i in range(6):\n    card = CardWidget()\n    card.set_title(f\"\u6307\u6807 {i+1}\")\n    card.set_content(f\"\u8fd9\u662f\u7b2c{i+1}\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a\")\n    cards.append(card)\n\nauto_column.add_widgets(cards)\nemail.add_widget(auto_column)\n</code></pre> \u81ea\u52a8\u5217\u6570\u5e03\u5c40 \u4eea\u8868\u677f\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:50:45 \u6307\u6807 1                                      \u8fd9\u662f\u7b2c1\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     98.5% \u2197\ufe0f +2.3% \u6307\u6807 2                                      \u8fd9\u662f\u7b2c2\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     1,234 \u2197\ufe0f +15.6% \u6307\u6807 3                                      \u8fd9\u662f\u7b2c3\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     \u00a558.2K \u2197\ufe0f +8.9% \u6307\u6807 4                                      \u8fd9\u662f\u7b2c4\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     4,567 \u2197\ufe0f +12.1% \u6307\u6807 5                                      \u8fd9\u662f\u7b2c5\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     89.3% \u2197\ufe0f +5.7% \u6307\u6807 6                                      \u8fd9\u662f\u7b2c6\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     \u00a592.1K \u2197\ufe0f +18.4% <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/column-widget/#2-fixed-column-layout","title":"2. Fixed Column Layout","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ColumnWidget, StatusWidget\n\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\")\n\n# \u521b\u5efa\u56fa\u5b9a2\u5217\u5e03\u5c40\nfixed_column = ColumnWidget().set_columns(2)\nfixed_column.set_gap(\"30px\")\n\n# \u7cfb\u7edf\u72b6\u6001\u7ec4\u4ef6\nsystem_status = StatusWidget()\nsystem_status.set_title(\"\u7cfb\u7edf\u8d44\u6e90\")\nsystem_status.add_status(\"CPU\u4f7f\u7528\u7387\", \"68%\", \"success\")\nsystem_status.add_status(\"\u5185\u5b58\u4f7f\u7528\", \"85%\", \"warning\")\n\n# \u670d\u52a1\u72b6\u6001\u7ec4\u4ef6\nservice_status = StatusWidget()\nservice_status.set_title(\"\u670d\u52a1\u72b6\u6001\")\nservice_status.add_status(\"Web\u670d\u52a1\", \"\u8fd0\u884c\u4e2d\", \"success\")\nservice_status.add_status(\"\u6570\u636e\u5e93\", \"\u6b63\u5e38\", \"success\")\n\nfixed_column.add_widgets([system_status, service_status])\nemail.add_widget(fixed_column)\n</code></pre> \u56fa\u5b9a\u5217\u6570\u5e03\u5c40 \u7cfb\u7edf\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:51:28 \u7cfb\u7edf\u8d44\u6e90 CPU\u4f7f\u7528\u7387 68% \u5185\u5b58\u4f7f\u7528 85% \u78c1\u76d8\u7a7a\u95f4 45% \u7f51\u7edc\u5ef6\u8fdf 12ms \u670d\u52a1\u72b6\u6001 Web\u670d\u52a1 \u8fd0\u884c\u4e2d \u6570\u636e\u5e93 \u6b63\u5e38 \u7f13\u5b58\u670d\u52a1 \u6b63\u5e38 \u6d88\u606f\u961f\u5217 \u7a7a\u95f2 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/column-widget/#3-mixed-component-layout","title":"3. Mixed Component Layout","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import (\n    ColumnWidget, TextWidget, AlertWidget, \n    ProgressWidget, ImageWidget\n)\n\nemail = Email(\"\u7efc\u5408\u62a5\u544a\")\n\n# \u521b\u5efa\u6df7\u5408\u7ec4\u4ef6\u5e03\u5c40\nmixed_column = ColumnWidget().set_columns(3)\n\n# \u4e0d\u540c\u7c7b\u578b\u7684\u7ec4\u4ef6\ntext_widget = TextWidget().set_content(\"\u6b22\u8fce\u67e5\u770b\u672c\u6708\u62a5\u544a\")\nalert_widget = AlertWidget().set_content(\"\u6ce8\u610f\uff1a\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a\u7ef4\u62a4\").set_alert_type(\"warning\")\nprogress_widget = ProgressWidget().set_progress(75).set_label(\"\u9879\u76ee\u8fdb\u5ea6\")\n\nmixed_column.add_widgets([text_widget, alert_widget, progress_widget])\nemail.add_widget(mixed_column)\n</code></pre> \u6df7\u5408\u7ec4\u4ef6\u5e03\u5c40 \u7efc\u5408\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:52:12 <p>                                     \ud83d\udcca                                     \u6b22\u8fce\u67e5\u770b\u672c\u6708\u62a5\u544a                                 </p> <p> \u26a0\ufe0f                                     \u6ce8\u610f\uff1a\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a\u7ef4\u62a4                                 </p>                                      \u7ef4\u62a4\u65f6\u95f4\uff1a22:00 - 24:00                                  <p>\u9879\u76ee\u8fdb\u5ea6</p> <p>75% \u5b8c\u6210</p>                                      \u9884\u8ba1\u5b8c\u6210\u65f6\u95f4\uff1a\u672c\u6708\u5e95                                  <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/column-widget/#4-responsive-layout","title":"4. Responsive Layout","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ColumnWidget\n\ndef create_responsive_layout(widgets):\n    \"\"\"\u521b\u5efa\u54cd\u5e94\u5f0f\u5e03\u5c40\"\"\"\n    column = ColumnWidget()  # \u4f7f\u7528\u81ea\u52a8\u6a21\u5f0f\n\n    # \u6839\u636eWidget\u6570\u91cf\u8bbe\u7f6e\u95f4\u8ddd\n    if len(widgets) &lt;= 2:\n        column.set_gap(\"30px\")  # \u5c11\u91cfWidget\u65f6\u589e\u52a0\u95f4\u8ddd\n    elif len(widgets) &lt;= 4:\n        column.set_gap(\"20px\")  # \u4e2d\u7b49\u6570\u91cf\u4f7f\u7528\u9ed8\u8ba4\u95f4\u8ddd\n    else:\n        column.set_gap(\"15px\")  # \u5927\u91cfWidget\u65f6\u51cf\u5c11\u95f4\u8ddd\n\n    column.add_widgets(widgets)\n    return column\n\n# \u4f7f\u7528\u54cd\u5e94\u5f0f\u5e03\u5c40\nemail = Email(\"\u54cd\u5e94\u5f0f\u5e03\u5c40\u793a\u4f8b\")\nwidgets = [widget1, widget2, widget3, widget4]\nresponsive_layout = create_responsive_layout(widgets)\nemail.add_widget(responsive_layout)\n</code></pre> \u54cd\u5e94\u5f0f\u5e03\u5c40\u793a\u4f8b \u54cd\u5e94\u5f0f\u5e03\u5c40\u793a\u4f8b \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:52:55 \u54cd\u5e94\u5f0f\u5e03\u5c40\u81ea\u52a8\u8c03\u6574                 4\u4e2a\u7ec4\u4ef6\u81ea\u52a8\u4f7f\u75282x2\u7f51\u683c\u5e03\u5c40\uff0c\u95f4\u8ddd\u6839\u636e\u7ec4\u4ef6\u6570\u91cf\u667a\u80fd\u8c03\u6574\u4e3a20px              \ud83d\udcca \u9500\u552e\u6570\u636e                                      \u672c\u5b63\u5ea6\u9500\u552e\u4e1a\u7ee9\u7edf\u8ba1                                      \u00a51,245,670 \u603b\u9500\u552e\u989d \u2197\ufe0f +15.2% \ud83d\udc65 \u7528\u6237\u589e\u957f                                      \u6d3b\u8dc3\u7528\u6237\u6570\u91cf\u53d8\u5316                                      24,567 \u6708\u6d3b\u7528\u6237 \u2197\ufe0f +8.7% \ud83d\udcc8 \u8f6c\u5316\u7387                                      \u7f51\u7ad9\u8bbf\u95ee\u5230\u8d2d\u4e70\u8f6c\u5316                                      12.8% \u8f6c\u5316\u7387 \u2197\ufe0f +2.1% \u26a0\ufe0f \u7cfb\u7edf\u8d1f\u8f7d                                      \u670d\u52a1\u5668\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5                                      85.3% CPU\u4f7f\u7528\u7387 \u2197\ufe0f +5.2% <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/column-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_column</code> shortcut method:</p> Python<pre><code># \u81ea\u52a8\u5217\u6570\u5feb\u6377\u65b9\u6cd5\nemail.add_column([widget1, widget2, widget3])\n\n# \u6307\u5b9a\u5217\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_column(\n    widgets=[widget1, widget2, widget3, widget4],\n    columns=2,\n    gap=\"25px\"\n)\n\n# \u54cd\u5e94\u5f0f\u5217\u5e03\u5c40\nemail.add_column(\n    widgets=[widget1, widget2, widget3],\n    auto_columns=True,\n    gap=\"20px\"\n)\n</code></pre>"},{"location":"user-guide/column-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/column-widget/#q-how-to-determine-the-optimal-column-count","title":"Q: How to determine the optimal column count?","text":"<p>A: Recommend using auto mode, the system will automatically choose based on content quantity: Python<pre><code>column = ColumnWidget()  # \u81ea\u52a8\u6a21\u5f0f\uff0c\u65e0\u9700\u8bbe\u7f6e\u5217\u6570\n</code></pre></p>"},{"location":"user-guide/column-widget/#q-how-does-it-display-on-mobile-devices","title":"Q: How does it display on mobile devices?","text":"<p>A: Email clients usually automatically adjust to single column display: Python<pre><code># \u8bbe\u7f6e\u6700\u5927\u5bbd\u5ea6\u786e\u4fdd\u79fb\u52a8\u7aef\u9002\u914d\ncolumn.set_gap(\"15px\")  # \u8f83\u5c0f\u95f4\u8ddd\u9002\u5408\u79fb\u52a8\u7aef\n</code></pre></p>"},{"location":"user-guide/column-widget/#q-how-to-handle-widgets-with-different-heights","title":"Q: How to handle widgets with different heights?","text":"<p>A: Components automatically use <code>vertical-align: top</code> to ensure top alignment: Python<pre><code># \u4e0d\u9700\u8981\u989d\u5916\u8bbe\u7f6e\uff0c\u7ec4\u4ef6\u4f1a\u81ea\u52a8\u5bf9\u9f50\ncolumn.add_widgets([tall_widget, short_widget])\n</code></pre></p>"},{"location":"user-guide/column-widget/#q-what-if-column-gap-is-too-large-or-too-small","title":"Q: What if column gap is too large or too small?","text":"<p>A: Use the <code>set_gap()</code> method to adjust: Python<pre><code>column.set_gap(\"15px\")  # \u5c0f\u95f4\u8ddd\ncolumn.set_gap(\"25px\")  # \u5927\u95f4\u8ddd\n</code></pre></p>"},{"location":"user-guide/column-widget/#q-how-to-dynamically-update-layout","title":"Q: How to dynamically update layout?","text":"<p>A: Use dynamic management methods: Python<pre><code># \u6e05\u7a7a\u540e\u91cd\u65b0\u6dfb\u52a0\ncolumn.clear_widgets()\ncolumn.add_widgets(new_widgets)\n\n# \u6216\u6309\u7d22\u5f15\u79fb\u9664\ncolumn.remove_widget_by_index(0)\n</code></pre></p>"},{"location":"user-guide/column-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>CardWidget - Card widgets commonly used in column layouts</li> <li>StatusWidget - Status widgets suitable for multi-column display</li> <li>MetricWidget - Metric widgets suitable for side-by-side display</li> <li>TextWidget - Basic text layout widgets</li> <li>ImageWidget - Image grid layout widgets</li> </ul>"},{"location":"user-guide/core-classes/","title":"Core Classes","text":"<p>The core architecture of EmailWidget consists of two main classes: the <code>Email</code> class and the <code>BaseWidget</code> abstract base class. Understanding these two classes is key to mastering EmailWidget.</p>"},{"location":"user-guide/core-classes/#email-class","title":"\ud83d\udce7 Email Class","text":"<p>The <code>Email</code> class is the container for the entire email system, responsible for managing all widgets and generating the final HTML email.</p>"},{"location":"user-guide/core-classes/#basic-structure","title":"\ud83c\udfd7\ufe0f Basic Structure","text":"Python<pre><code>from email_widget import Email\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\nemail = Email(title=\"\u6211\u7684\u90ae\u4ef6Title\")\n\n# \u8bbe\u7f6e\u526fTitle\u548c\u9875\u811a\nemail.set_subtitle(\"\u8fd9\u662f\u526fTitle\")\nemail.set_footer(\"\u81ea\u5b9a\u4e49\u9875\u811aInfo\")\n\n# \u751f\u6210HTML\nhtml_content = email.render_html()\n</code></pre>"},{"location":"user-guide/core-classes/#main-methods","title":"\ud83d\udcdd Main Methods","text":""},{"location":"user-guide/core-classes/#creation-and-configuration","title":"Creation and Configuration","text":"Python<pre><code># \u57fa\u672c\u521b\u5efa\nemail = Email(\"Data\u62a5\u544a\")\n\n# \u8bbe\u7f6e\u526fTitle\nemail.set_subtitle(\"2024\u5e74\u5ea6\u4e1a\u52a1Data\u5206\u6790\")\n\n# \u8bbe\u7f6e\u9875\u811aText\nemail.set_footer(\"\u672c\u62a5\u544a\u7531Data\u56e2\u961f\u751f\u6210 \u00a9 2024\")\n</code></pre>"},{"location":"user-guide/core-classes/#adding-widgets","title":"Adding Widgets","text":"Python<pre><code>from email_widget.widgets import TextWidget, TableWidget\n\n# \u6dfb\u52a0\u5355\u4e2a\u7ec4\u4ef6\ntext_widget = TextWidget().set_content(\"\u6b22\u8fce\u67e5\u770b\u672c\u5468Data\")\nemail.add_widget(text_widget)\n\n# \u6dfb\u52a0\u591a\u4e2a\u7ec4\u4ef6\nwidgets = [\n    TextWidget().set_content(\"Title1\"),\n    TableWidget().set_headers([\"\u52171\", \"\u52172\"]),\n    TextWidget().set_content(\"\u603b\u7ed3\")\n]\nemail.add_widgets(widgets)\n\n# \u94fe\u5f0f\u8c03\u7528\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u91cd\u8981Notification\")\n    .set_text_type(TextType.SECTION_H2)\n    .set_color(\"#d13438\")\n)\n</code></pre>"},{"location":"user-guide/core-classes/#rendering-and-output","title":"Rendering and Output","text":"Python<pre><code># \u6e32\u67d3\u4e3aHTML\u5b57\u7b26\u4e32\nhtml = email.render_html()\n\n# \u6e32\u67d3\u5e76\u4fdd\u5b58\u5230\u6587\u4ef6\nemail.render_to_file(\"report.html\")\n\n# \u6e32\u67d3\u5e76\u53d1\u9001\u90ae\u4ef6\nemail.render_and_send(\n    smtp_config={\n        \"host\": \"smtp.gmail.com\",\n        \"port\": 587,\n        \"username\": \"your@email.com\",\n        \"password\": \"your_password\"\n    },\n    to_emails=[\"recipient@email.com\"]\n)\n</code></pre>"},{"location":"user-guide/core-classes/#email-template-structure","title":"\ud83c\udfa8 Email Template Structure","text":"<p>The Email class uses a built-in HTML template with the following structure:</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;{{ title }}&lt;/title&gt;\n    &lt;!-- Inline CSS styles --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"email-container\"&gt;\n        &lt;!-- Email header --&gt;\n        &lt;div class=\"email-header\"&gt;\n            &lt;h1&gt;{{ title }}&lt;/h1&gt;\n            {{ subtitle }}\n        &lt;/div&gt;\n\n        &lt;!-- Email body --&gt;\n        &lt;div class=\"email-body\"&gt;\n            {{ widget_content }}\n        &lt;/div&gt;\n\n        &lt;!-- Email footer --&gt;\n        &lt;div class=\"email-footer\"&gt;\n            {{ footer_text }}\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"user-guide/core-classes/#basewidget-abstract-base-class","title":"\ud83e\udde9 BaseWidget Abstract Base Class","text":"<p>All widgets inherit from the <code>BaseWidget</code> abstract base class, which defines the basic behavior and interface for widgets.</p>"},{"location":"user-guide/core-classes/#basic-features","title":"\ud83c\udfd7\ufe0f Basic Features","text":"Python<pre><code>from email_widget.core.base import BaseWidget\n\nclass MyCustomWidget(BaseWidget):\n    # \u6a21\u677f\u5b9a\u4e49\n    TEMPLATE = \"\"\"\n    &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"padding: 16px; border: 1px solid #ccc;\"&gt;\n        &lt;h3&gt;{{ title }}&lt;/h3&gt;\n        &lt;p&gt;{{ content }}&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n    \"\"\"\n\n    def __init__(self, widget_id=None):\n        super().__init__(widget_id)\n        self._title = \"\"\n        self._content = \"\"\n\n    def get_template_context(self):\n        return {\n            'title': self._title,\n            'content': self._content\n        }\n\n    def set_title(self, title):\n        self._title = title\n        return self\n\n    def set_content(self, content):\n        self._content = content\n        return self\n</code></pre>"},{"location":"user-guide/core-classes/#core-properties","title":"\ud83d\udd11 Core Properties","text":""},{"location":"user-guide/core-classes/#widget-id","title":"Widget ID","text":"<p>Each widget has a unique ID:</p> Python<pre><code>widget = TextWidget()\nprint(widget.widget_id)  # \u8f93\u51fa: textwidget_a1b2c3d4\n\n# \u81ea\u5b9a\u4e49ID\nwidget = TextWidget(widget_id=\"my_text_widget\")\nprint(widget.widget_id)  # \u8f93\u51fa: my_text_widget\n</code></pre>"},{"location":"user-guide/core-classes/#parent-container-reference","title":"Parent Container Reference","text":"<p>Widgets can access their parent email container:</p> Python<pre><code>email = Email(\"\u6d4b\u8bd5\u90ae\u4ef6\")\nwidget = TextWidget().set_content(\"\u6d4b\u8bd5\u5185\u5bb9\")\nemail.add_widget(widget)\n\nprint(widget.parent)  # \u8f93\u51fa: &lt;email_widget.email.Email object&gt;\nprint(widget.parent.title)  # \u8f93\u51fa: \u6d4b\u8bd5\u90ae\u4ef6\n</code></pre>"},{"location":"user-guide/core-classes/#template-system","title":"\ud83c\udfa8 Template System","text":"<p>Each widget uses Jinja2 templates for rendering:</p>"},{"location":"user-guide/core-classes/#template-definition","title":"Template Definition","text":"Python<pre><code>class MyWidget(BaseWidget):\n    TEMPLATE = \"\"\"\n    &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"{{ container_style }}\"&gt;\n        {% if title %}\n            &lt;h3 style=\"{{ title_style }}\"&gt;{{ title }}&lt;/h3&gt;\n        {% endif %}\n        {% for item in items %}\n            &lt;p&gt;{{ item.name }}: {{ item.value }}&lt;/p&gt;\n        {% endfor %}\n    &lt;/div&gt;\n&lt;/div&gt;\n    \"\"\"\n</code></pre>"},{"location":"user-guide/core-classes/#context-data","title":"Context Data","text":"Python<pre><code>def get_template_context(self):\n    return {\n        'title': self._title,\n        'container_style': 'padding: 16px; border: 1px solid #e1dfdd;',\n        'title_style': 'color: #323130; font-weight: 600;',\n        'items': self._items\n    }\n</code></pre>"},{"location":"user-guide/core-classes/#error-handling","title":"\ud83d\udee1\ufe0f Error Handling","text":"<p>BaseWidget provides comprehensive error handling mechanisms:</p> Python<pre><code># \u5f53\u6e32\u67d3\u5931\u8d25\u65f6\uff0c\u4f1a\u663e\u793a\u9519\u8befInfo\u800c\u4e0d\u662f\u5d29\u6e83\ntry:\n    html = widget.render_html()\nexcept Exception as e:\n    # Widget\u4f1a\u81ea\u52a8\u5904\u7406\u9519\u8bef\uff0c\u8fd4\u56de\u9519\u8befTipHTML\n    print(\"Widget\u6e32\u67d3\u5931\u8d25\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u7ec4\u4ef6\")\n</code></pre> <p>Error output example: HTML<pre><code>&lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"border: 2px solid #d13438; background: #ffebee; color: #d13438; padding: 12px;\"&gt;\n    &lt;strong&gt;Widget Rendering Error:&lt;/strong&gt; MyWidget (mywidget_a1b2c3d4)\n    &lt;br/&gt;Error Details: Template rendering failed\n&lt;/div&gt;\n&lt;/div&gt;\n</code></pre></p>"},{"location":"user-guide/core-classes/#best-practices","title":"\ud83d\udd27 Best Practices","text":""},{"location":"user-guide/core-classes/#1-inherit-from-basewidget","title":"1. Inherit from BaseWidget","text":"Python<pre><code>class CustomWidget(BaseWidget):\n    def __init__(self, widget_id=None):\n        super().__init__(widget_id)  # \u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u521d\u59cb\u5316\n        # \u521d\u59cb\u5316\u81ea\u5b9a\u4e49\u5c5e\u6027\n</code></pre>"},{"location":"user-guide/core-classes/#2-implement-required-methods","title":"2. Implement Required Methods","text":"Python<pre><code>def get_template_context(self):\n    \"\"\"\u5fc5\u987b\u5b9e\u73b0\u6b64\u65b9\u6cd5\"\"\"\n    return {\n        'key': 'value'\n    }\n</code></pre>"},{"location":"user-guide/core-classes/#3-support-method-chaining","title":"3. Support Method Chaining","text":"Python<pre><code>def set_property(self, value):\n    self._property = value\n    return self  # \u8fd4\u56deself\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n</code></pre>"},{"location":"user-guide/core-classes/#4-input-validation","title":"4. Input Validation","text":"Python<pre><code>from email_widget.core.validators import NonEmptyStringValidator\n\ndef set_content(self, content):\n    validator = NonEmptyStringValidator()\n    if not validator.validate(content):\n        raise ValueError(f\"\u5185\u5bb9\u9a8c\u8bc1\u5931\u8d25: {validator.get_error_message(content)}\")\n    self._content = content\n    return self\n</code></pre>"},{"location":"user-guide/core-classes/#widget-lifecycle","title":"\ud83d\udd04 Widget Lifecycle","text":"<p>Understanding the widget lifecycle helps you use EmailWidget more effectively:</p> <ol> <li>Creation Phase: <code>__init__()</code> - Initialize widget properties</li> <li>Configuration Phase: <code>set_*()</code> methods - Set widget properties</li> <li>Addition Phase: <code>email.add_widget()</code> - Add to email container</li> <li>Rendering Phase: <code>render_html()</code> - Generate HTML content</li> </ol> Python<pre><code># 1. \u521b\u5efa\nwidget = TextWidget()\n\n# 2. \u914d\u7f6e  \nwidget.set_content(\"Hello\").set_color(\"#0078d4\")\n\n# 3. \u6dfb\u52a0\nemail.add_widget(widget)\n\n# 4. \u6e32\u67d3\nhtml = email.render_html()\n</code></pre>"},{"location":"user-guide/core-classes/#performance-considerations","title":"\ud83d\udcca Performance Considerations","text":""},{"location":"user-guide/core-classes/#template-caching","title":"Template Caching","text":"<ul> <li>Templates are automatically cached for better performance on repeated renders</li> <li>Recommended to reuse widget instances rather than creating them frequently</li> </ul>"},{"location":"user-guide/core-classes/#memory-management","title":"Memory Management","text":"<ul> <li>Widgets maintain weak references to parent containers to avoid circular references</li> <li>Clean up unnecessary widget references promptly</li> </ul> <p>Next Step: Learn about Widget Overview to see all available widget types.</p>"},{"location":"user-guide/image-widget/","title":"ImageWidget","text":"<p>ImageWidget is a component specifically designed for displaying images in emails, supporting multiple image sources and automatically converting to email-compatible formats. It can handle local files, network images, and Base64 data, making it an important component for displaying report charts, product images, and visual content.</p>"},{"location":"user-guide/image-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview","text":"\ud83d\udcf7 \u56fe\u7247\u7ec4\u4ef6        \u793a\u4f8b\u56fe\u7247      \u9500\u552e\u8d8b\u52bf\u56fe \u5c55\u793a\u4e862024\u5e74\u5404\u5b63\u5ea6\u7684\u9500\u552e\u6570\u636e\u5bf9\u6bd4 \u591a\u79cd\u6765\u6e90 \u81ea\u52a8\u8f6c\u6362 \u6837\u5f0f\u63a7\u5236"},{"location":"user-guide/image-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcc1 Multiple Sources: Supports various image sources including local files, network URLs, Base64 data</li> <li>\ud83d\udd04 Auto Conversion: Automatically converts to email-compatible base64 embedded format</li> <li>\ud83c\udfa8 Style Control: Supports size, border radius, max width and other style settings</li> <li>\ud83d\udcdd Title Description: Supports image title and detailed description display</li> <li>\u267f Accessibility: Supports alternative text for accessibility</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/image-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/image-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ImageWidget\n\n# \u521b\u5efa\u57fa\u7840\u56fe\u7247\u7ec4\u4ef6\nimage = ImageWidget()\nimage.set_image_url(\"./charts/sales.png\")\nimage.set_title(\"\u9500\u552e\u6570\u636e\u56fe\u8868\")\nimage.set_description(\"2024\u5e74\u5404\u5b63\u5ea6\u9500\u552e\u6570\u636e\u5bf9\u6bd4\u5206\u6790\")\n\nemail = Email(\"\u6570\u636e\u62a5\u544a\")\nemail.add_widget(image)\n</code></pre>"},{"location":"user-guide/image-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u5e26\u6837\u5f0f\u548c\u7f13\u5b58\u63a7\u5236\u7684\u56fe\u7247\nimage = (ImageWidget()\n         .set_image_url(\"https://example.com/chart.png\", cache=True)\n         .set_title(\"\u5728\u7ebf\u56fe\u8868\")\n         .set_size(width=\"600px\")\n         .set_border_radius(\"8px\")\n         .set_max_width(\"100%\")\n         .set_alt_text(\"\u9500\u552e\u8d8b\u52bf\u56fe\u8868\"))\n\nemail.add_widget(image)\n\n# \u672c\u5730\u6587\u4ef6\u56fe\u7247\nlocal_image = (ImageWidget()\n               .set_image_url(\"./reports/monthly_report.jpg\")\n               .set_title(\"\u6708\u5ea6\u62a5\u544a\")\n               .set_size(width=\"400px\", height=\"300px\"))\n</code></pre> <p>\ud83d\udcda Complete API Documentation: ImageWidget API</p>"},{"location":"user-guide/image-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/image-widget/#image-size-recommendations","title":"Image Size Recommendations","text":"<ul> <li>Small Icons: 50px - 100px, suitable for status icons</li> <li>Regular Images: 300px - 600px, suitable for content display</li> <li>Large Banners: 800px+, suitable for main display content</li> <li>Responsive: Use <code>max_width=\"100%\"</code> to ensure email compatibility</li> </ul>"},{"location":"user-guide/image-widget/#file-format-support","title":"File Format Support","text":"<ul> <li>PNG: Best quality, supports transparent background</li> <li>JPEG: Suitable for photos, smaller file size</li> <li>GIF: Supports animation effects</li> <li>WebP: Modern format, small size but poor compatibility</li> </ul>"},{"location":"user-guide/image-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/image-widget/#1-report-chart-display","title":"1. Report Chart Display","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ImageWidget\n\nemail = Email(\"\u4e1a\u52a1\u6570\u636e\u62a5\u544a\")\n\n# \u4e3b\u8981\u6570\u636e\u56fe\u8868\nmain_chart = (ImageWidget()\n              .set_image_url(\"./charts/sales_trend.png\")\n              .set_title(\"\u9500\u552e\u8d8b\u52bf\u5206\u6790\")\n              .set_description(\"\u8fc7\u53bb12\u4e2a\u6708\u7684\u9500\u552e\u6570\u636e\u53d8\u5316\u8d8b\u52bf\")\n              .set_size(width=\"700px\")\n              .set_border_radius(\"6px\"))\n\nemail.add_widget(main_chart)\n\n# \u8865\u5145\u56fe\u8868\nsupport_chart = (ImageWidget()\n                 .set_image_url(\"./charts/region_comparison.png\")\n                 .set_title(\"\u5730\u533a\u5bf9\u6bd4\")\n                 .set_description(\"\u5404\u5730\u533a\u9500\u552e\u8868\u73b0\u5bf9\u6bd4\")\n                 .set_size(width=\"500px\"))\n\nemail.add_widget(support_chart)\n</code></pre>"},{"location":"user-guide/image-widget/#2-product-showcase","title":"2. Product Showcase","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ImageWidget\n\nemail = Email(\"\u65b0\u54c1\u53d1\u5e03\")\n\n# \u4ea7\u54c1\u4e3b\u56fe\nproduct_image = (ImageWidget()\n                 .set_image_url(\"./products/new_product.jpg\")\n                 .set_title(\"\u65b0\u54c1\u5c55\u793a\")\n                 .set_description(\"\u6211\u4eec\u6700\u65b0\u63a8\u51fa\u7684\u9769\u547d\u6027\u4ea7\u54c1\")\n                 .set_size(width=\"400px\", height=\"300px\")\n                 .set_border_radius(\"10px\")\n                 .set_alt_text(\"\u65b0\u4ea7\u54c1\u5916\u89c2\u56fe\u7247\"))\n\nemail.add_widget(product_image)\n</code></pre>"},{"location":"user-guide/image-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_image</code> shortcut method:</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_image(\n    image_url=\"./charts/data.png\",\n    title=\"\u6570\u636e\u56fe\u8868\",\n    description=\"\u5173\u952e\u4e1a\u52a1\u6307\u6807\u5c55\u793a\"\n)\n\n# \u5e26\u6837\u5f0f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_image(\n    image_url=\"./assets/logo.png\",\n    title=\"\u516c\u53f8Logo\",\n    width=\"200px\",\n    border_radius=\"8px\",\n    alt_text=\"\u516c\u53f8\u6807\u5fd7\"\n)\n</code></pre>"},{"location":"user-guide/image-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/image-widget/#q-what-to-do-when-images-dont-display-in-emails","title":"Q: What to do when images don't display in emails?","text":"<p>A: Check the following: - Ensure image file path is correct - Network image URLs are accessible - Image format is common format (PNG, JPEG, etc.)</p>"},{"location":"user-guide/image-widget/#q-how-to-control-image-size","title":"Q: How to control image size?","text":"<p>A: Use <code>set_size()</code> and <code>set_max_width()</code>: Python<pre><code>image.set_size(width=\"600px\").set_max_width(\"100%\")\n</code></pre></p>"},{"location":"user-guide/image-widget/#q-are-dynamic-images-supported","title":"Q: Are dynamic images supported?","text":"<p>A: Yes, use <code>cache=False</code> to disable caching: Python<pre><code>image.set_image_url(\"./dynamic/chart.png\", cache=False)\n</code></pre></p>"},{"location":"user-guide/image-widget/#q-how-to-ensure-accessibility","title":"Q: How to ensure accessibility?","text":"<p>A: Always set meaningful alternative text: Python<pre><code>image.set_alt_text(\"2024\u5e74\u9500\u552e\u6570\u636e\u67f1\u72b6\u56fe\")\n</code></pre></p>"},{"location":"user-guide/image-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>ChartWidget - Component specifically for displaying charts</li> <li>CardWidget - Card component that can contain images</li> <li>ColumnWidget - Used for laying out multiple image components</li> <li>TextWidget - Text component that can be used with images</li> </ul>"},{"location":"user-guide/log-widget/","title":"LogWidget","text":"<p>LogWidget is a professional log display component that supports automatic parsing of loguru format logs, providing level filtering, dark themes, and scrolling display features. It is an important tool for development debugging and operation monitoring, capable of clearly displaying system running status and troubleshooting information.</p>"},{"location":"user-guide/log-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview","text":"\ud83d\udccb \u65e5\u5fd7\u5c55\u793a\u7ec4\u4ef6 \u5e94\u7528\u65e5\u5fd7 2024-01-15 10:30:25 [INFO] (app.py:main:15) \u5e94\u7528\u542f\u52a8\u6210\u529f 2024-01-15 10:30:26 [WARNING] (config.py:load:42) \u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u9ed8\u8ba4\u503c 2024-01-15 10:30:27 [ERROR] (db.py:connect:88) \u6570\u636e\u5e93\u8fde\u63a5\u5931\u8d25 \u65e5\u5fd7\u89e3\u6790 \u7ea7\u522b\u8fc7\u6ee4 \u6df1\u8272\u4e3b\u9898"},{"location":"user-guide/log-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcdd Log Parsing: Supports automatic log parsing in loguru standard format</li> <li>\ud83c\udfa8 Level Filtering: Supports filtering display by log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)</li> <li>\ud83c\udfad Dark Theme: Professional dark background, suitable for long-term viewing</li> <li>\ud83d\udccf Scrolling Display: Can set maximum height, excess content scrolls automatically</li> <li>\u2699\ufe0f Flexible Configuration: Optional display of timestamps, level identifiers, source information</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/log-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/log-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import LogWidget\nfrom email_widget.core.enums import LogLevel\n\n# \u521b\u5efa\u65e5\u5fd7\u7ec4\u4ef6\nlog = LogWidget()\nlog.set_title(\"\u5e94\u7528\u65e5\u5fd7\")\nlog.add_log_entry(\"\u5e94\u7528\u542f\u52a8\u6210\u529f\", LogLevel.INFO)\nlog.add_log_entry(\"\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u5b8c\u6210\", LogLevel.DEBUG)\nlog.add_log_entry(\"\u6570\u636e\u5e93\u8fde\u63a5\u5931\u8d25\", LogLevel.ERROR)\n\nemail = Email(\"\u7cfb\u7edf\u65e5\u5fd7\u62a5\u544a\")\nemail.add_widget(log)\n</code></pre>"},{"location":"user-guide/log-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u89e3\u6790loguru\u683c\u5f0f\u65e5\u5fd7\nlog = LogWidget()\nlog.set_title(\"\u7cfb\u7edf\u8fd0\u884c\u65e5\u5fd7\")\n\n# loguru\u683c\u5f0f\u7684\u65e5\u5fd7\u5b57\u7b26\u4e32\nloguru_logs = [\n    \"2024-01-15 10:30:25.123 | DEBUG | app:main:15 - \u8c03\u8bd5\u4fe1\u606f\",\n    \"2024-01-15 10:30:26.456 | INFO | config:load:42 - \u914d\u7f6e\u52a0\u8f7d\u5b8c\u6210\",\n    \"2024-01-15 10:30:27.789 | WARNING | db:connect:88 - \u6570\u636e\u5e93\u8fde\u63a5\u6162\",\n    \"2024-01-15 10:30:28.012 | ERROR | api:request:156 - API\u8bf7\u6c42\u5931\u8d25\"\n]\n\nlog.set_logs(loguru_logs)\nlog.filter_by_level(LogLevel.WARNING)  # \u53ea\u663e\u793aWARNING\u53ca\u4ee5\u4e0a\u7ea7\u522b\nlog.show_timestamp(True)\nlog.set_max_height(\"400px\")\n\nemail.add_widget(log)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: LogWidget API</p>"},{"location":"user-guide/log-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/log-widget/#log-levels-and-colors","title":"Log Levels and Colors","text":"<ul> <li>DEBUG: Gray (#888888) - Debug information, detailed tracking</li> <li>INFO: Blue (#4fc3f7) - General information, normal flow</li> <li>WARNING: Orange (#ffb74d) - Warning information, needs attention</li> <li>ERROR: Red (#f44336) - Error information, functional anomalies</li> <li>CRITICAL: Dark red (#d32f2f) - Severe errors, system crashes</li> </ul>"},{"location":"user-guide/log-widget/#filter-level-description","title":"Filter Level Description","text":"<p>Setting filter level will display that level and all higher levels: - <code>LogLevel.DEBUG</code>: Show all levels - <code>LogLevel.INFO</code>: Show INFO and above (INFO, WARNING, ERROR, CRITICAL) - <code>LogLevel.WARNING</code>: Show WARNING and above (WARNING, ERROR, CRITICAL) - <code>LogLevel.ERROR</code>: Only show ERROR and CRITICAL</p>"},{"location":"user-guide/log-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/log-widget/#1-application-startup-log","title":"1. Application Startup Log","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import LogWidget\nfrom email_widget.core.enums import LogLevel\nfrom datetime import datetime\n\nemail = Email(\"\u5e94\u7528\u542f\u52a8\u62a5\u544a\")\n\n# \u542f\u52a8\u8fc7\u7a0b\u65e5\u5fd7\nstartup_log = LogWidget()\nstartup_log.set_title(\"\u5e94\u7528\u542f\u52a8\u65e5\u5fd7\")\nstartup_log.add_log_entry(\"\u5f00\u59cb\u542f\u52a8\u5e94\u7528\", LogLevel.INFO, datetime.now())\nstartup_log.add_log_entry(\"\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\", LogLevel.DEBUG, datetime.now())\nstartup_log.add_log_entry(\"\u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\", LogLevel.INFO, datetime.now())\nstartup_log.add_log_entry(\"\u542f\u52a8Web\u670d\u52a1\u5668\", LogLevel.INFO, datetime.now())\nstartup_log.add_log_entry(\"\u5e94\u7528\u542f\u52a8\u5b8c\u6210\", LogLevel.INFO, datetime.now())\nstartup_log.show_timestamp(True)\n\nemail.add_widget(startup_log)\n</code></pre> \u5e94\u7528\u542f\u52a8\u62a5\u544a \u5e94\u7528\u542f\u52a8\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 15:20:30 \u5e94\u7528\u542f\u52a8\u65e5\u5fd7 2024-01-15 10:30:00.123 | INFO | app:main:15 - \u5f00\u59cb\u542f\u52a8\u5e94\u7528 2024-01-15 10:30:00.456 | DEBUG | config:load:42 - \u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 config/app.yaml 2024-01-15 10:30:00.789 | DEBUG | env:parse:28 - \u89e3\u6790\u73af\u5883\u53d8\u91cf (12\u4e2a\u53d8\u91cf\u5df2\u52a0\u8f7d) 2024-01-15 10:30:01.012 | INFO | db:connect:88 - \u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5 (PostgreSQL 14.2) 2024-01-15 10:30:01.345 | DEBUG | db:pool:156 - \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u521b\u5efa\u6210\u529f (\u6700\u5927\u8fde\u63a5\u6570: 20) 2024-01-15 10:30:01.678 | INFO | web:server:200 - \u542f\u52a8Web\u670d\u52a1\u5668 (\u7aef\u53e3: 8080) 2024-01-15 10:30:01.901 | DEBUG | routes:register:45 - \u6ce8\u518c\u8def\u7531\u5904\u7406\u5668 (25\u4e2a\u8def\u7531\u5df2\u6ce8\u518c) 2024-01-15 10:30:02.234 | INFO | scheduler:start:78 - \u542f\u52a8\u540e\u53f0\u4efb\u52a1\u8c03\u5ea6\u5668 2024-01-15 10:30:02.567 | INFO | app:main:180 - \u5e94\u7528\u542f\u52a8\u5b8c\u6210 (\u603b\u8017\u65f6: 2.444\u79d2) 2024-01-15 10:30:02.890 | INFO | app:ready:185 - \u670d\u52a1\u5c31\u7eea\uff0c\u7b49\u5f85\u8bf7\u6c42\u5904\u7406... <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/log-widget/#2-error-log-monitoring","title":"2. Error Log Monitoring","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import LogWidget\nfrom email_widget.core.enums import LogLevel\n\nemail = Email(\"\u9519\u8bef\u65e5\u5fd7\u62a5\u544a\")\n\n# \u53ea\u663e\u793a\u9519\u8bef\u7ea7\u522b\u65e5\u5fd7\nerror_log = LogWidget()\nerror_log.set_title(\"\u9519\u8bef\u65e5\u5fd7\u76d1\u63a7\")\nerror_log.filter_by_level(LogLevel.ERROR)  # \u53ea\u663e\u793aERROR\u548cCRITICAL\n\n# \u6dfb\u52a0\u9519\u8bef\u65e5\u5fd7\nerror_log.add_log_entry(\"\u6570\u636e\u5e93\u8fde\u63a5\u8d85\u65f6\", LogLevel.ERROR, datetime.now(), \"database\", \"connect\", 88)\nerror_log.add_log_entry(\"API\u8bf7\u6c42\u5931\u8d25\", LogLevel.ERROR, datetime.now(), \"api\", \"request\", 156)\nerror_log.add_log_entry(\"\u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\", LogLevel.CRITICAL, datetime.now(), \"system\", \"memory\", 200)\n\nerror_log.show_timestamp(True)\nerror_log.show_source(True)\nerror_log.set_max_height(\"300px\")\n\nemail.add_widget(error_log)\n</code></pre> \u9519\u8bef\u65e5\u5fd7\u62a5\u544a \u9519\u8bef\u65e5\u5fd7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 15:22:15 \ud83d\udcca \u9519\u8bef\u7edf\u8ba1\u6c47\u603b 3 ERROR\u7ea7\u522b 1 CRITICAL\u7ea7\u522b 4 \u603b\u9519\u8bef\u6570 \ud83d\udea8\u9519\u8bef\u65e5\u5fd7\u76d1\u63a7                      2024-01-15 16:45:23.789 | CRITICAL | system:memory:200 - \u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\uff0c\u53ef\u7528\u5185\u5b58\u4ec5\u5269158MB 2024-01-15 16:42:15.456 | ERROR | database:connect:88 - \u6570\u636e\u5e93\u8fde\u63a5\u8d85\u65f6\uff0c\u65e0\u6cd5\u5efa\u7acb\u8fde\u63a5 2024-01-15 16:38:47.123 | ERROR | api:request:156 - API\u8bf7\u6c42\u5931\u8d25\uff0c\u8fd4\u56de500\u5185\u90e8\u670d\u52a1\u5668\u9519\u8bef 2024-01-15 16:35:12.890 | ERROR | cache:redis:92 - Redis\u7f13\u5b58\u670d\u52a1\u4e0d\u53ef\u7528\uff0c\u5207\u6362\u5230\u672c\u5730\u7f13\u5b58 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210 | \ud83d\udea8 \u7d27\u6025\u95ee\u9898\u8bf7\u8054\u7cfb\u8fd0\u7ef4\u56e2\u961f</p>"},{"location":"user-guide/log-widget/#3-system-operations-log","title":"3. System Operations Log","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import LogWidget\n\nemail = Email(\"\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\")\n\n# \u7cfb\u7edf\u4e8b\u4ef6\u65e5\u5fd7\nops_log = LogWidget()\nops_log.set_title(\"\u8fd0\u7ef4\u4e8b\u4ef6\u65e5\u5fd7\")\n\n# \u6279\u91cf\u8bbe\u7f6eloguru\u683c\u5f0f\u65e5\u5fd7\nops_logs = [\n    \"2024-01-15 08:00:00 | INFO | system:startup:10 - \u670d\u52a1\u5668\u542f\u52a8\u5b8c\u6210\",\n    \"2024-01-15 12:00:00 | INFO | backup:auto:25 - \u6570\u636e\u5e93\u81ea\u52a8\u5907\u4efd\u5b8c\u6210\",\n    \"2024-01-15 14:30:00 | WARNING | monitor:memory:45 - \u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523085%\",\n    \"2024-01-15 15:45:00 | ERROR | service:redis:88 - Redis\u8fde\u63a5\u8d85\u65f6\",\n    \"2024-01-15 16:15:00 | INFO | service:redis:92 - Redis\u670d\u52a1\u91cd\u542f\uff0c\u8fde\u63a5\u6062\u590d\"\n]\n\nops_log.set_logs(ops_logs)\nops_log.show_timestamps(True)\nops_log.set_reverse_order(True)  # \u6700\u65b0\u65e5\u5fd7\u5728\u524d\nops_log.set_max_height(\"500px\")\n\nemail.add_widget(ops_log)\n</code></pre> \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 15:23:00 99.9% \u7cfb\u7edf\u53ef\u7528\u6027 5 \u8fd0\u7ef4\u4e8b\u4ef6 1 \u544a\u8b66\u5904\u7406 16h \u8fd0\u884c\u65f6\u95f4 \u2699\ufe0f\u8fd0\u7ef4\u4e8b\u4ef6\u65e5\u5fd7                      2024-01-15 16:15:00.234 | INFO | service:redis:92 - Redis\u670d\u52a1\u91cd\u542f\uff0c\u8fde\u63a5\u6062\u590d\u6b63\u5e38 2024-01-15 15:45:00.123 | ERROR | service:redis:88 - Redis\u8fde\u63a5\u8d85\u65f6\uff0c\u5f00\u59cb\u6545\u969c\u8f6c\u79fb 2024-01-15 14:30:00.567 | WARNING | monitor:memory:45 - \u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523085%\uff0c\u89e6\u53d1\u76d1\u63a7\u544a\u8b66 2024-01-15 12:00:00.789 | INFO | backup:auto:25 - \u6570\u636e\u5e93\u81ea\u52a8\u5907\u4efd\u5b8c\u6210 (\u5907\u4efd\u5927\u5c0f: 2.4GB) 2024-01-15 08:00:00.012 | INFO | system:startup:10 - \u670d\u52a1\u5668\u542f\u52a8\u5b8c\u6210\uff0c\u6240\u6709\u670d\u52a1\u6b63\u5e38\u8fd0\u884c 2024-01-15 02:00:00.345 | INFO | cron:cleanup:30 - \u5b9a\u65f6\u6e05\u7406\u4efb\u52a1\u5b8c\u6210\uff0c\u91ca\u653e\u78c1\u76d8\u7a7a\u95f4: 1.2GB <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210 | \u8fd0\u7ef4\u56e2\u961f: ops@company.com</p>"},{"location":"user-guide/log-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_log</code> shortcut method:</p> Python<pre><code># \u5feb\u6377\u6dfb\u52a0\u65e5\u5fd7\u7ec4\u4ef6\nemail.add_log(\n    title=\"\u7cfb\u7edf\u65e5\u5fd7\",\n    logs=[\n        (\"\u5e94\u7528\u542f\u52a8\", \"info\"),\n        (\"\u914d\u7f6e\u52a0\u8f7d\", \"debug\"),\n        (\"\u8fde\u63a5\u5f02\u5e38\", \"error\")\n    ],\n    show_time=True,\n    max_height=\"400px\"\n)\n\n# \u6dfb\u52a0loguru\u683c\u5f0f\u65e5\u5fd7\nemail.add_log(\n    title=\"\u8fd0\u884c\u65e5\u5fd7\",\n    loguru_logs=[\n        \"2024-01-15 10:30:25 | INFO | app:main:15 - \u5e94\u7528\u8fd0\u884c\u6b63\u5e38\",\n        \"2024-01-15 10:30:26 | WARNING | db:query:42 - \u67e5\u8be2\u8017\u65f6\u8f83\u957f\"\n    ],\n    filter_level=\"warning\"\n)\n</code></pre>"},{"location":"user-guide/log-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/log-widget/#q-how-to-handle-large-amounts-of-log-data","title":"Q: How to handle large amounts of log data?","text":"<p>A: Set reasonable maximum height and log entry limits: Python<pre><code>log.set_max_height(\"400px\")\nlog.filter_by_level(LogLevel.WARNING)  # \u53ea\u663e\u793a\u91cd\u8981\u65e5\u5fd7\n</code></pre></p>"},{"location":"user-guide/log-widget/#q-can-log-time-format-be-customized","title":"Q: Can log time format be customized?","text":"<p>A: Currently uses fixed format, can pre-format when adding: Python<pre><code>formatted_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\nlog.add_log_entry(\"\u6d88\u606f\", LogLevel.INFO, formatted_time)\n</code></pre></p>"},{"location":"user-guide/log-widget/#q-how-to-implement-real-time-log-updates","title":"Q: How to implement real-time log updates?","text":"<p>A: Achieved by periodically calling add methods: Python<pre><code># \u5b9a\u671f\u6dfb\u52a0\u65b0\u65e5\u5fd7\nlog.add_log_entry(\"\u65b0\u4e8b\u4ef6\", LogLevel.INFO)\nlog.append_log(\"2024-01-15 10:30:25 | INFO | app:event:15 - \u65b0\u4e8b\u4ef6\u53d1\u751f\")\n</code></pre></p>"},{"location":"user-guide/log-widget/#q-how-to-search-logs-with-specific-content","title":"Q: How to search logs with specific content?","text":"<p>A: Filter content before adding: Python<pre><code>keyword = \"\u6570\u636e\u5e93\"\nif keyword in log_message:\n    log.add_log_entry(log_message, LogLevel.INFO)\n</code></pre></p>"},{"location":"user-guide/log-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>StatusWidget - System status information display</li> <li>AlertWidget - Important log alert information</li> <li>TextWidget - Simple text log display</li> <li>CardWidget - Card that can contain logs</li> <li>ColumnWidget - Used for laying out multiple log widgets</li> </ul>"},{"location":"user-guide/metric-widget/","title":"MetricWidget","text":"<p>MetricWidget is a component for displaying key data metrics in emails. It can show KPIs, data trends, business metrics and other information, supporting trend analysis, number formatting, and multiple layout configurations, making it ideal for data reports and dashboard emails.</p>"},{"location":"user-guide/metric-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview1. \u6307\u6807\u7ec4\u4ef6\u5c55\u793a","text":"\u6307\u6807\u7ec4\u4ef6\u9884\u89c8 \u6307\u6807\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:55:21 \u5173\u952e\u6307\u6807                      125,890\u2197 +15% \u603b\u7528\u6237\u6570 \u2014 success                      98,456\u2197 +8% \u6d3b\u8dc3\u7528\u6237 \u2014 success                      3.2%\u2198 -0.5% \u8f6c\u5316\u7387 \u2014 warning                      \u00a5458,290\u2197 +12% \u6536\u5165 \u2014 success                      215ms\u2197 +45ms \u54cd\u5e94\u65f6\u95f4 \u2014 error <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/metric-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcca Data Display: Supports complete metric display including values, units, and trend changes</li> <li>\ud83d\udcc8 Trend Analysis: Automatically identifies trend direction, provides visual trend indicators</li> <li>\ud83c\udfa8 Status Themes: Theme color configuration based on StatusType, such as success, warning, error, etc.</li> <li>\ud83d\udccf Layout Options: Supports horizontal and vertical layouts to adapt to different display needs</li> <li>\ud83d\udd22 Number Formatting: Automatically formats large numbers, using K, M suffixes to simplify display</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/metric-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/metric-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import MetricWidget\n\n# \u521b\u5efa\u57fa\u7840\u6307\u6807\u7ec4\u4ef6\nmetric = MetricWidget()\nmetric.set_title(\"\u6838\u5fc3\u6307\u6807\")\nmetric.add_metric(\"\u6d3b\u8dc3\u7528\u6237\", 12345, \"\u4eba\")\nmetric.add_metric(\"\u6708\u6536\u5165\", \"\u00a51,250,000\")\nmetric.add_metric(\"\u8f6c\u5316\u7387\", \"3.2\", \"%\")\n\nemail = Email(\"\u4e1a\u52a1\u6570\u636e\u62a5\u544a\")\nemail.add_widget(metric)\n</code></pre>"},{"location":"user-guide/metric-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u521b\u5efa\u5e26\u8d8b\u52bf\u7684\u8be6\u7ec6\u6307\u6807\nmetric = MetricWidget()\nmetric.set_title(\"\u4e1a\u52a1\u5173\u952e\u6307\u6807\")\nmetric.add_metric(\"\u65b0\u7528\u6237\u6ce8\u518c\", 1567, \"\u4eba\", \"+15.6%\", \"success\", \"\u8f83\u4e0a\u6708\u589e\u957f\u663e\u8457\")\nmetric.add_metric(\"\u7528\u6237\u6d3b\u8dc3\u5ea6\", \"78.9\", \"%\", \"+2.3%\", \"success\", \"\u7528\u6237\u53c2\u4e0e\u5ea6\u63d0\u5347\")\nmetric.add_metric(\"\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\", \"156\", \"ms\", \"+12ms\", \"warning\", \"\u9700\u8981\u4f18\u5316\u6027\u80fd\")\nmetric.add_metric(\"\u9519\u8bef\u7387\", \"0.23\", \"%\", \"-0.1%\", \"success\", \"\u7cfb\u7edf\u7a33\u5b9a\u6027\u6539\u5584\")\nmetric.set_layout(\"horizontal\")\nmetric.show_trends(True)\n\nemail.add_widget(metric)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: MetricWidget API</p>"},{"location":"user-guide/metric-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/metric-widget/#trend-status-types-and-colors","title":"Trend Status Types and Colors","text":"<ul> <li>success: Green (#107c10) - Positive growth, target achieved, good performance</li> <li>warning: Orange (#ff8c00) - Needs attention, slight deterioration, approaching threshold</li> <li>error: Red (#d13438) - Negative change, exceeding threshold, serious problems</li> <li>info: Blue (#0078d4) - Neutral information, regular data, reference metrics</li> <li>primary: Blue (#0078d4) - Important metrics, key data, main KPIs</li> </ul>"},{"location":"user-guide/metric-widget/#number-formatting-rules","title":"Number Formatting Rules","text":"<ul> <li>1,000,000+: Display as \"1M\", \"1.2M\"</li> <li>1,000+: Display as \"1K\", \"5.3K\"</li> <li>Less than 1,000: Display original number \"123\", \"89.5\"</li> </ul>"},{"location":"user-guide/metric-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/metric-widget/#1-business-dashboard","title":"1. Business Dashboard\u6838\u5fc3KPI\u8fd0\u8425\u6548\u7387","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.metric_widget import MetricWidget\n\n# \u521b\u5efa\u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f\u90ae\u4ef6\nemail = Email(\"\u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f\")\n\n# \u6838\u5fc3\u4e1a\u52a1\u6307\u6807\nmetric1 = MetricWidget()\nmetric1.set_title(\"\u6838\u5fc3KPI\")\nmetric1.add_metric(\"\u6708\u6d3b\u7528\u6237\", 125436, \"\u4eba\", \"+15.6%\", \"success\", \"\u7528\u6237\u589e\u957f\u5f3a\u52b2\")\nmetric1.add_metric(\"\u6708\u6536\u5165\", 2850000, \"\u5143\", \"+18.2%\", \"success\", \"\u6536\u5165\u521b\u5386\u53f2\u65b0\u9ad8\")\nmetric1.add_metric(\"\u8f6c\u5316\u7387\", \"4.23\", \"%\", \"+0.8%\", \"success\", \"\u8f6c\u5316\u6548\u679c\u63d0\u5347\")\nmetric1.add_metric(\"\u5ba2\u5355\u4ef7\", \"168.5\", \"\u5143\", \"-2.3%\", \"warning\", \"\u9700\u8981\u5173\u6ce8\u5b9a\u4ef7\u7b56\u7565\")\nmetric1.set_layout(\"horizontal\")\nmetric1.show_trends(True)\n\nemail.add_widget(metric1)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"business_dashboard.html\")\n</code></pre> \u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f \u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:20:59                      125K\u4eba \u6708\u6d3b\u7528\u6237 \u2197 +15.6% \u7528\u6237\u589e\u957f\u5f3a\u52b2                      2M\u5143 \u6708\u6536\u5165 \u2197 +18.2% \u6536\u5165\u521b\u5386\u53f2\u65b0\u9ad8                      4.23% \u8f6c\u5316\u7387 \u2197 +0.8% \u8f6c\u5316\u6548\u679c\u63d0\u5347                      168.5\u5143 \u5ba2\u5355\u4ef7 \u2192 -2.3% \u9700\u8981\u5173\u6ce8\u5b9a\u4ef7\u7b56\u7565                      567K\u6b21 \u9875\u9762\u8bbf\u95ee\u91cf \u2197 +22.1%                      24.5% \u8df3\u51fa\u7387 \u2197 -3.2%                      3.8\u5206\u949f \u5e73\u5747\u505c\u7559 \u2192 +0.6\u5206\u949f                      12.3% \u6ce8\u518c\u8f6c\u5316 \u2197 +1.8% <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/metric-widget/#2-system-performance-monitoring","title":"2. System Performance Monitoring\u7cfb\u7edf\u8d44\u6e90\u5e94\u7528\u6027\u80fd","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.metric_widget import MetricWidget\n\n# \u521b\u5efa\u7cfb\u7edf\u6027\u80fd\u62a5\u544a\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u6027\u80fd\u62a5\u544a\")\n\n# \u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\nmetric = MetricWidget()\nmetric.set_title(\"\u7cfb\u7edf\u8d44\u6e90\")\nmetric.add_metric(\"CPU\u4f7f\u7528\u7387\", \"45.2\", \"%\", \"+2.1%\", \"warning\", \"\u8d1f\u8f7d\u7565\u6709\u4e0a\u5347\")\nmetric.add_metric(\"\u5185\u5b58\u4f7f\u7528\u7387\", \"78.5\", \"%\", \"-1.3%\", \"success\", \"\u5185\u5b58\u4f7f\u7528\u6b63\u5e38\")\nmetric.add_metric(\"\u78c1\u76d8I/O\", \"234\", \"MB/s\", \"+45MB/s\", \"info\", \"\u8bfb\u5199\u9891\u7387\u589e\u52a0\")\nmetric.add_metric(\"\u7f51\u7edc\u5e26\u5bbd\", \"1.2\", \"GB/s\", \"+0.3GB/s\", \"info\", \"\u6d41\u91cf\u589e\u957f\u7a33\u5b9a\")\nmetric.set_layout(\"horizontal\")\n\nemail.add_widget(metric)\n</code></pre> \u7cfb\u7edf\u6027\u80fd\u62a5\u544a \u7cfb\u7edf\u6027\u80fd\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:21:24                      45.2% CPU\u4f7f\u7528\u7387 \u2192 +2.1% \u8d1f\u8f7d\u7565\u6709\u4e0a\u5347                      78.5% \u5185\u5b58\u4f7f\u7528\u7387 \u2197 -1.3% \u5185\u5b58\u4f7f\u7528\u6b63\u5e38                      234MB/s \u78c1\u76d8I/O \u2192 +45MB/s \u8bfb\u5199\u9891\u7387\u589e\u52a0                      1.2GB/s \u7f51\u7edc\u5e26\u5bbd \u2192 +0.3GB/s \u6d41\u91cf\u589e\u957f\u7a33\u5b9a                      156ms \u5e73\u5747\u54cd\u5e94\u65f6\u95f4 \u2192 +12ms \u54cd\u5e94\u65f6\u95f4\u7565\u6709\u589e\u52a0                      2456\u8bf7\u6c42/\u79d2 QPS \u2197 +234 \u5904\u7406\u80fd\u529b\u63d0\u5347                      0.23% \u9519\u8bef\u7387 \u2197 -0.1% \u7cfb\u7edf\u7a33\u5b9a\u6027\u6539\u5584                      99.95% \u53ef\u7528\u6027 \u2192 -0.02% \u53ef\u7528\u6027\u7565\u6709\u4e0b\u964d <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/metric-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_metric</code> shortcut method:</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_metric(\n    title=\"\u6838\u5fc3\u6307\u6807\",\n    metrics=[\n        (\"\u6307\u68071\", 1234, \"\u5355\u4f4d\", \"+10%\", \"success\", \"\u63cf\u8ff0\"),\n        (\"\u6307\u68072\", \"5.6\", \"%\", \"-2%\", \"warning\"),\n        (\"\u6307\u68073\", \"\u00a51,250,000\", \"\", \"+15%\", \"success\")\n    ],\n    layout=\"horizontal\",\n    show_trends=True\n)\n</code></pre>"},{"location":"user-guide/metric-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/metric-widget/#q-recommendations-for-choosing-horizontal-vs-vertical-layout","title":"Q: Recommendations for choosing horizontal vs vertical layout?","text":"<p>A:  - Horizontal Layout: Suitable for 3-5 core metrics, displayed in one row - Vertical Layout: Suitable for detailed metric lists, each metric takes one row</p>"},{"location":"user-guide/metric-widget/#q-how-to-customize-number-format","title":"Q: How to customize number format?","text":"<p>A: Pass pre-formatted string as value: Python<pre><code>metric.add_metric(\"\u81ea\u5b9a\u4e49\", \"1,234.56\", \"\u4e07\u5143\")      # \u81ea\u5b9a\u4e49\u683c\u5f0f\nmetric.add_metric(\"\u767e\u5206\u6bd4\", \"99.95\", \"%\")            # \u4fdd\u7559\u5c0f\u6570\n</code></pre></p>"},{"location":"user-guide/metric-widget/#q-why-dont-trends-show","title":"Q: Why don't trends show?","text":"<p>A: Make sure you called the <code>show_trends(True)</code> method.</p>"},{"location":"user-guide/metric-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>ProgressWidget - Progress bar display</li> <li>CircularProgressWidget - Circular progress metrics</li> <li>StatusWidget - Status information display</li> <li>CardWidget - Card that can contain metrics</li> <li>TableWidget - Tabular data display</li> </ul>"},{"location":"user-guide/progress-widget/","title":"ProgressWidget","text":"<p>ProgressWidget is a linear progress bar component used to display task or process completion progress. It supports multiple theme colors, percentage display, and flexible style configuration, suitable for displaying various progress information.</p>"},{"location":"user-guide/progress-widget/#widget-preview","title":"Widget Preview","text":"Project Completion Progress 75% Task Success Rate 92% Disk Usage 85%"},{"location":"user-guide/progress-widget/#main-features","title":"Main Features","text":""},{"location":"user-guide/progress-widget/#multiple-theme-colors","title":"\ud83c\udfa8 Multiple Theme Colors","text":"<ul> <li>PRIMARY (Primary): General progress, default status</li> <li>SUCCESS (Success green): Successful progress, healthy status  </li> <li>WARNING (Warning orange): Warning progress, attention status</li> <li>ERROR (Error red): Error progress, danger status</li> <li>INFO (Info blue): Information progress, neutral status</li> </ul>"},{"location":"user-guide/progress-widget/#progress-management","title":"\ud83d\udcca Progress Management","text":"<ul> <li>Supports custom maximum and current values</li> <li>Automatic percentage calculation</li> <li>Provides increment/decrement operations</li> <li>Supports reset and complete operations</li> </ul>"},{"location":"user-guide/progress-widget/#style-configuration","title":"\u2699\ufe0f Style Configuration","text":"<ul> <li>Customizable width, height, border radius</li> <li>Supports show/hide percentage text</li> <li>Can set background color</li> <li>Supports label display</li> </ul>"},{"location":"user-guide/progress-widget/#core-methods","title":"Core Methods","text":""},{"location":"user-guide/progress-widget/#set_valuevalue-float","title":"<code>set_value(value: float)</code>","text":"<p>Sets the current progress value.</p> Python<pre><code>from email_widget.widgets import ProgressWidget\n\nprogress = ProgressWidget().set_value(75.5)\n</code></pre>"},{"location":"user-guide/progress-widget/#set_max_valuemax_val-float","title":"<code>set_max_value(max_val: float)</code>","text":"<p>Sets the maximum value, default is 100.</p> Python<pre><code>progress = ProgressWidget().set_value(850).set_max_value(1000)  # 85%\n</code></pre>"},{"location":"user-guide/progress-widget/#set_labellabel-str","title":"<code>set_label(label: str)</code>","text":"<p>Sets the progress bar label.</p> Python<pre><code>progress = (ProgressWidget()\n    .set_value(60)\n    .set_label(\"\u4e0b\u8f7dProgress\"))\n</code></pre>"},{"location":"user-guide/progress-widget/#set_themetheme-progresstheme","title":"<code>set_theme(theme: ProgressTheme)</code>","text":"<p>Sets the progress bar theme color.</p> Python<pre><code>from email_widget.core.enums import ProgressTheme\n\n# \u4e0d\u540c\u4e3b\u9898\u7684Progress\u6761\nprimary = ProgressWidget().set_value(50).set_theme(ProgressTheme.PRIMARY)\nsuccess = ProgressWidget().set_value(95).set_theme(ProgressTheme.SUCCESS)\nwarning = ProgressWidget().set_value(80).set_theme(ProgressTheme.WARNING)\nerror = ProgressWidget().set_value(15).set_theme(ProgressTheme.ERROR)\n</code></pre>"},{"location":"user-guide/progress-widget/#show_percentageshow-bool-true","title":"<code>show_percentage(show: bool = True)</code>","text":"<p>Controls whether to display percentage text.</p> Python<pre><code># \u9690\u85cfPercentage\nprogress = (ProgressWidget()\n    .set_value(45)\n    .set_label(\"\u5904\u7406Progress\")\n    .show_percentage(False))\n</code></pre>"},{"location":"user-guide/progress-widget/#incrementamount-float-10","title":"<code>increment(amount: float = 1.0)</code>","text":"<p>Increases progress value.</p> Python<pre><code>progress = ProgressWidget().set_value(50)\nprogress.increment(10)  # \u73b0\u5728\u662f60\nprogress.increment()    # \u73b0\u5728\u662f61\uff08\u9ed8\u8ba4\u589e\u52a01\uff09\n</code></pre>"},{"location":"user-guide/progress-widget/#decrementamount-float-10","title":"<code>decrement(amount: float = 1.0)</code>","text":"<p>Decreases progress value.</p> Python<pre><code>progress = ProgressWidget().set_value(50)\nprogress.decrement(5)   # \u73b0\u5728\u662f45\n</code></pre>"},{"location":"user-guide/progress-widget/#reset","title":"<code>reset()</code>","text":"<p>Resets progress to 0.</p> Python<pre><code>progress = ProgressWidget().set_value(80)\nprogress.reset()  # \u73b0\u5728\u662f0\n</code></pre>"},{"location":"user-guide/progress-widget/#complete","title":"<code>complete()</code>","text":"<p>Sets to complete status (100%).</p> Python<pre><code>progress = ProgressWidget().set_value(80)\nprogress.complete()  # \u73b0\u5728\u662f100%\n</code></pre>"},{"location":"user-guide/progress-widget/#practical-examples","title":"Practical Examples","text":""},{"location":"user-guide/progress-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget.widgets import ProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\n# \u57fa\u672cProgress\u6761\nbasic = (ProgressWidget()\n    .set_value(65)\n    .set_label(\"TaskComplete\u5ea6\")\n    .set_theme(ProgressTheme.PRIMARY))\n\n# \u6210\u529fStatusProgress\u6761\nsuccess = (ProgressWidget()\n    .set_value(95)\n    .set_label(\"\u6d4b\u8bd5\u901a\u8fc7\u7387\")\n    .set_theme(ProgressTheme.SUCCESS))\n\n# AlertStatusProgress\u6761\nwarning = (ProgressWidget()\n    .set_value(85)\n    .set_label(\"\u5185\u5b58\u4f7f\u7528\u7387\")\n    .set_theme(ProgressTheme.WARNING))\n</code></pre>"},{"location":"user-guide/progress-widget/#custom-styling","title":"Custom Styling","text":"Python<pre><code># \u81ea\u5b9a\u4e49\u5c3a\u5bf8\u548c\u989c\u8272\ncustom = (ProgressWidget()\n    .set_value(70)\n    .set_label(\"\u81ea\u5b9a\u4e49Progress\u6761\")\n    .set_width(\"80%\")\n    .set_height(\"24px\")\n    .set_border_radius(\"12px\")\n    .set_background_color(\"#f0f0f0\"))\n\n# \u65e0Percentage\u663e\u793a\nno_percent = (ProgressWidget()\n    .set_value(40)\n    .set_label(\"\u9759\u9ed8Progress\")\n    .show_percentage(False)\n    .set_theme(ProgressTheme.INFO))\n</code></pre>"},{"location":"user-guide/progress-widget/#system-monitoring-scenarios","title":"System Monitoring Scenarios","text":"Python<pre><code># CPU\u4f7f\u7528\u7387\ncpu_usage = (ProgressWidget()\n    .set_value(45)\n    .set_label(\"CPU\u4f7f\u7528\u7387\")\n    .set_theme(ProgressTheme.SUCCESS))\n\n# \u5185\u5b58\u4f7f\u7528\u7387\uff08AlertStatus\uff09\nmemory_usage = (ProgressWidget()\n    .set_value(78)\n    .set_label(\"\u5185\u5b58\u4f7f\u7528\u7387\")\n    .set_theme(ProgressTheme.WARNING))\n\n# \u78c1\u76d8\u4f7f\u7528\u7387\uff08\u5371\u9669Status\uff09\ndisk_usage = (ProgressWidget()\n    .set_value(92)\n    .set_label(\"\u78c1\u76d8\u4f7f\u7528\u7387\")\n    .set_theme(ProgressTheme.ERROR))\n</code></pre>"},{"location":"user-guide/progress-widget/#task-progress-management","title":"Task Progress Management","text":"Python<pre><code># ProjectProgress\nproject_progress = (ProgressWidget()\n    .set_value(0)\n    .set_label(\"Project\u603bProgress\")\n    .set_theme(ProgressTheme.PRIMARY))\n\n# \u6a21\u62dfTaskProgress\u66f4\u65b0\nproject_progress.increment(25)  # 25%\nproject_progress.increment(30)  # 55%\nproject_progress.increment(20)  # 75%\n\n# Data\u5904\u7406Progress\ndata_processing = (ProgressWidget()\n    .set_value(1250)\n    .set_max_value(2000)\n    .set_label(\"Data\u5904\u7406Progress\")\n    .set_theme(ProgressTheme.INFO))  # 62.5%\n</code></pre>"},{"location":"user-guide/progress-widget/#business-metrics-display","title":"Business Metrics Display","text":"Python<pre><code># \u9500\u552e\u76ee\u6807Complete\u5ea6\nsales_target = (ProgressWidget()\n    .set_value(1250000)\n    .set_max_value(1000000)  # \u8d85\u989dComplete\n    .set_label(\"\u6708\u5ea6\u9500\u552e\u76ee\u6807\")\n    .set_theme(ProgressTheme.SUCCESS))  # 125%\n\n# \u7528\u6237\u6ee1\u610f\u5ea6\nsatisfaction = (ProgressWidget()\n    .set_value(88)\n    .set_label(\"\u7528\u6237\u6ee1\u610f\u5ea6\")\n    .set_theme(ProgressTheme.SUCCESS))\n\n# TaskComplete\u7387\ntask_completion = (ProgressWidget()\n    .set_value(156)\n    .set_max_value(200)\n    .set_label(\"\u672c\u5468TaskComplete\u7387\")\n    .set_theme(ProgressTheme.PRIMARY))  # 78%\n</code></pre>"},{"location":"user-guide/progress-widget/#progress-theme-details","title":"Progress Theme Details","text":""},{"location":"user-guide/progress-widget/#progresstheme-enum-values","title":"ProgressTheme Enum Values","text":"Theme Color Hex Use Cases <code>PRIMARY</code> Primary blue <code>#0078d4</code> General progress, default status, project progress <code>SUCCESS</code> Success green <code>#107c10</code> Successful progress, healthy status, high completion rate <code>WARNING</code> Warning orange <code>#ff8c00</code> Warning progress, attention status, medium risk <code>ERROR</code> Error red <code>#d13438</code> Error progress, danger status, high risk <code>INFO</code> Info blue <code>#0078d4</code> Information progress, neutral status, data display"},{"location":"user-guide/progress-widget/#theme-selection-guide","title":"Theme Selection Guide","text":"Python<pre><code># \u6839\u636eProgress\u503c\u9009\u62e9\u5408\u9002\u7684\u4e3b\u9898\ndef get_progress_theme(value, max_value=100):\n    percentage = (value / max_value) * 100\n\n    if percentage &gt;= 90:\n        return ProgressTheme.SUCCESS\n    elif percentage &gt;= 70:\n        return ProgressTheme.PRIMARY\n    elif percentage &gt;= 50:\n        return ProgressTheme.WARNING\n    else:\n        return ProgressTheme.ERROR\n\n# \u4f7f\u7528\u793a\u4f8b\nprogress_value = 85\ntheme = get_progress_theme(progress_value)\nprogress = ProgressWidget().set_value(progress_value).set_theme(theme)\n</code></pre>"},{"location":"user-guide/progress-widget/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/progress-widget/#1-choose-appropriate-theme","title":"1. Choose Appropriate Theme","text":"Python<pre><code># \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u6839\u636eProgressStatus\u9009\u62e9\u4e3b\u9898\nlow_progress = ProgressWidget().set_value(25).set_theme(ProgressTheme.ERROR)\nmedium_progress = ProgressWidget().set_value(60).set_theme(ProgressTheme.WARNING)\nhigh_progress = ProgressWidget().set_value(90).set_theme(ProgressTheme.SUCCESS)\n\n# \u274c \u907f\u514d\uff1a\u6240\u6709Progress\u6761\u90fd\u4f7f\u7528\u540c\u4e00\u4e3b\u9898\n</code></pre>"},{"location":"user-guide/progress-widget/#2-provide-clear-labels","title":"2. Provide Clear Labels","text":"Python<pre><code># \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u63cf\u8ff0\u6027\u7684\u6807\u7b7e\nprogress = ProgressWidget().set_value(75).set_label(\"Data\u540c\u6b65Progress\")\n\n# \u274c \u907f\u514d\uff1a\u6a21\u7cca\u7684\u6807\u7b7e\nprogress = ProgressWidget().set_value(75).set_label(\"Progress\")\n</code></pre>"},{"location":"user-guide/progress-widget/#3-set-reasonable-maximum-values","title":"3. Set Reasonable Maximum Values","text":"Python<pre><code># \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u6839\u636e\u5b9e\u9645\u573a\u666f\u8bbe\u7f6e\u6700\u5927\u503c\nfile_progress = ProgressWidget().set_value(512).set_max_value(1024).set_label(\"\u6587\u4ef6\u4e0b\u8f7d\")  # MB\ntask_progress = ProgressWidget().set_value(8).set_max_value(10).set_label(\"TaskComplete\")      # \u4e2a\n\n# \u2705 \u597d\u7684\u505a\u6cd5\uff1aPercentage\u573a\u666f\u4f7f\u7528\u9ed8\u8ba4\u6700\u5927\u503c100\npercent_progress = ProgressWidget().set_value(85).set_label(\"Complete\u7387\")\n</code></pre>"},{"location":"user-guide/progress-widget/#4-show-percentage-appropriately","title":"4. Show Percentage Appropriately","text":"Python<pre><code># \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u91cd\u8981Progress\u663e\u793aPercentage\nimportant = ProgressWidget().set_value(90).set_label(\"\u5173\u952eTask\").show_percentage(True)\n\n# \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u88c5\u9970\u6027Progress\u9690\u85cfPercentage\ndecorative = ProgressWidget().set_value(60).set_label(\"\u6574\u4f53Status\").show_percentage(False)\n</code></pre>"},{"location":"user-guide/progress-widget/#common-issues","title":"Common Issues","text":""},{"location":"user-guide/progress-widget/#q-how-to-implement-progress-over-100","title":"Q: How to implement progress over 100%?","text":"<p>A: Set a larger maximum value, e.g., <code>set_max_value(120)</code> then <code>set_value(110)</code>.</p>"},{"location":"user-guide/progress-widget/#q-can-progress-bars-display-negative-values","title":"Q: Can progress bars display negative values?","text":"<p>A: No, progress values are limited between 0 and maximum value.</p>"},{"location":"user-guide/progress-widget/#q-how-to-implement-dynamic-progress-updates","title":"Q: How to implement dynamic progress updates?","text":"<p>A: Use <code>increment()</code> in code or directly update <code>set_value()</code>, but need to re-render the email.</p>"},{"location":"user-guide/progress-widget/#q-can-progress-bar-colors-be-fully-customized","title":"Q: Can progress bar colors be fully customized?","text":"<p>A: Current version only supports 5 predefined themes, does not support fully custom colors.</p>"},{"location":"user-guide/progress-widget/#use-cases","title":"Use Cases","text":""},{"location":"user-guide/progress-widget/#system-monitoring","title":"\ud83d\udcca System Monitoring","text":"<ul> <li>CPU, memory, disk usage</li> <li>Network bandwidth usage</li> <li>Service health status</li> </ul>"},{"location":"user-guide/progress-widget/#task-management","title":"\ud83d\udccb Task Management","text":"<ul> <li>Project completion progress</li> <li>Task execution status</li> <li>Workflow progress</li> </ul>"},{"location":"user-guide/progress-widget/#business-metrics","title":"\ud83d\udcc8 Business Metrics","text":"<ul> <li>Sales target achievement rate</li> <li>User satisfaction</li> <li>KPI completion status</li> </ul>"},{"location":"user-guide/progress-widget/#technical-metrics","title":"\ud83d\udd27 Technical Metrics","text":"<ul> <li>Code coverage</li> <li>Test pass rate</li> <li>Deployment progress</li> </ul>"},{"location":"user-guide/progress-widget/#related-components","title":"Related Components","text":"<ul> <li>CircularProgressWidget - Circular progress bar</li> <li>StatusWidget - Status information display</li> <li>CardWidget - Card container</li> </ul>"},{"location":"user-guide/progress-widget/#next-steps","title":"Next Steps","text":"<p>After learning the basic usage of ProgressWidget, consider continuing with: - CircularProgressWidget - Learn circular progress bar usage - StatusWidget - Learn how to display multiple status items</p>"},{"location":"user-guide/quote-widget/","title":"QuoteWidget","text":"<p>QuoteWidget is a component specifically designed for displaying quoted content, supporting multiple quote styles and theme colors. It can elegantly display famous quotes, user feedback, important statements, and other content, serving as an important complement to content presentation.</p>"},{"location":"user-guide/quote-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview1. \u5f15\u7528\u7ec4\u4ef6\u5c55\u793a","text":"\u5f15\u7528\u7ec4\u4ef6\u9884\u89c8 \u5f15\u7528\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:33:14 <p>\"\u6210\u529f\u4e0d\u662f\u7ec8\u70b9\uff0c\u5931\u8d25\u4e0d\u662f\u81f4\u547d\u7684\"</p> \u2014 \u4e18\u5409\u5c14 <p>\"\u6570\u636e\u662f\u65b0\u65f6\u4ee3\u7684\u77f3\u6cb9\"</p> \u2014 \u300a\u7ecf\u6d4e\u5b66\u4eba\u300b <p>\"\u4eba\u5de5\u667a\u80fd\u5c06\u5f7b\u5e95\u6539\u53d8\u6211\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\"</p> \u2014 \u6bd4\u5c14\u00b7\u76d6\u8328, \u300a\u672a\u6765\u4e4b\u8def\u300b <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/quote-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcac Quote Display: Supports complete display of quoted content, author, and source</li> <li>\ud83c\udfa8 Multiple Themes: Supports theme colors like INFO, SUCCESS, WARNING, ERROR</li> <li>\ud83d\udcdd Flexible Configuration: Author and source information are optional, supports dynamic updates</li> <li>\ud83c\udfaf Highlighting: Uses borders and background colors to highlight quoted content</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/quote-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/quote-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import QuoteWidget\n\n# \u521b\u5efa\u57fa\u7840\u5f15\u7528\nquote = QuoteWidget()\nquote.set_content(\"\u77e5\u8bc6\u5c31\u662f\u529b\u91cf\uff0c\u5b66\u4e60\u6c38\u65e0\u6b62\u5883\u3002\")\nquote.set_author(\"\u57f9\u6839\")\nquote.set_source(\"\u300a\u968f\u7b14\u96c6\u300b\")\n\nemail = Email(\"\u5f15\u7528\u793a\u4f8b\")\nemail.add_widget(quote)\n</code></pre>"},{"location":"user-guide/quote-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u5e26\u4e3b\u9898\u7684\u5f15\u7528\nquote = QuoteWidget()\nquote.set_content(\"\u6210\u529f\u4e0d\u662f\u7ec8\u70b9\uff0c\u5931\u8d25\u4e0d\u662f\u81f4\u547d\u7684\uff0c\u91cd\u8981\u7684\u662f\u7ee7\u7eed\u524d\u8fdb\u7684\u52c7\u6c14\u3002\")\nquote.set_author(\"\u6e29\u65af\u987f\u00b7\u4e18\u5409\u5c14\")\nquote.set_theme(\"success\")\n\nemail.add_widget(quote)\n\n# \u4e00\u6b21\u6027\u8bbe\u7f6e\u6240\u6709\u4fe1\u606f\nquote2 = QuoteWidget()\nquote2.set_quote(\n    content=\"\u4ee3\u7801\u5982\u8bd7\uff0c\u7b80\u6d01\u800c\u4f18\u96c5\u3002\",\n    author=\"\u67d0\u4f4d\u7a0b\u5e8f\u5458\",\n    source=\"\u7f16\u7a0b\u611f\u609f\"\n)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: QuoteWidget API</p>"},{"location":"user-guide/quote-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/quote-widget/#theme-colors","title":"Theme Colors","text":"<ul> <li>info: Blue (#0078d4) - Informational quotes, general sayings</li> <li>success: Green (#107c10) - Success stories, positive reviews</li> <li>warning: Orange (#ff8c00) - Precautions, important reminders</li> <li>error: Red (#d13438) - Error warnings, negative feedback</li> </ul>"},{"location":"user-guide/quote-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/quote-widget/#1-user-feedback-display","title":"1. User Feedback Display","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import QuoteWidget\n\nemail = Email(\"\u7528\u6237\u53cd\u9988\u6c47\u603b\")\n\n# \u6b63\u9762\u53cd\u9988\npositive_quote = QuoteWidget()\npositive_quote.set_content(\"\u8fd9\u4e2a\u4ea7\u54c1\u771f\u7684\u5f88\u68d2\uff01\u754c\u9762\u7b80\u6d01\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u5b8c\u5168\u6ee1\u8db3\u4e86\u6211\u4eec\u7684\u9700\u6c42\u3002\")\npositive_quote.set_author(\"\u674e\u7ecf\u7406\")\npositive_quote.set_source(\"\u67d0\u516c\u53f8\u5ba2\u6237\")\npositive_quote.set_theme(\"success\")\n\nemail.add_widget(positive_quote)\n\n# \u6539\u8fdb\u5efa\u8bae\nsuggestion_quote = QuoteWidget()\nsuggestion_quote.set_content(\"\u4ea7\u54c1\u6574\u4f53\u4e0d\u9519\uff0c\u4f46\u662f\u5728\u79fb\u52a8\u7aef\u7684\u4f53\u9a8c\u8fd8\u6709\u63d0\u5347\u7a7a\u95f4\u3002\")\nsuggestion_quote.set_author(\"\u5f20\u603b\u76d1\")\nsuggestion_quote.set_source(\"\u7528\u6237\u8c03\u7814\")\nsuggestion_quote.set_theme(\"warning\")\n\nemail.add_widget(suggestion_quote)\n</code></pre> \u7528\u6237\u53cd\u9988\u5c55\u793a \u7528\u6237\u53cd\u9988\u5c55\u793a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:39:58 <p>\u7528\u6237\u53cd\u9988\u6c47\u603b</p> <p>\"EmailWidget\u771f\u7684\u5f88\u68d2\uff01\u5e2e\u6211\u4eec\u8282\u7701\u4e86\u5927\u91cf\u7684\u90ae\u4ef6\u5f00\u53d1\u65f6\u95f4\uff0c\u7ec4\u4ef6\u8bbe\u8ba1\u4e5f\u5f88\u7f8e\u89c2\u3002\"</p> \u2014 \u5f20\u5f00\u53d1, \u6280\u672f\u603b\u76d1 <p>\"\u5e0c\u671b\u80fd\u589e\u52a0\u66f4\u591a\u7684\u56fe\u8868\u7c7b\u578b\uff0c\u7279\u522b\u662f\u7518\u7279\u56fe\uff0c\u8fd9\u6837\u5c31\u80fd\u8986\u76d6\u6211\u4eec\u9879\u76ee\u7ba1\u7406\u7684\u6240\u6709\u9700\u6c42\u4e86\u3002\"</p> \u2014 \u674e\u4ea7\u54c1, \u4ea7\u54c1\u7ecf\u7406 <p>\"\u5f3a\u70c8\u63a8\u8350\u7ed9\u5176\u4ed6\u56e2\u961f\u4f7f\u7528\uff0cAPI\u8bbe\u8ba1\u5f88\u53cb\u597d\uff0c\u6587\u6863\u4e5f\u5f88\u5b8c\u6574\u3002\"</p> \u2014 \u738b\u67b6\u6784, \u67b6\u6784\u5e08 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/quote-widget/#2-important-statements-in-documentation","title":"2. Important Statements in Documentation","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import QuoteWidget\n\nemail = Email(\"\u9879\u76ee\u6587\u6863\")\n\n# \u91cd\u8981\u58f0\u660e\nimportant_quote = QuoteWidget()\nimportant_quote.set_content(\"\u672c\u7cfb\u7edf\u6d89\u53ca\u654f\u611f\u6570\u636e\uff0c\u6240\u6709\u64cd\u4f5c\u4eba\u5458\u5fc5\u987b\u4e25\u683c\u9075\u5b88\u6570\u636e\u5b89\u5168\u89c4\u8303\u3002\")\nimportant_quote.set_author(\"\u6280\u672f\u90e8\")\nimportant_quote.set_source(\"\u5b89\u5168\u89c4\u8303\u6587\u6863\")\nimportant_quote.set_theme(\"error\")\n\nemail.add_widget(important_quote)\n</code></pre> \u91cd\u8981\u58f0\u660e \u91cd\u8981\u58f0\u660e \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:39:58 <p>\u670d\u52a1\u6761\u6b3e\u66f4\u65b0\u901a\u77e5</p> <p>\u6211\u4eec\u66f4\u65b0\u4e86\u670d\u52a1\u6761\u6b3e\uff0c\u4e3b\u8981\u53d8\u66f4\u5982\u4e0b\uff1a</p> <p>\"\u6211\u4eec\u627f\u8bfa\u4fdd\u62a4\u60a8\u7684\u9690\u79c1\u548c\u6570\u636e\u5b89\u5168\u3002\u65b0\u7684\u6761\u6b3e\u8fdb\u4e00\u6b65\u660e\u786e\u4e86\u6570\u636e\u5904\u7406\u7684\u900f\u660e\u5ea6\u548c\u7528\u6237\u6743\u5229\u3002\"</p> \u2014 EmailWidget\u56e2\u961f, \u5b98\u65b9\u58f0\u660e <p>\u8be6\u7ec6\u6761\u6b3e\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u5b98\u65b9\u7f51\u7ad9\u3002</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/quote-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_quote</code> shortcut method:</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_quote(\n    content=\"\u521b\u65b0\u662f\u4f01\u4e1a\u53d1\u5c55\u7684\u6e90\u52a8\u529b\",\n    author=\"\u67d0CEO\", \n    source=\"\u4f01\u4e1a\u5e74\u62a5\",\n    theme=\"info\"\n)\n</code></pre>"},{"location":"user-guide/quote-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/quote-widget/#q-can-i-set-only-content-without-setting-author","title":"Q: Can I set only content without setting author?","text":"<p>A: Yes, both author and source are optional: Python<pre><code>quote.set_content(\"\u8fd9\u662f\u4e00\u53e5\u6ca1\u6709\u7f72\u540d\u7684\u5f15\u7528\u3002\")\n</code></pre></p>"},{"location":"user-guide/quote-widget/#q-how-to-clear-already-set-author-information","title":"Q: How to clear already set author information?","text":"<p>A: Use the <code>clear_author()</code> method: Python<pre><code>quote.clear_author()\nquote.clear_source()\n</code></pre></p>"},{"location":"user-guide/quote-widget/#q-can-quoted-content-include-html","title":"Q: Can quoted content include HTML?","text":"<p>A: Basic HTML tags are supported, but simple formatting is recommended to ensure email compatibility.</p>"},{"location":"user-guide/quote-widget/#q-whats-the-difference-between-different-themes","title":"Q: What's the difference between different themes?","text":"<p>A: Mainly differences in border colors and background colors, used to express different emotional tendencies or importance levels.</p>"},{"location":"user-guide/quote-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>AlertWidget - Alert information display</li> <li>CardWidget - Card containing quotes</li> <li>TextWidget - Basic text component</li> <li>SeparatorWidget - Content separation</li> <li>StatusWidget - Status information display</li> </ul>"},{"location":"user-guide/separator-widget/","title":"SeparatorWidget","text":"<p>SeparatorWidget is a component for creating visual separator lines in emails. It supports multiple separator styles including solid, dashed, and dotted lines, helping organize email content hierarchy and improve readability.</p>"},{"location":"user-guide/separator-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview","text":"\u5206\u9694\u7b26\u7ec4\u4ef6\u9884\u89c8 \u5206\u9694\u7b26\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:24:49 1. \u5b9e\u7ebf\u5206\u9694\u7b26 (SOLID) 2. \u865a\u7ebf\u5206\u9694\u7b26 (DASHED) 3. \u70b9\u7ebf\u5206\u9694\u7b26 (DOTTED) <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/separator-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udccf Multiple Styles: Supports solid, dashed, and dotted separator styles</li> <li>\ud83c\udfa8 Color Themes: Supports theme color configuration based on StatusType</li> <li>\ud83d\udd27 Flexible Configuration: Customizable color, thickness, width, and margins</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible CSS</li> </ul>"},{"location":"user-guide/separator-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/separator-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import SeparatorWidget\nfrom email_widget.core.enums import SeparatorType, TextType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u5206\u9694\u7b26\u793a\u4f8b\")\n\n# \u6dfb\u52a0\u6807\u9898\nemail.add_text(\"\u5206\u9694\u7b26\u6f14\u793a\", TextType.TITLE_LARGE)\n\n# \u6dfb\u52a0\u5185\u5bb9\nemail.add_text(\"\u8fd9\u662f\u5206\u9694\u7b26\u4e0a\u65b9\u7684\u5185\u5bb9\")\n\n# \u521b\u5efa\u57fa\u7840\u5206\u9694\u7b26\nseparator = SeparatorWidget().set_type(SeparatorType.SOLID)\nemail.add_widget(separator)\n\n# \u6dfb\u52a0\u66f4\u591a\u5185\u5bb9\nemail.add_text(\"\u8fd9\u662f\u5206\u9694\u7b26\u4e0b\u65b9\u7684\u5185\u5bb9\")\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_separator()\n\n# \u5bfc\u51faHTML\nemail.export_html(\"separator_demo.html\")\n</code></pre>"},{"location":"user-guide/separator-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import SeparatorWidget\nfrom email_widget.core.enums import SeparatorType, TextType\n\nemail = Email(\"\u81ea\u5b9a\u4e49\u5206\u9694\u7b26\u6837\u5f0f\")\n\n# \u521b\u5efa\u5e26\u6837\u5f0f\u7684\u865a\u7ebf\u5206\u9694\u7b26\nemail.add_text(\"\u865a\u7ebf\u5206\u9694\u7b26\u793a\u4f8b\", TextType.SECTION_H2)\ndashed_separator = (SeparatorWidget()\n    .set_type(SeparatorType.DASHED)\n    .set_color(\"#0078d4\")\n    .set_thickness(\"2px\")\n    .set_width(\"80%\")\n    .set_margin(\"20px\"))\n\nemail.add_widget(dashed_separator)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\u521b\u5efa\u70b9\u7ebf\u5206\u9694\u7b26\nemail.add_text(\"\u70b9\u7ebf\u5206\u9694\u7b26\u793a\u4f8b\", TextType.SECTION_H2)\nemail.add_separator(\n    separator_type=SeparatorType.DOTTED,\n    color=\"#ff8c00\",\n    thickness=\"3px\",\n    width=\"50%\"\n)\n\nemail.export_html(\"custom_separator_demo.html\")\n</code></pre> <p>\ud83d\udcda Complete API Documentation: SeparatorWidget API</p>"},{"location":"user-guide/separator-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/separator-widget/#separator-types","title":"Separator Types","text":"<ul> <li>Solid Separator (SOLID): Suitable for main content area division, clear section separation</li> <li>Dashed Separator (DASHED): Suitable for secondary content division, related content grouping</li> <li>Dotted Separator (DOTTED): Suitable for decorative division, lightweight content separation</li> </ul>"},{"location":"user-guide/separator-widget/#recommended-colors","title":"Recommended Colors","text":""},{"location":"user-guide/separator-widget/#theme-colors","title":"Theme Colors","text":"<ul> <li>Primary Separator: #0078d4 (Blue)</li> <li>Success Separator: #107c10 (Green)</li> <li>Warning Separator: #ff8c00 (Orange)</li> <li>Error Separator: #d13438 (Red)</li> </ul>"},{"location":"user-guide/separator-widget/#neutral-colors","title":"Neutral Colors","text":"<ul> <li>Default Gray: #e1dfdd</li> <li>Dark Gray: #8e8e93</li> <li>Light Gray: #f3f2f1</li> </ul>"},{"location":"user-guide/separator-widget/#size-recommendations","title":"Size Recommendations","text":""},{"location":"user-guide/separator-widget/#thickness-recommendations","title":"Thickness Recommendations","text":"<ul> <li>Thin Separator: 1px - for dense content</li> <li>Standard Separator: 2px - general scenarios</li> <li>Thick Separator: 3px - important divisions</li> </ul>"},{"location":"user-guide/separator-widget/#width-recommendations","title":"Width Recommendations","text":"<ul> <li>Full-width Separator: 100%</li> <li>Centered Separator: 80%</li> <li>Decorative Separator: 50%</li> </ul>"},{"location":"user-guide/separator-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/separator-widget/#1-content-hierarchy-division","title":"1. Content Hierarchy Division","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import SeparatorType, TextType\n\nemail = Email(\"\u5c42\u6b21\u5316\u5185\u5bb9\")\n\n# \u4e3b\u8981\u7ae0\u8282\u95f4\u7528\u7c97\u5b9e\u7ebf\nemail.add_text(\"\u7b2c\u4e00\u7ae0\", TextType.TITLE_LARGE)\nemail.add_text(\"\u7ae0\u8282\u5185\u5bb9...\")\nemail.add_separator(\n    separator_type=SeparatorType.SOLID,\n    thickness=\"2px\",\n    margin=\"30px\"\n)\n\n# \u5b50\u8282\u95f4\u7528\u7ec6\u865a\u7ebf\nemail.add_text(\"1.1 \u5c0f\u8282\", TextType.SECTION_H2)\nemail.add_text(\"\u5c0f\u8282\u5185\u5bb9...\")\nemail.add_separator(\n    separator_type=SeparatorType.DASHED,\n    thickness=\"1px\",\n    margin=\"20px\"\n)\n\nemail.export_html(\"hierarchical_content.html\")\n</code></pre> \u5c42\u6b21\u5316\u5185\u5bb9 \u5c42\u6b21\u5316\u5185\u5bb9 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:45:16 <p>\u7b2c\u4e00\u7ae0</p> <p>\u7ae0\u8282\u5185\u5bb9...</p> 1. 1.1 \u5c0f\u8282 <p>\u5c0f\u8282\u5185\u5bb9...</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/separator-widget/#2-themed-separation","title":"2. Themed Separation","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import SeparatorType, AlertType\n\nemail = Email(\"\u4e3b\u9898\u5316\u5206\u9694\u7b26\")\n\n# \u6210\u529f\u72b6\u6001\u540e\u7684\u5206\u9694\nemail.add_alert(\"\u4efb\u52a1\u5b8c\u6210\", AlertType.TIP)\nemail.add_separator(\n    separator_type=SeparatorType.SOLID,\n    color=\"#107c10\",\n    thickness=\"2px\"\n)\n\n# \u8b66\u544a\u72b6\u6001\u540e\u7684\u5206\u9694\nemail.add_alert(\"\u6ce8\u610f\u4e8b\u9879\", AlertType.WARNING)\nemail.add_separator(\n    separator_type=SeparatorType.DASHED,\n    color=\"#ff8c00\",\n    thickness=\"2px\"\n)\n\nemail.export_html(\"themed_separators.html\")\n</code></pre> \u4e3b\u9898\u5316\u5206\u9694\u7b26 \u4e3b\u9898\u5316\u5206\u9694\u7b26 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:45:16 \ud83d\udca1 \u63d0\u793a \u4efb\u52a1\u5b8c\u6210 \u26a0\ufe0f \u8b66\u544a \u6ce8\u610f\u4e8b\u9879 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/separator-widget/#3-system-monitoring-email","title":"3. System Monitoring Email","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import SeparatorType\n\nemail = Email(\"\u7cfb\u7edf\u72b6\u6001\u76d1\u63a7\")\n\n# \u6b63\u5e38\u670d\u52a1\nemail.add_text(\"Web\u670d\u52a1: \u6b63\u5e38\")\nemail.add_separator(\n    separator_type=SeparatorType.SOLID,\n    color=\"#107c10\",\n    thickness=\"1px\"\n)\n\n# \u8b66\u544a\u670d\u52a1\nemail.add_text(\"\u6570\u636e\u5e93: \u8b66\u544a\")\nemail.add_separator(\n    separator_type=SeparatorType.DASHED,\n    color=\"#ff8c00\",\n    thickness=\"2px\"\n)\n\n# \u9519\u8bef\u670d\u52a1\nemail.add_text(\"\u7f13\u5b58: \u6545\u969c\")\nemail.add_separator(\n    separator_type=SeparatorType.SOLID,\n    color=\"#d13438\",\n    thickness=\"2px\"\n)\n\nemail.export_html(\"system_monitoring.html\")\n</code></pre> \u7cfb\u7edf\u72b6\u6001\u76d1\u63a7 \u7cfb\u7edf\u72b6\u6001\u76d1\u63a7 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:39:58 <p>Web\u670d\u52a1: \u6b63\u5e38\u8fd0\u884c</p> <p>\u54cd\u5e94\u65f6\u95f4: 98ms</p> <p>\u6570\u636e\u5e93: \u8d1f\u8f7d\u8f83\u9ad8</p> <p>CPU\u4f7f\u7528\u7387: 78%</p> <p>\u7f13\u5b58: \u8fde\u63a5\u5931\u8d25</p> <p>\u9519\u8bef\u4ee3\u7801: TIMEOUT</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/separator-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_separator</code> shortcut method:</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_separator()\n\n# \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_separator(\n    separator_type=SeparatorType.DASHED,\n    color=\"#0078d4\",\n    thickness=\"2px\",\n    width=\"80%\",\n    margin=\"20px\"\n)\n</code></pre>"},{"location":"user-guide/separator-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/separator-widget/#q-separator-doesnt-display-in-some-email-clients","title":"Q: Separator doesn't display in some email clients?","text":"<p>A: Make sure to use standard CSS border styles, avoid complex CSS properties. SeparatorWidget has been optimized for mainstream email clients.</p>"},{"location":"user-guide/separator-widget/#q-how-to-create-gradient-separators","title":"Q: How to create gradient separators?","text":"<p>A: Due to email client limitations, solid colors are recommended. For visual hierarchy, use different color shades.</p>"},{"location":"user-guide/separator-widget/#q-separator-too-thin-or-too-thick","title":"Q: Separator too thin or too thick?","text":"<p>A: Adjust the <code>thickness</code> property, recommend using values between 1px-3px for good display.</p>"},{"location":"user-guide/separator-widget/#q-how-to-center-the-separator","title":"Q: How to center the separator?","text":"<p>A: Separators are centered by default, you can control width through the <code>width</code> property, e.g., <code>set_width(\"80%\")</code> creates a centered 80% width separator.</p>"},{"location":"user-guide/separator-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>TextWidget - For title text before and after separators</li> <li>CardWidget - Can use separators between cards</li> <li>ColumnWidget - For separation in multi-column layouts</li> <li>AlertWidget - Alert information that can be combined with separators</li> </ul>"},{"location":"user-guide/status-widget/","title":"StatusWidget","text":"<p>StatusWidget is a component specifically designed for displaying system status, configuration information, or key-value pair data. It supports color identification for multiple status types and provides flexible layout options, making it ideal for monitoring dashboards and status reports.</p>"},{"location":"user-guide/status-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview2. \u72b6\u6001\u7ec4\u4ef6\u5c55\u793a","text":"\u72b6\u6001\u7ec4\u4ef6\u9884\u89c8 \u72b6\u6001\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:33:14 Web\u670d\u52a1 \u8fd0\u884c\u6b63\u5e38 \u6570\u636e\u5e93 \u8fde\u63a5\u826f\u597d \u7f13\u5b58\u670d\u52a1 \u6027\u80fd\u4e0b\u964d \u5907\u4efd\u7cfb\u7edf \u79bb\u7ebf <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/status-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcca Status Display: Supports key-value pair status information display</li> <li>\ud83c\udfa8 Status Classification: Supports status types like SUCCESS, WARNING, ERROR, INFO</li> <li>\ud83d\udccf Layout Options: Supports both vertical and horizontal layouts</li> <li>\ud83d\udd04 Dynamic Updates: Supports dynamic adding, updating, and removing status items</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/status-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/status-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import StatusWidget\n\n# \u521b\u5efa\u57fa\u7840\u72b6\u6001\u7ec4\u4ef6\nstatus = StatusWidget()\nstatus.set_title(\"\u7cfb\u7edf\u72b6\u6001\")\nstatus.add_status(\"CPU\u4f7f\u7528\u7387\", \"68%\")\nstatus.add_status(\"\u5185\u5b58\u4f7f\u7528\", \"4.2GB / 8GB\")\nstatus.add_status(\"\u78c1\u76d8\u7a7a\u95f4\", \"256GB / 512GB\")\n\nemail = Email(\"\u72b6\u6001\u62a5\u544a\")\nemail.add_widget(status)\n</code></pre>"},{"location":"user-guide/status-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u5e26\u72b6\u6001\u7c7b\u578b\u7684\u8be6\u7ec6\u72b6\u6001\nstatus = StatusWidget()\nstatus.set_title(\"\u670d\u52a1\u76d1\u63a7\")\nstatus.add_status(\"API\u670d\u52a1\", \"\u8fd0\u884c\u4e2d\", \"success\")\nstatus.add_status(\"\u6570\u636e\u5e93\", \"\u8fde\u63a5\u6b63\u5e38\", \"success\")\nstatus.add_status(\"\u7f13\u5b58\u670d\u52a1\", \"\u54cd\u5e94\u6162\", \"warning\")\nstatus.add_status(\"\u7f51\u7edc\u72b6\u6001\", \"\u65ad\u5f00\u8fde\u63a5\", \"error\")\nstatus.set_layout(\"horizontal\")\n\nemail.add_widget(status)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: StatusWidget API</p>"},{"location":"user-guide/status-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/status-widget/#status-types-and-colors","title":"Status Types and Colors","text":"<ul> <li>success: Green (#107c10) - Normal operation, successful status</li> <li>warning: Orange (#ff8c00) - Needs attention, performance warning</li> <li>error: Red (#d13438) - Error status, service exception</li> <li>info: Blue (#0078d4) - Information status, configuration items</li> <li>neutral: Gray (#8e8e93) - Neutral status, default values</li> </ul>"},{"location":"user-guide/status-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/status-widget/#1-system-monitoring-status","title":"1. System Monitoring Status","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import StatusWidget\n\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\")\n\n# \u7cfb\u7edf\u8d44\u6e90\u72b6\u6001\nsystem_status = StatusWidget()\nsystem_status.set_title(\"\u7cfb\u7edf\u8d44\u6e90\")\nsystem_status.add_status(\"CPU\u4f7f\u7528\u7387\", \"68%\", \"success\")\nsystem_status.add_status(\"\u5185\u5b58\u4f7f\u7528\", \"85%\", \"warning\")\nsystem_status.add_status(\"\u78c1\u76d8\u7a7a\u95f4\", \"256GB / 512GB\", \"success\")\nsystem_status.add_status(\"\u7f51\u7edc\u72b6\u6001\", \"\u65ad\u5f00\u8fde\u63a5\", \"error\")\nsystem_status.set_layout(\"vertical\")\n\nemail.add_widget(system_status)\n\n# \u670d\u52a1\u72b6\u6001\nservice_status = StatusWidget()\nservice_status.set_title(\"\u670d\u52a1\u72b6\u6001\")\nservice_status.add_status(\"Web\u670d\u52a1\", \"\u8fd0\u884c\u4e2d\", \"success\")\nservice_status.add_status(\"\u6570\u636e\u5e93\", \"\u8fde\u63a5\u6b63\u5e38\", \"success\")\nservice_status.add_status(\"\u7f13\u5b58\u670d\u52a1\", \"\u54cd\u5e94\u6162\", \"warning\")\nservice_status.add_status(\"\u6d88\u606f\u961f\u5217\", \"\u961f\u5217\u79ef\u538b\", \"warning\")\n\nemail.add_widget(service_status)\n</code></pre> \u7cfb\u7edf\u76d1\u63a7\u72b6\u6001 \u7cfb\u7edf\u76d1\u63a7\u72b6\u6001 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:39:58 <p>\u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7</p> <p>CPU\u4f7f\u7528\u7387: 45% (\u6b63\u5e38)</p> <p>\u5185\u5b58\u4f7f\u7528: 2.8GB (\u6b63\u5e38)</p> <p>\u78c1\u76d8\u7a7a\u95f4: 85% (\u8b66\u544a)</p> <p>\u7f51\u7edc\u5ef6\u8fdf: 12ms (\u6b63\u5e38)</p> 1. \u670d\u52a1\u72b6\u6001 <p>Web\u670d\u52a1: \u8fd0\u884c\u4e2d</p> <p>\u6570\u636e\u5e93: \u8fd0\u884c\u4e2d</p> <p>\u7f13\u5b58: \u5f02\u5e38</p> <p>\u961f\u5217: \u8fd0\u884c\u4e2d</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/status-widget/#2-project-configuration-information","title":"2. Project Configuration Information","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import StatusWidget\n\nemail = Email(\"\u9879\u76ee\u914d\u7f6e\u62a5\u544a\")\n\n# \u73af\u5883\u914d\u7f6e\nconfig_status = StatusWidget()\nconfig_status.set_title(\"\u73af\u5883\u914d\u7f6e\")\nconfig_status.add_status(\"\u73af\u5883\", \"\u751f\u4ea7\u73af\u5883\", \"info\")\nconfig_status.add_status(\"\u7248\u672c\", \"v2.1.0\", \"info\")\nconfig_status.add_status(\"\u90e8\u7f72\u65f6\u95f4\", \"2024-07-11 15:30\", \"info\")\nconfig_status.add_status(\"\u8d1f\u8d23\u4eba\", \"\u5f00\u53d1\u56e2\u961f\", \"info\")\nconfig_status.set_layout(\"horizontal\")\n\nemail.add_widget(config_status)\n</code></pre>"},{"location":"user-guide/status-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_status</code> shortcut method:</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_status(\n    title=\"\u7cfb\u7edf\u72b6\u6001\",\n    statuses=[\n        (\"CPU\", \"68%\", \"success\"),\n        (\"\u5185\u5b58\", \"85%\", \"warning\"),\n        (\"\u78c1\u76d8\", \"50%\", \"success\")\n    ],\n    layout=\"vertical\"\n)\n</code></pre>"},{"location":"user-guide/status-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/status-widget/#q-how-to-choose-between-vertical-and-horizontal-layout","title":"Q: How to choose between vertical and horizontal layout?","text":"<p>A:  - Vertical Layout: Suitable for many status items or long labels - Horizontal Layout: Suitable for quick browsing of key status information</p>"},{"location":"user-guide/status-widget/#q-how-to-update-existing-status-items","title":"Q: How to update existing status items?","text":"<p>A: Use the <code>update_status</code> method: Python<pre><code>status.update_status(\"CPU\u4f7f\u7528\u7387\", \"75%\", \"warning\")\n</code></pre></p>"},{"location":"user-guide/status-widget/#q-can-status-values-contain-html","title":"Q: Can status values contain HTML?","text":"<p>A: Plain text is recommended to ensure correct display in all email clients.</p>"},{"location":"user-guide/status-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>MetricWidget - Data metrics display</li> <li>ProgressWidget - Progress status display</li> <li>AlertWidget - Status alert information</li> <li>CardWidget - Card containing status</li> <li>TableWidget - Tabular status display</li> </ul>"},{"location":"user-guide/table-widget/","title":"TableWidget","text":"<p>TableWidget is a professional component for displaying structured data, supporting multiple features like headers, status cells, striped styles, and index columns. It's a core component in data reports.</p>"},{"location":"user-guide/table-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview1. \u8868\u683c\u7ec4\u4ef6\u5c55\u793a","text":"\u8868\u683c\u7ec4\u4ef6\u9884\u89c8 \u8868\u683c\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:59:55 \u9500\u552e\u6570\u636e\u7edf\u8ba1 \u4ea7\u54c1\u540d\u79f0 \u9500\u552e\u989d \u589e\u957f\u7387 \u72b6\u6001 \u624b\u673a \u00a51,250,000 +15.6% \u4f18\u79c0 \u7535\u8111 \u00a5890,000 +8.3% \u826f\u597d \u8033\u673a \u00a5345,000 -2.1% \u9700\u6539\u8fdb \u5145\u7535\u5668 \u00a5123,000 +25.4% \u4f18\u79c0 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/table-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":"Python<pre><code>from email_widget.widgets import TableWidget\n\n# \u521b\u5efa\u57fa\u672c\u8868\u683c\ntable = TableWidget()\ntable.set_headers([\"\u59d3\u540d\", \"\u5e74\u9f84\", \"\u90e8\u95e8\"])\ntable.add_row([\"\u5f20\u4e09\", \"28\", \"\u6280\u672f\u90e8\"])\ntable.add_row([\"\u674e\u56db\", \"32\", \"\u9500\u552e\u90e8\"])\n</code></pre> Name Age Department John 28 Tech Jane 32 Sales"},{"location":"user-guide/table-widget/#basic-usage","title":"\ud83d\udcca Basic Usage","text":""},{"location":"user-guide/table-widget/#setting-headers-and-data","title":"Setting Headers and Data","text":"Python<pre><code># \u8bbe\u7f6e\u8868\u5934\ntable = TableWidget()\ntable.set_headers([\"\u9879\u76ee\", \"\u72b6\u6001\", \"\u8fdb\u5ea6\", \"\u8d1f\u8d23\u4eba\"])\n\n# \u6dfb\u52a0\u6570\u636e\u884c\ntable.add_row([\"\u7528\u6237\u7cfb\u7edf\", \"\u5f00\u53d1\u4e2d\", \"75%\", \"\u5f20\u5de5\"])\ntable.add_row([\"\u652f\u4ed8\u6a21\u5757\", \"\u6d4b\u8bd5\u4e2d\", \"90%\", \"\u674e\u5de5\"])\ntable.add_row([\"\u6570\u636e\u7edf\u8ba1\", \"\u5df2\u5b8c\u6210\", \"100%\", \"\u738b\u5de5\"])\n\n# \u6279\u91cf\u6dfb\u52a0\u884c\nrows_data = [\n    [\"\u9879\u76eeA\", \"\u8fdb\u884c\u4e2d\", \"60%\", \"\u5458\u5de5A\"],\n    [\"\u9879\u76eeB\", \"\u5df2\u5b8c\u6210\", \"100%\", \"\u5458\u5de5B\"],\n    [\"\u9879\u76eeC\", \"\u8ba1\u5212\u4e2d\", \"0%\", \"\u5458\u5de5C\"]\n]\ntable.add_rows(rows_data)\n</code></pre>"},{"location":"user-guide/table-widget/#setting-table-title","title":"Setting Table TitleProject Progress Statistics","text":"Python<pre><code>table = TableWidget()\ntable.set_title(\"\u9879\u76ee\u8fdb\u5ea6\u7edf\u8ba1\u8868\")\ntable.set_headers([\"\u9879\u76ee\u540d\u79f0\", \"\u5b8c\u6210\u72b6\u6001\"])\ntable.add_row([\"\u9879\u76eeAlpha\", \"75%\"])\n</code></pre> Project Name Completion Status Project Alpha 75%"},{"location":"user-guide/table-widget/#style-configuration","title":"\ud83c\udfa8 Style Configuration","text":""},{"location":"user-guide/table-widget/#striped-style","title":"Striped Style","text":"Python<pre><code># \u542f\u7528\u6761\u7eb9\u6837\u5f0f\ntable = TableWidget()\ntable.set_striped(True)\ntable.set_headers([\"\u5e8f\u53f7\", \"\u4ea7\u54c1\", \"\u9500\u91cf\"])\ntable.add_rows([\n    [\"1\", \"\u4ea7\u54c1A\", \"1,200\"],\n    [\"2\", \"\u4ea7\u54c1B\", \"980\"],\n    [\"3\", \"\u4ea7\u54c1C\", \"1,500\"],\n    [\"4\", \"\u4ea7\u54c1D\", \"750\"]\n])\n</code></pre> No. Product Sales 1 Product A 1,200 2 Product B 980 3 Product C 1,500 4 Product D 750"},{"location":"user-guide/table-widget/#borders-and-index-column","title":"Borders and Index Column","text":"Python<pre><code># \u663e\u793a\u8fb9\u6846\u548c\u7d22\u5f15\u5217\ntable = TableWidget()\ntable.set_show_border(True)\ntable.set_show_index(True)\ntable.set_headers([\"\u4efb\u52a1\", \"\u72b6\u6001\"])\ntable.add_rows([\n    [\"\u6570\u636e\u5907\u4efd\", \"\u5b8c\u6210\"],\n    [\"\u7cfb\u7edf\u66f4\u65b0\", \"\u8fdb\u884c\u4e2d\"],\n    [\"\u5b89\u5168\u68c0\u67e5\", \"\u5f85\u5f00\u59cb\"]\n])\n</code></pre> Index Task Status 1 Data Backup Complete 2 System Update In Progress 3 Security Check Pending"},{"location":"user-guide/table-widget/#status-cells","title":"\ud83c\udfaf Status Cells","text":"<p>TableWidget supports special status cells that can display colored status information:</p> Python<pre><code>from email_widget.widgets import TableWidget, TableCell\nfrom email_widget.core.enums import StatusType\n\ntable = TableWidget()\ntable.set_headers([\"\u670d\u52a1\", \"\u72b6\u6001\", \"\u54cd\u5e94\u65f6\u95f4\"])\ntable.add_row([\n    \"Web\u670d\u52a1\",\n    TableCell(\"\u6b63\u5e38\", StatusType.SUCCESS),\n    \"145ms\"\n])\ntable.add_row([\n    \"\u6570\u636e\u5e93\",\n    TableCell(\"\u8b66\u544a\", StatusType.WARNING),\n    \"892ms\"\n])\ntable.add_row([\n    \"\u7f13\u5b58\u670d\u52a1\",\n    TableCell(\"\u6545\u969c\", StatusType.ERROR),\n    \"\u8d85\u65f6\"\n])\n</code></pre> Service Status Response Time Web Service Normal 145ms Database Warning 892ms Cache Service Error Timeout"},{"location":"user-guide/table-widget/#status-type-description","title":"Status Type Description","text":"Status Type Color Use Cases <code>StatusType.SUCCESS</code> Green (#107c10) Success, Normal, Pass <code>StatusType.WARNING</code> Orange (#ff8c00) Warning, Attention, Pending <code>StatusType.ERROR</code> Red (#d13438) Error, Failure, Exception <code>StatusType.INFO</code> Blue (#0078d4) Information, Tips, Neutral"},{"location":"user-guide/table-widget/#complete-examples","title":"\ud83d\udccb Complete Examples","text":""},{"location":"user-guide/table-widget/#system-monitoring-table","title":"System Monitoring Table","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TableWidget, TableCell\nfrom email_widget.core.enums import StatusType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\")\n\n# \u521b\u5efa\u76d1\u63a7\u8868\u683c\nmonitor_table = TableWidget()\nmonitor_table.set_title(\"\u7cfb\u7edf\u670d\u52a1\u72b6\u6001\")\nmonitor_table.set_headers([\"\u670d\u52a1\u540d\u79f0\", \"\u72b6\u6001\", \"CPU\u4f7f\u7528\u7387\", \"\u5185\u5b58\u4f7f\u7528\u7387\", \"\u6700\u540e\u68c0\u67e5\u65f6\u95f4\"])\nmonitor_table.set_striped(True)\nmonitor_table.set_show_index(True)\n\n# \u6dfb\u52a0\u76d1\u63a7\u6570\u636e\nmonitor_table.add_rows([\n    [\"Web\u670d\u52a1\u5668\", TableCell(\"\u8fd0\u884c\", StatusType.SUCCESS), \"23%\", \"45%\", \"2024-01-15 10:30\"],\n    [\"\u6570\u636e\u5e93\", TableCell(\"\u8b66\u544a\", StatusType.WARNING), \"78%\", \"67%\", \"2024-01-15 10:29\"],\n    [\"Redis\u7f13\u5b58\", TableCell(\"\u6b63\u5e38\", StatusType.SUCCESS), \"12%\", \"34%\", \"2024-01-15 10:30\"],\n    [\"\u6d88\u606f\u961f\u5217\", TableCell(\"\u6545\u969c\", StatusType.ERROR), \"0%\", \"0%\", \"2024-01-15 09:45\"],\n    [\"\u6587\u4ef6\u670d\u52a1\", TableCell(\"\u6b63\u5e38\", StatusType.SUCCESS), \"15%\", \"28%\", \"2024-01-15 10:30\"]\n])\n\nemail.add_widget(monitor_table)\n</code></pre>"},{"location":"user-guide/table-widget/#sales-data-table","title":"Sales Data Table","text":"Python<pre><code># \u521b\u5efa\u9500\u552e\u6570\u636e\u8868\u683c\nsales_table = TableWidget()\nsales_table.set_title(\"\u6708\u5ea6\u9500\u552e\u6570\u636e\")\nsales_table.set_headers([\"\u4ea7\u54c1\u540d\u79f0\", \"\u9500\u552e\u6570\u91cf\", \"\u9500\u552e\u989d\", \"\u589e\u957f\u7387\", \"\u72b6\u6001\"])\nsales_table.set_show_border(True)\n\n# \u6dfb\u52a0\u9500\u552e\u6570\u636e\nsales_table.add_rows([\n    [\"\u667a\u80fd\u624b\u673a\", \"1,250\", \"\u00a52,500,000\", \"+15%\", TableCell(\"\u8d85\u989d\", StatusType.SUCCESS)],\n    [\"\u5e73\u677f\u7535\u8111\", \"680\", \"\u00a51,360,000\", \"+8%\", TableCell(\"\u8fbe\u6807\", StatusType.SUCCESS)],\n    [\"\u7b14\u8bb0\u672c\u7535\u8111\", \"420\", \"\u00a52,100,000\", \"-5%\", TableCell(\"\u5f85\u6539\u8fdb\", StatusType.WARNING)],\n    [\"\u667a\u80fd\u624b\u8868\", \"890\", \"\u00a51,780,000\", \"+25%\", TableCell(\"\u4f18\u79c0\", StatusType.SUCCESS)]\n])\n\nemail.add_widget(sales_table)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: TableWidget API</p>"},{"location":"user-guide/table-widget/#best-practices","title":"\ud83c\udfaf Best Practices","text":""},{"location":"user-guide/table-widget/#1-proper-use-of-status-cells","title":"1. Proper Use of Status Cells","text":"Python<pre><code># \u63a8\u8350\uff1a\u4e3a\u72b6\u6001\u76f8\u5173\u7684\u5217\u4f7f\u7528\u72b6\u6001\u5355\u5143\u683c\ntable.add_row([\n    \"\u4efb\u52a1\u540d\u79f0\",\n    TableCell(\"\u5df2\u5b8c\u6210\", StatusType.SUCCESS),  # \u72b6\u6001\u5217\n    \"2024-01-15\"  # \u666e\u901a\u6587\u672c\u5217\n])\n</code></pre>"},{"location":"user-guide/table-widget/#2-maintain-data-consistency","title":"2. Maintain Data Consistency","text":"Python<pre><code># \u63a8\u8350\uff1a\u786e\u4fdd\u6bcf\u884c\u6570\u636e\u5217\u6570\u4e0e\u8868\u5934\u4e00\u81f4\nheaders = [\"\u59d3\u540d\", \"\u5e74\u9f84\", \"\u90e8\u95e8\"]\ntable.set_headers(headers)\ntable.add_row([\"\u5f20\u4e09\", \"28\", \"\u6280\u672f\u90e8\"])  # 3\u5217\u6570\u636e\u5339\u914d3\u4e2a\u8868\u5934\n</code></pre>"},{"location":"user-guide/table-widget/#3-use-appropriate-styling-for-better-readability","title":"3. Use Appropriate Styling for Better Readability","text":"Python<pre><code># \u63a8\u8350\uff1a\u5927\u6570\u636e\u8868\u683c\u4f7f\u7528\u6761\u7eb9\u6837\u5f0f\nlarge_table = TableWidget()\nlarge_table.set_striped(True)\nlarge_table.set_show_index(True)  # \u4fbf\u4e8e\u5f15\u7528\u7279\u5b9a\u884c\n</code></pre>"},{"location":"user-guide/table-widget/#4-control-table-width-to-avoid-layout-issues","title":"4. Control Table Width to Avoid Layout Issues","text":"Python<pre><code># \u63a8\u8350\uff1a\u4e3a\u5305\u542b\u5927\u91cf\u5217\u7684\u8868\u683c\u8bbe\u7f6e\u6700\u5927\u5bbd\u5ea6\nwide_table = TableWidget()\nwide_table.set_max_width(\"800px\")\n</code></pre>"},{"location":"user-guide/table-widget/#important-notes","title":"\ud83d\udea8 Important Notes","text":"<ol> <li>Column Consistency: Ensure each row has the same number of columns as headers</li> <li>Content Length: Avoid overly long cell content that affects layout</li> <li>Status Usage: Use status cells appropriately, don't overuse colors</li> <li>Performance: Consider pagination or table splitting for large datasets</li> </ol> <p>Next Step: Learn about Chart Widget to display visualized data.</p>"},{"location":"user-guide/text-widget/","title":"TextWidget","text":"<p>TextWidget is the most basic and commonly used widget in EmailWidget, designed to display various text content. It supports multiple text types, alignment options, and style configurations, making it the core component for building email content.</p>"},{"location":"user-guide/text-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview1. \u4e8c\u7ea7\u7ae0\u8282\u6807\u9898","text":"\u6587\u672c\u7ec4\u4ef6\u9884\u89c8 \u6587\u672c\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:24:49 <p>\u5927\u6807\u9898\u793a\u4f8b</p> <p>\u5c0f\u6807\u9898\u793a\u4f8b</p> 1.1. \u4e09\u7ea7\u7ae0\u8282\u6807\u9898 <p>\u8fd9\u662f\u6b63\u6587\u5185\u5bb9\uff0c\u5c55\u793a\u6807\u51c6\u7684\u6bb5\u843d\u6587\u5b57\u6837\u5f0f\u3002</p> <p>\u8fd9\u662f\u8bf4\u660e\u6587\u5b57\uff0c\u901a\u5e38\u7528\u4e8e\u56fe\u7247\u8bf4\u660e\u6216\u8865\u5145\u4fe1\u606f\u3002</p> 1.2. \u989c\u8272\u6837\u5f0f <p>\u84dd\u8272\u91cd\u8981\u6587\u672c</p> <p>\u7eff\u8272\u6210\u529f\u6587\u672c</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/text-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\ud83d\udcdd Multiple Types: Supports various text types including titles, body text, and captions</li> <li>\ud83c\udfa8 Style Customization: Supports custom colors, alignment, font styles, and more</li> <li>\ud83d\udcca Auto Numbering: Automatically displays numeric numbering for H2 to H5 headings</li> <li>\ud83d\udd17 HTML Support: Supports basic HTML tags and formatted text</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/text-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/text-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u57fa\u672c\u6587\u672c\ntext = TextWidget()\ntext.set_content(\"\u8fd9\u662f\u4e00\u6bb5\u666e\u901a\u6587\u672c\")\ntext.set_type(TextType.BODY)\n\nemail = Email(\"\u6587\u672c\u7ec4\u4ef6\u793a\u4f8b\")\nemail.add_widget(text)\n</code></pre>"},{"location":"user-guide/text-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u94fe\u5f0f\u8c03\u7528\u8bbe\u7f6e\u6837\u5f0f\nstyled_text = (TextWidget()\n              .set_content(\"\u91cd\u8981\u6807\u9898\")\n              .set_type(TextType.SECTION_H2)\n              .set_color(\"#0078d4\")\n              .set_align(\"center\"))\n\nemail.add_widget(styled_text)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_text(\"\u5feb\u6377\u65b9\u6cd5\u521b\u5efa\u7684\u6587\u672c\", TextType.BODY)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: TextWidget API</p>"},{"location":"user-guide/text-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/text-widget/#text-types-and-hierarchy","title":"Text Types and Hierarchy","text":"<ul> <li>TITLE_LARGE: Large title - for main email title</li> <li>TITLE_SMALL: Small title - for subtitle</li> <li>SECTION_H2: H2 heading - auto-numbered (1. Title)</li> <li>SECTION_H3: H3 heading - auto-numbered (1.1. Title)</li> <li>SECTION_H4: H4 heading - auto-numbered (1.1.1. Title)</li> <li>SECTION_H5: H5 heading - auto-numbered (1.1.1.1. Title)</li> <li>BODY: Body text - paragraph content</li> <li>CAPTION: Caption text - image captions, supplementary information</li> </ul>"},{"location":"user-guide/text-widget/#color-recommendations","title":"Color Recommendations","text":"<ul> <li>Primary Content: #323130 (Dark Gray)</li> <li>Emphasis Content: #0078d4 (Blue)</li> <li>Success Information: #107c10 (Green)</li> <li>Warning Information: #ff8c00 (Orange)</li> <li>Error Information: #d13438 (Red)</li> </ul>"},{"location":"user-guide/text-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/text-widget/#1-structured-document-content","title":"1. Structured Document Content","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.text_widget import TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u7ed3\u6784\u5316\u6587\u6863\nemail = Email(\"\u9879\u76ee\u62a5\u544a\")\n\n# \u4e3b\u6807\u9898\nemail.add_text(\"2024\u5e74Q1\u9879\u76ee\u8fdb\u5c55\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u7ae0\u8282\u6807\u9898\nemail.add_text(\"\u9879\u76ee\u6982\u8ff0\", TextType.SECTION_H2)\nemail.add_text(\"\u672c\u5b63\u5ea6\u4e3b\u8981\u5b8c\u6210\u4e86\u7528\u6237\u7cfb\u7edf\u548c\u6570\u636e\u5206\u6790\u6a21\u5757\u7684\u5f00\u53d1\u5de5\u4f5c\u3002\", TextType.BODY)\n\n# \u5b50\u7ae0\u8282\nemail.add_text(\"\u7528\u6237\u7cfb\u7edf\u6a21\u5757\", TextType.SECTION_H3)\nemail.add_text(\"\u5b9e\u73b0\u4e86\u7528\u6237\u6ce8\u518c\u3001\u767b\u5f55\u3001\u6743\u9650\u7ba1\u7406\u7b49\u6838\u5fc3\u529f\u80fd\u3002\", TextType.BODY)\n\nemail.add_text(\"\u6570\u636e\u5206\u6790\u6a21\u5757\", TextType.SECTION_H3)\nemail.add_text(\"\u5b8c\u6210\u4e86\u6570\u636e\u91c7\u96c6\u3001\u6e05\u6d17\u548c\u57fa\u7840\u5206\u6790\u529f\u80fd\u3002\", TextType.BODY)\n\n# \u5bfc\u51fa\nemail.export_html(\"structured_document.html\")\n</code></pre>"},{"location":"user-guide/text-widget/#2-emphasized-and-formatted-text","title":"2. Emphasized and Formatted Text","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.text_widget import TextWidget\nfrom email_widget.core.enums import TextType\n\nemail = Email(\"\u683c\u5f0f\u5316\u6587\u672c\u793a\u4f8b\")\n\n# \u5f3a\u8c03\u91cd\u8981\u4fe1\u606f\nimportant_text = (TextWidget()\n                 .set_content(\"\u91cd\u8981\u901a\u77e5\uff1a\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a\u8fdb\u884c\u7ef4\u62a4\")\n                 .set_type(TextType.BODY)\n                 .set_color(\"#d13438\")\n                 .set_align(\"center\"))\nemail.add_widget(important_text)\n\n# \u6210\u529f\u4fe1\u606f\nsuccess_text = (TextWidget()\n               .set_content(\"\u2705 \u9879\u76ee\u5df2\u6210\u529f\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\")\n               .set_type(TextType.BODY)\n               .set_color(\"#107c10\"))\nemail.add_widget(success_text)\n\n# HTML\u683c\u5f0f\u5316\nhtml_text = (TextWidget()\n            .set_content(\"\u652f\u6301 &lt;strong&gt;\u7c97\u4f53&lt;/strong&gt;\u3001&lt;em&gt;\u659c\u4f53&lt;/em&gt; \u548c &lt;u&gt;\u4e0b\u5212\u7ebf&lt;/u&gt;\")\n            .set_type(TextType.BODY))\nemail.add_widget(html_text)\n</code></pre>"},{"location":"user-guide/text-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_text</code> shortcut method:</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_text(\"\u8fd9\u662f\u4e00\u6bb5\u6587\u672c\")\n\n# \u5e26\u7c7b\u578b\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_text(\"\u8fd9\u662f\u6807\u9898\", TextType.SECTION_H2)\n\n# \u5e26\u6837\u5f0f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_text(\"\u5f3a\u8c03\u6587\u672c\", TextType.BODY, color=\"#0078d4\", align=\"center\")\n</code></pre>"},{"location":"user-guide/text-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/text-widget/#q-how-to-create-multi-line-text","title":"Q: How to create multi-line text?","text":"<p>A: Use line breaks or HTML <code>&lt;br&gt;</code> tags in the content: Python<pre><code>text.set_content(\"\u7b2c\u4e00\u884c\\n\u7b2c\u4e8c\u884c\\n\u7b2c\u4e09\u884c\")\n# \u6216\u8005\ntext.set_content(\"\u7b2c\u4e00\u884c&lt;br&gt;\u7b2c\u4e8c\u884c&lt;br&gt;\u7b2c\u4e09\u884c\")\n</code></pre></p>"},{"location":"user-guide/text-widget/#q-how-does-title-numbering-work","title":"Q: How does title numbering work?","text":"<p>A: H2 to H5 headings are automatically numbered by hierarchy: - H2: 1. Title - H3: 1.1. Title - H4: 1.1.1. Title - H5: 1.1.1.1. Title</p>"},{"location":"user-guide/text-widget/#q-what-html-tags-are-supported","title":"Q: What HTML tags are supported?","text":"<p>A: Basic formatting tags like <code>&lt;strong&gt;</code>, <code>&lt;em&gt;</code>, <code>&lt;u&gt;</code>, <code>&lt;br&gt;</code> are supported, but simple tags are recommended to ensure email client compatibility.</p>"},{"location":"user-guide/text-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>SeparatorWidget - Content separator lines</li> <li>AlertWidget - Alert information text</li> <li>CardWidget - Cards containing text</li> <li>QuoteWidget - Quoted text</li> <li>ButtonWidget - Button text</li> </ul>"},{"location":"user-guide/timeline-widget/","title":"TimelineWidget","text":"<p>TimelineWidget is a component for displaying time-series events in emails. It can display project progress, system logs, historical records, and other information in chronological order, supporting status markers, timestamp display, and flexible style configuration.</p>"},{"location":"user-guide/timeline-widget/#widget-preview","title":"\ud83c\udfaf Widget Preview1. \u65f6\u95f4\u7ebf\u7ec4\u4ef6\u5c55\u793a","text":"\u65f6\u95f4\u7ebf\u7ec4\u4ef6\u9884\u89c8 \u65f6\u95f4\u7ebf\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:54:51 \u9879\u76ee\u5f00\u53d1\u65f6\u95f4\u7ebf \u2713 2024-01-01 \u5b8c\u6210\u9879\u76ee\u7acb\u9879\u548c\u56e2\u961f\u7ec4\u5efa \u2713 2024-02-15 \u5b8c\u6210\u7528\u6237\u9700\u6c42\u8c03\u7814\u548c\u5206\u6790 \u2713 2024-03-01 \u5b8c\u6210UI/UX\u8bbe\u8ba1\u548c\u67b6\u6784\u8bbe\u8ba1 ! 2024-04-01 \u6b63\u5728\u8fdb\u884c\u6838\u5fc3\u529f\u80fd\u5f00\u53d1 i 2024-05-01 \u8ba1\u5212\u8fdb\u884c\u5168\u9762\u6d4b\u8bd5 i 2024-06-01 \u8ba1\u5212\u6b63\u5f0f\u4e0a\u7ebf\u53d1\u5e03 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/timeline-widget/#core-features","title":"\u2728 Core Features","text":"<ul> <li>\u23f0 Time Ordering: Automatically arranges events in chronological order, supports ascending and descending order</li> <li>\ud83c\udfa8 Status Themes: Theme color configuration based on StatusType, such as success, warning, error, etc.</li> <li>\ud83d\udcc5 Time Parsing: Intelligently parses multiple time formats, including dates and timestamps</li> <li>\u2699\ufe0f Flexible Configuration: Supports showing/hiding timestamps, reverse ordering, and other options</li> <li>\ud83d\udce7 Email Compatible: Implemented using email client-compatible HTML and CSS</li> </ul>"},{"location":"user-guide/timeline-widget/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/timeline-widget/#basic-usage","title":"Basic Usage","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TimelineWidget\n\n# \u521b\u5efa\u57fa\u7840\u65f6\u95f4\u7ebf\ntimeline = TimelineWidget()\ntimeline.set_title(\"\u9879\u76ee\u5386\u7a0b\")\ntimeline.add_event(\"\u9879\u76ee\u542f\u52a8\", \"2024-01-01\", \"\u9879\u76ee\u6b63\u5f0f\u5f00\u59cb\")\ntimeline.add_event(\"\u9700\u6c42\u786e\u8ba4\", \"2024-01-15\", \"\u5b8c\u6210\u9700\u6c42\u5206\u6790\")\ntimeline.add_event(\"\u8bbe\u8ba1\u8bc4\u5ba1\", \"2024-02-01\", \"UI\u8bbe\u8ba1\u901a\u8fc7\u8bc4\u5ba1\")\n\nemail = Email(\"\u9879\u76ee\u8fdb\u5c55\u62a5\u544a\")\nemail.add_widget(timeline)\n</code></pre>"},{"location":"user-guide/timeline-widget/#advanced-usage","title":"Advanced Usage","text":"Python<pre><code># \u5e26\u72b6\u6001\u548c\u65f6\u95f4\u6233\u7684\u8be6\u7ec6\u65f6\u95f4\u7ebf\ntimeline = TimelineWidget()\ntimeline.set_title(\"\u7cfb\u7edf\u76d1\u63a7\u65e5\u5fd7\")\ntimeline.add_event(\"\u7cfb\u7edf\u542f\u52a8\", \"2024-01-01 09:00:00\", \"\u670d\u52a1\u5668\u542f\u52a8\u6210\u529f\", \"success\")\ntimeline.add_event(\"\u7528\u6237\u767b\u5f55\", \"2024-01-01 09:15:30\", \"\u7ba1\u7406\u5458\u7528\u6237\u767b\u5f55\", \"info\")\ntimeline.add_event(\"\u53d1\u73b0\u8b66\u544a\", \"2024-01-01 10:30:00\", \"CPU\u4f7f\u7528\u7387\u8fc7\u9ad8\", \"warning\")\ntimeline.add_event(\"\u95ee\u9898\u89e3\u51b3\", \"2024-01-01 11:00:00\", \"\u7cfb\u7edf\u6027\u80fd\u6062\u590d\u6b63\u5e38\", \"success\")\ntimeline.show_timestamps(True)\ntimeline.set_reverse_order(True)\n\nemail.add_widget(timeline)\n</code></pre> <p>\ud83d\udcda Complete API Documentation: TimelineWidget API</p>"},{"location":"user-guide/timeline-widget/#style-guide","title":"\ud83c\udfa8 Style Guide","text":""},{"location":"user-guide/timeline-widget/#status-types-and-theme-colors","title":"Status Types and Theme Colors","text":"<ul> <li>success: Green (#107c10) - Successfully completed tasks, milestone achievements</li> <li>warning: Orange (#ff8c00) - Events requiring attention, performance warnings</li> <li>error: Red (#d13438) - Errors, failures, exception events</li> <li>info: Blue (#0078d4) - Informational events, notifications, releases</li> <li>primary: Blue (#0078d4) - Important events, key milestones</li> </ul>"},{"location":"user-guide/timeline-widget/#best-practices","title":"\ud83d\udcf1 Best Practices","text":""},{"location":"user-guide/timeline-widget/#1-project-progress-timeline","title":"1. Project Progress Timeline\u9879\u76ee\u91cc\u7a0b\u7891\u672c\u5468\u8fdb\u5c55","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.timeline_widget import TimelineWidget\n\n# \u521b\u5efa\u9879\u76ee\u8fdb\u5c55\u62a5\u544a\u90ae\u4ef6\nemail = Email(\"\u9879\u76ee\u8fdb\u5c55\u62a5\u544a\")\n\n# \u9879\u76ee\u5173\u952e\u91cc\u7a0b\u7891\ntimeline1 = TimelineWidget()\ntimeline1.set_title(\"\u9879\u76ee\u91cc\u7a0b\u7891\")\ntimeline1.add_event(\"\u9879\u76ee\u542f\u52a8\", \"2024-01-01\", \"\u9879\u76ee\u6b63\u5f0f\u542f\u52a8\", \"success\")\ntimeline1.add_event(\"\u9700\u6c42\u786e\u8ba4\", \"2024-01-15\", \"\u9700\u6c42\u6587\u6863\u786e\u8ba4\u5b8c\u6210\", \"success\")\ntimeline1.add_event(\"\u8bbe\u8ba1\u8bc4\u5ba1\", \"2024-02-01\", \"\u6280\u672f\u67b6\u6784\u8bbe\u8ba1\u901a\u8fc7\", \"success\")\ntimeline1.add_event(\"\u5f00\u53d1\u9636\u6bb5\", \"2024-02-15\", \"\u8fdb\u5165\u5f00\u53d1\u9636\u6bb5\", \"info\")\ntimeline1.add_event(\"\u6d4b\u8bd5\u9636\u6bb5\", \"2024-03-15\", \"\u529f\u80fd\u6d4b\u8bd5\u5f00\u59cb\", \"warning\")\ntimeline1.show_timestamps(True)\n\nemail.add_widget(timeline1)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"project_progress_report.html\")\n</code></pre> \u9879\u76ee\u8fdb\u5c55\u62a5\u544a \u9879\u76ee\u8fdb\u5c55\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:16:19 \u2713 \u9879\u76ee\u542f\u52a8 2024-01-01 \u9879\u76ee\u6b63\u5f0f\u542f\u52a8 \u2713 \u9700\u6c42\u786e\u8ba4 2024-01-15 \u9700\u6c42\u6587\u6863\u786e\u8ba4\u5b8c\u6210 \u2713 \u8bbe\u8ba1\u8bc4\u5ba1 2024-02-01 \u6280\u672f\u67b6\u6784\u8bbe\u8ba1\u901a\u8fc7 i \u5f00\u53d1\u9636\u6bb5 2024-02-15 \u8fdb\u5165\u5f00\u53d1\u9636\u6bb5 ! \u6d4b\u8bd5\u9636\u6bb5 2024-03-15 \u529f\u80fd\u6d4b\u8bd5\u5f00\u59cb \u25cf \u4e0a\u7ebf\u90e8\u7f72 2024-04-01 \u9884\u8ba1\u4e0a\u7ebf\u65f6\u95f4 i \u96c6\u6210\u6d4b\u8bd5 2024-02-23 16:00 \u96c6\u6210\u6d4b\u8bd5\u8fdb\u884c\u4e2d ! BUG\u4fee\u590d 2024-02-22 10:15 \u4fee\u590d\u5bc6\u7801\u9a8c\u8bc1\u95ee\u9898 \u2713 \u4ee3\u7801\u5ba1\u67e5 2024-02-21 14:30 \u767b\u5f55\u6a21\u5757\u4ee3\u7801\u5ba1\u67e5\u901a\u8fc7 \u2713 \u529f\u80fd\u5f00\u53d1 2024-02-20 09:00 \u5b8c\u6210\u7528\u6237\u767b\u5f55\u6a21\u5757 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/timeline-widget/#2-system-operations-log","title":"2. System Operations Log\u7cfb\u7edf\u4e8b\u4ef6\u65e5\u5fd7\u90e8\u7f72\u8bb0\u5f55","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.timeline_widget import TimelineWidget\n\n# \u521b\u5efa\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\")\n\n# \u7cfb\u7edf\u4e8b\u4ef6\u65f6\u95f4\u7ebf\ntimeline = TimelineWidget()\ntimeline.set_title(\"\u7cfb\u7edf\u4e8b\u4ef6\u65e5\u5fd7\")\ntimeline.add_event(\"\u7cfb\u7edf\u542f\u52a8\", \"2024-01-01 08:00:00\", \"\u670d\u52a1\u5668\u91cd\u542f\u5b8c\u6210\", \"success\")\ntimeline.add_event(\"\u5b9a\u65f6\u5907\u4efd\", \"2024-01-01 12:00:00\", \"\u6570\u636e\u5e93\u81ea\u52a8\u5907\u4efd\", \"info\")\ntimeline.add_event(\"\u5185\u5b58\u8b66\u544a\", \"2024-01-01 14:30:00\", \"\u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523085%\", \"warning\")\ntimeline.add_event(\"\u670d\u52a1\u5f02\u5e38\", \"2024-01-01 15:45:00\", \"Redis\u8fde\u63a5\u8d85\u65f6\", \"error\")\ntimeline.add_event(\"\u95ee\u9898\u4fee\u590d\", \"2024-01-01 16:15:00\", \"Redis\u670d\u52a1\u91cd\u542f\uff0c\u8fde\u63a5\u6062\u590d\", \"success\")\ntimeline.show_timestamps(True)\ntimeline.set_reverse_order(True)\n\nemail.add_widget(timeline)\n</code></pre> \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:16:48 i \u6027\u80fd\u4f18\u5316 2024-01-01 18:00:00 \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2 \u2713 \u95ee\u9898\u4fee\u590d 2024-01-01 16:15:00 Redis\u670d\u52a1\u91cd\u542f\uff0c\u8fde\u63a5\u6062\u590d \u2717 \u670d\u52a1\u5f02\u5e38 2024-01-01 15:45:00 Redis\u8fde\u63a5\u8d85\u65f6 ! \u5185\u5b58\u8b66\u544a 2024-01-01 14:30:00 \u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523085% i \u5b9a\u65f6\u5907\u4efd 2024-01-01 12:00:00 \u6570\u636e\u5e93\u81ea\u52a8\u5907\u4efd \u2713 \u7cfb\u7edf\u542f\u52a8 2024-01-01 08:00:00 \u670d\u52a1\u5668\u91cd\u542f\u5b8c\u6210 \u2713 \u91cd\u65b0\u90e8\u7f72 2024-01-02 14:00 \u4fee\u590d\u540e\u91cd\u65b0\u90e8\u7f72v1.2.1 \u2717 \u56de\u6eda\u64cd\u4f5c 2024-01-02 10:00 \u56de\u6eda\u5230v1.1.9 ! \u70ed\u4fee\u590d 2024-01-02 09:30 \u4fee\u590d\u767b\u5f55\u95ee\u9898 \u2713 v1.2.0\u90e8\u7f72 2024-01-01 20:00 \u751f\u4ea7\u73af\u5883\u90e8\u7f72\u5b8c\u6210 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"user-guide/timeline-widget/#shortcut-methods","title":"\u26a1 Shortcut Methods","text":"<p>The Email class provides the <code>add_timeline</code> shortcut method:</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_timeline(\n    title=\"\u9879\u76ee\u65f6\u95f4\u7ebf\",\n    events=[\n        (\"\u4e8b\u4ef61\", \"2024-01-01\", \"\u63cf\u8ff01\"),\n        (\"\u4e8b\u4ef62\", \"2024-01-02\", \"\u63cf\u8ff02\", \"success\"),\n        (\"\u4e8b\u4ef63\", \"2024-01-03\", \"\u63cf\u8ff03\", \"warning\")\n    ],\n    show_time=True,\n    reverse_order=True\n)\n</code></pre>"},{"location":"user-guide/timeline-widget/#common-issues","title":"\ud83d\udc1b Common Issues","text":""},{"location":"user-guide/timeline-widget/#q-what-are-the-requirements-for-time-formats","title":"Q: What are the requirements for time formats?","text":"<p>A: Supports multiple time formats with automatic parsing: Python<pre><code>timeline.add_event(\"\u4e8b\u4ef61\", \"2024-01-01\")              # \u65e5\u671f\ntimeline.add_event(\"\u4e8b\u4ef62\", \"2024-01-01 15:30\")        # \u65e5\u671f\u65f6\u95f4\ntimeline.add_event(\"\u4e8b\u4ef63\", datetime.now())            # datetime\u5bf9\u8c61\n</code></pre></p>"},{"location":"user-guide/timeline-widget/#q-how-to-handle-events-with-the-same-time","title":"Q: How to handle events with the same time?","text":"<p>A: Events with the same time are arranged in the order they were added.</p>"},{"location":"user-guide/timeline-widget/#q-whats-the-difference-between-reverse-and-normal-order","title":"Q: What's the difference between reverse and normal order?","text":"<p>A:  - Normal order (False): Earliest events at top, latest events at bottom - Reverse order (True): Latest events at top, earliest events at bottom</p>"},{"location":"user-guide/timeline-widget/#related-widgets","title":"\ud83d\udd17 Related Widgets","text":"<ul> <li>ChecklistWidget - Task progress display</li> <li>ProgressWidget - Progress bar display</li> <li>StatusWidget - Status information display</li> <li>LogWidget - Log information display</li> <li>CardWidget - Cards that can contain timelines</li> </ul>"},{"location":"user-guide/widget-overview/","title":"Widget Overview","text":"<p>EmailWidget provides a rich widget library that covers various common content types in emails. This page showcases all available widgets and their preview effects.</p> TextWidget <p>Used to display various text content, supports multiple styles and formats</p> This is important text Title Content Section TableWidget <p>Display structured data, supports headers, index columns, striped styles, etc.</p> Item Status User Registration Normal Data Statistics Status ImageWidget <p>Display image content, supports titles, descriptions, and various layout options</p> Data Trend Chart                              [Image Placeholder]                          <p>Shows user growth trend for the last 30 days</p> Image Display Description ChartWidget <p>Specifically designed for displaying charts, supports multiple chart types and data summaries</p> Monthly Sales Statistics                              [Chart Placeholder]                                                       Total Sales: \u00a51,250,000                          Chart Data Visualization ProgressWidget <p>Display task or process completion progress, supports multiple themes</p> Project Progress 75% Progress Status Percentage CircularProgressWidget <p>Display progress in circular format, suitable for showing percentage data</p> 88% System Performance Circular Progress KPI StatusWidget <p>Display information for multiple status items, supports horizontal and vertical layouts</p> System Status CPU Usage 45% Memory Usage 78% Status Monitoring System AlertWidget <p>Display various types of alert messages, supports GitHub-style alert boxes</p> \u2139\ufe0f Note This is an important notice Alert Notice Notification CardWidget <p>Card container for organizing and displaying related information</p> \ud83d\udcca Data Statistics                              This month added 1,234 new users, up 15.8% year-over-year                          Card Container Information QuoteWidget <p>Display quoted content, supports author and source information</p>                              \"Good code is its own best documentation.\"                                                       \u2014 Steve McConnell                          Quote Text Author ButtonWidget <p>Create clickable buttons, supports multiple styles and email client compatibility</p>                              Get Started                                                           Purchase                                                               Learn More                              Button Link Interaction ColumnWidget <p>Multi-column layout manager, supports responsive column layouts</p>                                  Column 1                                                               Column 2                                                               Column 3                              Layout Multi-column Responsive ChecklistWidget <p>Create task lists and to-do items, supports multiple statuses and progress statistics</p> Project Progress Checklist Progress 2/3 (66.7%) \u2713 Requirements Analysis Complete \u2713 Design Review Complete \u25cb Development Implementation To-do Checklist Progress Tasks LogWidget <p>Display log information, supports different log levels</p> [INFO] System started successfully [WARN] Disk space low [ERROR] Connection failed Log Monitoring Debug SeparatorWidget <p>Create visual separators, supports multiple styles for dividing email content sections</p> Solid Separator Dashed Separator Dotted Separator Separator Layout Division TimelineWidget <p>Display time-series events, supports status markers and timestamp display</p> Project Progress Project Launch Project officially started Requirements Analysis Requirements research completed Development Implementation Code development in progress Timeline Events Progress MetricWidget <p>Display key data metrics, supports trend analysis and multiple layouts</p> Key Metrics 12Kusers Active Users \u2197 +15.6% \u00a51.2M Monthly Revenue \u2192 +8.2% 3.2% Conversion Rate \u25cf +0.3% Metrics KPI Trends More Widgets <p>More powerful widgets are under development...</p>                              \ud83d\udea7 Coming Soon                                                       We are continuously adding new widgets                             to provide you with richer email content                          In Development Coming Soon"},{"location":"user-guide/widget-overview/#all-widget-preview","title":"\ud83c\udfaf All Widget Preview","text":""},{"location":"zh/","title":"EmailWidget - \u5f3a\u5927\u7684\u90ae\u4ef6\u7ec4\u4ef6\u5e93","text":""},{"location":"zh/#_1","title":"\u2728 \u7279\u6027","text":"<ul> <li>\u5c0f\u5de7\u8f7b\u91cf: \u5feb\u901f\u5b89\u88c5\uff0c\u65e0\u590d\u6742\u4f9d\u8d56(\u5c0f\u4e8e 1MB)</li> <li>\u6613\u4e8e\u4f7f\u7528: \u6e05\u6670\u7b80\u5355\u7684 API\uff0c\u51e0\u884c\u4ee3\u7801\u5c31\u80fd\u521b\u5efa\u6f02\u4eae\u7684\u90ae\u4ef6\u6a21\u677f\u7136\u540e\u5feb\u901f\u53d1\u9001</li> <li>\u5b8c\u6574\u6587\u6863: \u9879\u76ee\u62e5\u6709\u5b8c\u6574\u7684\u6587\u6863\u548c\u7c7b\u578b\u6ce8\u89e3\uff0c\u5728 IDE \u4e2d\u80fd\u83b7\u5f97\u5168\u9762\u7684\u63d0\u793a</li> <li>\u4e30\u5bcc\u7ec4\u4ef6: \u76ee\u524d\u5305\u542b 15+ \u4e2a\u6f02\u4eae\u7684\u5c55\u793a\u7ec4\u4ef6\uff0c\u6240\u6709\u7ec4\u4ef6\u5747\u7b26\u5408 Fluent \u98ce\u683c\uff0c\u53ef\u5728\u4e0b\u65b9\u67e5\u770b</li> <li>\u5168\u9762\u6d4b\u8bd5: \u6838\u5fc3\u7684\u529f\u80fd\u7ecf\u8fc7\u5b8c\u6574\u7684\u6d4b\u8bd5\uff0c\u786e\u4fdd\u9879\u76ee\u53ef\u7528</li> <li>\u5b8c\u5168\u514d\u8d39: \u9879\u76ee\u4f7f\u7528 MIT \u5f00\u6e90\u534f\u8bae\uff0c\u60a8\u53ef\u4ee5\u968f\u610f\u5728\u4efb\u4f55\u5546\u4e1a\u9879\u76ee\u4e2d\u4f7f\u7528</li> </ul>"},{"location":"zh/#emailwidget","title":"\u2728 \u4e3a\u4ec0\u4e48\u9009\u62e9 EmailWidget\uff1f","text":"<p>\u60f3\u53d1\u8b66\u544a\u6216\u8005\u65e5\u5fd7\u5230\u90ae\u7bb1\uff0c\u4f46\u662f\u4e0d\u4f1a\u7f8e\u5316\uff0c\u6837\u5f0f\u592a\u4e11\uff1f\u4f7f\u7528 EmailWidget \u6765\u6253\u901a\u53d1\u9001\u90ae\u4ef6\u7684\u6700\u540e\u4e00\u6b65\uff01</p> <p>\u60f3\u8981\u4e00\u4e2a\u6f02\u4eae\u7684\u90ae\u4ef6\u6a21\u7248\uff0c\u4f46\u662f\u4e0d\u4f1a HTML/CSS \u6216\u8005\u5e72\u8106\u61d2\u5f97\u5199\uff1f\u7f51\u4e0a\u7684\u6a21\u7248\u5220\u5220\u6539\u6539\u590d\u7528\u56f0\u96be\u800c\u4e14\u4e0d\u652f\u6301\u79fb\u52a8\u7aef\uff1f\u90a3\u4e48\u6b22\u8fce\u6765\u8bd5\u8bd5 EmailWidget\uff0c\u53ef\u590d\u7528\uff0c\u54cd\u5e94\u5f0f\uff0c\u5b8c\u6574\u7684\u7c7b\u578b\u63d0\u793a\uff0c\u5168\u9762\u7684\u6587\u6863\uff0c\u8f7b\u91cf\u7ea7\u7684\u90ae\u7bb1\u7ec4\u4ef6\u5e93\uff0c\u795d\u60a8\u5feb\u901f\u642d\u5efa\u81ea\u5df1\u7684\u62a5\u544a\u6a21\u7248</p> <p>EmailWidget \u662f\u4e13\u4e3a Python \u5f00\u53d1\u8005\u8bbe\u8ba1\u7684\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u8ba9\u4f60\u7528\u51e0\u884c\u4ee3\u7801\u5c31\u80fd\u521b\u5efa\u51fa\u7f8e\u89c2\u7684 HTML \u90ae\u4ef6\u62a5\u544a\u800c\u4e0d\u9700\u8981\u4e86\u89e3 HTML \u548c\u90ae\u7bb1\u7684 CSS \u7684\u7ec6\u8282\u3002\u9879\u76ee\u7ecf\u8fc7 1000+\u4e2a\u6d4b\u8bd5\u7528\u4f8b \u9a8c\u8bc1\uff0c\u6838\u5fc3\u4ee3\u7801 100% \u6d4b\u8bd5\u8986\u76d6, \u786e\u4fdd\u7a33\u5b9a\u53ef\u9760\u3002</p> <p>\u4e0b\u9762\u7684\u90ae\u7bb1\u6837\u5f0f\uff0c\u53ea\u9700\u8981 3 \u884c\u4ee3\u7801 \u5c31\u80fd\u521b\u5efa\uff0c\u751f\u6210\u51fa\u6765\u7684\u5185\u5bb9\u5c31\u80fd\u76f4\u63a5\u5f53\u505a\u90ae\u4ef6\u53d1\u9001\uff0c\u63a5\u53d7\u8005\u4e5f\u80fd\u770b\u5230\u7f8e\u89c2\u7684\u90ae\u4ef6</p> Python<pre><code>from email_widget import Email\n\nemail = Email(\"\u6b22\u8fce\u4f7f\u7528EmailWidget\")\n\nemail.add_card(\"Python\u7248\u672c\", \"\u60a8\u9700\u8981Python3.10\u6216\u4ee5\u4e0a\u624d\u80fd\u4f7f\u7528EmailWidget\", metadata={\"Python\u7248\u672c\": \"3.10+\"})\n\nemail.add_quote(\"EmailWidget\u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u548c\u53d1\u9001HTML\u90ae\u4ef6\u7684Python\u5e93\u3002\", \"EmailWidget\")\n\nemail.export_html('welcome_email.html')\n</code></pre> <p></p>"},{"location":"zh/#_2","title":"\"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb\"","text":""},{"location":"zh/#_3","title":"\ud83d\udce6 \u5b89\u88c5","text":"Bash<pre><code>pip install EmailWidget\n</code></pre>"},{"location":"zh/#30","title":"30\u79d2\u521b\u5efa\u4e13\u4e1a\u62a5\u544a","text":"Python<pre><code>from email_widget import Email, TextWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\ud83d\udcca \u4e1a\u52a1\u62a5\u544a\")\n\n# \u6dfb\u52a0\u6807\u9898\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u5b63\u5ea6\u4e1a\u7ee9\u603b\u7ed3\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\n    .set_value(92)\n    .set_label(\"\u76ee\u6807\u5b8c\u6210\u7387\")\n    .set_theme(ProgressTheme.SUCCESS)\n)\n\n# \u5bfc\u51faHTML\nemail.export_html(\"report.html\")\n</code></pre> \ud83d\udcca \u4e1a\u52a1\u62a5\u544a \ud83d\udcca \u4e1a\u52a1\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670801\u65e5 22:41:48 <p>\u5b63\u5ea6\u4e1a\u7ee9\u603b\u7ed3</p> \u76ee\u6807\u5b8c\u6210\u7387 92.0% <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/#_4","title":"\ud83c\udfaa \u4f7f\u7528\u573a\u666f","text":"\ud83d\udcca Data Analysis Reports <p>Create professional data visualization email reports for data analysts</p> Business Analysis KPI Monitoring Trend Analysis <p>Core Components: ChartWidget, TableWidget, ProgressWidget</p> \ud83d\udda5\ufe0f System Monitoring Reports <p>Server status, performance metrics and system operations monitoring emails</p> System Ops Service Monitor Alert System <p>Core Components: StatusWidget, AlertWidget, LogWidget</p> \ud83d\udd77\ufe0f Web Scraping Reports <p>Scraping task execution status and data collection statistics email reports</p> Data Collection Task Monitoring Quality Reports <p>Core Components: ProgressWidget, TableWidget, LogWidget</p> \ud83d\udce7 Regular Business Communication <p>Team weekly reports, project progress, business summaries and other regular emails</p> Project Management Team Communication Business Reports <p>Core Components: TextWidget, CardWidget, QuoteWidget</p>"},{"location":"zh/#_5","title":"\ud83c\udfa8 \u7ec4\u4ef6\u753b\u5eca","text":""},{"location":"zh/#_6","title":"\u57fa\u7840\u7ec4\u4ef6","text":"\u6587\u672c\u7ec4\u4ef6\u8868\u683c\u7ec4\u4ef6\u56fe\u8868\u7ec4\u4ef6 Python<pre><code># 8\u79cd\u9884\u8bbe\u6837\u5f0f\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u5927\u6807\u9898\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u7ae0\u8282\u6807\u9898\")\n    .set_type(TextType.SECTION_H2)\n)\n\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u6b63\u6587\u5185\u5bb9\uff0c\u652f\u6301\u591a\u884c\u6587\u672c\u548c\u81ea\u52a8\u683c\u5f0f\u5316\u3002\")\n    .set_type(TextType.BODY)\n)\n</code></pre> Python<pre><code># DataFrame\u76f4\u63a5\u5bfc\u5165\ntable = TableWidget().set_title(\"\u9500\u552e\u6570\u636e\")\ntable.set_dataframe(df)\n\n# \u624b\u52a8\u6dfb\u52a0\u884c\ntable = TableWidget()\ntable.set_headers([\"\u4ea7\u54c1\", \"\u9500\u91cf\", \"\u72b6\u6001\"])\ntable.add_row([\"iPhone\", \"1000\", \"success\"])\ntable.add_row([\"iPad\", \"800\", \"warning\"])\n\nemail.add_widget(table)\n</code></pre> Python<pre><code># matplotlib\u56fe\u8868\nfig, ax = plt.subplots()\nax.plot([1, 2, 3, 4], [1, 4, 2, 3])\nax.set_title(\"\u8d8b\u52bf\u56fe\")\n\nemail.add_widget(\n    ChartWidget()\n    .set_chart(plt)\n    .set_title(\"\u6570\u636e\u8d8b\u52bf\")\n    .set_description(\"\u663e\u793a\u4e1a\u52a1\u6307\u6807\u53d8\u5316\u8d8b\u52bf\")\n)\n</code></pre>"},{"location":"zh/#_7","title":"\u9ad8\u7ea7\u7ec4\u4ef6","text":"\u8fdb\u5ea6\u7ec4\u4ef6\u72b6\u6001\u7ec4\u4ef6\u901a\u77e5\u7ec4\u4ef6 Python<pre><code># \u7ebf\u6027\u8fdb\u5ea6\u6761\nemail.add_widget(\n    ProgressWidget()\n    .set_value(75)\n    .set_label(\"\u9879\u76ee\u8fdb\u5ea6\")\n    .set_theme(ProgressTheme.PRIMARY)\n)\n\n# \u5706\u5f62\u8fdb\u5ea6\u6761\nemail.add_widget(\n    CircularProgressWidget()\n    .set_value(85)\n    .set_label(\"\u5b8c\u6210\u7387\")\n)\n</code></pre> Python<pre><code># \u72b6\u6001\u5361\u7247\nemail.add_widget(\n    CardWidget()\n    .set_title(\"\u7cfb\u7edf\u72b6\u6001\")\n    .set_content(\"\u6240\u6709\u670d\u52a1\u6b63\u5e38\u8fd0\u884c\")\n    .set_icon(\"\u2705\")\n)\n\n# \u72b6\u6001\u5217\u8868\nstatus_items = [\n    {\"label\": \"\u6570\u636e\u5e93\", \"status\": \"success\", \"value\": \"\u8fde\u63a5\u7a33\u5b9a\"},\n    {\"label\": \"API\", \"status\": \"warning\", \"value\": \"\u54cd\u5e94\u65f6\u95f4\u8f83\u957f\"}\n]\nemail.add_status_items(status_items)\n</code></pre> Python<pre><code># \u8b66\u544a\u6846\nemail.add_widget(\n    AlertWidget()\n    .set_content(\"\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\")\n    .set_alert_type(AlertType.WARNING)\n    .set_title(\"\u91cd\u8981\u63d0\u9192\")\n)\n\n# \u5f15\u7528\u6837\u5f0f\nemail.add_widget(\n    QuoteWidget()\n    .set_content(\"\u6570\u636e\u662f\u65b0\u65f6\u4ee3\u7684\u77f3\u6cb9\")\n    .set_author(\"Clive Humby\")\n    .set_source(\"\u6570\u636e\u79d1\u5b66\u5bb6\")\n)\n</code></pre>"},{"location":"zh/#_8","title":"\ud83d\udcd6 \u6587\u6863\u5bfc\u822a","text":"<ul> <li> \u5feb\u901f\u5f00\u59cb</li> <li> \u7528\u6237\u6307\u5357</li> <li> \u7ec4\u4ef6\u9884\u89c8</li> <li> API\u53c2\u8003</li> <li> \u793a\u4f8b\u4ee3\u7801</li> <li> \u5f00\u53d1\u6307\u5357</li> </ul>"},{"location":"zh/#_9","title":"\ud83e\udd1d \u793e\u533a\u4e0e\u652f\u6301","text":""},{"location":"zh/#_10","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>\ud83d\udcda \u6587\u6863\u4e2d\u5fc3: \u5b8c\u6574\u6587\u6863</li> <li>\ud83d\udc1b \u95ee\u9898\u53cd\u9988: GitHub Issues</li> <li>\ud83d\udcac \u8ba8\u8bba\u4ea4\u6d41: GitHub Discussions</li> <li>\ud83d\udce7 \u90ae\u4ef6\u652f\u6301: 271374667@qq.com</li> </ul>"},{"location":"zh/#_11","title":"\u53c2\u4e0e\u8d21\u732e","text":"<p>\u63a8\u8350\u4f7f\u7528 uv \u4f5c\u4e3a\u9879\u76ee\u7ba1\u7406\u548c\u5f00\u53d1\u7684\u5305\u7ba1\u7406\u5de5\u5177</p> Bash<pre><code># 1. \u514b\u9686\u9879\u76ee\ngit clone https://github.com/271374667/EmailWidget.git\n\n# 2. \u5b89\u88c5\u5f00\u53d1\u73af\u5883\nuv sync\n\n# 3. \u8fd0\u884c\u6d4b\u8bd5\nuv run pytest\n\n# 4. \u63d0\u4ea4\u66f4\u6539\ngit commit -m \"Feature: \u6dfb\u52a0\u65b0\u529f\u80fd\"\n</code></pre>"},{"location":"zh/#_12","title":"\u793e\u4ea4\u5a92\u4f53","text":"<ul> <li>GitHub: 271374667/EmailWidget</li> <li>Bilibili: Python\u8c03\u5305\u4fa0</li> <li>Email: 271374667@qq.com</li> </ul>"},{"location":"zh/#_13","title":"\ud83d\udcc4 \u8bb8\u53ef\u8bc1","text":"<p>\u672c\u9879\u76ee\u91c7\u7528 MIT License \u5f00\u6e90\u534f\u8bae\u3002</p> <p>\u2b50 **\u5982\u679c\u8fd9\u4e2a\u9879\u76ee\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u8bf7\u7ed9\u6211\u4eec\u4e00\u4e2a\u661f\u6807\uff01** \u2b50</p> <p>Made with \u2764\ufe0f by Python\u8c03\u5305\u4fa0</p> <p>\ud83d\udcfa \u89c2\u770b\u89c6\u9891\u6559\u7a0b \u2022 \ud83d\udcd6 \u67e5\u770b\u5b8c\u6574\u6587\u6863</p>"},{"location":"zh/api/","title":"API \u53c2\u8003","text":"<p>\u6b22\u8fce\u6765\u5230 EmailWidget \u7684 API \u53c2\u8003\u6587\u6863\uff01\u8fd9\u91cc\u63d0\u4f9b\u4e86\u6240\u6709 Widget \u7ec4\u4ef6\u7684\u8be6\u7ec6 API \u8bf4\u660e\uff0c\u5305\u62ec\u65b9\u6cd5\u7b7e\u540d\u3001\u53c2\u6570\u8bf4\u660e\u3001\u8fd4\u56de\u503c\u3001\u5f02\u5e38\u5904\u7406\u548c\u4f7f\u7528\u793a\u4f8b\u3002</p>"},{"location":"zh/api/#_1","title":"\ud83d\udcda \u6587\u6863\u7ec4\u7ec7","text":"<p>EmailWidget \u7684 API \u6309\u529f\u80fd\u6a21\u5757\u8fdb\u884c\u7ec4\u7ec7\uff0c\u4fbf\u4e8e\u60a8\u5feb\u901f\u627e\u5230\u6240\u9700\u7684\u63a5\u53e3\uff1a</p>"},{"location":"zh/api/#_2","title":"\ud83c\udfd7\ufe0f \u6838\u5fc3\u67b6\u6784","text":"<ul> <li>\u6838\u5fc3\u6a21\u5757 - \u57fa\u7840\u7ec4\u4ef6\u548c\u6a21\u677f\u5f15\u64ce</li> <li>Email\u4e3b\u7c7b - \u90ae\u4ef6\u5bb9\u5668\u548c\u7ba1\u7406\u529f\u80fd</li> <li>\u90ae\u4ef6\u53d1\u9001\u5668 - \u90ae\u4ef6\u53d1\u9001\u529f\u80fd\u548c\u670d\u52a1\u5546\u652f\u6301</li> </ul>"},{"location":"zh/api/#_3","title":"\ud83e\udde9 \u7ec4\u4ef6\u7cfb\u7edf","text":"<ul> <li>\u6587\u672c\u7ec4\u4ef6</li> <li>\u8868\u683c\u7ec4\u4ef6</li> <li>\u56fe\u7247\u7ec4\u4ef6</li> <li>\u8b66\u544a\u7ec4\u4ef6</li> <li>\u8fdb\u5ea6\u7ec4\u4ef6</li> <li>\u5706\u5f62\u8fdb\u5ea6\u7ec4\u4ef6</li> <li>\u5361\u7247\u7ec4\u4ef6</li> <li>\u56fe\u8868\u7ec4\u4ef6</li> <li>\u65e5\u5fd7\u7ec4\u4ef6</li> <li>\u5f15\u7528\u7ec4\u4ef6</li> <li>\u5e03\u5c40\u7ec4\u4ef6</li> </ul>"},{"location":"zh/api/#_4","title":"\ud83d\ude80 \u5feb\u901f\u5bfc\u822a","text":""},{"location":"zh/api/#_5","title":"\u6309\u4f7f\u7528\u9891\u7387","text":"<p>\u9ad8\u9891\u4f7f\u7528 (\u65e5\u5e38\u5f00\u53d1\u5fc5\u5907) - <code>Email</code> - \u90ae\u4ef6\u4e3b\u7c7b - <code>TextWidget</code> - \u6587\u672c\u7ec4\u4ef6 - <code>TableWidget</code> - \u8868\u683c\u7ec4\u4ef6 - <code>ChartWidget</code> - \u56fe\u8868\u7ec4\u4ef6 - <code>AlertWidget</code> - \u8b66\u544a\u6846\u7ec4\u4ef6</p> <p>\u4e2d\u9891\u4f7f\u7528 (\u5e38\u89c1\u573a\u666f) - <code>ProgressWidget</code> - \u8fdb\u5ea6\u6761\u7ec4\u4ef6 - <code>StatusWidget</code> - \u72b6\u6001\u7ec4\u4ef6 - <code>CardWidget</code> - \u5361\u7247\u7ec4\u4ef6</p>"},{"location":"zh/api/#_6","title":"\u6309\u529f\u80fd\u5206\u7c7b","text":"\u529f\u80fd\u5206\u7c7b \u4e3b\u8981\u7ec4\u4ef6 \u9002\u7528\u573a\u666f \u6587\u672c\u5c55\u793a <code>TextWidget</code>, <code>QuoteWidget</code> \u6807\u9898\u3001\u6b63\u6587\u3001\u5f15\u7528 \u6570\u636e\u5c55\u793a <code>TableWidget</code>, <code>ChartWidget</code> \u6570\u636e\u62a5\u544a\u3001\u7edf\u8ba1\u56fe\u8868 \u72b6\u6001\u76d1\u63a7 <code>StatusWidget</code>, <code>ProgressWidget</code>, <code>CircularProgressWidget</code> \u7cfb\u7edf\u76d1\u63a7\u3001\u4efb\u52a1\u8fdb\u5ea6 \u5e03\u5c40\u63a7\u5236 <code>ColumnWidget</code>, <code>CardWidget</code> \u9875\u9762\u5e03\u5c40\u3001\u4fe1\u606f\u5361\u7247 \u4ea4\u4e92\u53cd\u9988 <code>AlertWidget</code>, <code>LogWidget</code> \u901a\u77e5\u3001\u65e5\u5fd7\u8bb0\u5f55"},{"location":"zh/api/#_7","title":"\ud83d\udcd6 \u4f7f\u7528\u8bf4\u660e","text":""},{"location":"zh/api/#api_1","title":"API \u6587\u6863\u7ea6\u5b9a","text":""},{"location":"zh/api/#_8","title":"\ud83d\udd17 \u94fe\u5f0f\u8c03\u7528","text":"<p>EmailWidget \u5e7f\u6cdb\u4f7f\u7528\u94fe\u5f0f\u8c03\u7528\u6a21\u5f0f\uff0c\u5927\u591a\u6570\u8bbe\u7f6e\u65b9\u6cd5\u90fd\u8fd4\u56de <code>self</code>\uff1a</p> Python<pre><code>widget = TextWidget()\\\n    .set_content(\"Hello World\")\\\n    .set_color(\"#0078d4\")\\\n    .set_font_size(\"18px\")\n</code></pre>"},{"location":"zh/api/#_9","title":"\ud83c\udff7\ufe0f \u7c7b\u578b\u63d0\u793a","text":"<p>\u6240\u6709 API \u90fd\u63d0\u4f9b\u5b8c\u6574\u7684\u7c7b\u578b\u63d0\u793a\uff1a</p> Python<pre><code>def set_content(self, content: str) -&gt; 'TextWidget':\n    \"\"\"\u8bbe\u7f6e\u6587\u672c\u5185\u5bb9\n\n    Args:\n        content: \u6587\u672c\u5185\u5bb9\u5b57\u7b26\u4e32\n\n    Returns:\n        \u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n    \"\"\"\n</code></pre>"},{"location":"zh/api/#_10","title":"\u26a0\ufe0f \u5f02\u5e38\u5904\u7406","text":"<p>API \u4f7f\u7528\u660e\u786e\u7684\u5f02\u5e38\u7c7b\u578b\uff1a</p> Python<pre><code>from email_widget.core.validators import ValidationError\n\ntry:\n    widget.set_color(\"invalid-color\")\nexcept ValidationError as e:\n    print(f\"\u989c\u8272\u683c\u5f0f\u9519\u8bef: {e}\")\n</code></pre>"},{"location":"zh/api/#_11","title":"\u5e38\u7528\u6a21\u5f0f","text":""},{"location":"zh/api/#_12","title":"\ud83d\udcdd \u521b\u5efa\u57fa\u672c\u90ae\u4ef6","text":"Python<pre><code>from email_widget import Email, TextWidget, TableWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u6570\u636e\u62a5\u544a\")\n\n# \u6dfb\u52a0\u6807\u9898\nemail.add_widget(\n    TextWidget()\\\n    .set_content(\"\u6708\u5ea6\u4e1a\u7ee9\u6c47\u603b\")\\\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u5bfc\u51faHTML\nemail.export_html(\"report.html\")\n</code></pre>"},{"location":"zh/api/#_13","title":"\ud83d\udcca \u6570\u636e\u53ef\u89c6\u5316","text":"Python<pre><code>from email_widget.widgets import ChartWidget, ProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\n# \u6dfb\u52a0\u56fe\u8868\nemail.add_widget(\n    ChartWidget()\\\n    .set_image_url(\"chart.png\")\\\n    .set_title(\"\u9500\u552e\u8d8b\u52bf\")\n)\n\n# \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\\\n    .set_value(85)\\\n    .set_label(\"\u76ee\u6807\u5b8c\u6210\u5ea6\")\\\n    .set_theme(ProgressTheme.SUCCESS)\n)\n</code></pre>"},{"location":"zh/api/#_14","title":"\ud83c\udfa8 \u81ea\u5b9a\u4e49\u6837\u5f0f","text":"Python<pre><code>from email_widget.core.config import EmailConfig\n\n# \u914d\u7f6e\u4e3b\u9898\nconfig = EmailConfig()\nconfig.set_primary_color(\"#6c5ce7\")\nconfig.set_font_family(\"'Helvetica Neue', Arial, sans-serif\")\n\n# \u5e94\u7528\u5230\u90ae\u4ef6\nemail.config = config\n</code></pre>"},{"location":"zh/api/#_15","title":"\ud83d\udd0d \u641c\u7d22\u6280\u5de7","text":""},{"location":"zh/api/#_16","title":"\u6309\u9700\u6c42\u67e5\u627e","text":"<ul> <li>\u5bfb\u627e\u7279\u5b9a\u65b9\u6cd5: \u4f7f\u7528 <code>Ctrl+F</code> \u641c\u7d22\u65b9\u6cd5\u540d</li> <li>\u4e86\u89e3\u53c2\u6570\u7c7b\u578b: \u67e5\u770b\u7c7b\u578b\u63d0\u793a\u548c\u53c2\u6570\u8bf4\u660e</li> <li>\u67e5\u770b\u4f7f\u7528\u793a\u4f8b: \u6bcf\u4e2a\u65b9\u6cd5\u90fd\u63d0\u4f9b\u5b9e\u9645\u4f7f\u7528\u793a\u4f8b</li> <li>\u7406\u89e3\u8fd4\u56de\u503c: \u6ce8\u610f\u8fd4\u56de\u7c7b\u578b\u548c\u94fe\u5f0f\u8c03\u7528\u652f\u6301</li> </ul>"},{"location":"zh/api/#_17","title":"\u5e38\u89c1\u641c\u7d22\u8bcd","text":"\u641c\u7d22\u9700\u6c42 \u641c\u7d22\u5173\u952e\u8bcd \u8bbe\u7f6e\u989c\u8272 <code>color</code>, <code>set_color</code> \u8c03\u6574\u5927\u5c0f <code>size</code>, <code>width</code>, <code>height</code> \u6587\u672c\u6837\u5f0f <code>font</code>, <code>text</code>, <code>align</code> \u6570\u636e\u7ed1\u5b9a <code>data</code>, <code>dataframe</code>, <code>set_data</code> \u4e8b\u4ef6\u5904\u7406 <code>callback</code>, <code>event</code>, <code>handler</code> \u9a8c\u8bc1\u89c4\u5219 <code>validator</code>, <code>validate</code>"},{"location":"zh/api/#_18","title":"\ud83d\udccb \u7248\u672c\u517c\u5bb9\u6027","text":"<p>\u5f53\u524d\u6587\u6863\u5bf9\u5e94 EmailWidget v1.0.0\uff0cAPI \u7a33\u5b9a\u6027\u8bf4\u660e\uff1a</p> <ul> <li>\ud83d\udfe2 \u7a33\u5b9a API: \u4e3b\u8981\u7684 Widget \u7c7b\u548c\u65b9\u6cd5</li> <li>\ud83d\udfe1 \u5b9e\u9a8c\u6027 API: \u9ad8\u7ea7\u529f\u80fd\u548c\u81ea\u5b9a\u4e49\u6269\u5c55</li> <li>\ud83d\udd34 \u5185\u90e8 API: \u4ee5 <code>_</code> \u5f00\u5934\u7684\u65b9\u6cd5\uff0c\u4e0d\u4fdd\u8bc1\u517c\u5bb9\u6027</li> </ul>"},{"location":"zh/api/#_19","title":"\ud83d\udcde \u83b7\u53d6\u5e2e\u52a9","text":"<p>\u5982\u679c\u5728\u4f7f\u7528 API \u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff1a</p> <ol> <li>\ud83d\udcd6 \u67e5\u9605\u5bf9\u5e94\u7684 \u7528\u6237\u6307\u5357</li> <li>\ud83d\udca1 \u53c2\u8003 \u793a\u4f8b\u4ee3\u7801</li> <li>\ud83d\udc1b \u63d0\u4ea4 GitHub Issue</li> <li>\ud83d\udcac \u52a0\u5165\u8ba8\u8bba GitHub Discussions</li> </ol> <p>\u73b0\u5728\u5f00\u59cb\u63a2\u7d22 EmailWidget \u7684\u5f3a\u5927 API \u5427\uff01\u5efa\u8bae\u4ece Email\u4e3b\u7c7b \u5f00\u59cb\u3002</p>"},{"location":"zh/api/#_20","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u90ae\u4ef6\u517c\u5bb9\u6027 - \u6240\u6709\u7ec4\u4ef6\u90fd\u9488\u5bf9\u90ae\u4ef6\u5ba2\u6237\u7aef\u8fdb\u884c\u4e86\u4f18\u5316</li> <li>\u54cd\u5e94\u5f0f\u8bbe\u8ba1 - \u652f\u6301\u4e0d\u540c\u5c4f\u5e55\u5c3a\u5bf8\u7684\u81ea\u9002\u5e94\u663e\u793a</li> <li>\u94fe\u5f0f\u8c03\u7528 - \u6240\u6709\u8bbe\u7f6e\u65b9\u6cd5\u90fd\u8fd4\u56de self\uff0c\u652f\u6301\u94fe\u5f0f\u8c03\u7528</li> <li>\u53c2\u6570\u9a8c\u8bc1 - \u63d0\u4f9b\u8f93\u5165\u53c2\u6570\u7684\u9a8c\u8bc1\u548c\u9519\u8bef\u5904\u7406</li> <li>\u4e2d\u6587\u652f\u6301 - \u5b8c\u6574\u652f\u6301\u4e2d\u6587\u5b57\u7b26\u663e\u793a</li> <li>\u4f9d\u8d56\u7ba1\u7406 - \u90e8\u5206\u529f\u80fd\u9700\u8981\u989d\u5916\u7684\u4f9d\u8d56\u5e93\uff08\u5982 matplotlib\u3001pandas\uff09</li> </ol>"},{"location":"zh/api/#_21","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<p>\u5982\u679c\u5728\u4f7f\u7528 API \u65f6\u9047\u5230\u95ee\u9898\uff1a</p> <ol> <li>\u67e5\u770b\u5bf9\u5e94\u7ec4\u4ef6\u7684\u8be6\u7ec6 API \u6587\u6863</li> <li>\u53c2\u8003\u7528\u6237\u6307\u5357\u4e2d\u7684\u4f7f\u7528\u793a\u4f8b</li> <li>\u67e5\u770b GitHub \u4ed3\u5e93\u7684\u793a\u4f8b\u4ee3\u7801</li> <li>\u63d0\u4ea4 Issue \u83b7\u53d6\u6280\u672f\u652f\u6301</li> </ol>"},{"location":"zh/api/#_22","title":"\u7248\u672c\u4fe1\u606f","text":"<p>\u5f53\u524d API \u6587\u6863\u5bf9\u5e94 EmailWidget v1.0.0 \u7248\u672c\u3002API \u53ef\u80fd\u5728\u65b0\u7248\u672c\u4e2d\u53d1\u751f\u53d8\u5316\uff0c\u8bf7\u6ce8\u610f\u7248\u672c\u517c\u5bb9\u6027\u3002</p>"},{"location":"zh/api/alert-widget/","title":"\u8b66\u544a\u7ec4\u4ef6 API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>AlertWidget</code> \u662f\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u663e\u793a\u91cd\u8981\u63d0\u9192\u548c\u901a\u77e5\u4fe1\u606f\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u591a\u79cd\u8b66\u544a\u7c7b\u578b\u548c\u6837\u5f0f\u3002</p>"},{"location":"zh/api/alert-widget/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u591a\u79cd\u8b66\u544a\u7c7b\u578b\uff1a\u652f\u6301\u4fe1\u606f\u3001\u6210\u529f\u3001\u8b66\u544a\u3001\u9519\u8bef\u7b49\u4e0d\u540c\u7c7b\u578b\u7684\u63d0\u9192</li> <li>\u81ea\u5b9a\u4e49\u5185\u5bb9\uff1a\u53ef\u8bbe\u7f6e\u6807\u9898\u3001\u5185\u5bb9\u6587\u672c\u548c\u56fe\u6807</li> <li>\u89c6\u89c9\u6548\u679c\uff1a\u63d0\u4f9b\u9192\u76ee\u7684\u989c\u8272\u548c\u6837\u5f0f\u533a\u5206\u4e0d\u540c\u8b66\u544a\u7ea7\u522b</li> <li>\u54cd\u5e94\u5f0f\u8bbe\u8ba1\uff1a\u81ea\u52a8\u9002\u914d\u90ae\u4ef6\u5ba2\u6237\u7aef\u663e\u793a</li> </ul>"},{"location":"zh/api/alert-widget/#_2","title":"\u4e3b\u8981\u65b9\u6cd5","text":"<ul> <li><code>set_alert_type(alert_type)</code>: \u8bbe\u7f6e\u8b66\u544a\u7c7b\u578b\uff08info, success, warning, error\uff09</li> <li><code>set_title(title)</code>: \u8bbe\u7f6e\u8b66\u544a\u6807\u9898</li> <li><code>set_content(content)</code>: \u8bbe\u7f6e\u8b66\u544a\u5185\u5bb9</li> <li><code>set_icon(icon)</code>: \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u56fe\u6807</li> </ul>"},{"location":"zh/api/button-widget/","title":"\u6309\u94ae\u7ec4\u4ef6 API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>ButtonWidget</code> \u662f\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u6dfb\u52a0\u53ef\u70b9\u51fb\u6309\u94ae\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u591a\u79cd\u6837\u5f0f\u548c\u94fe\u63a5\u529f\u80fd\u3002</p>"},{"location":"zh/api/button-widget/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u81ea\u5b9a\u4e49\u6587\u672c\uff1a\u53ef\u8bbe\u7f6e\u6309\u94ae\u663e\u793a\u6587\u5b57</li> <li>\u94fe\u63a5\u529f\u80fd\uff1a\u652f\u6301\u6dfb\u52a0\u70b9\u51fb\u8df3\u8f6c\u94fe\u63a5</li> <li>\u6837\u5f0f\u5b9a\u5236\uff1a\u652f\u6301\u81ea\u5b9a\u4e49\u989c\u8272\u3001\u5927\u5c0f\u548c\u5706\u89d2</li> <li>\u54cd\u5e94\u5f0f\u8bbe\u8ba1\uff1a\u5728\u4e0d\u540c\u8bbe\u5907\u4e0a\u4fdd\u6301\u826f\u597d\u663e\u793a\u6548\u679c</li> </ul>"},{"location":"zh/api/button-widget/#_2","title":"\u4e3b\u8981\u65b9\u6cd5","text":"<ul> <li><code>set_text(text)</code>: \u8bbe\u7f6e\u6309\u94ae\u6587\u5b57</li> <li><code>set_url(url)</code>: \u8bbe\u7f6e\u70b9\u51fb\u94fe\u63a5</li> <li><code>set_color(color)</code>: \u8bbe\u7f6e\u6309\u94ae\u989c\u8272</li> <li><code>set_size(size)</code>: \u8bbe\u7f6e\u6309\u94ae\u5927\u5c0f</li> </ul>"},{"location":"zh/api/card-widget/","title":"\u5361\u7247\u7ec4\u4ef6 API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>CardWidget</code> \u662f\u7528\u4e8e\u521b\u5efa\u4fe1\u606f\u5361\u7247\u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u5c06\u76f8\u5173\u5185\u5bb9\u7ec4\u7ec7\u5728\u4e00\u4e2a\u7f8e\u89c2\u7684\u5bb9\u5668\u4e2d\u3002</p>"},{"location":"zh/api/card-widget/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u6807\u9898\u548c\u5185\u5bb9\uff1a\u652f\u6301\u8bbe\u7f6e\u5361\u7247\u6807\u9898\u548c\u4e3b\u8981\u5185\u5bb9</li> <li>\u56fe\u6807\u652f\u6301\uff1a\u53ef\u6dfb\u52a0\u56fe\u6807\u589e\u5f3a\u89c6\u89c9\u6548\u679c</li> <li>\u5143\u6570\u636e\u663e\u793a\uff1a\u652f\u6301\u663e\u793a\u9644\u52a0\u7684\u952e\u503c\u5bf9\u4fe1\u606f</li> <li>\u5e03\u5c40\u7075\u6d3b\uff1a\u9002\u914d\u4e0d\u540c\u5185\u5bb9\u957f\u5ea6</li> </ul>"},{"location":"zh/api/card-widget/#_2","title":"\u4e3b\u8981\u65b9\u6cd5","text":"<ul> <li><code>set_title(title)</code>: \u8bbe\u7f6e\u5361\u7247\u6807\u9898</li> <li><code>set_content(content)</code>: \u8bbe\u7f6e\u5361\u7247\u5185\u5bb9</li> <li><code>set_icon(icon)</code>: \u8bbe\u7f6e\u5361\u7247\u56fe\u6807</li> <li><code>set_metadata(metadata)</code>: \u8bbe\u7f6e\u5143\u6570\u636e</li> </ul>"},{"location":"zh/api/chart-widget/","title":"\u56fe\u8868\u7ec4\u4ef6 API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>ChartWidget</code> \u662f\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u663e\u793a\u56fe\u8868\u7684\u7ec4\u4ef6\uff0c\u652f\u6301 matplotlib \u751f\u6210\u7684\u5404\u79cd\u56fe\u8868\u7c7b\u578b\u3002</p>"},{"location":"zh/api/chart-widget/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>matplotlib \u96c6\u6210\uff1a\u76f4\u63a5\u4f7f\u7528 matplotlib \u56fe\u8868\u5bf9\u8c61</li> <li>\u56fe\u7247\u683c\u5f0f\uff1a\u81ea\u52a8\u8f6c\u6362\u4e3a\u90ae\u4ef6\u517c\u5bb9\u7684\u56fe\u7247\u683c\u5f0f</li> <li>\u54cd\u5e94\u5f0f\u663e\u793a\uff1a\u81ea\u52a8\u8c03\u6574\u56fe\u8868\u5c3a\u5bf8\u9002\u914d\u90ae\u4ef6\u5e03\u5c40</li> <li>\u6807\u9898\u548c\u63cf\u8ff0\uff1a\u53ef\u6dfb\u52a0\u56fe\u8868\u6807\u9898\u548c\u8bf4\u660e\u6587\u5b57</li> </ul>"},{"location":"zh/api/chart-widget/#_2","title":"\u4e3b\u8981\u65b9\u6cd5","text":"<ul> <li><code>set_chart(plt_figure)</code>: \u8bbe\u7f6e matplotlib \u56fe\u8868\u5bf9\u8c61</li> <li><code>set_title(title)</code>: \u8bbe\u7f6e\u56fe\u8868\u6807\u9898</li> <li><code>set_description(description)</code>: \u8bbe\u7f6e\u56fe\u8868\u63cf\u8ff0</li> <li><code>set_size(width, height)</code>: \u8bbe\u7f6e\u56fe\u8868\u663e\u793a\u5c3a\u5bf8</li> </ul>"},{"location":"zh/api/checklist-widget/","title":"checklist-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/api/circular-progress-widget/","title":"circular-progress-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/api/column-widget/","title":"column-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/api/core/","title":"\u6838\u5fc3\u6a21\u5757","text":"<p>\u6838\u5fc3\u6a21\u5757\u63d0\u4f9b\u4e86 EmailWidget \u7684\u57fa\u7840\u67b6\u6784\uff0c\u5305\u62ec Widget \u57fa\u7c7b\u3001\u6a21\u677f\u5f15\u64ce\u3001\u7f13\u5b58\u7cfb\u7edf\u7b49\u6838\u5fc3\u7ec4\u4ef6\u3002</p> <p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u6838\u5fc3\u6a21\u5757\u7684\u4e2d\u6587\u8bf4\u660e\u3002</p>"},{"location":"zh/api/core/#basewidget-","title":"BaseWidget - \u57fa\u7840\u7ec4\u4ef6\u7c7b","text":"<p>\u6240\u6709 EmailWidget \u7ec4\u4ef6\u7684\u57fa\u7c7b\uff0c\u63d0\u4f9b\u4e86\u7ec4\u4ef6\u7684\u57fa\u672c\u529f\u80fd\u548c\u63a5\u53e3\u3002</p>"},{"location":"zh/api/core/#_2","title":"\u4e3b\u8981\u529f\u80fd","text":"<ul> <li>\u7ec4\u4ef6 ID \u7ba1\u7406</li> <li>HTML \u6e32\u67d3\u63a5\u53e3  </li> <li>\u7236\u5b50\u7ec4\u4ef6\u5173\u7cfb\u7ba1\u7406</li> <li>\u6837\u5f0f\u548c\u5c5e\u6027\u8bbe\u7f6e</li> </ul>"},{"location":"zh/api/core/#templateengine-","title":"TemplateEngine - \u6a21\u677f\u5f15\u64ce","text":"<p>\u8d1f\u8d23 HTML \u6a21\u677f\u7684\u6e32\u67d3\u548c\u7ba1\u7406\u3002</p>"},{"location":"zh/api/core/#_3","title":"\u4e3b\u8981\u529f\u80fd","text":"<ul> <li>Jinja2 \u6a21\u677f\u6e32\u67d3</li> <li>\u6a21\u677f\u7f13\u5b58\u7ba1\u7406</li> <li>\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u652f\u6301</li> </ul>"},{"location":"zh/api/core/#imagecache-","title":"ImageCache - \u56fe\u7247\u7f13\u5b58","text":"<p>\u7ba1\u7406\u56fe\u7247\u8d44\u6e90\u7684\u7f13\u5b58\u548c\u4f18\u5316\u3002</p>"},{"location":"zh/api/core/#_4","title":"\u4e3b\u8981\u529f\u80fd","text":"<ul> <li>\u56fe\u7247\u672c\u5730\u7f13\u5b58</li> <li>Base64 \u7f16\u7801\u8f6c\u6362</li> <li>\u7f13\u5b58\u6e05\u7406\u548c\u7ba1\u7406</li> </ul>"},{"location":"zh/api/core/#logger-","title":"Logger - \u65e5\u5fd7\u8bb0\u5f55\u5668","text":"<p>EmailWidget \u4e13\u7528\u7684\u65e5\u5fd7\u8bb0\u5f55\u7cfb\u7edf\u3002</p>"},{"location":"zh/api/core/#_5","title":"\u4e3b\u8981\u529f\u80fd","text":"<ul> <li>\u5206\u7ea7\u65e5\u5fd7\u8bb0\u5f55</li> <li>\u81ea\u5b9a\u4e49\u65e5\u5fd7\u683c\u5f0f</li> <li>\u8c03\u8bd5\u4fe1\u606f\u8f93\u51fa</li> </ul>"},{"location":"zh/api/email-sender/","title":"\u90ae\u4ef6\u53d1\u9001\u5668","text":""},{"location":"zh/api/email-sender/#smtp","title":"\u5e38\u89c1\u90ae\u7bb1SMTP\u914d\u7f6e\u4e0e\u6388\u6743\u7801\u83b7\u53d6","text":"<p>\u4ee5\u4e0b\u4e3a\u4e3b\u6d41\u90ae\u7bb1\uff08QQ\u3001163\u3001Outlook\u3001Gmail\uff09SMTP\u670d\u52a1\u5668\u53c2\u6570\u53ca\u6388\u6743\u7801\u83b7\u53d6\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u5feb\u901f\u914d\u7f6e\u3002</p> \u90ae\u7bb1\u7c7b\u578b SMTP\u670d\u52a1\u5668 \u7aef\u53e3 \u52a0\u5bc6\u65b9\u5f0f \u7528\u6237\u540d \u5bc6\u7801\u7c7b\u578b QQ\u90ae\u7bb1 smtp.qq.com 465 SSL \u5b8c\u6574\u90ae\u7bb1\u5730\u5740 \u6388\u6743\u7801 163\u90ae\u7bb1 smtp.163.com 465 SSL \u5b8c\u6574\u90ae\u7bb1\u5730\u5740 \u6388\u6743\u7801 Gmail smtp.gmail.com 587 TLS \u5b8c\u6574\u90ae\u7bb1\u5730\u5740 \u5e94\u7528\u4e13\u7528\u5bc6\u7801"},{"location":"zh/api/email-sender/#qq","title":"QQ\u90ae\u7bb1","text":"<ol> <li>\u767b\u5f55QQ\u90ae\u7bb1\u7f51\u9875\u7248\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\"\u8bbe\u7f6e\"&gt;\"\u8d26\u6237\"\u3002</li> <li>\u5728\"POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV\u670d\u52a1\"\u5904\uff0c\u52fe\u9009\"\u5f00\u542fSMTP\u670d\u52a1\"\uff0c\u4fdd\u5b58\u3002</li> <li>\u6309\u63d0\u793a\u8fdb\u884c\u624b\u673a\u9a8c\u8bc1\uff0c\u83b7\u53d6\u6388\u6743\u7801\uff08\u6b64\u7801\u5373\u4e3aSMTP\u767b\u5f55\u5bc6\u7801\uff09\u3002</li> <li>\u90ae\u4ef6\u5ba2\u6237\u7aef\u914d\u7f6e\u65f6\uff0c\u7528\u6237\u540d\u4e3a\u5b8c\u6574\u90ae\u7bb1\uff0c\u5bc6\u7801\u4e3a\u6388\u6743\u7801\u3002</li> <li>\u8be6\u7ec6\u5b98\u65b9\u8bf4\u660e\uff1aQQ\u90ae\u7bb1\u5e2e\u52a9\u4e2d\u5fc3</li> <li>\u5fae\u8f6f\u5b98\u65b9Outlook\u5bf9\u63a5QQ\u90ae\u7bb1\u8bf4\u660e\uff08\u542b\u6388\u6743\u7801\u83b7\u53d6\u6b65\u9aa4\uff09\uff1a\u67e5\u770b</li> </ol>"},{"location":"zh/api/email-sender/#163","title":"163\u90ae\u7bb1","text":"<ol> <li>\u767b\u5f55163\u90ae\u7bb1\u7f51\u9875\u7248\uff0c\u70b9\u51fb\"\u8bbe\u7f6e\"&gt;\"POP3/SMTP/IMAP\"\u3002</li> <li>\u5f00\u542f\"SMTP\u670d\u52a1\"\uff0c\u5982\u9700\u9a8c\u8bc1\u8bf7\u6309\u63d0\u793a\u64cd\u4f5c\u3002</li> <li>\u83b7\u53d6\u6388\u6743\u7801\uff08\u90e8\u5206\u8d26\u53f7\u9700\u624b\u673a\u9a8c\u8bc1\uff09\uff0c\u6b64\u7801\u5373\u4e3aSMTP\u767b\u5f55\u5bc6\u7801\u3002</li> <li>\u90ae\u4ef6\u5ba2\u6237\u7aef\u914d\u7f6e\u65f6\uff0c\u7528\u6237\u540d\u4e3a\u5b8c\u6574\u90ae\u7bb1\uff0c\u5bc6\u7801\u4e3a\u6388\u6743\u7801\u3002</li> <li>\u5b98\u65b9\u5e2e\u52a9\u4e2d\u5fc3\uff1a\u7f51\u6613\u90ae\u7bb1\u5e2e\u52a9</li> <li>\u53c2\u8003\u535a\u5ba2\uff1aMailbird 163\u90ae\u7bb1\u914d\u7f6e</li> </ol>"},{"location":"zh/api/email-sender/#gmail","title":"Gmail","text":"<ol> <li>\u767b\u5f55Google\u8d26\u6237\uff0c\u8bbf\u95eeGoogle\u8d26\u6237\u8bbe\u7f6e\u3002</li> <li>\u5bfc\u822a\u5230\"\u5b89\u5168\u6027\" &gt; \"\u4e24\u6b65\u9a8c\u8bc1\"\uff0c\u5982\u672a\u542f\u7528\u8bf7\u5148\u542f\u7528\u4e24\u6b65\u9a8c\u8bc1\u3002</li> <li>\u524d\u5f80\"\u5b89\u5168\u6027\" &gt; \"\u5e94\u7528\u4e13\u7528\u5bc6\u7801\"\uff0c\u751f\u6210\u65b0\u7684\u5e94\u7528\u4e13\u7528\u5bc6\u7801\uff1a</li> <li>\u9009\u62e9\"\u90ae\u4ef6\"\u4f5c\u4e3a\u5e94\u7528\u7c7b\u578b</li> <li>\u9009\u62e9\u8bbe\u5907\u6216\u8f93\u5165\u81ea\u5b9a\u4e49\u540d\u79f0</li> <li>\u590d\u5236\u751f\u6210\u768416\u4f4d\u5bc6\u7801\uff08\u4e0d\u542b\u7a7a\u683c\uff09</li> <li>\u90ae\u4ef6\u5ba2\u6237\u7aef\u914d\u7f6e\u65f6\uff0c\u7528\u6237\u540d\u4e3a\u5b8c\u6574Gmail\u5730\u5740\uff0c\u5bc6\u7801\u4e3a\u751f\u6210\u7684\u5e94\u7528\u4e13\u7528\u5bc6\u7801\u3002</li> <li>\u5b98\u65b9\u6587\u6863\uff1aGoogle\u8d26\u6237\u5e2e\u52a9 - \u5e94\u7528\u4e13\u7528\u5bc6\u7801</li> <li>Gmail SMTP\u8bbe\u7f6e\uff1aGmail IMAP\u548cSMTP\u8bbe\u7f6e</li> </ol>"},{"location":"zh/api/email-sender/#faq","title":"FAQ","text":"<p>Q1\uff1a\u4ec0\u4e48\u662f\u6388\u6743\u7801/\u5e94\u7528\u4e13\u7528\u5bc6\u7801\uff1f A\uff1a\u6388\u6743\u7801/\u5e94\u7528\u4e13\u7528\u5bc6\u7801\u662f\u90ae\u7bb1\u670d\u52a1\u5546\u4e3a\u63d0\u5347\u5b89\u5168\u6027\u800c\u751f\u6210\u7684\u4e13\u7528\u5bc6\u7801\uff0c\u7528\u4e8e\u7b2c\u4e09\u65b9\u5e94\u7528\uff08\u5982\u90ae\u4ef6\u5ba2\u6237\u7aef\u3001\u81ea\u52a8\u5316\u811a\u672c\uff09\u767b\u5f55\u90ae\u7bb1\uff0c\u4e0d\u80fd\u7528\u666e\u901a\u767b\u5f55\u5bc6\u7801\u4ee3\u66ff\u3002</p> <p>Q2\uff1a\u4e3a\u4ec0\u4e48\u8981\u7528\u6388\u6743\u7801/\u5e94\u7528\u4e13\u7528\u5bc6\u7801\uff1f A\uff1a\u5f00\u542f\u4e24\u6b65\u9a8c\u8bc1\u540e\uff0c\u666e\u901a\u5bc6\u7801\u65e0\u6cd5\u76f4\u63a5\u7528\u4e8eSMTP\u7b49\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u5fc5\u987b\u4f7f\u7528\u6388\u6743\u7801/\u5e94\u7528\u4e13\u7528\u5bc6\u7801\uff0c\u4fdd\u969c\u8d26\u6237\u5b89\u5168\u3002</p> <p>Q3\uff1a\u6388\u6743\u7801/\u5e94\u7528\u4e13\u7528\u5bc6\u7801\u4e22\u5931\u600e\u4e48\u529e\uff1f A\uff1a\u53ef\u968f\u65f6\u5728\u90ae\u7bb1\u5b89\u5168\u8bbe\u7f6e\u4e2d\u91cd\u65b0\u751f\u6210\u65b0\u7684\u6388\u6743\u7801/\u5e94\u7528\u4e13\u7528\u5bc6\u7801\uff0c\u539f\u6709\u7684\u53ef\u4f5c\u5e9f\u3002</p> <p>Q4\uff1a\u914d\u7f6e\u5931\u8d25\u5e38\u89c1\u539f\u56e0\u6709\u54ea\u4e9b\uff1f A\uff1a\u5e38\u89c1\u539f\u56e0\u5305\u62ec\u672a\u5f00\u542fSMTP\u670d\u52a1\u3001\u672a\u4f7f\u7528\u6388\u6743\u7801/\u4e13\u7528\u5bc6\u7801\u3001\u7aef\u53e3/\u52a0\u5bc6\u65b9\u5f0f\u914d\u7f6e\u9519\u8bef\u3001\u90ae\u7bb1\u88ab\u9650\u5236\u767b\u5f55\u7b49\u3002</p> <p>\u5982\u9047\u7279\u6b8a\u95ee\u9898\uff0c\u5efa\u8bae\u4f18\u5148\u67e5\u9605\u5404\u90ae\u7bb1\u5b98\u65b9\u5e2e\u52a9\u4e2d\u5fc3\u6216\u8054\u7cfb\u90ae\u7bb1\u670d\u52a1\u5546\u5ba2\u670d\u3002</p> <p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>EmailSender</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u4e14\u6613\u4e8e\u4f7f\u7528\u7684\u90ae\u4ef6\u53d1\u9001\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u5185\u7f6e\u4e86\u5bf9\u591a\u79cd\u4e3b\u6d41\u90ae\u7bb1\u670d\u52a1\u5546\u7684\u652f\u6301\u3002</p>"},{"location":"zh/api/email-sender/#_2","title":"\u53d1\u9001\u5668\u57fa\u7c7b","text":"<p><code>EmailSender</code> \u662f\u6240\u6709\u5177\u4f53\u53d1\u9001\u5668\u7684\u62bd\u8c61\u57fa\u7c7b\uff0c\u5b9a\u4e49\u4e86\u90ae\u4ef6\u53d1\u9001\u7684\u6807\u51c6\u63a5\u53e3\u3002</p>"},{"location":"zh/api/email-sender/#_3","title":"\u4e3b\u8981\u65b9\u6cd5","text":"<ul> <li><code>send(email, to_addrs, subject=None, **kwargs)</code>: \u53d1\u9001\u90ae\u4ef6\u7684\u4e3b\u8981\u65b9\u6cd5</li> <li><code>email</code>: Email \u5bf9\u8c61\u5b9e\u4f8b</li> <li><code>to_addrs</code>: \u6536\u4ef6\u4eba\u5730\u5740\uff08\u5b57\u7b26\u4e32\u6216\u5217\u8868\uff09</li> <li><code>subject</code>: \u90ae\u4ef6\u4e3b\u9898\uff08\u53ef\u9009\uff09</li> <li><code>**kwargs</code>: \u5176\u4ed6\u90ae\u4ef6\u9009\u9879</li> </ul>"},{"location":"zh/api/email-sender/#_4","title":"\u914d\u7f6e\u5c5e\u6027","text":"<ul> <li><code>smtp_server</code>: SMTP \u670d\u52a1\u5668\u5730\u5740</li> <li><code>smtp_port</code>: SMTP \u670d\u52a1\u5668\u7aef\u53e3</li> <li><code>username</code>: \u53d1\u4ef6\u4eba\u90ae\u7bb1\u5730\u5740</li> <li><code>password</code>: \u90ae\u7bb1\u5bc6\u7801\u6216\u6388\u6743\u7801</li> <li><code>use_tls</code>: \u662f\u5426\u4f7f\u7528 TLS \u52a0\u5bc6</li> </ul>"},{"location":"zh/api/email-sender/#_5","title":"\u5de5\u5382\u51fd\u6570","text":"<p><code>create_email_sender(email_type, username, password, **kwargs)</code> \u662f\u521b\u5efa\u53d1\u9001\u5668\u5b9e\u4f8b\u7684\u63a8\u8350\u65b9\u5f0f\u3002</p>"},{"location":"zh/api/email-sender/#_6","title":"\u53c2\u6570\u8bf4\u660e","text":"<ul> <li><code>email_type</code>: \u90ae\u7bb1\u7c7b\u578b\uff0c\u652f\u6301 'qq', 'netease', '163', '126', 'gmail' \u7b49</li> <li><code>username</code>: \u53d1\u4ef6\u4eba\u90ae\u7bb1\u5730\u5740</li> <li><code>password</code>: \u90ae\u7bb1\u5bc6\u7801\u6216\u6388\u6743\u7801</li> <li><code>**kwargs</code>: \u5176\u4ed6\u914d\u7f6e\u9009\u9879</li> </ul>"},{"location":"zh/api/email-sender/#_7","title":"\u4f7f\u7528\u793a\u4f8b","text":"Python<pre><code>from email_widget.email_sender import create_email_sender\n\n# \u521b\u5efa QQ \u90ae\u7bb1\u53d1\u9001\u5668\nsender = create_email_sender('qq', 'your_email@qq.com', 'your_auth_code')\n\n# \u521b\u5efa Gmail \u53d1\u9001\u5668\ngmail_sender = create_email_sender('gmail', 'your_email@gmail.com', 'your_app_password')\n\n# \u53d1\u9001\u90ae\u4ef6\nsender.send(email, to=['recipient@example.com'])\n</code></pre>"},{"location":"zh/api/email-sender/#_8","title":"\u5177\u4f53\u5b9e\u73b0","text":""},{"location":"zh/api/email-sender/#qqemailsender","title":"QQEmailSender","text":"<p>\u4e13\u95e8\u9488\u5bf9 QQ \u90ae\u7bb1\u7684\u53d1\u9001\u5668\u5b9e\u73b0\uff0c\u9884\u914d\u7f6e\u4e86 QQ \u90ae\u7bb1\u7684 SMTP \u53c2\u6570\u3002</p> <ul> <li>SMTP \u670d\u52a1\u5668: smtp.qq.com</li> <li>\u7aef\u53e3: 465 (SSL)</li> <li>\u8ba4\u8bc1: \u9700\u8981\u4f7f\u7528\u6388\u6743\u7801\u800c\u975e\u767b\u5f55\u5bc6\u7801</li> </ul>"},{"location":"zh/api/email-sender/#neteaseemailsender","title":"NetEaseEmailSender","text":"<p>\u4e13\u95e8\u9488\u5bf9\u7f51\u6613\u90ae\u7bb1\uff08163\u3001126\u7b49\uff09\u7684\u53d1\u9001\u5668\u5b9e\u73b0\u3002</p> <ul> <li>SMTP \u670d\u52a1\u5668: smtp.163.com \u6216 smtp.126.com</li> <li>\u7aef\u53e3: 465 (SSL)</li> <li>\u8ba4\u8bc1: \u9700\u8981\u4f7f\u7528\u6388\u6743\u7801\u800c\u975e\u767b\u5f55\u5bc6\u7801</li> </ul>"},{"location":"zh/api/email-sender/#gmailemailsender","title":"GmailEmailSender","text":"<p>\u4e13\u95e8\u9488\u5bf9 Gmail \u7684\u53d1\u9001\u5668\u5b9e\u73b0\uff0c\u9884\u914d\u7f6e\u4e86 Gmail \u7684 SMTP \u53c2\u6570\u3002</p> <ul> <li>SMTP \u670d\u52a1\u5668: smtp.gmail.com</li> <li>\u7aef\u53e3: 587 (TLS\uff0c\u9ed8\u8ba4) \u6216 465 (SSL)</li> <li>\u8ba4\u8bc1: \u9700\u8981\u4f7f\u7528\u5e94\u7528\u4e13\u7528\u5bc6\u7801\u800c\u975e\u666e\u901a\u767b\u5f55\u5bc6\u7801</li> <li>\u91cd\u8981\u63d0\u9192: \u5fc5\u987b\u5148\u542f\u7528\u4e24\u6b65\u9a8c\u8bc1\uff0c\u7136\u540e\u751f\u6210\u5e94\u7528\u4e13\u7528\u5bc6\u7801</li> </ul>"},{"location":"zh/api/email-sender/#_9","title":"\u4f7f\u7528\u793a\u4f8b","text":"Python<pre><code>from email_widget.email_sender import GmailEmailSender\nfrom email_widget import Email\n\n# \u521b\u5efa Gmail \u53d1\u9001\u5668\nsender = GmailEmailSender(\"your_email@gmail.com\", \"your_app_password\")\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u6d4b\u8bd5\u90ae\u4ef6\")\nemail.add_text(\"\u8fd9\u662f\u901a\u8fc7Gmail\u53d1\u9001\u7684\u6d4b\u8bd5\u90ae\u4ef6\")\n\n# \u53d1\u9001\u90ae\u4ef6\nsender.send(email, to=[\"recipient@example.com\"])\n</code></pre>"},{"location":"zh/api/email/","title":"Email \u4e3b\u7c7b","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>Email</code> \u7c7b\u662f EmailWidget \u5e93\u7684\u6838\u5fc3\u7c7b\uff0c\u8d1f\u8d23\u7ba1\u7406\u548c\u6e32\u67d3\u90ae\u4ef6\u5185\u5bb9\u3002\u5b83\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5bb9\u5668\uff0c\u53ef\u4ee5\u6dfb\u52a0\u3001\u7ba1\u7406\u548c\u7f16\u6392\u5404\u79cd\"\u7ec4\u4ef6\"\uff08widgets\uff09\uff0c\u6700\u7ec8\u5c06\u5b83\u4eec\u6e32\u67d3\u6210\u7f8e\u89c2\u3001\u4e13\u4e1a\u7684 HTML \u90ae\u4ef6\u3002</p>"},{"location":"zh/api/email/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u7ec4\u4ef6\u7ba1\u7406\uff1a\u8f7b\u677e\u6dfb\u52a0\u3001\u5220\u9664\u3001\u67e5\u627e\u548c\u904d\u5386\u5404\u79cd\u5185\u5bb9\u7ec4\u4ef6\uff08\u6587\u672c\u3001\u8868\u683c\u3001\u56fe\u8868\u7b49\uff09</li> <li>\u90ae\u4ef6\u5c5e\u6027\u914d\u7f6e\uff1a\u81ea\u5b9a\u4e49\u90ae\u4ef6\u6807\u9898\u3001\u526f\u6807\u9898\u548c\u9875\u811a</li> <li>\u4fbf\u6377\u65b9\u6cd5\uff1a\u63d0\u4f9b\u4e00\u7cfb\u5217 <code>add_*</code> \u65b9\u6cd5\u5feb\u901f\u521b\u5efa\u548c\u6dfb\u52a0\u5e38\u7528\u7ec4\u4ef6\uff0c\u7b80\u5316\u4ee3\u7801</li> <li>\u5185\u5bb9\u5bfc\u51fa\uff1a\u652f\u6301\u5bfc\u51fa\u90ae\u4ef6\u4e3a\u72ec\u7acb\u7684 HTML \u6587\u4ef6\u6216\u83b7\u53d6 HTML \u5b57\u7b26\u4e32\u5185\u5bb9</li> <li>\u6837\u5f0f\u914d\u7f6e\uff1a\u901a\u8fc7 <code>EmailConfig</code> \u5bf9\u8c61\u81ea\u5b9a\u4e49\u90ae\u4ef6\u4e3b\u9898\u989c\u8272\u3001\u5b57\u4f53\u548c\u5e03\u5c40\u5bbd\u5ea6</li> </ul>"},{"location":"zh/api/email/#_2","title":"\u4e3b\u8981\u5c5e\u6027","text":"<ul> <li><code>title</code> (str): \u90ae\u4ef6\u7684\u4e3b\u6807\u9898</li> <li><code>subtitle</code> (Optional[str]): \u90ae\u4ef6\u7684\u526f\u6807\u9898\uff0c\u663e\u793a\u5728\u4e3b\u6807\u9898\u4e0b\u65b9</li> <li><code>footer_text</code> (Optional[str]): \u90ae\u4ef6\u7684\u9875\u811a\u6587\u672c</li> <li><code>widgets</code> (List[BaseWidget]): \u5b58\u50a8\u6240\u6709\u5df2\u6dfb\u52a0\u7ec4\u4ef6\u7684\u5217\u8868</li> <li><code>config</code> (EmailConfig): \u90ae\u4ef6\u914d\u7f6e\u5bf9\u8c61\uff0c\u7528\u4e8e\u63a7\u5236\u6837\u5f0f\u548c\u884c\u4e3a</li> </ul>"},{"location":"zh/api/email/#_3","title":"\u4f7f\u7528\u793a\u4f8b","text":"Python<pre><code>from email_widget import Email\n\n# \u521b\u5efa\u90ae\u4ef6\u5b9e\u4f8b\nemail = Email(title=\"\u6708\u5ea6\u62a5\u544a\", subtitle=\"2024\u5e741\u6708\u6570\u636e\u7edf\u8ba1\")\n\n# \u6dfb\u52a0\u6587\u672c\u7ec4\u4ef6\nemail.add_text(\"\u672c\u6708\u4e1a\u52a1\u8868\u73b0\u826f\u597d\uff0c\u5404\u9879\u6307\u6807\u7a33\u6b65\u589e\u957f\u3002\")\n\n# \u6dfb\u52a0\u8868\u683c\u7ec4\u4ef6\nemail.add_table(data, title=\"\u9500\u552e\u6570\u636e\")\n\n# \u5bfc\u51fa\u4e3a HTML \u6587\u4ef6\nemail.export(\"monthly_report.html\")\n</code></pre>"},{"location":"zh/api/email/#_4","title":"\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"zh/api/email/#_5","title":"\u521d\u59cb\u5316\u65b9\u6cd5","text":"<ul> <li><code>__init__(title, subtitle=None, footer_text=None, config=None)</code>: \u521b\u5efa Email \u5b9e\u4f8b</li> </ul>"},{"location":"zh/api/email/#_6","title":"\u7ec4\u4ef6\u7ba1\u7406\u65b9\u6cd5","text":"<ul> <li><code>add_widget(widget)</code>: \u6dfb\u52a0\u7ec4\u4ef6\u5230\u90ae\u4ef6</li> <li><code>add_text(text, **kwargs)</code>: \u5feb\u901f\u6dfb\u52a0\u6587\u672c\u7ec4\u4ef6</li> <li><code>add_table(data, **kwargs)</code>: \u5feb\u901f\u6dfb\u52a0\u8868\u683c\u7ec4\u4ef6</li> <li><code>add_metric(value, **kwargs)</code>: \u5feb\u901f\u6dfb\u52a0\u6307\u6807\u7ec4\u4ef6</li> <li><code>add_chart(data, **kwargs)</code>: \u5feb\u901f\u6dfb\u52a0\u56fe\u8868\u7ec4\u4ef6</li> <li><code>add_image(src, **kwargs)</code>: \u5feb\u901f\u6dfb\u52a0\u56fe\u7247\u7ec4\u4ef6</li> </ul>"},{"location":"zh/api/email/#_7","title":"\u5bfc\u51fa\u65b9\u6cd5","text":"<ul> <li><code>export(file_path)</code>: \u5bfc\u51fa\u90ae\u4ef6\u4e3a HTML \u6587\u4ef6</li> <li><code>get_html()</code>: \u83b7\u53d6\u90ae\u4ef6\u7684 HTML \u5b57\u7b26\u4e32\u5185\u5bb9</li> <li><code>render()</code>: \u6e32\u67d3\u90ae\u4ef6\u5185\u5bb9\u4e3a HTML</li> </ul>"},{"location":"zh/api/image-widget/","title":"image-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/api/log-widget/","title":"log-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/api/metric-widget/","title":"metric-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/api/progress-widget/","title":"\u8fdb\u5ea6\u7ec4\u4ef6 API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>ProgressWidget</code> \u662f\u7528\u4e8e\u663e\u793a\u8fdb\u5ea6\u4fe1\u606f\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u7ebf\u6027\u8fdb\u5ea6\u6761\u548c\u767e\u5206\u6bd4\u663e\u793a\u3002</p>"},{"location":"zh/api/progress-widget/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u8fdb\u5ea6\u663e\u793a\uff1a\u652f\u6301\u6570\u503c\u548c\u767e\u5206\u6bd4\u663e\u793a</li> <li>\u4e3b\u9898\u6837\u5f0f\uff1a\u63d0\u4f9b\u591a\u79cd\u9884\u8bbe\u4e3b\u9898\u989c\u8272</li> <li>\u6807\u7b7e\u652f\u6301\uff1a\u53ef\u6dfb\u52a0\u8fdb\u5ea6\u6807\u7b7e\u8bf4\u660e</li> <li>\u81ea\u5b9a\u4e49\u8303\u56f4\uff1a\u652f\u6301\u81ea\u5b9a\u4e49\u6700\u5927\u503c</li> </ul>"},{"location":"zh/api/progress-widget/#_2","title":"\u4e3b\u8981\u65b9\u6cd5","text":"<ul> <li><code>set_value(value)</code>: \u8bbe\u7f6e\u5f53\u524d\u8fdb\u5ea6\u503c</li> <li><code>set_max_value(max_value)</code>: \u8bbe\u7f6e\u6700\u5927\u503c</li> <li><code>set_label(label)</code>: \u8bbe\u7f6e\u8fdb\u5ea6\u6807\u7b7e</li> <li><code>set_theme(theme)</code>: \u8bbe\u7f6e\u4e3b\u9898\u6837\u5f0f</li> </ul>"},{"location":"zh/api/quote-widget/","title":"quote-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/api/separator-widget/","title":"separator-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/api/status-widget/","title":"\u72b6\u6001\u7ec4\u4ef6 API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>StatusWidget</code> \u662f\u7528\u4e8e\u663e\u793a\u7cfb\u7edf\u72b6\u6001\u548c\u76d1\u63a7\u4fe1\u606f\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u591a\u9879\u72b6\u6001\u7684\u5217\u8868\u5c55\u793a\u3002</p>"},{"location":"zh/api/status-widget/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u72b6\u6001\u5217\u8868\uff1a\u652f\u6301\u663e\u793a\u591a\u4e2a\u72b6\u6001\u9879</li> <li>\u72b6\u6001\u7c7b\u578b\uff1a\u652f\u6301\u6210\u529f\u3001\u8b66\u544a\u3001\u9519\u8bef\u7b49\u72b6\u6001</li> <li>\u5b9e\u65f6\u66f4\u65b0\uff1a\u4fbf\u4e8e\u52a8\u6001\u66f4\u65b0\u72b6\u6001\u4fe1\u606f</li> <li>\u5206\u7ec4\u663e\u793a\uff1a\u53ef\u6309\u7c7b\u522b\u7ec4\u7ec7\u72b6\u6001\u9879</li> </ul>"},{"location":"zh/api/status-widget/#_2","title":"\u4e3b\u8981\u65b9\u6cd5","text":"<ul> <li><code>add_status_item(item)</code>: \u6dfb\u52a0\u72b6\u6001\u9879</li> <li><code>clear_status_items()</code>: \u6e05\u7a7a\u6240\u6709\u72b6\u6001\u9879</li> <li><code>set_title(title)</code>: \u8bbe\u7f6e\u72b6\u6001\u7ec4\u6807\u9898</li> <li><code>update_status(label, status)</code>: \u66f4\u65b0\u6307\u5b9a\u72b6\u6001</li> </ul>"},{"location":"zh/api/table-widget/","title":"\u8868\u683c\u7ec4\u4ef6 API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>TableWidget</code> \u662f\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u663e\u793a\u8868\u683c\u6570\u636e\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u7075\u6d3b\u7684\u6570\u636e\u5c55\u793a\u548c\u6837\u5f0f\u5b9a\u5236\u3002</p>"},{"location":"zh/api/table-widget/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u6570\u636e\u6e90\u652f\u6301\uff1a\u652f\u6301 pandas DataFrame\u3001\u5217\u8868\u3001\u5b57\u5178\u7b49\u591a\u79cd\u6570\u636e\u683c\u5f0f</li> <li>\u8868\u5934\u7ba1\u7406\uff1a\u7075\u6d3b\u8bbe\u7f6e\u8868\u5934\u548c\u5217\u540d</li> <li>\u5355\u5143\u683c\u6837\u5f0f\uff1a\u652f\u6301\u5355\u5143\u683c\u989c\u8272\u3001\u5bf9\u9f50\u65b9\u5f0f\u3001\u72b6\u6001\u6807\u8bc6\u7b49</li> <li>\u54cd\u5e94\u5f0f\u8868\u683c\uff1a\u81ea\u52a8\u9002\u914d\u4e0d\u540c\u5c4f\u5e55\u5c3a\u5bf8</li> <li>\u7d22\u5f15\u663e\u793a\uff1a\u53ef\u9009\u62e9\u663e\u793a\u6216\u9690\u85cf\u884c\u7d22\u5f15</li> </ul>"},{"location":"zh/api/table-widget/#_2","title":"\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"zh/api/table-widget/#tablewidget","title":"TableWidget \u65b9\u6cd5","text":"<ul> <li><code>set_title(title)</code>: \u8bbe\u7f6e\u8868\u683c\u6807\u9898</li> <li><code>set_headers(headers)</code>: \u8bbe\u7f6e\u8868\u5934</li> <li><code>add_row(row_data)</code>: \u6dfb\u52a0\u6570\u636e\u884c</li> <li><code>set_dataframe(df)</code>: \u4ece pandas DataFrame \u8bbe\u7f6e\u6570\u636e</li> <li><code>clear_rows()</code>: \u6e05\u7a7a\u6240\u6709\u6570\u636e\u884c</li> <li><code>set_show_index(show)</code>: \u8bbe\u7f6e\u662f\u5426\u663e\u793a\u7d22\u5f15</li> </ul>"},{"location":"zh/api/table-widget/#tablecell","title":"TableCell \u7c7b","text":"<ul> <li><code>value</code>: \u5355\u5143\u683c\u7684\u503c</li> <li><code>color</code>: \u5355\u5143\u683c\u80cc\u666f\u8272  </li> <li><code>text_color</code>: \u6587\u5b57\u989c\u8272</li> <li><code>alignment</code>: \u5bf9\u9f50\u65b9\u5f0f</li> <li><code>status</code>: \u72b6\u6001\u6807\u8bc6\uff08success, warning, error \u7b49\uff09</li> </ul>"},{"location":"zh/api/text-widget/","title":"\u6587\u672c\u7ec4\u4ef6 API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p><code>TextWidget</code> \u662f\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u663e\u793a\u6587\u672c\u5185\u5bb9\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u591a\u79cd\u6587\u672c\u6837\u5f0f\u548c\u683c\u5f0f\u3002</p>"},{"location":"zh/api/text-widget/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u591a\u79cd\u6587\u672c\u7c7b\u578b\uff1a\u652f\u6301\u6807\u9898\u3001\u526f\u6807\u9898\u3001\u6b63\u6587\u3001\u5f3a\u8c03\u6587\u672c\u7b49\u591a\u79cd\u9884\u8bbe\u6837\u5f0f</li> <li>\u7075\u6d3b\u7684\u5185\u5bb9\u8bbe\u7f6e\uff1a\u53ef\u4ee5\u8bbe\u7f6e\u7eaf\u6587\u672c\u6216\u7b80\u5355\u7684 HTML \u5185\u5bb9</li> <li>\u54cd\u5e94\u5f0f\u8bbe\u8ba1\uff1a\u81ea\u52a8\u9002\u914d\u4e0d\u540c\u8bbe\u5907\u548c\u90ae\u4ef6\u5ba2\u6237\u7aef</li> <li>\u6837\u5f0f\u81ea\u5b9a\u4e49\uff1a\u652f\u6301\u81ea\u5b9a\u4e49\u989c\u8272\u3001\u5bf9\u9f50\u65b9\u5f0f\u7b49\u6837\u5f0f\u5c5e\u6027</li> </ul>"},{"location":"zh/api/text-widget/#_2","title":"\u4e3b\u8981\u65b9\u6cd5","text":"<ul> <li><code>set_content(content)</code>: \u8bbe\u7f6e\u6587\u672c\u5185\u5bb9</li> <li><code>set_type(text_type)</code>: \u8bbe\u7f6e\u6587\u672c\u7c7b\u578b\uff08\u6807\u9898\u3001\u6b63\u6587\u7b49\uff09</li> <li><code>set_color(color)</code>: \u8bbe\u7f6e\u6587\u672c\u989c\u8272</li> <li><code>set_alignment(alignment)</code>: \u8bbe\u7f6e\u6587\u672c\u5bf9\u9f50\u65b9\u5f0f</li> </ul>"},{"location":"zh/api/text-widget/#_3","title":"\u6587\u672c\u7c7b\u578b","text":"<ul> <li><code>TITLE_LARGE</code>: \u5927\u6807\u9898</li> <li><code>TITLE_MEDIUM</code>: \u4e2d\u7b49\u6807\u9898  </li> <li><code>TITLE_SMALL</code>: \u5c0f\u6807\u9898</li> <li><code>SECTION_H2</code>: \u4e8c\u7ea7\u6807\u9898</li> <li><code>SECTION_H3</code>: \u4e09\u7ea7\u6807\u9898</li> <li><code>BODY</code>: \u6b63\u6587\u6587\u672c</li> <li><code>SUBTITLE</code>: \u526f\u6807\u9898</li> <li><code>CAPTION</code>: \u8bf4\u660e\u6587\u5b57</li> </ul>"},{"location":"zh/api/timeline-widget/","title":"timeline-widget API","text":"<p>API \u53c2\u8003</p> <p>\u5b8c\u6574\u7684 API \u6587\u6863\u8bf7\u53c2\u8003 \u82f1\u6587\u7248\u672c\uff0c\u6b64\u5904\u63d0\u4f9b\u4e2d\u6587\u8bf4\u660e\u3002</p> <p>\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u529f\u80fd\u8bf4\u660e\u8bf7\u53c2\u8003\u82f1\u6587\u7248 API \u6587\u6863\u3002</p>"},{"location":"zh/development/","title":"\u5f00\u53d1\u6307\u5357","text":"<p>\u6b22\u8fce\u6765\u5230 EmailWidget \u5f00\u53d1\u6307\u5357\uff01\u672c\u6307\u5357\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u5982\u4f55\u53c2\u4e0e EmailWidget \u9879\u76ee\u7684\u5f00\u53d1\uff0c\u4ece\u73af\u5883\u642d\u5efa\u5230\u4ee3\u7801\u8d21\u732e\u7684\u5b8c\u6574\u6d41\u7a0b\u3002</p>"},{"location":"zh/development/#_2","title":"\ud83c\udfaf \u5f00\u53d1\u6307\u5357\u6982\u89c8","text":""},{"location":"zh/development/#_3","title":"\ud83d\udcd6 \u8d21\u732e\u6307\u5357","text":"<p>\u5b66\u4e60\u5982\u4f55\u4e3a EmailWidget \u9879\u76ee\u505a\u51fa\u8d21\u732e\uff1a - \u4ee3\u7801\u8d21\u732e\u6d41\u7a0b - Fork\u3001\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u63d0\u4ea4 PR - \u95ee\u9898\u62a5\u544a - Bug \u62a5\u544a\u548c\u529f\u80fd\u8bf7\u6c42\u89c4\u8303 - \u4ee3\u7801\u89c4\u8303 - \u7f16\u7801\u6807\u51c6\u548c\u6700\u4f73\u5b9e\u8df5 - \u6587\u6863\u8d21\u732e - \u6539\u8fdb\u6587\u6863\u548c\u793a\u4f8b</p>"},{"location":"zh/development/#_4","title":"\ud83d\udee0\ufe0f \u5f00\u53d1\u73af\u5883\u642d\u5efa","text":"<p>\u5feb\u901f\u642d\u5efa Windows 10 \u5f00\u53d1\u73af\u5883\uff1a - \u73af\u5883\u8981\u6c42 - Python\u3001IDE\u3001\u4f9d\u8d56\u5de5\u5177 - \u9879\u76ee\u514b\u9686 - \u4ee3\u7801\u4e0b\u8f7d\u548c\u521d\u59cb\u5316 - \u4f9d\u8d56\u5b89\u88c5 - \u5f00\u53d1\u548c\u6d4b\u8bd5\u4f9d\u8d56 - \u9a8c\u8bc1\u5b89\u88c5 - \u73af\u5883\u68c0\u67e5\u548c\u6d4b\u8bd5\u8fd0\u884c</p>"},{"location":"zh/development/#widget","title":"\ud83e\udde9 \u521b\u5efa\u81ea\u5b9a\u4e49 Widget","text":"<p>\u5b66\u4e60\u5982\u4f55\u5f00\u53d1\u81ea\u5b9a\u4e49\u7ec4\u4ef6\uff1a - Widget \u67b6\u6784 - \u57fa\u7c7b\u7ee7\u627f\u548c\u63a5\u53e3\u8bbe\u8ba1 - \u5f00\u53d1\u6d41\u7a0b - \u4ece\u8bbe\u8ba1\u5230\u5b9e\u73b0\u7684\u5b8c\u6574\u6b65\u9aa4 - \u6700\u4f73\u5b9e\u8df5 - \u4ee3\u7801\u8d28\u91cf\u548c\u6027\u80fd\u4f18\u5316 - \u793a\u4f8b\u6559\u7a0b - \u5b8c\u6574\u7684 Widget \u5f00\u53d1\u6848\u4f8b</p>"},{"location":"zh/development/#_5","title":"\ud83e\uddea \u6d4b\u8bd5\u6307\u5357","text":"<p>\u786e\u4fdd\u4ee3\u7801\u8d28\u91cf\u7684\u6d4b\u8bd5\u7b56\u7565\uff1a - \u6d4b\u8bd5\u6846\u67b6 - pytest \u4f7f\u7528\u548c\u914d\u7f6e - \u5355\u5143\u6d4b\u8bd5 - \u7ec4\u4ef6\u548c\u51fd\u6570\u6d4b\u8bd5 - \u96c6\u6210\u6d4b\u8bd5 - \u5b8c\u6574\u529f\u80fd\u6d4b\u8bd5 - \u6d4b\u8bd5\u8986\u76d6\u7387 - \u4ee3\u7801\u8986\u76d6\u7387\u8981\u6c42\u548c\u62a5\u544a</p>"},{"location":"zh/development/#_6","title":"\ud83d\ude80 \u53d1\u5e03\u6d41\u7a0b","text":"<p>\u4e86\u89e3\u9879\u76ee\u7248\u672c\u53d1\u5e03\u6d41\u7a0b\uff1a - \u7248\u672c\u7ba1\u7406 - \u8bed\u4e49\u5316\u7248\u672c\u63a7\u5236 - \u53d1\u5e03\u51c6\u5907 - \u4ee3\u7801\u68c0\u67e5\u548c\u6587\u6863\u66f4\u65b0 - CI/CD \u6d41\u7a0b - \u81ea\u52a8\u5316\u6784\u5efa\u548c\u6d4b\u8bd5 - \u53d1\u5e03\u540e\u7eed - \u7248\u672c\u6807\u7b7e\u548c\u53d8\u66f4\u65e5\u5fd7</p>"},{"location":"zh/development/#_7","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/development/#_8","title":"\u7b2c\u4e00\u6b21\u8d21\u732e","text":"<p>\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee\uff0c\u5efa\u8bae\u6309\u4ee5\u4e0b\u987a\u5e8f\u8fdb\u884c\uff1a</p> <ol> <li>\ud83d\udcd6 \u9605\u8bfb\u8d21\u732e\u6307\u5357 - \u4e86\u89e3\u9879\u76ee\u89c4\u8303\u548c\u6d41\u7a0b</li> <li>\ud83d\udee0\ufe0f \u642d\u5efa\u5f00\u53d1\u73af\u5883 - \u51c6\u5907\u672c\u5730\u5f00\u53d1\u73af\u5883</li> <li>\ud83d\udd0d \u627e\u4e2a\u5c0f\u95ee\u9898 - \u4ece\u7b80\u5355\u7684 issue \u5f00\u59cb</li> <li>\ud83d\udcbb \u7f16\u5199\u4ee3\u7801 - \u5b9e\u73b0\u529f\u80fd\u6216\u4fee\u590d bug</li> <li>\ud83e\uddea \u8fd0\u884c\u6d4b\u8bd5 - \u786e\u4fdd\u4ee3\u7801\u8d28\u91cf</li> <li>\ud83d\udcdd \u63d0\u4ea4 PR - \u63d0\u4ea4 Pull Request</li> </ol>"},{"location":"zh/development/#_9","title":"\u5f00\u53d1\u8005\u8def\u5f84","text":""},{"location":"zh/development/#_10","title":"\ud83c\udf31 \u521d\u7ea7\u5f00\u53d1\u8005","text":"<ul> <li>\u4fee\u590d\u7b80\u5355\u7684 bug</li> <li>\u6539\u8fdb\u6587\u6863\u548c\u793a\u4f8b</li> <li>\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5</li> <li>\u4f18\u5316\u4ee3\u7801\u6ce8\u91ca</li> </ul>"},{"location":"zh/development/#_11","title":"\ud83c\udf3f \u4e2d\u7ea7\u5f00\u53d1\u8005","text":"<ul> <li>\u5f00\u53d1\u65b0\u7684 Widget \u7ec4\u4ef6</li> <li>\u5b9e\u73b0\u529f\u80fd\u589e\u5f3a</li> <li>\u91cd\u6784\u73b0\u6709\u4ee3\u7801</li> <li>\u7f16\u5199\u96c6\u6210\u6d4b\u8bd5</li> </ul>"},{"location":"zh/development/#_12","title":"\ud83c\udf33 \u9ad8\u7ea7\u5f00\u53d1\u8005","text":"<ul> <li>\u8bbe\u8ba1\u65b0\u7684\u67b6\u6784\u7279\u6027</li> <li>\u6027\u80fd\u4f18\u5316\u548c\u8c03\u4f18</li> <li>\u5236\u5b9a\u5f00\u53d1\u89c4\u8303</li> <li>\u6307\u5bfc\u65b0\u8d21\u732e\u8005</li> </ul>"},{"location":"zh/development/#_13","title":"\ud83d\udee0\ufe0f \u5f00\u53d1\u5de5\u5177\u63a8\u8350","text":""},{"location":"zh/development/#ide","title":"IDE \u548c\u7f16\u8f91\u5668","text":"<ul> <li>PyCharm Professional - \u529f\u80fd\u5f3a\u5927\u7684 Python IDE</li> <li>Visual Studio Code - \u8f7b\u91cf\u7ea7\uff0c\u63d2\u4ef6\u4e30\u5bcc</li> <li>Sublime Text - \u5feb\u901f\u54cd\u5e94\u7684\u6587\u672c\u7f16\u8f91\u5668</li> </ul>"},{"location":"zh/development/#vs-code","title":"\u5fc5\u5907\u63d2\u4ef6\uff08VS Code\uff09","text":"JSON<pre><code>{\n  \"recommendations\": [\n    \"ms-python.python\",\n    \"ms-python.pylint\",\n    \"ms-python.black-formatter\",\n    \"ms-python.isort\",\n    \"ms-toolsai.jupyter\",\n    \"redhat.vscode-yaml\",\n    \"yzhang.markdown-all-in-one\"\n  ]\n}\n</code></pre>"},{"location":"zh/development/#_14","title":"\u547d\u4ee4\u884c\u5de5\u5177","text":"<ul> <li>Git - \u7248\u672c\u63a7\u5236</li> <li>Python 3.10+ - \u5f00\u53d1\u8bed\u8a00</li> <li>pip/uv - \u5305\u7ba1\u7406</li> <li>pytest - \u6d4b\u8bd5\u6846\u67b6</li> </ul>"},{"location":"zh/development/#_15","title":"\ud83d\udccb \u5f00\u53d1\u89c4\u8303","text":""},{"location":"zh/development/#_16","title":"\u4ee3\u7801\u98ce\u683c","text":"<ul> <li>\u683c\u5f0f\u5316\u5de5\u5177: Black (line-length=88)</li> <li>\u5bfc\u5165\u6392\u5e8f: isort</li> <li>\u4ee3\u7801\u68c0\u67e5: pylint, flake8</li> <li>\u7c7b\u578b\u63d0\u793a: mypy</li> </ul>"},{"location":"zh/development/#_17","title":"\u63d0\u4ea4\u89c4\u8303","text":"<p>\u4f7f\u7528 Conventional Commits \u683c\u5f0f\uff1a</p> Text Only<pre><code>&lt;type&gt;[optional scope]: &lt;description&gt;\n\n[optional body]\n\n[optional footer(s)]\n</code></pre> <p>\u7c7b\u578b\u8bf4\u660e\uff1a - <code>feat</code>: \u65b0\u529f\u80fd - <code>fix</code>: \u4fee\u590d bug - <code>docs</code>: \u6587\u6863\u66f4\u65b0 - <code>style</code>: \u4ee3\u7801\u683c\u5f0f\u5316 - <code>refactor</code>: \u4ee3\u7801\u91cd\u6784 - <code>test</code>: \u6d4b\u8bd5\u76f8\u5173 - <code>chore</code>: \u6784\u5efa\u8fc7\u7a0b\u6216\u8f85\u52a9\u5de5\u5177\u53d8\u52a8</p>"},{"location":"zh/development/#_18","title":"\u5206\u652f\u7ba1\u7406","text":"<ul> <li><code>main</code> - \u4e3b\u5206\u652f\uff0c\u4fdd\u6301\u7a33\u5b9a</li> <li><code>develop</code> - \u5f00\u53d1\u5206\u652f\uff0c\u96c6\u6210\u65b0\u529f\u80fd</li> <li><code>feature/*</code> - \u529f\u80fd\u5206\u652f</li> <li><code>bugfix/*</code> - \u4fee\u590d\u5206\u652f</li> <li><code>hotfix/*</code> - \u7d27\u6025\u4fee\u590d\u5206\u652f</li> </ul>"},{"location":"zh/development/#_19","title":"\ud83c\udf1f \u8d21\u732e\u8ba4\u53ef","text":""},{"location":"zh/development/#_20","title":"\u8d21\u732e\u8005\u5217\u8868","text":"<p>\u6240\u6709\u8d21\u732e\u8005\u90fd\u4f1a\u5728\u9879\u76ee\u4e2d\u5f97\u5230\u8ba4\u53ef\uff1a - README.md \u8d21\u732e\u8005\u5217\u8868 - \u53d1\u5e03\u8bf4\u660e\u4e2d\u7684\u81f4\u8c22 - \u9879\u76ee\u6587\u6863\u4e2d\u7684\u7f72\u540d</p>"},{"location":"zh/development/#_21","title":"\u8d21\u732e\u7c7b\u578b","text":"<p>\u6211\u4eec\u8ba4\u53ef\u591a\u79cd\u5f62\u5f0f\u7684\u8d21\u732e\uff1a - \ud83d\udcbb \u4ee3\u7801 - \u65b0\u529f\u80fd\u3001bug \u4fee\u590d\u3001\u6027\u80fd\u4f18\u5316 - \ud83d\udcd6 \u6587\u6863 - \u6539\u8fdb\u6587\u6863\u3001\u6dfb\u52a0\u793a\u4f8b\u3001\u7ffb\u8bd1 - \ud83c\udfa8 \u8bbe\u8ba1 - UI/UX \u6539\u8fdb\u3001\u56fe\u6807\u8bbe\u8ba1 - \ud83d\udc1b \u6d4b\u8bd5 - bug \u62a5\u544a\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u8d28\u91cf\u4fdd\u8bc1 - \ud83d\udca1 \u60f3\u6cd5 - \u529f\u80fd\u5efa\u8bae\u3001\u67b6\u6784\u8ba8\u8bba - \ud83d\udd0d \u5ba1\u67e5 - \u4ee3\u7801\u5ba1\u67e5\u3001pull request \u53cd\u9988</p>"},{"location":"zh/development/#_22","title":"\ud83d\udcde \u83b7\u53d6\u5e2e\u52a9","text":""},{"location":"zh/development/#_23","title":"\u4ea4\u6d41\u6e20\u9053","text":"<ul> <li>GitHub Issues - \u95ee\u9898\u62a5\u544a\u548c\u529f\u80fd\u8bf7\u6c42</li> <li>GitHub Discussions - \u793e\u533a\u8ba8\u8bba\u548c\u95ee\u7b54</li> <li>\u5f00\u53d1\u8005\u90ae\u4ef6 - \u79c1\u5bc6\u95ee\u9898\u548c\u5546\u52a1\u5408\u4f5c</li> </ul>"},{"location":"zh/development/#_24","title":"\u5e38\u89c1\u95ee\u9898","text":"<p>Q: \u6211\u662f Python \u65b0\u624b\uff0c\u53ef\u4ee5\u8d21\u732e\u5417\uff1f A: \u5f53\u7136\u53ef\u4ee5\uff01\u6211\u4eec\u6709\u5f88\u591a\u9002\u5408\u65b0\u624b\u7684 \"good first issue\" \u6807\u7b7e\u7684\u95ee\u9898\u3002</p> <p>Q: \u5982\u4f55\u786e\u4fdd\u6211\u7684\u4ee3\u7801\u7b26\u5408\u9879\u76ee\u6807\u51c6\uff1f A: \u8fd0\u884c <code>pytest</code> \u548c <code>pylint</code>\uff0c\u786e\u4fdd\u6240\u6709\u6d4b\u8bd5\u901a\u8fc7\u4e14\u65e0\u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u3002</p> <p>Q: \u6211\u5e94\u8be5\u5728\u54ea\u4e2a\u5206\u652f\u4e0a\u5f00\u53d1\uff1f A: \u4ece <code>develop</code> \u5206\u652f\u521b\u5efa\u4f60\u7684\u529f\u80fd\u5206\u652f\uff0c\u5f00\u53d1\u5b8c\u6210\u540e\u63d0\u4ea4 PR \u5230 <code>develop</code>\u3002</p> <p>Q: \u63d0\u4ea4 PR \u540e\u591a\u4e45\u80fd\u5f97\u5230\u53cd\u9988\uff1f A: \u6211\u4eec\u901a\u5e38\u5728 2-3 \u4e2a\u5de5\u4f5c\u65e5\u5185\u56de\u590d\uff0c\u590d\u6742\u7684 PR \u53ef\u80fd\u9700\u8981\u66f4\u957f\u65f6\u95f4\u3002</p>"},{"location":"zh/development/#_25","title":"\ud83c\udf89 \u6b22\u8fce\u52a0\u5165","text":"<p>EmailWidget \u662f\u4e00\u4e2a\u5f00\u653e\u3001\u53cb\u597d\u7684\u5f00\u6e90\u9879\u76ee\u3002\u65e0\u8bba\u60a8\u7684\u6280\u80fd\u6c34\u5e73\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u6b22\u8fce\u60a8\u7684\u53c2\u4e0e\uff01</p>"},{"location":"zh/development/#_26","title":"\u53c2\u4e0e\u65b9\u5f0f","text":"<ol> <li>\u2b50 Star \u9879\u76ee - \u652f\u6301\u9879\u76ee\u53d1\u5c55</li> <li>\ud83c\udf74 Fork \u9879\u76ee - \u5f00\u59cb\u60a8\u7684\u8d21\u732e\u4e4b\u65c5</li> <li>\ud83d\udc1b \u62a5\u544a\u95ee\u9898 - \u5e2e\u52a9\u6539\u8fdb\u9879\u76ee\u8d28\u91cf</li> <li>\ud83d\udca1 \u63d0\u51fa\u5efa\u8bae - \u5206\u4eab\u60a8\u7684\u60f3\u6cd5</li> <li>\ud83d\udcd6 \u6539\u8fdb\u6587\u6863 - \u8ba9\u6587\u6863\u66f4\u52a0\u5b8c\u5584</li> <li>\ud83d\udcbb \u8d21\u732e\u4ee3\u7801 - \u76f4\u63a5\u53c2\u4e0e\u5f00\u53d1</li> </ol> <p>\u8ba9\u6211\u4eec\u4e00\u8d77\u628a EmailWidget \u6253\u9020\u6210\u6700\u597d\u7528\u7684 Python \u90ae\u4ef6\u62a5\u544a\u5e93\uff01</p> <p>\u5f00\u59cb\u60a8\u7684\u5f00\u53d1\u4e4b\u65c5\uff1a 1. \u67e5\u770b \u5f00\u53d1\u73af\u5883\u642d\u5efa \u51c6\u5907\u73af\u5883 2. \u9605\u8bfb \u8d21\u732e\u6307\u5357 \u4e86\u89e3\u6d41\u7a0b 3. \u6d4f\u89c8 GitHub Issues \u5bfb\u627e\u5408\u9002\u7684\u4efb\u52a1 4. \u5f00\u59cb\u7f16\u7801\u548c\u8d21\u732e\uff01 </p>"},{"location":"zh/development/contributing/","title":"\ud83e\udd1d \u8d21\u732e\u6307\u5357","text":"<p>\u611f\u8c22\u4f60\u5bf9 EmailWidget \u9879\u76ee\u7684\u5173\u6ce8\uff01\u6211\u4eec\u6b22\u8fce\u5404\u79cd\u5f62\u5f0f\u7684\u8d21\u732e\uff0c\u65e0\u8bba\u662f\u4ee3\u7801\u3001\u6587\u6863\u3001\u6d4b\u8bd5\u8fd8\u662f\u53cd\u9988\u5efa\u8bae\u3002</p>"},{"location":"zh/development/contributing/#_2","title":"\ud83c\udfaf \u8d21\u732e\u65b9\u5f0f","text":""},{"location":"zh/development/contributing/#_3","title":"\ud83d\udcdd \u4ee3\u7801\u8d21\u732e","text":"<ul> <li>\ud83d\udc1b \u4fee\u590dBug - \u5e2e\u52a9\u6211\u4eec\u4fee\u590d\u5df2\u77e5\u95ee\u9898</li> <li>\u2728 \u65b0\u529f\u80fd - \u6dfb\u52a0\u65b0\u7684Widget\u6216\u529f\u80fd</li> <li>\u26a1 \u6027\u80fd\u4f18\u5316 - \u63d0\u5347\u4ee3\u7801\u6027\u80fd\u548c\u6548\u7387</li> <li>\ud83d\udd27 \u91cd\u6784 - \u6539\u8fdb\u4ee3\u7801\u7ed3\u6784\u548c\u53ef\u7ef4\u62a4\u6027</li> </ul>"},{"location":"zh/development/contributing/#_4","title":"\ud83d\udcda \u6587\u6863\u8d21\u732e","text":"<ul> <li>\ud83d\udcd6 \u5b8c\u5584\u6587\u6863 - \u6539\u8fdb\u73b0\u6709\u6587\u6863</li> <li>\ud83d\udca1 \u6dfb\u52a0\u793a\u4f8b - \u63d0\u4f9b\u66f4\u591a\u4f7f\u7528\u793a\u4f8b</li> <li>\ud83c\udf10 \u7ffb\u8bd1 - \u5e2e\u52a9\u7ffb\u8bd1\u6587\u6863\u5230\u5176\u4ed6\u8bed\u8a00</li> <li>\ud83d\udcf9 \u6559\u7a0b - \u521b\u5efa\u89c6\u9891\u6216\u56fe\u6587\u6559\u7a0b</li> </ul>"},{"location":"zh/development/contributing/#_5","title":"\ud83e\uddea \u6d4b\u8bd5\u8d21\u732e","text":"<ul> <li>\ud83d\udd0d \u7f16\u5199\u6d4b\u8bd5 - \u4e3a\u73b0\u6709\u529f\u80fd\u6dfb\u52a0\u6d4b\u8bd5</li> <li>\ud83d\udc1b \u62a5\u544aBug - \u53d1\u73b0\u5e76\u62a5\u544a\u95ee\u9898</li> <li>\ud83d\udcca \u6027\u80fd\u6d4b\u8bd5 - \u6d4b\u8bd5\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u7684\u6027\u80fd</li> </ul>"},{"location":"zh/development/contributing/#_6","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/development/contributing/#1-fork","title":"1. \ud83c\udf74 Fork \u9879\u76ee","text":"<p>\u70b9\u51fb GitHub \u9875\u9762\u53f3\u4e0a\u89d2\u7684 \"Fork\" \u6309\u94ae\uff0c\u5c06\u9879\u76ee\u590d\u5236\u5230\u4f60\u7684\u8d26\u6237\u4e0b\u3002</p>"},{"location":"zh/development/contributing/#2","title":"2. \ud83d\udce5 \u514b\u9686\u4ee3\u7801","text":"Bash<pre><code>git clone https://github.com/YOUR_USERNAME/SpiderDaily.git\ncd SpiderDaily\n</code></pre>"},{"location":"zh/development/contributing/#3","title":"3. \ud83d\udd27 \u8bbe\u7f6e\u5f00\u53d1\u73af\u5883","text":"Bash<pre><code># \u521b\u5efa\u865a\u62df\u73af\u5883\npython -m venv venv\nsource venv/bin/activate  # Linux/macOS\n# \u6216 venv\\Scripts\\activate  # Windows\n\n# \u5b89\u88c5\u5f00\u53d1\u4f9d\u8d56\npip install -e \".[dev]\"\n</code></pre>"},{"location":"zh/development/contributing/#4","title":"4. \ud83c\udf3f \u521b\u5efa\u5206\u652f","text":"Bash<pre><code>git checkout -b feature/your-feature-name\n# \u6216\ngit checkout -b bugfix/issue-number\n</code></pre>"},{"location":"zh/development/contributing/#5","title":"5. \ud83d\udcbb \u5f00\u59cb\u5f00\u53d1","text":"<p>\u73b0\u5728\u4f60\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\u5f00\u53d1\u4e86\uff01</p>"},{"location":"zh/development/contributing/#_7","title":"\ud83d\udccb \u5f00\u53d1\u89c4\u8303","text":""},{"location":"zh/development/contributing/#_8","title":"\ud83d\udc0d \u4ee3\u7801\u98ce\u683c","text":"<p>\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u6765\u4fdd\u6301\u4ee3\u7801\u8d28\u91cf\uff1a</p> Bash<pre><code># \u4ee3\u7801\u683c\u5f0f\u5316\nblack email_widget/\nisort email_widget/\n\n# \u4ee3\u7801\u68c0\u67e5\nflake8 email_widget/\nmypy email_widget/\n</code></pre>"},{"location":"zh/development/contributing/#_9","title":"\ud83d\udcdd \u63d0\u4ea4\u89c4\u8303","text":"<p>\u6211\u4eec\u4f7f\u7528 Conventional Commits \u89c4\u8303\uff1a</p> Bash<pre><code># \u529f\u80fd\u6dfb\u52a0\ngit commit -m \"feat: \u6dfb\u52a0\u65b0\u7684\u8fdb\u5ea6\u6761Widget\"\n\n# Bug\u4fee\u590d\ngit commit -m \"fix: \u4fee\u590d\u8868\u683c\u6e32\u67d3\u4e2d\u7684\u7f16\u7801\u95ee\u9898\"\n\n# \u6587\u6863\u66f4\u65b0\ngit commit -m \"docs: \u66f4\u65b0API\u6587\u6863\"\n\n# \u6d4b\u8bd5\ngit commit -m \"test: \u6dfb\u52a0TextWidget\u7684\u5355\u5143\u6d4b\u8bd5\"\n\n# \u91cd\u6784\ngit commit -m \"refactor: \u4f18\u5316Email\u7c7b\u7684\u6e32\u67d3\u903b\u8f91\"\n</code></pre>"},{"location":"zh/development/contributing/#_10","title":"\ud83e\uddea \u6d4b\u8bd5\u8981\u6c42","text":"<ul> <li>\u6240\u6709\u65b0\u529f\u80fd\u90fd\u5e94\u8be5\u6709\u76f8\u5e94\u7684\u6d4b\u8bd5</li> <li>\u4fee\u590dBug\u65f6\u5e94\u8be5\u6dfb\u52a0\u56de\u5f52\u6d4b\u8bd5</li> <li>\u786e\u4fdd\u6d4b\u8bd5\u8986\u76d6\u7387\u4e0d\u4e0b\u964d</li> </ul> Bash<pre><code># \u8fd0\u884c\u6d4b\u8bd5\npytest tests/ -v\n\n# \u68c0\u67e5\u8986\u76d6\u7387\npytest tests/ --cov=email_widget --cov-report=html\n</code></pre>"},{"location":"zh/development/contributing/#widget","title":"\ud83c\udfa8 \u521b\u5efa\u65b0\u7684Widget","text":"<p>\u5982\u679c\u4f60\u60f3\u4e3a EmailWidget \u6dfb\u52a0\u65b0\u7684\u7ec4\u4ef6\uff0c\u8bf7\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p>"},{"location":"zh/development/contributing/#1","title":"1. \ud83d\udcc1 \u6587\u4ef6\u7ed3\u6784","text":"Text Only<pre><code>email_widget/ewidget/widgets/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 your_new_widget.py  # \u65b0Widget\u6587\u4ef6\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"zh/development/contributing/#2-widget","title":"2. \ud83d\udcdd Widget\u57fa\u7840\u6a21\u677f","text":"Python<pre><code>\"\"\"\u4f60\u7684\u65b0Widget\u5b9e\u73b0\n\n\u8fd9\u4e2a\u6a21\u5757\u63d0\u4f9b\u4e86XXX\u529f\u80fd\u7684Widget\u3002\n\"\"\"\nfrom typing import Optional\nfrom email_widget.core.base import BaseWidget\n\n\nclass YourNewWidget(BaseWidget):\n    \"\"\"\u4f60\u7684\u65b0Widget\u7c7b\uff0c\u7528\u4e8eXXX\u529f\u80fd\u3002\n\n    \u8be6\u7ec6\u7684\u7c7b\u8bf4\u660e...\n\n    Attributes:\n        _your_attr: \u5c5e\u6027\u8bf4\u660e\n\n    Examples:\n        &gt;&gt;&gt; widget = YourNewWidget()\n        &gt;&gt;&gt; widget.set_something(\"value\")\n        &gt;&gt;&gt; html = widget.render_html()\n    \"\"\"\n\n    def __init__(self, widget_id: Optional[str] = None):\n        \"\"\"\u521d\u59cb\u5316Widget\u3002\n\n        Args:\n            widget_id: \u53ef\u9009\u7684Widget ID\n        \"\"\"\n        super().__init__(widget_id)\n        # \u521d\u59cb\u5316\u4f60\u7684\u5c5e\u6027\n        self._your_attr = \"default_value\"\n\n    def set_something(self, value: str) -&gt; 'YourNewWidget':\n        \"\"\"\u8bbe\u7f6e\u67d0\u4e2a\u5c5e\u6027\u3002\n\n        Args:\n            value: \u5c5e\u6027\u503c\n\n        Returns:\n            \u8fd4\u56deself\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n        \"\"\"\n        self._your_attr = value\n        return self\n\n    def _get_template_name(self) -&gt; str:\n        \"\"\"\u83b7\u53d6\u6a21\u677f\u540d\u79f0\u3002\n\n        Returns:\n            \u6a21\u677f\u6587\u4ef6\u540d\n        \"\"\"\n        return \"your_new_widget.html\"\n\n    def render_html(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u4e3aHTML\u5b57\u7b26\u4e32\u3002\n\n        Returns:\n            \u6e32\u67d3\u540e\u7684HTML\u5b57\u7b26\u4e32\n        \"\"\"\n        # \u5b9e\u73b0\u4f60\u7684\u6e32\u67d3\u903b\u8f91\n        return f'&lt;div&gt;{self._your_attr}&lt;/div&gt;'\n</code></pre>"},{"location":"zh/development/contributing/#3_1","title":"3. \ud83d\udcdd \u6587\u6863\u8981\u6c42","text":"<ul> <li>\u4f7f\u7528Google\u98ce\u683c\u7684docstring</li> <li>\u63d0\u4f9b\u8be6\u7ec6\u7684\u7c7b\u548c\u65b9\u6cd5\u8bf4\u660e</li> <li>\u5305\u542b\u4f7f\u7528\u793a\u4f8b</li> <li>\u8bf4\u660e\u53c2\u6570\u548c\u8fd4\u56de\u503c</li> </ul>"},{"location":"zh/development/contributing/#4_1","title":"4. \ud83e\uddea \u6d4b\u8bd5\u6587\u4ef6","text":"<p>\u521b\u5efa\u5bf9\u5e94\u7684\u6d4b\u8bd5\u6587\u4ef6 <code>tests/test_your_new_widget.py</code>\uff1a</p> Python<pre><code>import pytest\nfrom email_widget.widgets import YourNewWidget\n\n\nclass TestYourNewWidget:\n    def test_init(self):\n        \"\"\"\u6d4b\u8bd5Widget\u521d\u59cb\u5316\"\"\"\n        widget = YourNewWidget()\n        assert widget._your_attr == \"default_value\"\n\n    def test_set_something(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u5c5e\u6027\"\"\"\n        widget = YourNewWidget()\n        result = widget.set_something(\"test_value\")\n\n        assert widget._your_attr == \"test_value\"\n        assert result is widget  # \u6d4b\u8bd5\u94fe\u5f0f\u8c03\u7528\n\n    def test_render_html(self):\n        \"\"\"\u6d4b\u8bd5HTML\u6e32\u67d3\"\"\"\n        widget = YourNewWidget()\n        widget.set_something(\"test\")\n\n        html = widget.render_html()\n        assert \"test\" in html\n</code></pre>"},{"location":"zh/development/contributing/#5-widget","title":"5. \ud83d\udce6 \u6ce8\u518cWidget","text":"<p>\u5728 <code>email_widget/ewidget/widgets/__init__.py</code> \u4e2d\u6dfb\u52a0\u5bfc\u5165\uff1a</p> Python<pre><code>from .your_new_widget import YourNewWidget\n\n__all__ = [\n    # ... \u5176\u4ed6Widget\n    'YourNewWidget',\n]\n</code></pre>"},{"location":"zh/development/contributing/#pull-request","title":"\ud83d\udce4 \u63d0\u4ea4Pull Request","text":""},{"location":"zh/development/contributing/#1_1","title":"1. \u2705 \u63d0\u4ea4\u524d\u68c0\u67e5","text":"Bash<pre><code># \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\npytest tests/ -v\n\n# \u68c0\u67e5\u4ee3\u7801\u98ce\u683c\nblack --check email_widget/\nisort --check-only email_widget/\nflake8 email_widget/\n\n# \u7c7b\u578b\u68c0\u67e5\nmypy email_widget/\n</code></pre>"},{"location":"zh/development/contributing/#2-pr","title":"2. \ud83d\udcdd PR\u63cf\u8ff0\u6a21\u677f","text":"Markdown<pre><code>## \ud83d\udccb \u53d8\u66f4\u7c7b\u578b\n- [ ] \ud83d\udc1b Bug\u4fee\u590d\n- [ ] \u2728 \u65b0\u529f\u80fd\n- [ ] \ud83d\udca5 \u7834\u574f\u6027\u53d8\u66f4\n- [ ] \ud83d\udcda \u6587\u6863\u66f4\u65b0\n- [ ] \ud83d\udd27 \u4ee3\u7801\u91cd\u6784\n- [ ] \u26a1 \u6027\u80fd\u4f18\u5316\n- [ ] \ud83e\uddea \u6d4b\u8bd5\u6539\u8fdb\n\n## \ud83d\udcdd \u53d8\u66f4\u8bf4\u660e\n\u7b80\u8981\u63cf\u8ff0\u4f60\u7684\u53d8\u66f4\u5185\u5bb9...\n\n## \ud83e\uddea \u6d4b\u8bd5\u8bf4\u660e\n- [ ] \u5df2\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5\n- [ ] \u5df2\u901a\u8fc7\u6240\u6709\u73b0\u6709\u6d4b\u8bd5\n- [ ] \u5df2\u624b\u52a8\u6d4b\u8bd5\u529f\u80fd\n\n## \ud83d\udcf8 \u622a\u56fe/\u793a\u4f8b\n\u5982\u679c\u662fUI\u76f8\u5173\u7684\u53d8\u66f4\uff0c\u8bf7\u63d0\u4f9b\u622a\u56fe\u6216\u793a\u4f8b\u4ee3\u7801\n\n## \ud83d\udd17 \u76f8\u5173Issue\nFixes #(issue number)\n</code></pre>"},{"location":"zh/development/contributing/#3_2","title":"3. \ud83d\udd0d \u4ee3\u7801\u5ba1\u67e5","text":"<ul> <li>\u6211\u4eec\u4f1a\u4ed4\u7ec6\u5ba1\u67e5\u6bcf\u4e2aPR</li> <li>\u53ef\u80fd\u4f1a\u8981\u6c42\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539</li> <li>\u8bf7\u8010\u5fc3\u7b49\u5f85\u5ba1\u67e5\uff0c\u5e76\u79ef\u6781\u54cd\u5e94\u53cd\u9988</li> </ul>"},{"location":"zh/development/contributing/#bug","title":"\ud83d\udc1b \u62a5\u544aBug","text":""},{"location":"zh/development/contributing/#bug_1","title":"\ud83d\udcdd Bug\u62a5\u544a\u6a21\u677f","text":"<p>\u5f53\u4f60\u53d1\u73b0Bug\u65f6\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u6a21\u677f\u521b\u5efaIssue\uff1a</p> Markdown<pre><code>## \ud83d\udc1b Bug\u63cf\u8ff0\n\u7b80\u8981\u63cf\u8ff0\u9047\u5230\u7684\u95ee\u9898...\n\n## \ud83d\udd04 \u590d\u73b0\u6b65\u9aa4\n1. \u6267\u884c '...'\n2. \u70b9\u51fb '....'\n3. \u6eda\u52a8\u5230 '....'\n4. \u770b\u5230\u9519\u8bef\n\n## \ud83c\udfaf \u671f\u671b\u884c\u4e3a\n\u63cf\u8ff0\u4f60\u671f\u671b\u53d1\u751f\u7684\u60c5\u51b5...\n\n## \ud83d\udcf8 \u622a\u56fe\n\u5982\u679c\u9002\u7528\uff0c\u6dfb\u52a0\u622a\u56fe\u6765\u5e2e\u52a9\u89e3\u91ca\u95ee\u9898\n\n## \ud83d\udda5\ufe0f \u73af\u5883\u4fe1\u606f\n- OS: [e.g. Windows 10, macOS 12.0, Ubuntu 20.04]\n- Python\u7248\u672c: [e.g. 3.10.0]\n- EmailWidget\u7248\u672c: [e.g. 0.1.0]\n\n## \ud83d\udccb \u989d\u5916\u4fe1\u606f\n\u6dfb\u52a0\u4efb\u4f55\u5176\u4ed6\u6709\u5173\u95ee\u9898\u7684\u4fe1\u606f...\n</code></pre>"},{"location":"zh/development/contributing/#_11","title":"\ud83d\udca1 \u529f\u80fd\u5efa\u8bae","text":"<p>\u6211\u4eec\u6b22\u8fce\u65b0\u529f\u80fd\u7684\u5efa\u8bae\uff01\u8bf7\u5728\u521b\u5efaFeature Request\u65f6\uff1a</p> <ol> <li>\ud83c\udfaf \u660e\u786e\u9700\u6c42 - \u8be6\u7ec6\u63cf\u8ff0\u4f60\u60f3\u8981\u7684\u529f\u80fd</li> <li>\ud83e\udd14 \u89e3\u91ca\u539f\u56e0 - \u4e3a\u4ec0\u4e48\u9700\u8981\u8fd9\u4e2a\u529f\u80fd</li> <li>\ud83d\udcad \u63d0\u4f9b\u65b9\u6848 - \u5982\u679c\u6709\u60f3\u6cd5\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5b9e\u73b0\u65b9\u6848</li> <li>\ud83d\udcdd \u4e3e\u4f8b\u8bf4\u660e - \u63d0\u4f9b\u4f7f\u7528\u793a\u4f8b</li> </ol>"},{"location":"zh/development/contributing/#_12","title":"\ud83c\udf1f \u8ba4\u53ef\u8d21\u732e\u8005","text":"<p>\u6211\u4eec\u4f1a\u5728\u4ee5\u4e0b\u5730\u65b9\u8ba4\u53ef\u8d21\u732e\u8005\uff1a</p> <ul> <li>\ud83d\udcdc CONTRIBUTORS.md \u6587\u4ef6</li> <li>\ud83c\udf89 \u53d1\u5e03\u8bf4\u660e \u4e2d\u611f\u8c22</li> <li>\ud83d\udcac \u793e\u4ea4\u5a92\u4f53 \u5ba3\u4f20</li> <li>\ud83c\udfc6 \u7279\u6b8a\u5fbd\u7ae0 \uff08\u91cd\u5927\u8d21\u732e\uff09</li> </ul>"},{"location":"zh/development/contributing/#_13","title":"\ud83d\udcde \u8054\u7cfb\u6211\u4eec","text":"<p>\u5982\u679c\u4f60\u6709\u4efb\u4f55\u95ee\u9898\u6216\u9700\u8981\u5e2e\u52a9\uff1a</p> <ul> <li>\ud83d\udcac GitHub Discussions</li> <li>\ud83d\udc1b GitHub Issues</li> <li>\ud83d\udce7 Email</li> </ul> <p>\u611f\u8c22\u4f60\u7684\u8d21\u732e\uff01</p> <p>\u6bcf\u4e00\u4e2a\u8d21\u732e\u90fd\u8ba9 EmailWidget \u53d8\u5f97\u66f4\u597d\u3002\u65e0\u8bba\u8d21\u732e\u5927\u5c0f\uff0c\u6211\u4eec\u90fd\u975e\u5e38\u611f\u8c22\uff01\ud83d\ude4f </p>"},{"location":"zh/development/creating-widgets/","title":"\u521b\u5efa\u81ea\u5b9a\u4e49 Widget","text":"<p>\u672c\u6307\u5357\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u5728 EmailWidget \u4e2d\u521b\u5efa\u81ea\u5b9a\u4e49\u7ec4\u4ef6\uff0c\u4ece\u57fa\u7840\u6982\u5ff5\u5230\u5b8c\u6574\u5b9e\u73b0\u3002</p>"},{"location":"zh/development/creating-widgets/#widget_1","title":"\ud83c\udfaf Widget \u67b6\u6784\u6982\u8ff0","text":""},{"location":"zh/development/creating-widgets/#_1","title":"\u6838\u5fc3\u6982\u5ff5","text":"<p>EmailWidget \u91c7\u7528\u7ec4\u4ef6\u5316\u67b6\u6784\uff0c\u6240\u6709\u663e\u793a\u5143\u7d20\u90fd\u662f Widget\uff1a</p> Text Only<pre><code>BaseWidget (\u62bd\u8c61\u57fa\u7c7b)\n\u251c\u2500\u2500 TextWidget (Text\u7ec4\u4ef6)\n\u251c\u2500\u2500 TableWidget (\u8868\u683c\u7ec4\u4ef6)\n\u251c\u2500\u2500 ProgressWidget (Progress\u6761\u7ec4\u4ef6)\n\u251c\u2500\u2500 AlertWidget (Alert\u6846\u7ec4\u4ef6)\n\u251c\u2500\u2500 CustomWidget (\u60a8\u7684\u81ea\u5b9a\u4e49\u7ec4\u4ef6)\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"zh/development/creating-widgets/#system","title":"\ud83c\udfa8 \u6a21\u677fSystem","text":""},{"location":"zh/development/creating-widgets/#jinja2","title":"Jinja2\u96c6\u6210","text":"<p>EmailWidget\u4f7f\u7528Jinja2\u4f5c\u4e3a\u6a21\u677f\u5f15\u64ce\uff1a</p> Python<pre><code>from email_widget.core.template_engine import TemplateEngine\n\n# \u83b7\u53d6\u6a21\u677f\u5f15\u64ce\nengine = TemplateEngine()\n\n# \u6e32\u67d3\u6a21\u677f\ntemplate = engine.get_template(\"widget_template.html\")\nhtml = template.render(context={\"title\": \"Title\", \"content\": \"\u5185\u5bb9\"})\n</code></pre>"},{"location":"zh/development/creating-widgets/#_2","title":"\u6a21\u677f\u7ed3\u6784","text":"<p>\u5178\u578b\u7684Widget\u6a21\u677f\u7ed3\u6784\uff1a</p> HTML<pre><code>&lt;!-- widget_template.html --&gt;\n&lt;div class=\"widget {{ widget_type }}\" id=\"{{ widget_id }}\"&gt;\n    &lt;div class=\"widget-header\"&gt;\n        &lt;h3&gt;{{ title }}&lt;/h3&gt;\n    &lt;/div&gt;\n    &lt;div class=\"widget-content\"&gt;\n        {{ content|safe }}\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"zh/development/creating-widgets/#_3","title":"\u81ea\u5b9a\u4e49\u6a21\u677f","text":"<p>\u53ef\u4ee5\u4e3a\u81ea\u5b9a\u4e49Widget\u521b\u5efa\u6a21\u677f\uff1a</p> Python<pre><code>class CustomWidget(BaseWidget):\n    def __init__(self):\n        super().__init__()\n        self.template_name = \"custom_widget.html\"\n\n    def get_template_context(self) -&gt; dict:\n        return {\n            \"title\": self.title,\n            \"custom_data\": self.custom_data,\n            **super().get_template_context()\n        }\n</code></pre>"},{"location":"zh/development/creating-widgets/#_4","title":"\ud83d\udd04 \u6e32\u67d3\u6d41\u7a0b","text":""},{"location":"zh/development/creating-widgets/#_5","title":"\u6e32\u67d3\u8fc7\u7a0b","text":"<p>EmailWidget\u7684\u6e32\u67d3\u6d41\u7a0b\uff1a</p> <pre><code>graph TD\n    A[\"Email.export_html()\"] --&gt; B[\"\u6536\u96c6\u6240\u6709Widget\"]\n    B --&gt; C[\"\u9a8c\u8bc1WidgetData\"]\n    C --&gt; D[\"\u6e32\u67d3\u5404\u4e2aWidget\"]\n    D --&gt; E[\"\u751f\u6210CSS\u6837\u5f0f\"]\n    E --&gt; F[\"\u5408\u5e76HTML\u6a21\u677f\"]\n    F --&gt; G[\"\u8f93\u51fa\u6700\u7ec8HTML\"]</code></pre>"},{"location":"zh/development/creating-widgets/#_6","title":"\u6027\u80fd\u4f18\u5316","text":"<p>EmailWidget\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u4e86\u591a\u9879\u4f18\u5316\uff1a</p> <ul> <li>\u6a21\u677f\u7f13\u5b58 - \u907f\u514d\u91cd\u590d\u89e3\u6790\u6a21\u677f</li> <li>\u61d2\u52a0\u8f7d - \u6309\u9700\u52a0\u8f7d\u8d44\u6e90</li> <li>HTML\u538b\u7f29 - \u51cf\u5c0f\u6587\u4ef6\u5927\u5c0f</li> <li>Image\u4f18\u5316 - \u81ea\u52a8\u538b\u7f29\u548c\u7f16\u7801</li> </ul>"},{"location":"zh/development/creating-widgets/#basewidget","title":"BaseWidget \u57fa\u7c7b","text":"<p>\u6240\u6709 Widget \u90fd\u5fc5\u987b\u7ee7\u627f\u81ea <code>BaseWidget</code>\uff1a</p> Python<pre><code>from email_widget.core.base import BaseWidget\nfrom typing import Any, Dict, Optional\n\nclass BaseWidget:\n    \"\"\"Widget \u57fa\u7c7b\uff0c\u5b9a\u4e49\u901a\u7528\u63a5\u53e3\"\"\"\n\n    def __init__(self):\n        \"\"\"\u521d\u59cb\u5316\u57fa\u672c\u5c5e\u6027\"\"\"\n        self._id: Optional[str] = None\n        self._css_classes: List[str] = []\n        self._custom_styles: Dict[str, str] = {}\n\n    def render(self) -&gt; str:\n        \"\"\"\u6e32\u67d3 Widget \u4e3a HTML - \u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\"\"\"\n        raise NotImplementedError(\"\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0 render \u65b9\u6cd5\")\n\n    def set_id(self, widget_id: str) -&gt; 'BaseWidget':\n        \"\"\"\u8bbe\u7f6e Widget ID\"\"\"\n        self._id = widget_id\n        return self\n\n    def add_css_class(self, css_class: str) -&gt; 'BaseWidget':\n        \"\"\"\u6dfb\u52a0 CSS \u7c7b\"\"\"\n        if css_class not in self._css_classes:\n            self._css_classes.append(css_class)\n        return self\n\n    def set_custom_style(self, property_name: str, value: str) -&gt; 'BaseWidget':\n        \"\"\"\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u6837\u5f0f\"\"\"\n        self._custom_styles[property_name] = value\n        return self\n</code></pre>"},{"location":"zh/development/creating-widgets/#_7","title":"\ud83d\udee0\ufe0f \u5f00\u53d1\u6d41\u7a0b","text":""},{"location":"zh/development/creating-widgets/#1","title":"1. \u8bbe\u8ba1\u9636\u6bb5","text":"<p>\u5728\u5f00\u59cb\u7f16\u7801\u524d\uff0c\u5148\u660e\u786e\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <p>\u529f\u80fd\u5b9a\u4e49 - Widget \u7684\u4e3b\u8981\u7528\u9014\u662f\u4ec0\u4e48\uff1f - \u9700\u8981Display\u54ea\u4e9bData\uff1f - \u7528\u6237\u5982\u4f55\u4e0e\u5b83Interactive\uff1f</p> <p>API \u8bbe\u8ba1 - \u9700\u8981\u54ea\u4e9b\u914d\u7f6e\u65b9\u6cd5\uff1f - \u53c2\u6570\u7c7b\u578b\u548c\u9ed8\u8ba4\u503c\u662f\u4ec0\u4e48\uff1f - \u662f\u5426\u652f\u6301\u94fe\u5f0f\u8c03\u7528\uff1f</p> <p>\u6837\u5f0f\u8bbe\u8ba1 - \u9ed8\u8ba4\u6837\u5f0f\u662f\u4ec0\u4e48\uff1f - \u652f\u6301\u54ea\u4e9b\u81ea\u5b9a\u4e49\u9009\u9879\uff1f - \u5982\u4f55\u786e\u4fdd\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u6027\uff1f</p>"},{"location":"zh/development/creating-widgets/#2","title":"2. \u5b9e\u73b0\u9636\u6bb5","text":""},{"location":"zh/development/creating-widgets/#1_1","title":"\u6b65\u9aa4 1\uff1a\u521b\u5efa\u57fa\u672c\u7ed3\u6784","text":"Python<pre><code>from email_widget.core.base import BaseWidget\nfrom email_widget.core.validators import TypeValidator\nfrom typing import Optional, Union\n\nclass CustomWidget(BaseWidget):\n    \"\"\"\u81ea\u5b9a\u4e49 Widget \u793a\u4f8b\"\"\"\n\n    def __init__(self):\n        super().__init__()\n        # \u521d\u59cb\u5316 Widget \u7279\u6709\u5c5e\u6027\n        self._title: str = \"\"\n        self._content: str = \"\"\n        self._theme: str = \"default\"\n\n        # \u521d\u59cb\u5316\u9a8c\u8bc1\u5668\n        self._validators = {\n            'title': TypeValidator(str),\n            'content': TypeValidator(str),\n            'theme': TypeValidator(str)\n        }\n\n    def render(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u4e3a HTML\"\"\"\n        # \u5b9e\u73b0\u6e32\u67d3\u903b\u8f91\n        pass\n</code></pre>"},{"location":"zh/development/creating-widgets/#2_1","title":"\u6b65\u9aa4 2\uff1a\u5b9e\u73b0\u914d\u7f6e\u65b9\u6cd5","text":"Python<pre><code>def set_title(self, title: str) -&gt; 'CustomWidget':\n    \"\"\"\u8bbe\u7f6eTitle\"\"\"\n    self._validators['title'].validate(title)\n    self._title = title\n    return self\n\ndef set_content(self, content: str) -&gt; 'CustomWidget':\n    \"\"\"\u8bbe\u7f6e\u5185\u5bb9\"\"\"\n    self._validators['content'].validate(content)\n    self._content = content\n    return self\n\ndef set_theme(self, theme: str) -&gt; 'CustomWidget':\n    \"\"\"\u8bbe\u7f6e\u4e3b\u9898\"\"\"\n    allowed_themes = ['default', 'primary', 'success', 'warning', 'danger']\n    if theme not in allowed_themes:\n        raise ValueError(f\"\u4e3b\u9898\u5fc5\u987b\u662f\u4ee5\u4e0b\u4e4b\u4e00: {allowed_themes}\")\n    self._theme = theme\n    return self\n</code></pre>"},{"location":"zh/development/creating-widgets/#3","title":"\u6b65\u9aa4 3\uff1a\u5b9e\u73b0\u6e32\u67d3\u903b\u8f91","text":"Python<pre><code>def render(self) -&gt; str:\n    \"\"\"\u6e32\u67d3\u4e3a HTML\"\"\"\n    # \u751f\u6210 CSS \u7c7b\u540d\n    css_classes = ['custom-widget', f'theme-{self._theme}'] + self._css_classes\n    class_attr = f'class=\"{\" \".join(css_classes)}\"' if css_classes else ''\n\n    # \u751f\u6210 ID \u5c5e\u6027\n    id_attr = f'id=\"{self._id}\"' if self._id else ''\n\n    # \u751f\u6210\u5185\u8054\u6837\u5f0f\n    styles = self._get_default_styles()\n    styles.update(self._custom_styles)\n    style_attr = f'style=\"{self._generate_style_string(styles)}\"' if styles else ''\n\n    # \u7ec4\u5408\u5c5e\u6027\n    attributes = ' '.join(filter(None, [class_attr, id_attr, style_attr]))\n\n    return f\"\"\"\n    &lt;div {attributes}&gt;\n        {self._render_title()}\n        {self._render_content()}\n    &lt;/div&gt;\n    \"\"\"\n\ndef _render_title(self) -&gt; str:\n    \"\"\"\u6e32\u67d3Title\u90e8\u5206\"\"\"\n    if not self._title:\n        return \"\"\n\n    return f'&lt;h3 style=\"margin: 0 0 10px 0; color: #2c3e50;\"&gt;{self._title}&lt;/h3&gt;'\n\ndef _render_content(self) -&gt; str:\n    \"\"\"\u6e32\u67d3\u5185\u5bb9\u90e8\u5206\"\"\"\n    if not self._content:\n        return \"\"\n\n    return f'&lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"line-height: 1.6;\"&gt;{self._content}&lt;/div&gt;\n&lt;/div&gt;'\n\ndef _get_default_styles(self) -&gt; Dict[str, str]:\n    \"\"\"\u83b7\u53d6\u9ed8\u8ba4\u6837\u5f0f\"\"\"\n    theme_colors = {\n        'default': '#f8f9fa',\n        'primary': '#007bff',\n        'success': '#28a745',\n        'warning': '#ffc107',\n        'danger': '#dc3545'\n    }\n\n    return {\n        'background-color': theme_colors.get(self._theme, theme_colors['default']),\n        'border': '1px solid #dee2e6',\n        'border-radius': '4px',\n        'padding': '15px',\n        'margin': '10px 0',\n        'font-family': 'Arial, sans-serif'\n    }\n\ndef _generate_style_string(self, styles: Dict[str, str]) -&gt; str:\n    \"\"\"\u751f\u6210\u6837\u5f0f\u5b57\u7b26\u4e32\"\"\"\n    return '; '.join(f'{key}: {value}' for key, value in styles.items())\n</code></pre>"},{"location":"zh/development/creating-widgets/#card-widget","title":"\ud83d\udcdd \u5b8c\u6574\u793a\u4f8b\uff1a\u8bc4\u5206Card Widget","text":"<p>\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u8bc4\u5206Card\u7ec4\u4ef6\u4f5c\u4e3a\u793a\u4f8b\uff1a</p> Python<pre><code>from email_widget.core.base import BaseWidget\nfrom email_widget.core.validators import TypeValidator, RangeValidator\nfrom typing import Optional\n\nclass RatingCardWidget(BaseWidget):\n    \"\"\"\u8bc4\u5206Card Widget\"\"\"\n\n    def __init__(self):\n        super().__init__()\n        self._title: str = \"\"\n        self._rating: float = 0.0\n        self._max_rating: float = 5.0\n        self._description: str = \"\"\n        self._show_stars: bool = True\n        self._color_scheme: str = \"default\"\n\n        # \u8bbe\u7f6e\u9a8c\u8bc1\u5668\n        self._validators = {\n            'title': TypeValidator(str),\n            'rating': RangeValidator(0, 10),\n            'max_rating': RangeValidator(1, 10),\n            'description': TypeValidator(str)\n        }\n\n    def set_title(self, title: str) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6eCardTitle\"\"\"\n        self._validators['title'].validate(title)\n        self._title = title\n        return self\n\n    def set_rating(self, rating: float, max_rating: float = 5.0) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6e\u8bc4\u5206\"\"\"\n        self._validators['rating'].validate(rating)\n        self._validators['max_rating'].validate(max_rating)\n\n        if rating &gt; max_rating:\n            raise ValueError(f\"\u8bc4\u5206 ({rating}) \u4e0d\u80fd\u8d85\u8fc7\u6700\u5927\u503c ({max_rating})\")\n\n        self._rating = rating\n        self._max_rating = max_rating\n        return self\n\n    def set_description(self, description: str) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6e\u63cf\u8ff0\u6587\u5b57\"\"\"\n        self._validators['description'].validate(description)\n        self._description = description\n        return self\n\n    def set_show_stars(self, show: bool) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u661f\u5f62\u56fe\u6807\"\"\"\n        self._show_stars = show\n        return self\n\n    def set_color_scheme(self, scheme: str) -&gt; 'RatingCardWidget':\n        \"\"\"\u8bbe\u7f6e\u989c\u8272\u65b9\u6848\"\"\"\n        allowed_schemes = ['default', 'gold', 'blue', 'green', 'red']\n        if scheme not in allowed_schemes:\n            raise ValueError(f\"\u989c\u8272\u65b9\u6848\u5fc5\u987b\u662f: {allowed_schemes}\")\n        self._color_scheme = scheme\n        return self\n\n    def render(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u8bc4\u5206Card\"\"\"\n        # \u83b7\u53d6\u6837\u5f0f\n        styles = self._get_card_styles()\n        styles.update(self._custom_styles)\n        style_attr = self._generate_style_string(styles)\n\n        # \u751f\u6210\u5176\u4ed6\u5c5e\u6027\n        css_classes = ['rating-card'] + self._css_classes\n        class_attr = f'class=\"{\" \".join(css_classes)}\"'\n        id_attr = f'id=\"{self._id}\"' if self._id else ''\n\n        attributes = ' '.join(filter(None, [class_attr, id_attr, f'style=\"{style_attr}\"']))\n\n        return f\"\"\"\n        &lt;div {attributes}&gt;\n            {self._render_header()}\n            {self._render_rating()}\n            {self._render_description()}\n        &lt;/div&gt;\n        \"\"\"\n\n    def _render_header(self) -&gt; str:\n        \"\"\"\u6e32\u67d3Title\"\"\"\n        if not self._title:\n            return \"\"\n\n        return f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"margin-bottom: 15px;\"&gt;\n            &lt;h3 style=\"margin: 0; font-size: 18px; color: #2c3e50; font-weight: 600;\"&gt;\n                {self._title}\n            &lt;/h3&gt;\n        &lt;/div&gt;\n&lt;/div&gt;\n        \"\"\"\n\n    def _render_rating(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u8bc4\u5206\u663e\u793a\"\"\"\n        percentage = (self._rating / self._max_rating) * 100\n\n        # \u6570\u5b57\u8bc4\u5206\n        rating_number = f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"font-size: 24px; font-weight: bold; color: {self._get_rating_color()}; margin-bottom: 5px;\"&gt;\n            {self._rating:.1f} / {self._max_rating:.0f}\n        &lt;/div&gt;\n&lt;/div&gt;\n        \"\"\"\n\n        # \u661f\u5f62\u663e\u793a\n        stars_html = \"\"\n        if self._show_stars:\n            stars_html = f\"\"\"\n            &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"margin-bottom: 8px;\"&gt;\n                {self._generate_stars()}\n            &lt;/div&gt;\n&lt;/div&gt;\n            \"\"\"\n\n        # Progress\u6761\n        progress_bar = f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"background-color: #e9ecef; border-radius: 10px; height: 8px; overflow: hidden;\"&gt;\n            &lt;div style=\"\n                background-color: {self._get_rating_color()};\n                height: 100%;\n                width: {percentage:.1f}%;\n                border-radius: 10px;\n                transition: width 0.3s ease;\n            \"&gt;&lt;/div&gt;\n&lt;/div&gt;\n        &lt;/div&gt;\n        \"\"\"\n\n        return f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"text-align: center; margin-bottom: 15px;\"&gt;\n            {rating_number}\n            {stars_html}\n            {progress_bar}\n        &lt;/div&gt;\n&lt;/div&gt;\n        \"\"\"\n\n    def _render_description(self) -&gt; str:\n        \"\"\"\u6e32\u67d3\u63cf\u8ff0\"\"\"\n        if not self._description:\n            return \"\"\n\n        return f\"\"\"\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"\n            color: #6c757d;\n            font-size: 14px;\n            line-height: 1.5;\n            text-align: center;\n            margin-top: 10px;\n        \"&gt;\n            {self._description}\n        &lt;/div&gt;\n&lt;/div&gt;\n        \"\"\"\n\n    def _generate_stars(self) -&gt; str:\n        \"\"\"\u751f\u6210\u661f\u5f62\u56fe\u6807\"\"\"\n        full_stars = int(self._rating)\n        has_half_star = (self._rating - full_stars) &gt;= 0.5\n        empty_stars = int(self._max_rating) - full_stars - (1 if has_half_star else 0)\n\n        stars_html = \"\"\n\n        # \u6ee1\u661f\n        for _ in range(full_stars):\n            stars_html += '&lt;span style=\"color: #ffc107; font-size: 18px;\"&gt;\u2605&lt;/span&gt;'\n\n        # \u534a\u661f\n        if has_half_star:\n            stars_html += '&lt;span style=\"color: #ffc107; font-size: 18px;\"&gt;\u2606&lt;/span&gt;'\n\n        # \u7a7a\u661f\n        for _ in range(empty_stars):\n            stars_html += '&lt;span style=\"color: #dee2e6; font-size: 18px;\"&gt;\u2606&lt;/span&gt;'\n\n        return stars_html\n\n    def _get_rating_color(self) -&gt; str:\n        \"\"\"\u6839\u636e\u8bc4\u5206\u83b7\u53d6\u989c\u8272\"\"\"\n        if self._color_scheme != 'default':\n            colors = {\n                'gold': '#ffc107',\n                'blue': '#007bff',\n                'green': '#28a745',\n                'red': '#dc3545'\n            }\n            return colors.get(self._color_scheme, '#007bff')\n\n        # \u6839\u636e\u8bc4\u5206\u52a8\u6001\u8bbe\u7f6e\u989c\u8272\n        percentage = (self._rating / self._max_rating) * 100\n        if percentage &gt;= 80:\n            return '#28a745'  # \u7eff\u8272 - \u4f18\u79c0\n        elif percentage &gt;= 60:\n            return '#ffc107'  # \u9ec4\u8272 - \u826f\u597d\n        elif percentage &gt;= 40:\n            return '#fd7e14'  # \u6a59\u8272 - \u4e00\u822c\n        else:\n            return '#dc3545'  # \u7ea2\u8272 - \u8f83\u5dee\n\n    def _get_card_styles(self) -&gt; dict:\n        \"\"\"\u83b7\u53d6Card\u6837\u5f0f\"\"\"\n        return {\n            'background': 'linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%)',\n            'border': '1px solid #dee2e6',\n            'border-radius': '12px',\n            'padding': '20px',\n            'margin': '15px 0',\n            'box-shadow': '0 2px 8px rgba(0, 0, 0, 0.1)',\n            'font-family': \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n            'text-align': 'left'\n        }\n\n    def _generate_style_string(self, styles: dict) -&gt; str:\n        \"\"\"\u751f\u6210\u6837\u5f0f\u5b57\u7b26\u4e32\"\"\"\n        return '; '.join(f'{key}: {value}' for key, value in styles.items())\n\n\n# \u4f7f\u7528\u793a\u4f8b\ndef demo_rating_card():\n    \"\"\"\u8bc4\u5206Card\u4f7f\u7528\u793a\u4f8b\"\"\"\n    from email_widget import Email\n\n    email = Email(\"\u8bc4\u5206Card\u6f14\u793a\")\n\n    # \u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u8bc4\u5206Card\n\n    # Product\u8bc4\u5206\n    product_rating = RatingCardWidget()\n    product_rating.set_title(\"Product\u7528\u6237\u6ee1\u610f\u5ea6\") \\\n                  .set_rating(4.3, 5.0) \\\n                  .set_description(\"\u57fa\u4e8e1,247\u4e2a\u7528\u6237\u8bc4\u4ef7\u7684\u5e73\u5747\u5206\") \\\n                  .set_color_scheme(\"gold\")\n\n    email.add_widget(product_rating)\n\n    # Service\u8bc4\u5206\n    service_rating = RatingCardWidget()\n    service_rating.set_title(\"\u5ba2\u6237Service\u8bc4\u5206\") \\\n                  .set_rating(8.7, 10.0) \\\n                  .set_description(\"\u5ba2\u6237Service\u56e2\u961f\u672c\u6708\u8868\u73b0\") \\\n                  .set_color_scheme(\"green\") \\\n                  .set_show_stars(False)\n\n    email.add_widget(service_rating)\n\n    # \u7f51\u7ad9\u6027\u80fd\u8bc4\u5206\n    performance_rating = RatingCardWidget()\n    performance_rating.set_title(\"\u7f51\u7ad9\u6027\u80fd\u5f97\u5206\") \\\n                      .set_rating(2.1, 5.0) \\\n                      .set_description(\"\u9700\u8981\u4f18\u5316\u9875\u9762\u52a0\u8f7d\u901f\u5ea6\") \\\n                      .set_color_scheme(\"red\")\n\n    email.add_widget(performance_rating)\n\n    email.export_html(\"rating_card_demo.html\")\n    print(\"\u2705 \u8bc4\u5206Card\u6f14\u793a\u5df2\u751f\u6210\")\n\nif __name__ == \"__main__\":\n    demo_rating_card()\n</code></pre>"},{"location":"zh/development/creating-widgets/#widget_2","title":"\ud83e\uddea \u6d4b\u8bd5\u81ea\u5b9a\u4e49 Widget","text":"<p>\u521b\u5efa\u5bf9\u5e94\u7684\u6d4b\u8bd5\u6587\u4ef6 <code>tests/test_rating_card_widget.py</code>\uff1a</p> Python<pre><code>import pytest\nfrom email_widget.widgets.rating_card_widget import RatingCardWidget\n\nclass TestRatingCardWidget:\n    \"\"\"\u8bc4\u5206Card Widget \u6d4b\u8bd5\"\"\"\n\n    def test_initialization(self):\n        \"\"\"\u6d4b\u8bd5\u521d\u59cb\u5316\"\"\"\n        widget = RatingCardWidget()\n        assert widget._title == \"\"\n        assert widget._rating == 0.0\n        assert widget._max_rating == 5.0\n        assert widget._show_stars is True\n\n    def test_set_title(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6eTitle\"\"\"\n        widget = RatingCardWidget()\n        result = widget.set_title(\"\u6d4b\u8bd5Title\")\n\n        assert result is widget  # \u6d4b\u8bd5\u94fe\u5f0f\u8c03\u7528\n        assert widget._title == \"\u6d4b\u8bd5Title\"\n\n    def test_set_rating(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u8bc4\u5206\"\"\"\n        widget = RatingCardWidget()\n        widget.set_rating(4.5, 5.0)\n\n        assert widget._rating == 4.5\n        assert widget._max_rating == 5.0\n\n    def test_invalid_rating(self):\n        \"\"\"\u6d4b\u8bd5\u65e0\u6548\u8bc4\u5206\"\"\"\n        widget = RatingCardWidget()\n\n        with pytest.raises(ValueError):\n            widget.set_rating(6.0, 5.0)  # \u8bc4\u5206\u8d85\u8fc7\u6700\u5927\u503c\n\n    def test_render_basic(self):\n        \"\"\"\u6d4b\u8bd5\u57fa\u672c\u6e32\u67d3\"\"\"\n        widget = RatingCardWidget()\n        widget.set_title(\"\u6d4b\u8bd5\u8bc4\u5206\").set_rating(4.0, 5.0)\n\n        html = widget.render()\n\n        assert \"\u6d4b\u8bd5\u8bc4\u5206\" in html\n        assert \"4.0\" in html\n        assert \"class=\" in html\n        assert \"style=\" in html\n\n    def test_render_with_description(self):\n        \"\"\"\u6d4b\u8bd5\u5305\u542b\u63cf\u8ff0\u7684\u6e32\u67d3\"\"\"\n        widget = RatingCardWidget()\n        widget.set_title(\"\u6d4b\u8bd5\").set_rating(3.5).set_description(\"\u6d4b\u8bd5\u63cf\u8ff0\")\n\n        html = widget.render()\n        assert \"\u6d4b\u8bd5\u63cf\u8ff0\" in html\n\n    def test_color_schemes(self):\n        \"\"\"\u6d4b\u8bd5\u989c\u8272\u65b9\u6848\"\"\"\n        widget = RatingCardWidget()\n\n        # \u6d4b\u8bd5\u6709\u6548\u989c\u8272\u65b9\u6848\n        for scheme in ['default', 'gold', 'blue', 'green', 'red']:\n            widget.set_color_scheme(scheme)\n            assert widget._color_scheme == scheme\n\n        # \u6d4b\u8bd5\u65e0\u6548\u989c\u8272\u65b9\u6848\n        with pytest.raises(ValueError):\n            widget.set_color_scheme(\"invalid\")\n\n    def test_stars_generation(self):\n        \"\"\"\u6d4b\u8bd5\u661f\u5f62\u751f\u6210\"\"\"\n        widget = RatingCardWidget()\n        widget.set_rating(3.5, 5.0)\n\n        # \u6d4b\u8bd5\u661f\u5f62 HTML \u751f\u6210\uff08\u9700\u8981\u5b9e\u73b0 _generate_stars \u7684\u6d4b\u8bd5\uff09\n        stars_html = widget._generate_stars()\n        assert \"\u2605\" in stars_html  # \u5e94\u8be5\u5305\u542b\u6ee1\u661f\n        assert \"\u2606\" in stars_html  # \u5e94\u8be5\u5305\u542b\u7a7a\u661f\u6216\u534a\u661f\n\n# \u8fd0\u884c\u6d4b\u8bd5\nif __name__ == \"__main__\":\n    pytest.main([__file__, \"-v\"])\n</code></pre>"},{"location":"zh/development/creating-widgets/#_8","title":"\ud83d\udccb \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/development/creating-widgets/#1_2","title":"1. \u9075\u5faa\u8bbe\u8ba1\u539f\u5219","text":"<p>\u5355\u4e00\u804c\u8d23\u539f\u5219 - \u6bcf\u4e2a Widget \u53ea\u8d1f\u8d23\u4e00\u79cd\u7279\u5b9a\u7684\u663e\u793a\u529f\u80fd - \u907f\u514d\u521b\u5efa\u529f\u80fd\u8fc7\u4e8e\u590d\u6742\u7684\u7ec4\u4ef6</p> <p>\u5f00\u95ed\u539f\u5219 - \u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5c01\u95ed - \u901a\u8fc7\u7ee7\u627f\u548c\u7ec4\u5408\u5b9e\u73b0\u529f\u80fd\u6269\u5c55</p> <p>\u91cc\u6c0f\u66ff\u6362\u539f\u5219 - \u5b50\u7c7b\u5e94\u8be5\u80fd\u591f\u66ff\u6362\u7236\u7c7b\u4f7f\u7528 - \u4fdd\u6301\u63a5\u53e3\u4e00\u81f4\u6027</p>"},{"location":"zh/development/creating-widgets/#2_2","title":"2. \u4ee3\u7801\u8d28\u91cf","text":"<p>\u8f93\u5165\u9a8c\u8bc1 Python<pre><code>def set_value(self, value: Any) -&gt; 'CustomWidget':\n    \"\"\"\u8bbe\u7f6e\u503c\u65f6\u8fdb\u884c\u9a8c\u8bc1\"\"\"\n    if not self._validate_value(value):\n        raise ValueError(f\"\u65e0\u6548\u7684\u503c: {value}\")\n    self._value = value\n    return self\n\ndef _validate_value(self, value: Any) -&gt; bool:\n    \"\"\"\u9a8c\u8bc1\u503c\u662f\u5426\u6709\u6548\"\"\"\n    # \u5b9e\u73b0\u5177\u4f53\u7684\u9a8c\u8bc1\u903b\u8f91\n    return True\n</code></pre></p> <p>\u9519\u8bef\u5904\u7406 Python<pre><code>def render(self) -&gt; str:\n    \"\"\"\u5b89\u5168\u7684\u6e32\u67d3\u65b9\u6cd5\"\"\"\n    try:\n        return self._safe_render()\n    except Exception as e:\n        # \u8bb0\u5f55\u9519\u8bef\u4f46\u4e0d\u4e2d\u65ad\u6574\u4e2a\u90ae\u4ef6\u751f\u6210\n        return f'&lt;div class=\"widget-error\"&gt;Widget \u6e32\u67d3\u5931\u8d25: {str(e)}&lt;/div&gt;'\n\ndef _safe_render(self) -&gt; str:\n    \"\"\"\u5b9e\u9645\u7684\u6e32\u67d3\u903b\u8f91\"\"\"\n    # \u5b9e\u73b0\u6e32\u67d3\n    pass\n</code></pre></p> <p>\u6027\u80fd\u4f18\u5316 Python<pre><code>from functools import lru_cache\n\nclass CustomWidget(BaseWidget):\n\n    @lru_cache(maxsize=128)\n    def _get_cached_template(self, template_key: str) -&gt; str:\n        \"\"\"\u7f13\u5b58\u6a21\u677f\u5185\u5bb9\"\"\"\n        # \u907f\u514d\u91cd\u590d\u751f\u6210\u76f8\u540c\u7684\u6a21\u677f\n        return self._generate_template(template_key)\n</code></pre></p>"},{"location":"zh/development/creating-widgets/#3_1","title":"3. \u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u6027","text":"<p>\u4f7f\u7528\u5185\u8054\u6837\u5f0f Python<pre><code>def render(self) -&gt; str:\n    # \u597d\uff1a\u4f7f\u7528\u5185\u8054\u6837\u5f0f\n    return '&lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"color: red; font-size: 16px;\"&gt;\u5185\u5bb9&lt;/div&gt;\n&lt;/div&gt;'\n\n    # \u907f\u514d\uff1a\u4f7f\u7528\u5916\u90e8 CSS \u7c7b\uff08\u5f88\u591a\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e0d\u652f\u6301\uff09\n    # return '&lt;div class=\"my-class\"&gt;\u5185\u5bb9&lt;/div&gt;'\n</code></pre></p> <p>\u907f\u514d\u590d\u6742Layout Python<pre><code># \u597d\uff1a\u4f7f\u7528\u8868\u683cLayout\ndef _render_layout(self) -&gt; str:\n    return '''\n    &lt;table style=\"width: 100%; border-collapse: collapse;\"&gt;\n        &lt;tr&gt;\n            &lt;td style=\"padding: 10px;\"&gt;\u5de6\u5217&lt;/td&gt;\n            &lt;td style=\"padding: 10px;\"&gt;\u53f3\u5217&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    '''\n\n# \u907f\u514d\uff1a\u4f7f\u7528 flexbox \u6216 grid\uff08\u517c\u5bb9\u6027\u5dee\uff09\n</code></pre></p> <p>\u6d4b\u8bd5\u591a\u4e2a\u90ae\u4ef6\u5ba2\u6237\u7aef - Outlook 2013/2016/2019 - Gmail (\u7f51\u9875\u7248\u548c\u79fb\u52a8\u7248) - Apple Mail - Thunderbird</p>"},{"location":"zh/development/creating-widgets/#4","title":"4. \u6587\u6863\u548c\u793a\u4f8b","text":"<p>\u4e3a\u60a8\u7684 Widget \u7f16\u5199\u6e05\u6670\u7684\u6587\u6863\uff1a</p> Python<pre><code>class CustomWidget(BaseWidget):\n    \"\"\"\n    \u81ea\u5b9a\u4e49 Widget \u7ec4\u4ef6\n\n    \u8fd9\u4e2a Widget \u7528\u4e8e\u663e\u793a...\n\n    \u793a\u4f8b\u7528\u6cd5:\n        &gt;&gt;&gt; widget = CustomWidget()\n        &gt;&gt;&gt; widget.set_title(\"Title\").set_content(\"\u5185\u5bb9\")\n        &gt;&gt;&gt; html = widget.render()\n\n    \u652f\u6301\u7684\u914d\u7f6e\u9009\u9879:\n        - title: Title\u6587\u5b57\n        - content: \u4e3b\u8981\u5185\u5bb9\n        - theme: \u4e3b\u9898\u6837\u5f0f (default, primary, success, warning, danger)\n\n    Args:\n        \u65e0\n\n    Returns:\n        CustomWidget: Widget \u5b9e\u4f8b\uff0c\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n\n    Raises:\n        ValueError: \u5f53\u53c2\u6570\u503c\u65e0\u6548\u65f6\n    \"\"\"\n</code></pre>"},{"location":"zh/development/creating-widgets/#_9","title":"\ud83d\ude80 \u8fdb\u9636\u6280\u5de7","text":""},{"location":"zh/development/creating-widgets/#1-system","title":"1. \u652f\u6301\u6a21\u677fSystem","text":"Python<pre><code>from jinja2 import Template\n\nclass AdvancedWidget(BaseWidget):\n    \"\"\"\u652f\u6301\u6a21\u677f\u7684\u9ad8\u7ea7 Widget\"\"\"\n\n    def __init__(self):\n        super().__init__()\n        self._template = None\n        self._data = {}\n\n    def set_template(self, template_string: str) -&gt; 'AdvancedWidget':\n        \"\"\"\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u6a21\u677f\"\"\"\n        self._template = Template(template_string)\n        return self\n\n    def set_data(self, **kwargs) -&gt; 'AdvancedWidget':\n        \"\"\"\u8bbe\u7f6e\u6a21\u677fData\"\"\"\n        self._data.update(kwargs)\n        return self\n\n    def render(self) -&gt; str:\n        if self._template:\n            return self._template.render(**self._data)\n        return self._default_render()\n</code></pre>"},{"location":"zh/development/creating-widgets/#2-responsive","title":"2. Responsive\u8bbe\u8ba1","text":"Python<pre><code>class ResponsiveWidget(BaseWidget):\n    \"\"\"\u652f\u6301Responsive\u7684 Widget\"\"\"\n\n    def render(self) -&gt; str:\n        return f'''\n        &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"width: 100%; max-width: 600px;\"&gt;\n            &lt;style&gt;\n                @media (max-width: 600px) {{\n                    .responsive-content {{ font-size: 14px !important; }}\n                }}\n            &lt;/style&gt;\n            &lt;div class=\"responsive-content\" style=\"font-size: 16px;\"&gt;\n                {self._content}\n            &lt;/div&gt;\n&lt;/div&gt;\n        &lt;/div&gt;\n        '''\n</code></pre>"},{"location":"zh/development/creating-widgets/#3-data","title":"3. Data\u7ed1\u5b9a","text":"Python<pre><code>import pandas as pd\n\nclass DataBoundWidget(BaseWidget):\n    \"\"\"\u652f\u6301Data\u7ed1\u5b9a\u7684 Widget\"\"\"\n\n    def bind_dataframe(self, df: pd.DataFrame, columns: list = None) -&gt; 'DataBoundWidget':\n        \"\"\"\u7ed1\u5b9a DataFrame Data\"\"\"\n        self._dataframe = df\n        self._columns = columns or df.columns.tolist()\n        return self\n\n    def render(self) -&gt; str:\n        if hasattr(self, '_dataframe'):\n            return self._render_from_dataframe()\n        return self._render_static()\n</code></pre>"},{"location":"zh/development/creating-widgets/#widget_3","title":"\ud83d\udce6 \u53d1\u5e03\u81ea\u5b9a\u4e49 Widget","text":""},{"location":"zh/development/creating-widgets/#1_3","title":"1. \u4ee3\u7801\u7ec4\u7ec7","text":"Text Only<pre><code>email_widget/\n\u251c\u2500\u2500 widgets/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 custom_widget.py          # \u60a8\u7684 Widget\n\u2502   \u2514\u2500\u2500 rating_card_widget.py     # \u8bc4\u5206Card Widget\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 test_widgets/\n\u2502   \u2502   \u251c\u2500\u2500 test_custom_widget.py\n\u2502   \u2502   \u2514\u2500\u2500 test_rating_card_widget.py\n\u2514\u2500\u2500 docs/\n    \u2514\u2500\u2500 widgets/\n        \u251c\u2500\u2500 custom_widget.md\n        \u2514\u2500\u2500 rating_card_widget.md\n</code></pre>"},{"location":"zh/development/creating-widgets/#2-widget","title":"2. \u6ce8\u518c Widget","text":"<p>\u5728 <code>email_widget/widgets/__init__.py</code> \u4e2d\u6ce8\u518c\uff1a</p> Python<pre><code>from .custom_widget import CustomWidget\nfrom .rating_card_widget import RatingCardWidget\n\n__all__ = [\n    'CustomWidget',\n    'RatingCardWidget',\n    # ... \u5176\u4ed6 Widget\n]\n</code></pre>"},{"location":"zh/development/creating-widgets/#3_2","title":"3. \u6dfb\u52a0\u5230\u4fbf\u6377\u65b9\u6cd5","text":"<p>\u5728 <code>Email</code> \u7c7b\u4e2d\u6dfb\u52a0\u4fbf\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code>class Email:\n    def add_rating_card(self, title: str, rating: float, max_rating: float = 5.0, \n                       description: str = \"\") -&gt; 'Email':\n        \"\"\"\u6dfb\u52a0\u8bc4\u5206Card\u7684\u4fbf\u6377\u65b9\u6cd5\"\"\"\n        widget = RatingCardWidget()\n        widget.set_title(title).set_rating(rating, max_rating)\n        if description:\n            widget.set_description(description)\n        return self.add_widget(widget)\n</code></pre>"},{"location":"zh/development/creating-widgets/#_10","title":"\ud83c\udf89 \u603b\u7ed3","text":"<p>\u521b\u5efa\u81ea\u5b9a\u4e49 Widget \u7684\u5173\u952e\u8981\u70b9\uff1a</p> <ol> <li>\u7ee7\u627f BaseWidget - \u9075\u5faa\u67b6\u6784\u7ea6\u5b9a</li> <li>\u5b9e\u73b0 render \u65b9\u6cd5 - \u6838\u5fc3\u6e32\u67d3\u903b\u8f91</li> <li>\u652f\u6301\u94fe\u5f0f\u8c03\u7528 - \u63d0\u5347 API \u6613\u7528\u6027</li> <li>\u8f93\u5165\u9a8c\u8bc1 - \u786e\u4fddData\u5b89\u5168\u6027</li> <li>\u90ae\u4ef6\u517c\u5bb9\u6027 - \u4f7f\u7528\u5185\u8054\u6837\u5f0f</li> <li>\u7f16\u5199\u6d4b\u8bd5 - \u4fdd\u8bc1\u4ee3\u7801\u8d28\u91cf</li> <li>\u5b8c\u5584\u6587\u6863 - \u5e2e\u52a9\u5176\u4ed6\u5f00\u53d1\u8005</li> </ol> <p>\u73b0\u5728\u60a8\u5df2\u7ecf\u638c\u63e1\u4e86\u521b\u5efa\u81ea\u5b9a\u4e49 Widget \u7684\u5b8c\u6574\u6d41\u7a0b\u3002\u5f00\u59cb\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u7ec4\u4ef6\u5427\uff01\ud83d\ude80 </p>"},{"location":"zh/development/release/","title":"\u53d1\u5e03\u6d41\u7a0b","text":"<p>\u672c\u6307\u5357\u8be6\u7ec6\u8bf4\u660e EmailWidget \u9879\u76ee\u7684\u7248\u672c\u7ba1\u7406\u7b56\u7565\u3001\u53d1\u5e03\u6d41\u7a0b\u548c\u6700\u4f73\u5b9e\u8df5\u3002</p>"},{"location":"zh/development/release/#_2","title":"\ud83c\udfaf \u7248\u672c\u7ba1\u7406\u7b56\u7565","text":""},{"location":"zh/development/release/#_3","title":"\u8bed\u4e49\u5316\u7248\u672c\u63a7\u5236","text":"<p>EmailWidget \u9075\u5faa \u8bed\u4e49\u5316\u7248\u672c\u63a7\u5236 2.0.0 \u89c4\u8303\uff1a</p> Text Only<pre><code>\u4e3b\u7248\u672c\u53f7.\u6b21\u7248\u672c\u53f7.\u4fee\u8ba2\u53f7 (MAJOR.MINOR.PATCH)\n</code></pre> <p>\u7248\u672c\u9012\u589e\u89c4\u5219\uff1a - \u4e3b\u7248\u672c\u53f7 (MAJOR) - \u4e0d\u517c\u5bb9\u7684 API \u53d8\u66f4 - \u6b21\u7248\u672c\u53f7 (MINOR) - \u5411\u4e0b\u517c\u5bb9\u7684\u529f\u80fd\u589e\u52a0 - \u4fee\u8ba2\u53f7 (PATCH) - \u5411\u4e0b\u517c\u5bb9\u7684\u9519\u8bef\u4fee\u590d</p>"},{"location":"zh/development/release/#_4","title":"\u7248\u672c\u793a\u4f8b","text":"\u7248\u672c \u7c7b\u578b \u8bf4\u660e 1.0.0 \u4e3b\u7248\u672c \u9996\u4e2a\u7a33\u5b9a\u7248\u672c 1.1.0 \u6b21\u7248\u672c \u65b0\u589e ChartWidget \u7ec4\u4ef6 1.1.1 \u4fee\u8ba2 \u4fee\u590d TableWidget \u6837\u5f0f\u95ee\u9898 2.0.0 \u4e3b\u7248\u672c \u91cd\u6784 Widget \u57fa\u7c7b\uff0cAPI \u4e0d\u517c\u5bb9 2.1.0-alpha.1 \u9884\u53d1\u5e03 Alpha \u7248\u672c 2.1.0-beta.1 \u9884\u53d1\u5e03 Beta \u7248\u672c 2.1.0-rc.1 \u9884\u53d1\u5e03 Release Candidate"},{"location":"zh/development/release/#_5","title":"\u9884\u53d1\u5e03\u7248\u672c","text":"<p>\u5bf9\u4e8e\u91cd\u5927\u66f4\u65b0\uff0c\u4f7f\u7528\u9884\u53d1\u5e03\u7248\u672c\u8fdb\u884c\u6d4b\u8bd5\uff1a</p> <ul> <li>Alpha (\u03b1) - \u5185\u90e8\u6d4b\u8bd5\u7248\u672c\uff0c\u529f\u80fd\u4e0d\u5b8c\u6574</li> <li>Beta (\u03b2) - \u516c\u5f00\u6d4b\u8bd5\u7248\u672c\uff0c\u529f\u80fd\u57fa\u672c\u5b8c\u6574</li> <li>RC (Release Candidate) - \u53d1\u5e03\u5019\u9009\u7248\u672c\uff0c\u63a5\u8fd1\u6700\u7ec8\u7248\u672c</li> </ul>"},{"location":"zh/development/release/#_6","title":"\ud83c\udf1f \u5206\u652f\u7b56\u7565","text":""},{"location":"zh/development/release/#git-flow","title":"Git Flow \u5de5\u4f5c\u6d41","text":"Text Only<pre><code>main (\u4e3b\u5206\u652f)\n\u251c\u2500\u2500 develop (\u5f00\u53d1\u5206\u652f)\n\u2502   \u251c\u2500\u2500 feature/new-widget (\u529f\u80fd\u5206\u652f)\n\u2502   \u251c\u2500\u2500 feature/chart-enhancement (\u529f\u80fd\u5206\u652f)\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 release/v1.2.0 (\u53d1\u5e03\u5206\u652f)\n\u251c\u2500\u2500 hotfix/urgent-bug-fix (\u70ed\u4fee\u590d\u5206\u652f)\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"zh/development/release/#_7","title":"\u5206\u652f\u8bf4\u660e","text":"<p>main \u5206\u652f - \u59cb\u7ec8\u4fdd\u6301\u7a33\u5b9a\u72b6\u6001 - \u53ea\u63a5\u53d7\u6765\u81ea release \u548c hotfix \u5206\u652f\u7684\u5408\u5e76 - \u6bcf\u6b21\u5408\u5e76\u90fd\u5bf9\u5e94\u4e00\u4e2a\u53d1\u5e03\u7248\u672c - \u4f7f\u7528 tag \u6807\u8bb0\u7248\u672c</p> <p>develop \u5206\u652f - \u5f00\u53d1\u5206\u652f\uff0c\u96c6\u6210\u6700\u65b0\u529f\u80fd - \u529f\u80fd\u5206\u652f\u7684\u5408\u5e76\u76ee\u6807 - \u5b9a\u671f\u5408\u5e76\u5230 release \u5206\u652f</p> <p>feature/* \u5206\u652f - \u529f\u80fd\u5f00\u53d1\u5206\u652f - \u4ece develop \u5206\u652f\u521b\u5efa - \u5b8c\u6210\u540e\u5408\u5e76\u56de develop \u5206\u652f</p> <p>release/* \u5206\u652f - \u53d1\u5e03\u51c6\u5907\u5206\u652f - \u4ece develop \u5206\u652f\u521b\u5efa - \u53ea\u8fdb\u884c bug \u4fee\u590d\u548c\u53d1\u5e03\u51c6\u5907 - \u5b8c\u6210\u540e\u5408\u5e76\u5230 main \u548c develop</p> <p>hotfix/* \u5206\u652f - \u7d27\u6025\u4fee\u590d\u5206\u652f - \u4ece main \u5206\u652f\u521b\u5efa - \u4fee\u590d\u540e\u5408\u5e76\u5230 main \u548c develop</p>"},{"location":"zh/development/release/#_8","title":"\ud83d\ude80 \u53d1\u5e03\u6d41\u7a0b","text":""},{"location":"zh/development/release/#1","title":"1. \u53d1\u5e03\u524d\u51c6\u5907","text":""},{"location":"zh/development/release/#_9","title":"\u68c0\u67e5\u4ee3\u7801\u8d28\u91cf","text":"PowerShell<pre><code># \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\npython -m pytest tests/ -v\n\n# \u68c0\u67e5\u4ee3\u7801\u8986\u76d6\u7387\npython -m pytest --cov=email_widget --cov-fail-under=90\n\n# \u4ee3\u7801\u98ce\u683c\u68c0\u67e5\npython -m pylint email_widget/\npython -m black --check email_widget/\npython -m isort --check-only email_widget/\n\n# \u7c7b\u578b\u68c0\u67e5\npython -m mypy email_widget/\n</code></pre>"},{"location":"zh/development/release/#_10","title":"\u68c0\u67e5\u4f9d\u8d56","text":"PowerShell<pre><code># \u68c0\u67e5\u4f9d\u8d56\u5b89\u5168\u6027\npip audit\n\n# \u68c0\u67e5\u8fc7\u65f6\u4f9d\u8d56\npip list --outdated\n\n# \u66f4\u65b0\u4f9d\u8d56\u7248\u672c\npip-review --local --interactive\n</code></pre>"},{"location":"zh/development/release/#_11","title":"\u66f4\u65b0\u6587\u6863","text":"<ul> <li>\u786e\u4fdd API \u6587\u6863\u662f\u6700\u65b0\u7684</li> <li>\u66f4\u65b0\u793a\u4f8b\u4ee3\u7801</li> <li>\u68c0\u67e5 README.md</li> <li>\u66f4\u65b0\u53d8\u66f4\u65e5\u5fd7</li> </ul>"},{"location":"zh/development/release/#2","title":"2. \u521b\u5efa\u53d1\u5e03\u5206\u652f","text":"PowerShell<pre><code># \u4ece develop \u521b\u5efa\u53d1\u5e03\u5206\u652f\ngit checkout develop\ngit pull origin develop\ngit checkout -b release/v1.2.0\n\n# \u63a8\u9001\u53d1\u5e03\u5206\u652f\ngit push -u origin release/v1.2.0\n</code></pre>"},{"location":"zh/development/release/#3","title":"3. \u7248\u672c\u53f7\u66f4\u65b0","text":""},{"location":"zh/development/release/#pyprojecttoml","title":"\u66f4\u65b0 pyproject.toml","text":"TOML<pre><code>[project]\nname = \"email-widget\"\nversion = \"1.2.0\"\ndescription = \"Create beautiful HTML email reports with Python\"\n# ... \u5176\u4ed6\u914d\u7f6e\n</code></pre>"},{"location":"zh/development/release/#initpy","title":"\u66f4\u65b0 init.py","text":"Python<pre><code># email_widget/__init__.py\n__version__ = \"1.2.0\"\n__author__ = \"EmailWidget Team\"\n__email__ = \"support@emailwidget.com\"\n\n# ... \u5176\u4ed6\u5bfc\u5165\n</code></pre>"},{"location":"zh/development/release/#changelogmd","title":"\u66f4\u65b0 CHANGELOG.md","text":"Markdown<pre><code># \u53d8\u66f4\u65e5\u5fd7\n\n## [1.2.0] - 2024-01-15\n\n### \u65b0\u589e\n- \u65b0\u589e ChartWidget \u7ec4\u4ef6\u652f\u6301\u56fe\u8868\u5c55\u793a\n- \u6dfb\u52a0\u6df1\u8272\u4e3b\u9898\u652f\u6301\n- \u65b0\u589e\u79fb\u52a8\u7aef\u54cd\u5e94\u5f0f\u5e03\u5c40\n\n### \u6539\u8fdb\n- \u4f18\u5316 TableWidget \u6e32\u67d3\u6027\u80fd\n- \u6539\u8fdb\u7f13\u5b58\u673a\u5236\uff0c\u63d0\u5347 50% \u6e32\u67d3\u901f\u5ea6\n- \u589e\u5f3a\u9519\u8bef\u5904\u7406\u548c\u65e5\u5fd7\u8bb0\u5f55\n\n### \u4fee\u590d\n- \u4fee\u590d ProgressWidget \u5728 Outlook \u4e2d\u7684\u663e\u793a\u95ee\u9898\n- \u89e3\u51b3\u4e2d\u6587\u5b57\u7b26\u7f16\u7801\u95ee\u9898\n- \u4fee\u590d\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\n\n### \u5df2\u77e5\u95ee\u9898\n- \u5728\u67d0\u4e9b\u8001\u7248\u672c Outlook \u4e2d\u56fe\u8868\u53ef\u80fd\u663e\u793a\u5f02\u5e38\n\n## [1.1.1] - 2024-01-01\n\n### \u4fee\u590d\n- \u4fee\u590d TableWidget \u8fb9\u6846\u6837\u5f0f\u95ee\u9898\n- \u89e3\u51b3 Email \u5bfc\u51fa\u65f6\u7684\u8def\u5f84\u95ee\u9898\n</code></pre>"},{"location":"zh/development/release/#4","title":"4. \u53d1\u5e03\u6d4b\u8bd5","text":""},{"location":"zh/development/release/#_12","title":"\u6784\u5efa\u6d4b\u8bd5","text":"PowerShell<pre><code># \u6e05\u7406\u6784\u5efa\u76ee\u5f55\nif (Test-Path dist) { Remove-Item -Recurse -Force dist }\nif (Test-Path build) { Remove-Item -Recurse -Force build }\n\n# \u6784\u5efa\u5206\u53d1\u5305\npython -m build\n\n# \u68c0\u67e5\u6784\u5efa\u7ed3\u679c\npython -m twine check dist/*\n</code></pre>"},{"location":"zh/development/release/#_13","title":"\u5b89\u88c5\u6d4b\u8bd5","text":"PowerShell<pre><code># \u5728\u865a\u62df\u73af\u5883\u4e2d\u6d4b\u8bd5\u5b89\u88c5\npython -m venv test_env\ntest_env\\Scripts\\Activate.ps1\n\n# \u4ece\u6784\u5efa\u5305\u5b89\u88c5\npip install dist/email_widget-1.2.0-py3-none-any.whl\n\n# \u8fd0\u884c\u57fa\u672c\u6d4b\u8bd5\npython -c \"from email_widget import Email; print('\u5b89\u88c5\u6210\u529f')\"\n\n# \u6e05\u7406\u6d4b\u8bd5\u73af\u5883\ndeactivate\nRemove-Item -Recurse -Force test_env\n</code></pre>"},{"location":"zh/development/release/#_14","title":"\u96c6\u6210\u6d4b\u8bd5","text":"PowerShell<pre><code># \u8fd0\u884c\u5b8c\u6574\u6d4b\u8bd5\u5957\u4ef6\npython -m pytest tests/ -v --tb=short\n\n# \u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\npython -m pytest tests/performance/ -v\n</code></pre>"},{"location":"zh/development/release/#5","title":"5. \u4ee3\u7801\u5ba1\u67e5\u548c\u6279\u51c6","text":""},{"location":"zh/development/release/#pull-request","title":"\u521b\u5efa Pull Request","text":"<ul> <li>\u4ece release/v1.2.0 \u5230 main \u5206\u652f</li> <li>\u8be6\u7ec6\u63cf\u8ff0\u672c\u6b21\u53d1\u5e03\u7684\u53d8\u66f4</li> <li>\u9644\u52a0\u6d4b\u8bd5\u62a5\u544a\u548c\u6027\u80fd\u57fa\u51c6</li> </ul>"},{"location":"zh/development/release/#_15","title":"\u5ba1\u67e5\u6e05\u5355","text":"<ul> <li> \u6240\u6709\u6d4b\u8bd5\u901a\u8fc7</li> <li> \u4ee3\u7801\u8986\u76d6\u7387 \u2265 90%</li> <li> \u6587\u6863\u5df2\u66f4\u65b0</li> <li> \u53d8\u66f4\u65e5\u5fd7\u5df2\u66f4\u65b0</li> <li> \u7248\u672c\u53f7\u5df2\u6b63\u786e\u66f4\u65b0</li> <li> \u6784\u5efa\u5305\u6d4b\u8bd5\u901a\u8fc7</li> <li> \u6027\u80fd\u6d4b\u8bd5\u901a\u8fc7</li> <li> \u5b89\u5168\u626b\u63cf\u901a\u8fc7</li> </ul>"},{"location":"zh/development/release/#6","title":"6. \u6b63\u5f0f\u53d1\u5e03","text":""},{"location":"zh/development/release/#_16","title":"\u5408\u5e76\u53d1\u5e03\u5206\u652f","text":"PowerShell<pre><code># \u5408\u5e76\u5230 main \u5206\u652f\ngit checkout main\ngit pull origin main\ngit merge --no-ff release/v1.2.0\ngit push origin main\n\n# \u5408\u5e76\u56de develop \u5206\u652f\ngit checkout develop\ngit pull origin develop\ngit merge --no-ff release/v1.2.0\ngit push origin develop\n\n# \u5220\u9664\u53d1\u5e03\u5206\u652f\ngit branch -d release/v1.2.0\ngit push origin --delete release/v1.2.0\n</code></pre>"},{"location":"zh/development/release/#git","title":"\u521b\u5efa Git \u6807\u7b7e","text":"PowerShell<pre><code># \u521b\u5efa\u5e26\u6ce8\u91ca\u7684\u6807\u7b7e\ngit tag -a v1.2.0 -m \"Release version 1.2.0\n\n\u65b0\u589e\u529f\u80fd:\n- ChartWidget \u7ec4\u4ef6\n- \u6df1\u8272\u4e3b\u9898\u652f\u6301\n- \u79fb\u52a8\u7aef\u54cd\u5e94\u5f0f\u5e03\u5c40\n\n\u6027\u80fd\u6539\u8fdb:\n- \u6e32\u67d3\u901f\u5ea6\u63d0\u5347 50%\n- \u4f18\u5316\u5185\u5b58\u4f7f\u7528\n\nBug \u4fee\u590d:\n- \u4fee\u590d Outlook \u517c\u5bb9\u6027\u95ee\u9898\n- \u89e3\u51b3\u4e2d\u6587\u7f16\u7801\u95ee\u9898\"\n\n# \u63a8\u9001\u6807\u7b7e\ngit push origin v1.2.0\n</code></pre>"},{"location":"zh/development/release/#pypi","title":"\u53d1\u5e03\u5230 PyPI","text":"PowerShell<pre><code># \u53d1\u5e03\u5230\u6d4b\u8bd5 PyPI\uff08\u53ef\u9009\uff09\npython -m twine upload --repository testpypi dist/*\n\n# \u53d1\u5e03\u5230\u6b63\u5f0f PyPI\npython -m twine upload dist/*\n</code></pre>"},{"location":"zh/development/release/#github-release","title":"GitHub Release","text":"<ol> <li>\u8bbf\u95ee GitHub \u4ed3\u5e93\u7684 Releases \u9875\u9762</li> <li>\u70b9\u51fb \"Create a new release\"</li> <li>\u9009\u62e9\u521a\u521b\u5efa\u7684\u6807\u7b7e v1.2.0</li> <li>\u586b\u5199\u53d1\u5e03\u6807\u9898\u548c\u8bf4\u660e</li> <li>\u4e0a\u4f20\u6784\u5efa\u7684\u5206\u53d1\u5305</li> <li>\u53d1\u5e03 Release</li> </ol>"},{"location":"zh/development/release/#7","title":"7. \u53d1\u5e03\u540e\u7eed\u5de5\u4f5c","text":""},{"location":"zh/development/release/#_17","title":"\u9a8c\u8bc1\u53d1\u5e03","text":"PowerShell<pre><code># \u4ece PyPI \u5b89\u88c5\u9a8c\u8bc1\npip install --upgrade email-widget\n\n# \u68c0\u67e5\u7248\u672c\npython -c \"import email_widget; print(email_widget.__version__)\"\n</code></pre>"},{"location":"zh/development/release/#_18","title":"\u66f4\u65b0\u6587\u6863\u7f51\u7ad9","text":"PowerShell<pre><code># \u6784\u5efa\u548c\u90e8\u7f72\u6587\u6863\nmkdocs gh-deploy --force\n</code></pre>"},{"location":"zh/development/release/#_19","title":"\u901a\u77e5\u7528\u6237","text":"<ul> <li>\u53d1\u9001\u53d1\u5e03\u516c\u544a\u90ae\u4ef6</li> <li>\u66f4\u65b0\u9879\u76ee\u4e3b\u9875</li> <li>\u5728\u793e\u4ea4\u5a92\u4f53\u53d1\u5e03\u6d88\u606f</li> <li>\u901a\u77e5\u4e3b\u8981\u7528\u6237\u548c\u5408\u4f5c\u4f19\u4f34</li> </ul>"},{"location":"zh/development/release/#_20","title":"\ud83d\udd25 \u70ed\u4fee\u590d\u6d41\u7a0b","text":""},{"location":"zh/development/release/#bug","title":"\u7d27\u6025 Bug \u4fee\u590d","text":"<p>\u5f53\u751f\u4ea7\u73af\u5883\u51fa\u73b0\u4e25\u91cd\u95ee\u9898\u65f6\uff0c\u4f7f\u7528\u70ed\u4fee\u590d\u6d41\u7a0b\uff1a</p> PowerShell<pre><code># 1. \u4ece main \u5206\u652f\u521b\u5efa\u70ed\u4fee\u590d\u5206\u652f\ngit checkout main\ngit pull origin main\ngit checkout -b hotfix/urgent-security-fix\n\n# 2. \u4fee\u590d\u95ee\u9898\n# ... \u7f16\u5199\u4fee\u590d\u4ee3\u7801 ...\n\n# 3. \u66f4\u65b0\u7248\u672c\u53f7\uff08\u4fee\u8ba2\u53f7 +1\uff09\n# \u4f8b\u5982\uff1a\u4ece 1.2.0 \u66f4\u65b0\u5230 1.2.1\n\n# 4. \u8fd0\u884c\u6d4b\u8bd5\npython -m pytest tests/ -v\n\n# 5. \u63d0\u4ea4\u4fee\u590d\ngit add .\ngit commit -m \"hotfix: \u4fee\u590d\u5b89\u5168\u6f0f\u6d1e CVE-2024-0001\"\n\n# 6. \u5408\u5e76\u5230 main \u548c develop\ngit checkout main\ngit merge --no-ff hotfix/urgent-security-fix\ngit push origin main\n\ngit checkout develop\ngit merge --no-ff hotfix/urgent-security-fix\ngit push origin develop\n\n# 7. \u521b\u5efa\u6807\u7b7e\u5e76\u53d1\u5e03\ngit tag -a v1.2.1 -m \"Hotfix release 1.2.1 - Security fix\"\ngit push origin v1.2.1\n\n# 8. \u6e05\u7406\u5206\u652f\ngit branch -d hotfix/urgent-security-fix\n</code></pre>"},{"location":"zh/development/release/#_21","title":"\ud83d\udcca \u53d1\u5e03\u6307\u6807","text":""},{"location":"zh/development/release/#_22","title":"\u5173\u952e\u6307\u6807\u76d1\u63a7","text":"<p>\u53d1\u5e03\u9891\u7387 - \u4e3b\u7248\u672c\uff1a6-12 \u4e2a\u6708 - \u6b21\u7248\u672c\uff1a1-2 \u4e2a\u6708 - \u4fee\u8ba2\u7248\u672c\uff1a\u6309\u9700\u53d1\u5e03</p> <p>\u8d28\u91cf\u6307\u6807 - \u6d4b\u8bd5\u8986\u76d6\u7387 \u2265 90% - \u4ee3\u7801\u8d28\u91cf\u8bc4\u5206 \u2265 8.0/10 - \u5df2\u77e5 Bug \u6570\u91cf \u2264 5</p> <p>\u6027\u80fd\u6307\u6807 - \u6e32\u67d3\u901f\u5ea6\u56de\u5f52 \u2264 5% - \u5185\u5b58\u4f7f\u7528\u589e\u957f \u2264 10% - \u5305\u5927\u5c0f\u589e\u957f \u2264 20%</p>"},{"location":"zh/development/release/#_23","title":"\u53d1\u5e03\u540e\u76d1\u63a7","text":"Python<pre><code># scripts/monitor_release.py\nimport requests\nimport time\nfrom datetime import datetime\n\ndef check_pypi_availability(package_name, version):\n    \"\"\"\u68c0\u67e5 PyPI \u5305\u662f\u5426\u53ef\u7528\"\"\"\n    url = f\"https://pypi.org/pypi/{package_name}/{version}/json\"\n\n    try:\n        response = requests.get(url)\n        if response.status_code == 200:\n            print(f\"\u2705 {package_name} v{version} \u5728 PyPI \u4e0a\u53ef\u7528\")\n            return True\n        else:\n            print(f\"\u274c {package_name} v{version} \u5728 PyPI \u4e0a\u4e0d\u53ef\u7528\")\n            return False\n    except Exception as e:\n        print(f\"\u274c \u68c0\u67e5 PyPI \u65f6\u51fa\u9519: {e}\")\n        return False\n\ndef check_installation(package_name, version):\n    \"\"\"\u68c0\u67e5\u5305\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u5b89\u88c5\"\"\"\n    import subprocess\n\n    try:\n        # \u521b\u5efa\u4e34\u65f6\u865a\u62df\u73af\u5883\n        subprocess.run([\"python\", \"-m\", \"venv\", \"temp_env\"], check=True)\n\n        # \u6fc0\u6d3b\u73af\u5883\u5e76\u5b89\u88c5\u5305\n        if os.name == 'nt':  # Windows\n            activate_cmd = r\"temp_env\\Scripts\\Activate.ps1\"\n            install_cmd = f\"temp_env\\\\Scripts\\\\pip install {package_name}=={version}\"\n        else:  # Unix/Linux\n            activate_cmd = \"source temp_env/bin/activate\"\n            install_cmd = f\"temp_env/bin/pip install {package_name}=={version}\"\n\n        subprocess.run(install_cmd, shell=True, check=True)\n        print(f\"\u2705 {package_name} v{version} \u5b89\u88c5\u6210\u529f\")\n\n        # \u6e05\u7406\n        subprocess.run([\"rm\", \"-rf\", \"temp_env\"], check=True)\n        return True\n\n    except subprocess.CalledProcessError as e:\n        print(f\"\u274c \u5b89\u88c5\u5931\u8d25: {e}\")\n        return False\n\ndef monitor_release(package_name, version, duration_minutes=30):\n    \"\"\"\u76d1\u63a7\u53d1\u5e03\u72b6\u6001\"\"\"\n    print(f\"\u5f00\u59cb\u76d1\u63a7 {package_name} v{version} \u7684\u53d1\u5e03\u72b6\u6001...\")\n    start_time = time.time()\n\n    while time.time() - start_time &lt; duration_minutes * 60:\n        if check_pypi_availability(package_name, version):\n            if check_installation(package_name, version):\n                print(f\"\ud83c\udf89 {package_name} v{version} \u53d1\u5e03\u6210\u529f!\")\n                return True\n\n        print(f\"\u23f3 \u7b49\u5f85 30 \u79d2\u540e\u91cd\u8bd5...\")\n        time.sleep(30)\n\n    print(f\"\u23f0 \u76d1\u63a7\u8d85\u65f6 ({duration_minutes} \u5206\u949f)\")\n    return False\n\nif __name__ == \"__main__\":\n    monitor_release(\"email-widget\", \"1.2.0\")\n</code></pre>"},{"location":"zh/development/release/#_24","title":"\ud83c\udfaf \u53d1\u5e03\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/development/release/#_25","title":"\u53d1\u5e03\u524d\u68c0\u67e5\u6e05\u5355","text":"<p>\u4ee3\u7801\u8d28\u91cf - [ ] \u6240\u6709\u5355\u5143\u6d4b\u8bd5\u901a\u8fc7 - [ ] \u96c6\u6210\u6d4b\u8bd5\u901a\u8fc7 - [ ] \u7aef\u5230\u7aef\u6d4b\u8bd5\u901a\u8fc7 - [ ] \u4ee3\u7801\u8986\u76d6\u7387\u8fbe\u6807 - [ ] \u9759\u6001\u4ee3\u7801\u5206\u6790\u901a\u8fc7 - [ ] \u5b89\u5168\u626b\u63cf\u65e0\u9ad8\u5371\u6f0f\u6d1e</p> <p>\u6587\u6863\u66f4\u65b0 - [ ] API \u6587\u6863\u6700\u65b0 - [ ] \u7528\u6237\u6307\u5357\u66f4\u65b0 - [ ] \u793a\u4f8b\u4ee3\u7801\u6709\u6548 - [ ] \u53d8\u66f4\u65e5\u5fd7\u5b8c\u6574 - [ ] README.md \u66f4\u65b0</p> <p>\u7248\u672c\u7ba1\u7406 - [ ] \u7248\u672c\u53f7\u7b26\u5408\u8bed\u4e49\u5316\u89c4\u8303 - [ ] \u6807\u7b7e\u547d\u540d\u6b63\u786e - [ ] \u5206\u652f\u5408\u5e76\u65e0\u51b2\u7a81 - [ ] \u6784\u5efa\u5305\u5b8c\u6574</p> <p>\u53d1\u5e03\u51c6\u5907 - [ ] \u4f9d\u8d56\u7248\u672c\u9501\u5b9a - [ ] \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 - [ ] \u517c\u5bb9\u6027\u6d4b\u8bd5 - [ ] \u53d1\u5e03\u8bf4\u660e\u51c6\u5907</p>"},{"location":"zh/development/release/#_26","title":"\u56de\u6eda\u8ba1\u5212","text":"<p>\u5982\u679c\u53d1\u5e03\u540e\u53d1\u73b0\u4e25\u91cd\u95ee\u9898\uff0c\u6309\u4ee5\u4e0b\u6b65\u9aa4\u56de\u6eda\uff1a</p> PowerShell<pre><code># 1. \u7d27\u6025\u4ece PyPI \u64a4\u56de\uff08\u5982\u679c\u53ef\u80fd\uff09\n# \u8054\u7cfb PyPI \u7ba1\u7406\u5458\u6216\u4f7f\u7528 yank \u529f\u80fd\n\n# 2. \u521b\u5efa\u70ed\u4fee\u590d\u7248\u672c\ngit checkout main\ngit checkout -b hotfix/rollback-v1.2.0\n\n# 3. \u56de\u6eda\u6709\u95ee\u9898\u7684\u66f4\u6539\ngit revert &lt;\u95ee\u9898\u63d0\u4ea4\u7684\u54c8\u5e0c&gt;\n\n# 4. \u53d1\u5e03\u56de\u6eda\u7248\u672c\n# \u66f4\u65b0\u7248\u672c\u53f7\u5230 1.2.1\n# \u6309\u6b63\u5e38\u6d41\u7a0b\u53d1\u5e03\n\n# 5. \u901a\u77e5\u7528\u6237\u5347\u7ea7\necho \"\u53d1\u9001\u7d27\u6025\u5347\u7ea7\u901a\u77e5\"\n</code></pre>"},{"location":"zh/development/release/#_27","title":"\ud83d\udcde \u53d1\u5e03\u652f\u6301","text":""},{"location":"zh/development/release/#_28","title":"\u53d1\u5e03\u56e2\u961f\u804c\u8d23","text":"<p>\u53d1\u5e03\u7ecf\u7406 - \u534f\u8c03\u6574\u4e2a\u53d1\u5e03\u6d41\u7a0b - \u786e\u4fdd\u65f6\u95f4\u8868\u9075\u5b88 - \u6c9f\u901a\u53d1\u5e03\u72b6\u6001</p> <p>\u8d28\u91cf\u4fdd\u8bc1 - \u6267\u884c\u6d4b\u8bd5\u8ba1\u5212 - \u9a8c\u8bc1\u529f\u80fd\u5b8c\u6574\u6027 - \u786e\u8ba4\u6027\u80fd\u6307\u6807</p> <p>\u6587\u6863\u56e2\u961f - \u66f4\u65b0\u7528\u6237\u6587\u6863 - \u51c6\u5907\u53d1\u5e03\u8bf4\u660e - \u7ef4\u62a4\u793a\u4f8b\u4ee3\u7801</p> <p>\u8fd0\u7ef4\u56e2\u961f - \u76d1\u63a7\u53d1\u5e03\u8fc7\u7a0b - \u5904\u7406\u57fa\u7840\u8bbe\u65bd\u95ee\u9898 - \u6267\u884c\u56de\u6eda\u8ba1\u5212</p>"},{"location":"zh/development/release/#_29","title":"\u53d1\u5e03\u6c9f\u901a","text":"<p>\u5185\u90e8\u6c9f\u901a - \u53d1\u5e03\u524d\u4e00\u5468\uff1a\u53d1\u5e03\u9884\u544a - \u53d1\u5e03\u5f53\u5929\uff1a\u53d1\u5e03\u8fdb\u5ea6\u66f4\u65b0 - \u53d1\u5e03\u540e\uff1a\u53d1\u5e03\u603b\u7ed3\u62a5\u544a</p> <p>\u5916\u90e8\u6c9f\u901a - \u53d1\u5e03\u516c\u544a\u90ae\u4ef6 - GitHub Release Notes - \u793e\u533a\u8bba\u575b\u516c\u544a - \u793e\u4ea4\u5a92\u4f53\u53d1\u5e03</p>"},{"location":"zh/development/release/#_30","title":"\ud83c\udf89 \u603b\u7ed3","text":"<p>\u5b8c\u5584\u7684\u53d1\u5e03\u6d41\u7a0b\u786e\u4fdd\uff1a</p> <ol> <li>\u8d28\u91cf\u4fdd\u8bc1 - \u591a\u5c42\u6d4b\u8bd5\u548c\u9a8c\u8bc1</li> <li>\u98ce\u9669\u63a7\u5236 - \u5b8c\u6574\u7684\u56de\u6eda\u8ba1\u5212</li> <li>\u7528\u6237\u4f53\u9a8c - \u5e73\u6ed1\u7684\u5347\u7ea7\u8fc7\u7a0b</li> <li>\u56e2\u961f\u534f\u4f5c - \u6e05\u6670\u7684\u804c\u8d23\u5206\u5de5</li> </ol> <p>\u9075\u5faa\u672c\u53d1\u5e03\u6307\u5357\uff0c\u60a8\u5c06\u80fd\u591f\u5b89\u5168\u3001\u9ad8\u6548\u5730\u53d1\u5e03 EmailWidget \u7684\u65b0\u7248\u672c\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u7a33\u5b9a\u53ef\u9760\u7684\u529f\u80fd\u3002\ud83d\ude80\u2728 </p>"},{"location":"zh/development/setup/","title":"\u5f00\u53d1\u73af\u5883\u642d\u5efa","text":"<p>\u672c\u6307\u5357\u5c06\u5e2e\u52a9\u60a8\u5728 Windows 10 64\u4f4d \u7cfb\u7edf\u4e0a\u642d\u5efa EmailWidget \u7684\u5f00\u53d1\u73af\u5883\u3002</p>"},{"location":"zh/development/setup/#_2","title":"\ud83c\udfaf \u73af\u5883\u8981\u6c42","text":""},{"location":"zh/development/setup/#_3","title":"\u7cfb\u7edf\u8981\u6c42","text":"<ul> <li>\u64cd\u4f5c\u7cfb\u7edf: Windows 10 64\u4f4d (\u7248\u672c 1903 \u6216\u66f4\u9ad8)</li> <li>\u5185\u5b58: \u81f3\u5c11 4GB RAM (\u63a8\u8350 8GB+)</li> <li>\u5b58\u50a8: \u81f3\u5c11 2GB \u53ef\u7528\u7a7a\u95f4</li> <li>\u7f51\u7edc: \u7a33\u5b9a\u7684\u4e92\u8054\u7f51\u8fde\u63a5\uff08\u7528\u4e8e\u4e0b\u8f7d\u4f9d\u8d56\uff09</li> </ul>"},{"location":"zh/development/setup/#_4","title":"\u5fc5\u9700\u8f6f\u4ef6","text":"\u8f6f\u4ef6 \u7248\u672c\u8981\u6c42 \u7528\u9014 Python 3.10+ \u6838\u5fc3\u5f00\u53d1\u8bed\u8a00 Git \u6700\u65b0\u7248\u672c \u7248\u672c\u63a7\u5236 \u4ee3\u7801\u7f16\u8f91\u5668 - \u4ee3\u7801\u7f16\u5199\uff08\u63a8\u8350 VS Code \u6216 PyCharm\uff09"},{"location":"zh/development/setup/#_5","title":"\ud83d\udce5 \u5b89\u88c5\u57fa\u7840\u8f6f\u4ef6","text":""},{"location":"zh/development/setup/#1-python-310","title":"1. \u5b89\u88c5 Python 3.10+","text":""},{"location":"zh/development/setup/#_6","title":"\u65b9\u6cd5\u4e00\uff1a\u4ece\u5b98\u7f51\u4e0b\u8f7d\uff08\u63a8\u8350\uff09","text":"<ol> <li>\u8bbf\u95ee Python \u5b98\u7f51</li> <li>\u4e0b\u8f7d Python 3.10 \u6216\u66f4\u9ad8\u7248\u672c\u7684 Windows x86-64 \u5b89\u88c5\u5305</li> <li>\u8fd0\u884c\u5b89\u88c5\u7a0b\u5e8f\uff0c\u786e\u4fdd\u52fe\u9009\uff1a</li> <li>\u2705 \"Add Python to PATH\"</li> <li>\u2705 \"Install pip\"</li> </ol>"},{"location":"zh/development/setup/#chocolatey","title":"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528 Chocolatey","text":"PowerShell<pre><code># \u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c PowerShell\n# \u9996\u5148\u5b89\u88c5 Chocolatey\uff08\u5982\u679c\u6ca1\u6709\uff09\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n\n# \u5b89\u88c5 Python\nchoco install python3 -y\n</code></pre>"},{"location":"zh/development/setup/#_7","title":"\u9a8c\u8bc1\u5b89\u88c5","text":"PowerShell<pre><code># \u68c0\u67e5 Python \u7248\u672c\npython --version\n# \u5e94\u8be5\u663e\u793a\uff1aPython 3.10.x \u6216\u66f4\u9ad8\n\n# \u68c0\u67e5 pip \u7248\u672c\npip --version\n# \u5e94\u8be5\u663e\u793a pip \u7248\u672c\u4fe1\u606f\n</code></pre>"},{"location":"zh/development/setup/#2-git","title":"2. \u5b89\u88c5 Git","text":""},{"location":"zh/development/setup/#_8","title":"\u65b9\u6cd5\u4e00\uff1a\u4ece\u5b98\u7f51\u4e0b\u8f7d","text":"<ol> <li>\u8bbf\u95ee Git \u5b98\u7f51</li> <li>\u4e0b\u8f7d 64\u4f4d Windows \u7248\u672c</li> <li>\u8fd0\u884c\u5b89\u88c5\u7a0b\u5e8f\uff0c\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u5373\u53ef</li> </ol>"},{"location":"zh/development/setup/#chocolatey_1","title":"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528 Chocolatey","text":"PowerShell<pre><code>choco install git -y\n</code></pre>"},{"location":"zh/development/setup/#_9","title":"\u9a8c\u8bc1\u5b89\u88c5","text":"PowerShell<pre><code>git --version\n# \u5e94\u8be5\u663e\u793a\uff1agit version x.x.x\n</code></pre>"},{"location":"zh/development/setup/#3","title":"3. \u9009\u62e9\u4ee3\u7801\u7f16\u8f91\u5668","text":""},{"location":"zh/development/setup/#_10","title":"\u63a8\u8350\u9009\u9879","text":"<p>Visual Studio Code\uff08\u63a8\u8350\uff09 - \u514d\u8d39\u3001\u8f7b\u91cf\u3001\u63d2\u4ef6\u4e30\u5bcc - \u4e0b\u8f7d\u5730\u5740</p> PowerShell<pre><code># \u4f7f\u7528 Chocolatey \u5b89\u88c5\nchoco install vscode -y\n</code></pre> <p>PyCharm Community Edition - \u4e13\u4e1a\u7684 Python IDE - \u4e0b\u8f7d\u5730\u5740</p> PowerShell<pre><code># \u4f7f\u7528 Chocolatey \u5b89\u88c5\nchoco install pycharm-community -y\n</code></pre>"},{"location":"zh/development/setup/#_11","title":"\ud83d\udd27 \u9879\u76ee\u73af\u5883\u642d\u5efa","text":""},{"location":"zh/development/setup/#1","title":"1. \u514b\u9686\u9879\u76ee","text":"PowerShell<pre><code># \u521b\u5efa\u5f00\u53d1\u76ee\u5f55\nmkdir C:\\Dev\ncd C:\\Dev\n\n# \u514b\u9686\u9879\u76ee\uff08\u8bf7\u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u4ed3\u5e93\u5730\u5740\uff09\ngit clone https://github.com/your-username/EmailWidget.git\ncd EmailWidget\n</code></pre>"},{"location":"zh/development/setup/#2","title":"2. \u521b\u5efa\u865a\u62df\u73af\u5883","text":""},{"location":"zh/development/setup/#venvpython","title":"\u4f7f\u7528 venv\uff08Python \u5185\u7f6e\uff09","text":"PowerShell<pre><code># \u521b\u5efa\u865a\u62df\u73af\u5883\npython -m venv venv\n\n# \u6fc0\u6d3b\u865a\u62df\u73af\u5883\n.\\venv\\Scripts\\Activate.ps1\n\n# \u5982\u679c\u6267\u884c\u7b56\u7565\u9650\u5236\uff0c\u5148\u8fd0\u884c\uff1a\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\n</code></pre>"},{"location":"zh/development/setup/#conda-anaconda","title":"\u4f7f\u7528 conda\uff08\u5982\u679c\u5b89\u88c5\u4e86 Anaconda\uff09","text":"PowerShell<pre><code># \u521b\u5efa\u73af\u5883\nconda create -n emailwidget python=3.10 -y\n\n# \u6fc0\u6d3b\u73af\u5883\nconda activate emailwidget\n</code></pre>"},{"location":"zh/development/setup/#3_1","title":"3. \u5b89\u88c5\u9879\u76ee\u4f9d\u8d56","text":"PowerShell<pre><code># \u786e\u4fdd\u865a\u62df\u73af\u5883\u5df2\u6fc0\u6d3b\n# \u5347\u7ea7 pip \u5230\u6700\u65b0\u7248\u672c\npython -m pip install --upgrade pip\n\n# \u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\npip install -e .\n\n# \u5b89\u88c5\u5f00\u53d1\u4f9d\u8d56\npip install -r requirements-dev.txt\n\n# \u6216\u8005\u5982\u679c\u4f7f\u7528 pyproject.toml\npip install -e .[dev]\n</code></pre>"},{"location":"zh/development/setup/#4","title":"4. \u9a8c\u8bc1\u5b89\u88c5","text":"PowerShell<pre><code># \u8fd0\u884c\u6d4b\u8bd5\u786e\u4fdd\u73af\u5883\u6b63\u5e38\npython -m pytest tests/ -v\n\n# \u68c0\u67e5\u4ee3\u7801\u8d28\u91cf\u5de5\u5177\npython -m pylint email_widget/\n\n# \u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\npython demo/example.py\n</code></pre>"},{"location":"zh/development/setup/#ide","title":"\ud83d\udee0\ufe0f IDE \u914d\u7f6e","text":""},{"location":"zh/development/setup/#visual-studio-code","title":"Visual Studio Code \u914d\u7f6e","text":""},{"location":"zh/development/setup/#1_1","title":"1. \u5b89\u88c5\u63a8\u8350\u63d2\u4ef6","text":"JSON<pre><code>{\n  \"recommendations\": [\n    \"ms-python.python\",           // Python \u652f\u6301\n    \"ms-python.pylint\",           // \u4ee3\u7801\u68c0\u67e5\n    \"ms-python.black-formatter\",  // \u4ee3\u7801\u683c\u5f0f\u5316\n    \"ms-python.isort\",            // \u5bfc\u5165\u6392\u5e8f\n    \"ms-toolsai.jupyter\",         // Jupyter \u652f\u6301\n    \"redhat.vscode-yaml\",         // YAML \u652f\u6301\n    \"yzhang.markdown-all-in-one\", // Markdown \u652f\u6301\n    \"ms-vscode.test-adapter-converter\" // \u6d4b\u8bd5\u9002\u914d\u5668\n  ]\n}\n</code></pre>"},{"location":"zh/development/setup/#2-vscodesettingsjson","title":"2. \u5de5\u4f5c\u533a\u914d\u7f6e (.vscode/settings.json)","text":"JSON<pre><code>{\n    \"python.defaultInterpreterPath\": \"./venv/Scripts/python.exe\",\n    \"python.testing.pytestEnabled\": true,\n    \"python.testing.pytestArgs\": [\n        \"tests\"\n    ],\n    \"python.linting.enabled\": true,\n    \"python.linting.pylintEnabled\": true,\n    \"python.formatting.provider\": \"black\",\n    \"python.formatting.blackArgs\": [\n        \"--line-length=88\"\n    ],\n    \"python.sortImports.args\": [\n        \"--profile\",\n        \"black\"\n    ],\n    \"editor.formatOnSave\": true,\n    \"editor.codeActionsOnSave\": {\n        \"source.organizeImports\": true\n    },\n    \"files.associations\": {\n        \"*.md\": \"markdown\"\n    }\n}\n</code></pre>"},{"location":"zh/development/setup/#3-vscodetasksjson","title":"3. \u4efb\u52a1\u914d\u7f6e (.vscode/tasks.json)","text":"JSON<pre><code>{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"\u8fd0\u884c\u6d4b\u8bd5\",\n            \"type\": \"shell\",\n            \"command\": \"${workspaceFolder}/venv/Scripts/python.exe\",\n            \"args\": [\"-m\", \"pytest\", \"tests/\", \"-v\"],\n            \"group\": \"test\",\n            \"presentation\": {\n                \"echo\": true,\n                \"reveal\": \"always\",\n                \"focus\": false,\n                \"panel\": \"shared\"\n            }\n        },\n        {\n            \"label\": \"\u4ee3\u7801\u68c0\u67e5\",\n            \"type\": \"shell\",\n            \"command\": \"${workspaceFolder}/venv/Scripts/python.exe\",\n            \"args\": [\"-m\", \"pylint\", \"email_widget/\"],\n            \"group\": \"build\",\n            \"presentation\": {\n                \"echo\": true,\n                \"reveal\": \"always\",\n                \"focus\": false,\n                \"panel\": \"shared\"\n            }\n        },\n        {\n            \"label\": \"\u683c\u5f0f\u5316\u4ee3\u7801\",\n            \"type\": \"shell\",\n            \"command\": \"${workspaceFolder}/venv/Scripts/python.exe\",\n            \"args\": [\"-m\", \"black\", \"email_widget/\", \"tests/\"],\n            \"group\": \"build\"\n        }\n    ]\n}\n</code></pre>"},{"location":"zh/development/setup/#pycharm","title":"PyCharm \u914d\u7f6e","text":""},{"location":"zh/development/setup/#1_2","title":"1. \u8bbe\u7f6e\u89e3\u91ca\u5668","text":"<ol> <li>\u6253\u5f00 File \u2192 Settings \u2192 Project \u2192 Python Interpreter</li> <li>\u70b9\u51fb\u9f7f\u8f6e\u56fe\u6807 \u2192 Add</li> <li>\u9009\u62e9 Existing environment</li> <li>\u9009\u62e9 <code>EmailWidget\\venv\\Scripts\\python.exe</code></li> </ol>"},{"location":"zh/development/setup/#2_1","title":"2. \u914d\u7f6e\u4ee3\u7801\u8d28\u91cf\u5de5\u5177","text":"<ol> <li>File \u2192 Settings \u2192 Tools \u2192 External Tools</li> <li>\u6dfb\u52a0\u4ee5\u4e0b\u5de5\u5177\uff1a</li> </ol> <p>Black \u683c\u5f0f\u5316 - Name: Black Format - Program: <code>$ProjectFileDir$\\venv\\Scripts\\python.exe</code> - Arguments: <code>-m black $FilePath$</code> - Working directory: <code>$ProjectFileDir$</code></p> <p>Pylint \u68c0\u67e5 - Name: Pylint Check - Program: <code>$ProjectFileDir$\\venv\\Scripts\\python.exe</code> - Arguments: <code>-m pylint $FilePath$</code> - Working directory: <code>$ProjectFileDir$</code></p>"},{"location":"zh/development/setup/#_12","title":"\ud83e\uddea \u9a8c\u8bc1\u5f00\u53d1\u73af\u5883","text":""},{"location":"zh/development/setup/#_13","title":"\u8fd0\u884c\u5b8c\u6574\u6d4b\u8bd5\u5957\u4ef6","text":"PowerShell<pre><code># \u6fc0\u6d3b\u865a\u62df\u73af\u5883\n.\\venv\\Scripts\\Activate.ps1\n\n# \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\npython -m pytest tests/ -v --cov=email_widget\n\n# \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5\npython -m pytest tests/test_email.py -v\n\n# \u8fd0\u884c\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5\npython -m pylint email_widget/\npython -m black --check email_widget/\npython -m isort --check-only email_widget/\n</code></pre>"},{"location":"zh/development/setup/#_14","title":"\u521b\u5efa\u6d4b\u8bd5\u62a5\u544a","text":"PowerShell<pre><code># \u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u62a5\u544a\npython -c \"\nfrom email_widget import Email\nemail = Email('\u6d4b\u8bd5\u62a5\u544a')\nemail.add_title('\u73af\u5883\u9a8c\u8bc1\u6210\u529f')\nemail.add_text('EmailWidget \u5f00\u53d1\u73af\u5883\u5df2\u6b63\u786e\u914d\u7f6e\uff01')\nemail.export_html('test_output.html')\nprint('\u2705 \u6d4b\u8bd5\u62a5\u544a\u5df2\u751f\u6210\uff1atest_output.html')\n\"\n</code></pre>"},{"location":"zh/development/setup/#_15","title":"\ud83d\udd0d \u5e38\u89c1\u95ee\u9898\u89e3\u51b3","text":""},{"location":"zh/development/setup/#python","title":"Python \u76f8\u5173\u95ee\u9898","text":"<p>Q: \u63d0\u793a \"python \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\" PowerShell<pre><code># \u68c0\u67e5 PATH \u73af\u5883\u53d8\u91cf\necho $env:PATH\n# \u5e94\u8be5\u5305\u542b Python \u5b89\u88c5\u8def\u5f84\n\n# \u624b\u52a8\u6dfb\u52a0\u5230 PATH\uff08\u4e34\u65f6\uff09\n$env:PATH += \";C:\\Users\\\u4f60\u7684\u7528\u6237\u540d\\AppData\\Local\\Programs\\Python\\Python310\"\n</code></pre></p> <p>Q: pip \u5b89\u88c5\u901f\u5ea6\u6162 PowerShell<pre><code># \u4f7f\u7528\u56fd\u5185\u955c\u50cf\u6e90\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple/ package_name\n\n# \u6216\u914d\u7f6e\u6c38\u4e45\u955c\u50cf\u6e90\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple/\n</code></pre></p>"},{"location":"zh/development/setup/#_16","title":"\u865a\u62df\u73af\u5883\u95ee\u9898","text":"<p>Q: \u65e0\u6cd5\u6fc0\u6d3b\u865a\u62df\u73af\u5883 PowerShell<pre><code># \u68c0\u67e5\u6267\u884c\u7b56\u7565\nGet-ExecutionPolicy\n\n# \u8bbe\u7f6e\u6267\u884c\u7b56\u7565\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\n\n# \u7136\u540e\u91cd\u65b0\u6fc0\u6d3b\n.\\venv\\Scripts\\Activate.ps1\n</code></pre></p> <p>Q: \u865a\u62df\u73af\u5883\u8def\u5f84\u95ee\u9898 PowerShell<pre><code># \u786e\u4fdd\u5728\u9879\u76ee\u6839\u76ee\u5f55\npwd\n# \u5e94\u8be5\u663e\u793a EmailWidget \u9879\u76ee\u76ee\u5f55\n\n# \u91cd\u65b0\u521b\u5efa\u865a\u62df\u73af\u5883\nRemove-Item -Recurse -Force venv\npython -m venv venv\n</code></pre></p>"},{"location":"zh/development/setup/#git","title":"Git \u76f8\u5173\u95ee\u9898","text":"<p>Q: Git \u514b\u9686\u5931\u8d25 PowerShell<pre><code># \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\nping github.com\n\n# \u4f7f\u7528 HTTPS \u800c\u4e0d\u662f SSH\ngit clone https://github.com/user/repo.git\n\n# \u914d\u7f6e\u4ee3\u7406\uff08\u5982\u679c\u9700\u8981\uff09\ngit config --global http.proxy http://proxy-server:port\n</code></pre></p>"},{"location":"zh/development/setup/#ide_1","title":"IDE \u76f8\u5173\u95ee\u9898","text":"<p>Q: VS Code \u65e0\u6cd5\u8bc6\u522b Python \u89e3\u91ca\u5668 1. \u6309 <code>Ctrl+Shift+P</code> \u6253\u5f00\u547d\u4ee4\u9762\u677f 2. \u8f93\u5165 \"Python: Select Interpreter\" 3. \u9009\u62e9\u9879\u76ee\u865a\u62df\u73af\u5883\u4e2d\u7684 Python</p> <p>Q: \u4ee3\u7801\u683c\u5f0f\u5316\u4e0d\u5de5\u4f5c 1. \u786e\u4fdd\u5b89\u88c5\u4e86 Black \u6269\u5c55 2. \u68c0\u67e5 settings.json \u914d\u7f6e 3. \u624b\u52a8\u8fd0\u884c\u683c\u5f0f\u5316\uff1a<code>Ctrl+Shift+I</code></p>"},{"location":"zh/development/setup/#_17","title":"\ud83d\udcca \u6027\u80fd\u4f18\u5316\u5efa\u8bae","text":""},{"location":"zh/development/setup/#_18","title":"\u63d0\u5347\u5f00\u53d1\u6548\u7387","text":"<ol> <li>SSD \u786c\u76d8 - \u663e\u8457\u63d0\u5347\u6587\u4ef6\u8bfb\u5199\u901f\u5ea6</li> <li>\u5145\u8db3\u5185\u5b58 - \u81f3\u5c11 8GB\uff0c\u63a8\u8350 16GB</li> <li>\u5173\u95ed\u6740\u6bd2\u8f6f\u4ef6\u5b9e\u65f6\u626b\u63cf - \u9488\u5bf9\u5f00\u53d1\u76ee\u5f55</li> <li>\u4f7f\u7528 Windows Terminal - \u66f4\u597d\u7684\u547d\u4ee4\u884c\u4f53\u9a8c</li> </ol>"},{"location":"zh/development/setup/#python_1","title":"\u4f18\u5316 Python \u73af\u5883","text":"PowerShell<pre><code># \u5347\u7ea7 pip \u5230\u6700\u65b0\u7248\u672c\npython -m pip install --upgrade pip\n\n# \u4f7f\u7528\u66f4\u5feb\u7684\u5305\u7ba1\u7406\u5668\npip install uv\n# \u7136\u540e\u4f7f\u7528 uv \u4ee3\u66ff pip\nuv pip install package_name\n</code></pre>"},{"location":"zh/development/setup/#_19","title":"\ud83d\ude80 \u4e0b\u4e00\u6b65","text":"<p>\u73af\u5883\u642d\u5efa\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\uff1a</p> <ol> <li>\ud83d\udcd6 \u9605\u8bfb\u8d21\u732e\u6307\u5357 - \u4e86\u89e3\u8d21\u732e\u6d41\u7a0b</li> <li>\ud83e\udde9 \u5b66\u4e60\u521b\u5efa Widget - \u5f00\u53d1\u81ea\u5b9a\u4e49\u7ec4\u4ef6</li> <li>\ud83e\uddea \u67e5\u770b\u6d4b\u8bd5\u6307\u5357 - \u7f16\u5199\u548c\u8fd0\u884c\u6d4b\u8bd5</li> <li>\ud83d\udd0d \u6d4f\u89c8 GitHub Issues - \u627e\u5230\u611f\u5174\u8da3\u7684\u4efb\u52a1</li> <li>\ud83d\udcbb \u5f00\u59cb\u7f16\u7801 - \u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u8d21\u732e\uff01</li> </ol> <p>\u606d\u559c\uff01\u60a8\u7684 EmailWidget \u5f00\u53d1\u73af\u5883\u5df2\u7ecf\u642d\u5efa\u5b8c\u6210\u3002\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u6109\u5feb\u7684\u5f00\u53d1\u4e4b\u65c5\u4e86\uff01 \ud83c\udf89 </p>"},{"location":"zh/development/testing/","title":"\u6d4b\u8bd5\u6307\u5357","text":"<p>\u672c\u6307\u5357\u4ecb\u7ecd EmailWidget \u9879\u76ee\u7684\u6d4b\u8bd5\u7b56\u7565\u3001\u6846\u67b6\u4f7f\u7528\u548c\u6700\u4f73\u5b9e\u8df5\uff0c\u5e2e\u52a9\u786e\u4fdd\u4ee3\u7801\u8d28\u91cf\u548c\u7a33\u5b9a\u6027\u3002</p>"},{"location":"zh/development/testing/#_2","title":"\ud83c\udfaf \u6d4b\u8bd5\u7b56\u7565","text":""},{"location":"zh/development/testing/#_3","title":"\u6d4b\u8bd5\u91d1\u5b57\u5854","text":"<p>EmailWidget \u91c7\u7528\u7ecf\u5178\u7684\u6d4b\u8bd5\u91d1\u5b57\u5854\u7b56\u7565\uff1a</p> Text Only<pre><code>        /\\\n       /  \\\n      /    \\     E2E Tests (\u5c11\u91cf)\n     /______\\    - \u5b8c\u6574\u6d41\u7a0b\u6d4b\u8bd5\n    /        \\   - \u90ae\u4ef6\u751f\u6210\u6d4b\u8bd5\n   /          \\  \n  /____________\\ Integration Tests (\u9002\u91cf)\n /              \\ - \u7ec4\u4ef6\u96c6\u6210\u6d4b\u8bd5\n/________________\\ - \u6a21\u677f\u6e32\u67d3\u6d4b\u8bd5\nUnit Tests (\u5927\u91cf)\n- \u5355\u4e2a\u7ec4\u4ef6\u6d4b\u8bd5\n- \u5de5\u5177\u51fd\u6570\u6d4b\u8bd5\n- \u9a8c\u8bc1\u5668\u6d4b\u8bd5\n</code></pre>"},{"location":"zh/development/testing/#_4","title":"\u6d4b\u8bd5\u76ee\u6807","text":"<ul> <li>\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387 \u2265 90%</li> <li>\u96c6\u6210\u6d4b\u8bd5\u8986\u76d6\u7387 \u2265 80%</li> <li>\u5173\u952e\u8def\u5f84\u6d4b\u8bd5 100%</li> <li>\u6027\u80fd\u56de\u5f52\u6d4b\u8bd5 \u6301\u7eed\u76d1\u63a7</li> </ul>"},{"location":"zh/development/testing/#_5","title":"\ud83d\udee0\ufe0f \u6d4b\u8bd5\u6846\u67b6","text":""},{"location":"zh/development/testing/#_6","title":"\u4e3b\u8981\u5de5\u5177","text":"\u5de5\u5177 \u7528\u9014 \u7248\u672c\u8981\u6c42 pytest \u6d4b\u8bd5\u6846\u67b6 \u2265 7.0 pytest-cov \u8986\u76d6\u7387\u7edf\u8ba1 \u2265 4.0 pytest-mock Mock \u652f\u6301 \u2265 3.10 pytest-xdist \u5e76\u884c\u6d4b\u8bd5 \u2265 3.0 pytest-html HTML \u62a5\u544a \u2265 3.1"},{"location":"zh/development/testing/#_7","title":"\u5b89\u88c5\u6d4b\u8bd5\u4f9d\u8d56","text":"PowerShell<pre><code># Windows PowerShell \u4e2d\u5b89\u88c5\npip install pytest pytest-cov pytest-mock pytest-xdist pytest-html\n\n# \u6216\u4ece requirements-test.txt \u5b89\u88c5\npip install -r requirements-test.txt\n</code></pre>"},{"location":"zh/development/testing/#pytest","title":"pytest \u914d\u7f6e","text":"<p>\u9879\u76ee\u6839\u76ee\u5f55\u7684 <code>pytest.ini</code> \u914d\u7f6e\uff1a</p> INI<pre><code>[tool:pytest]\ntestpaths = tests\npython_files = test_*.py\npython_classes = Test*\npython_functions = test_*\naddopts = \n    --strict-markers\n    --strict-config\n    --verbose\n    --cov=email_widget\n    --cov-report=html\n    --cov-report=term-missing\n    --cov-fail-under=90\nmarkers =\n    unit: \u5355\u5143\u6d4b\u8bd5\n    integration: \u96c6\u6210\u6d4b\u8bd5\n    e2e: \u7aef\u5230\u7aef\u6d4b\u8bd5\n    slow: \u6162\u901f\u6d4b\u8bd5\n    performance: \u6027\u80fd\u6d4b\u8bd5\n</code></pre>"},{"location":"zh/development/testing/#_8","title":"\ud83d\udcc1 \u6d4b\u8bd5\u76ee\u5f55\u7ed3\u6784","text":"Text Only<pre><code>tests/\n\u251c\u2500\u2500 conftest.py                 # pytest \u914d\u7f6e\u548c fixtures\n\u251c\u2500\u2500 test_email.py              # Email \u4e3b\u7c7b\u6d4b\u8bd5\n\u251c\u2500\u2500 test_core/                 # \u6838\u5fc3\u6a21\u5757\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_base.py           # BaseWidget \u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 test_config.py         # \u914d\u7f6e\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 test_validators.py     # \u9a8c\u8bc1\u5668\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 test_template_engine.py # \u6a21\u677f\u5f15\u64ce\u6d4b\u8bd5\n\u2502   \u2514\u2500\u2500 test_cache.py          # \u7f13\u5b58\u6d4b\u8bd5\n\u251c\u2500\u2500 test_widgets/              # Widget \u7ec4\u4ef6\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_text_widget.py    # \u6587\u672c\u7ec4\u4ef6\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 test_table_widget.py   # \u8868\u683c\u7ec4\u4ef6\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 test_progress_widget.py # \u8fdb\u5ea6\u7ec4\u4ef6\u6d4b\u8bd5\n\u2502   \u2514\u2500\u2500 test_*.py              # \u5176\u4ed6\u7ec4\u4ef6\u6d4b\u8bd5\n\u251c\u2500\u2500 test_utils/                # \u5de5\u5177\u6a21\u5757\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_image_utils.py    # \u56fe\u7247\u5de5\u5177\u6d4b\u8bd5\n\u2502   \u2514\u2500\u2500 test_optional_deps.py  # \u53ef\u9009\u4f9d\u8d56\u6d4b\u8bd5\n\u251c\u2500\u2500 integration/               # \u96c6\u6210\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 test_email_generation.py\n\u2502   \u251c\u2500\u2500 test_template_rendering.py\n\u2502   \u2514\u2500\u2500 test_widget_interaction.py\n\u251c\u2500\u2500 e2e/                      # \u7aef\u5230\u7aef\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 test_complete_workflows.py\n\u2502   \u2514\u2500\u2500 test_email_output.py\n\u251c\u2500\u2500 performance/              # \u6027\u80fd\u6d4b\u8bd5\n\u2502   \u251c\u2500\u2500 test_rendering_speed.py\n\u2502   \u2514\u2500\u2500 test_memory_usage.py\n\u2514\u2500\u2500 fixtures/                 # \u6d4b\u8bd5\u6570\u636e\n    \u251c\u2500\u2500 sample_data.json\n    \u251c\u2500\u2500 test_images/\n    \u2514\u2500\u2500 expected_outputs/\n</code></pre>"},{"location":"zh/development/testing/#_9","title":"\ud83e\uddea \u5355\u5143\u6d4b\u8bd5","text":""},{"location":"zh/development/testing/#_10","title":"\u57fa\u672c\u6d4b\u8bd5\u7ed3\u6784","text":"Python<pre><code>import pytest\nfrom email_widget.widgets.text_widget import TextWidget\nfrom email_widget.core.enums import TextType, TextAlign\n\nclass TestTextWidget:\n    \"\"\"\u6587\u672c\u7ec4\u4ef6\u5355\u5143\u6d4b\u8bd5\"\"\"\n\n    def setup_method(self):\n        \"\"\"\u6bcf\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u524d\u7684\u521d\u59cb\u5316\"\"\"\n        self.widget = TextWidget()\n\n    def test_initialization(self):\n        \"\"\"\u6d4b\u8bd5\u521d\u59cb\u5316\u72b6\u6001\"\"\"\n        assert self.widget._content == \"\"\n        assert self.widget._text_type == TextType.BODY\n        assert self.widget._align == TextAlign.LEFT\n\n    def test_set_content(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u5185\u5bb9\"\"\"\n        content = \"\u6d4b\u8bd5\u5185\u5bb9\"\n        result = self.widget.set_content(content)\n\n        # \u6d4b\u8bd5\u8fd4\u56de\u503c\uff08\u94fe\u5f0f\u8c03\u7528\uff09\n        assert result is self.widget\n        # \u6d4b\u8bd5\u72b6\u6001\u53d8\u5316\n        assert self.widget._content == content\n\n    def test_set_content_validation(self):\n        \"\"\"\u6d4b\u8bd5\u5185\u5bb9\u9a8c\u8bc1\"\"\"\n        # \u6d4b\u8bd5\u6709\u6548\u8f93\u5165\n        self.widget.set_content(\"\u6709\u6548\u5185\u5bb9\")\n        assert self.widget._content == \"\u6709\u6548\u5185\u5bb9\"\n\n        # \u6d4b\u8bd5\u65e0\u6548\u8f93\u5165\n        with pytest.raises(TypeError):\n            self.widget.set_content(123)  # \u4e0d\u662f\u5b57\u7b26\u4e32\n\n        with pytest.raises(ValueError):\n            self.widget.set_content(\"\")  # \u7a7a\u5b57\u7b26\u4e32\n\n    def test_set_type(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u6587\u672c\u7c7b\u578b\"\"\"\n        self.widget.set_type(TextType.TITLE_LARGE)\n        assert self.widget._text_type == TextType.TITLE_LARGE\n\n    def test_set_align(self):\n        \"\"\"\u6d4b\u8bd5\u8bbe\u7f6e\u5bf9\u9f50\u65b9\u5f0f\"\"\"\n        self.widget.set_align(TextAlign.CENTER)\n        assert self.widget._align == TextAlign.CENTER\n\n    def test_render_basic(self):\n        \"\"\"\u6d4b\u8bd5\u57fa\u672c\u6e32\u67d3\"\"\"\n        self.widget.set_content(\"\u6d4b\u8bd5\u6587\u672c\")\n        html = self.widget.render()\n\n        assert \"\u6d4b\u8bd5\u6587\u672c\" in html\n        assert \"&lt;\" in html and \"&gt;\" in html  # \u5305\u542b HTML \u6807\u7b7e\n\n    def test_render_with_styling(self):\n        \"\"\"\u6d4b\u8bd5\u5e26\u6837\u5f0f\u7684\u6e32\u67d3\"\"\"\n        self.widget.set_content(\"\u6807\u9898\u6587\u672c\") \\\n                  .set_type(TextType.TITLE_LARGE) \\\n                  .set_align(TextAlign.CENTER) \\\n                  .set_color(\"#ff0000\")\n\n        html = self.widget.render()\n\n        assert \"\u6807\u9898\u6587\u672c\" in html\n        assert \"text-align: center\" in html\n        assert \"color: #ff0000\" in html\n\n    @pytest.mark.parametrize(\"text_type,expected_tag\", [\n        (TextType.TITLE_LARGE, \"h1\"),\n        (TextType.TITLE_SMALL, \"h2\"),\n        (TextType.SECTION_H2, \"h2\"),\n        (TextType.SECTION_H3, \"h3\"),\n        (TextType.BODY, \"p\"),\n        (TextType.CAPTION, \"small\")\n    ])\n    def test_render_html_tags(self, text_type, expected_tag):\n        \"\"\"\u6d4b\u8bd5\u4e0d\u540c\u6587\u672c\u7c7b\u578b\u7684 HTML \u6807\u7b7e\"\"\"\n        self.widget.set_content(\"\u6d4b\u8bd5\").set_type(text_type)\n        html = self.widget.render()\n        assert f\"&lt;{expected_tag}\" in html\n\n    def test_chain_methods(self):\n        \"\"\"\u6d4b\u8bd5\u94fe\u5f0f\u8c03\u7528\"\"\"\n        result = self.widget.set_content(\"\u6d4b\u8bd5\") \\\n                           .set_type(TextType.TITLE_LARGE) \\\n                           .set_align(TextAlign.CENTER) \\\n                           .set_color(\"#blue\")\n\n        assert result is self.widget\n        assert self.widget._content == \"\u6d4b\u8bd5\"\n        assert self.widget._text_type == TextType.TITLE_LARGE\n        assert self.widget._align == TextAlign.CENTER\n        assert self.widget._color == \"#blue\"\n</code></pre>"},{"location":"zh/development/testing/#fixtures","title":"\u4f7f\u7528 Fixtures","text":"<p>\u5728 <code>conftest.py</code> \u4e2d\u5b9a\u4e49\u901a\u7528 fixtures\uff1a</p> Python<pre><code>import pytest\nimport pandas as pd\nfrom pathlib import Path\nfrom email_widget import Email\nfrom email_widget.widgets import TextWidget, TableWidget\n\n@pytest.fixture\ndef sample_email():\n    \"\"\"\u521b\u5efa\u793a\u4f8b\u90ae\u4ef6\u5bf9\u8c61\"\"\"\n    return Email(\"\u6d4b\u8bd5\u90ae\u4ef6\")\n\n@pytest.fixture\ndef sample_text_widget():\n    \"\"\"\u521b\u5efa\u793a\u4f8b\u6587\u672c\u7ec4\u4ef6\"\"\"\n    widget = TextWidget()\n    widget.set_content(\"\u6d4b\u8bd5\u5185\u5bb9\")\n    return widget\n\n@pytest.fixture\ndef sample_dataframe():\n    \"\"\"\u521b\u5efa\u793a\u4f8b DataFrame\"\"\"\n    return pd.DataFrame({\n        'Name': ['Alice', 'Bob', 'Charlie'],\n        'Age': [25, 30, 35],\n        'City': ['New York', 'London', 'Tokyo']\n    })\n\n@pytest.fixture\ndef temp_output_dir(tmp_path):\n    \"\"\"\u521b\u5efa\u4e34\u65f6\u8f93\u51fa\u76ee\u5f55\"\"\"\n    output_dir = tmp_path / \"output\"\n    output_dir.mkdir()\n    return output_dir\n\n@pytest.fixture\ndef mock_image_path():\n    \"\"\"\u6a21\u62df\u56fe\u7247\u8def\u5f84\"\"\"\n    return \"tests/fixtures/test_images/sample.png\"\n\n# \u4f7f\u7528 fixture \u7684\u6d4b\u8bd5\nclass TestEmailGeneration:\n\n    def test_add_widget(self, sample_email, sample_text_widget):\n        \"\"\"\u6d4b\u8bd5\u6dfb\u52a0\u7ec4\u4ef6\"\"\"\n        sample_email.add_widget(sample_text_widget)\n        assert len(sample_email._widgets) == 1\n        assert sample_email._widgets[0] is sample_text_widget\n\n    def test_export_html(self, sample_email, sample_text_widget, temp_output_dir):\n        \"\"\"\u6d4b\u8bd5\u5bfc\u51fa HTML\"\"\"\n        sample_email.add_widget(sample_text_widget)\n        output_path = temp_output_dir / \"test.html\"\n\n        sample_email.export_html(str(output_path))\n\n        assert output_path.exists()\n        content = output_path.read_text(encoding='utf-8')\n        assert \"\u6d4b\u8bd5\u5185\u5bb9\" in content\n</code></pre>"},{"location":"zh/development/testing/#mock-stub","title":"Mock \u548c Stub","text":"<p>\u4f7f\u7528 <code>pytest-mock</code> \u8fdb\u884c mock \u6d4b\u8bd5\uff1a</p> Python<pre><code>import pytest\nfrom unittest.mock import Mock, patch\nfrom email_widget.utils.image_utils import ImageUtils\n\nclass TestImageUtils:\n    \"\"\"\u56fe\u7247\u5de5\u5177\u6d4b\u8bd5\"\"\"\n\n    @patch('requests.get')\n    def test_download_image_success(self, mock_get):\n        \"\"\"\u6d4b\u8bd5\u6210\u529f\u4e0b\u8f7d\u56fe\u7247\"\"\"\n        # \u8bbe\u7f6e mock \u8fd4\u56de\u503c\n        mock_response = Mock()\n        mock_response.status_code = 200\n        mock_response.content = b'fake_image_data'\n        mock_get.return_value = mock_response\n\n        # \u6267\u884c\u6d4b\u8bd5\n        result = ImageUtils.download_image(\"http://example.com/image.jpg\")\n\n        # \u9a8c\u8bc1\u7ed3\u679c\n        assert result == b'fake_image_data'\n        mock_get.assert_called_once_with(\"http://example.com/image.jpg\")\n\n    @patch('requests.get')\n    def test_download_image_failure(self, mock_get):\n        \"\"\"\u6d4b\u8bd5\u4e0b\u8f7d\u56fe\u7247\u5931\u8d25\"\"\"\n        # \u8bbe\u7f6e mock \u629b\u51fa\u5f02\u5e38\n        mock_get.side_effect = ConnectionError(\"\u7f51\u7edc\u9519\u8bef\")\n\n        # \u9a8c\u8bc1\u5f02\u5e38\n        with pytest.raises(ConnectionError):\n            ImageUtils.download_image(\"http://example.com/image.jpg\")\n\n    def test_validate_image_format(self, mocker):\n        \"\"\"\u6d4b\u8bd5\u56fe\u7247\u683c\u5f0f\u9a8c\u8bc1\"\"\"\n        # \u4f7f\u7528 mocker fixture\n        mock_is_valid = mocker.patch.object(ImageUtils, '_is_valid_format')\n        mock_is_valid.return_value = True\n\n        result = ImageUtils.validate_format(\"image.jpg\")\n\n        assert result is True\n        mock_is_valid.assert_called_once_with(\"image.jpg\")\n</code></pre>"},{"location":"zh/development/testing/#_11","title":"\u53c2\u6570\u5316\u6d4b\u8bd5","text":"<p>\u4f7f\u7528 <code>@pytest.mark.parametrize</code> \u8fdb\u884c\u53c2\u6570\u5316\u6d4b\u8bd5\uff1a</p> Python<pre><code>import pytest\nfrom email_widget.core.validators import ColorValidator\n\nclass TestColorValidator:\n    \"\"\"\u989c\u8272\u9a8c\u8bc1\u5668\u6d4b\u8bd5\"\"\"\n\n    @pytest.mark.parametrize(\"color,expected\", [\n        (\"#ff0000\", True),          # \u6807\u51c6\u5341\u516d\u8fdb\u5236\n        (\"#FF0000\", True),          # \u5927\u5199\u5341\u516d\u8fdb\u5236\n        (\"#f00\", True),             # \u77ed\u5341\u516d\u8fdb\u5236\n        (\"red\", True),              # \u989c\u8272\u540d\u79f0\n        (\"rgb(255,0,0)\", True),     # RGB \u683c\u5f0f\n        (\"rgba(255,0,0,0.5)\", True), # RGBA \u683c\u5f0f\n        (\"invalid\", False),         # \u65e0\u6548\u989c\u8272\n        (\"\", False),                # \u7a7a\u5b57\u7b26\u4e32\n        (\"#gggggg\", False),         # \u65e0\u6548\u5341\u516d\u8fdb\u5236\n    ])\n    def test_color_validation(self, color, expected):\n        \"\"\"\u6d4b\u8bd5\u5404\u79cd\u989c\u8272\u683c\u5f0f\u7684\u9a8c\u8bc1\"\"\"\n        validator = ColorValidator()\n\n        if expected:\n            # \u5e94\u8be5\u901a\u8fc7\u9a8c\u8bc1\n            validator.validate(color)  # \u4e0d\u5e94\u8be5\u629b\u51fa\u5f02\u5e38\n        else:\n            # \u5e94\u8be5\u9a8c\u8bc1\u5931\u8d25\n            with pytest.raises(ValueError):\n                validator.validate(color)\n\n    @pytest.mark.parametrize(\"rgb_value\", [0, 128, 255])\n    def test_rgb_values(self, rgb_value):\n        \"\"\"\u6d4b\u8bd5 RGB \u503c\u8303\u56f4\"\"\"\n        color = f\"rgb({rgb_value},{rgb_value},{rgb_value})\"\n        validator = ColorValidator()\n        validator.validate(color)  # \u5e94\u8be5\u901a\u8fc7\u9a8c\u8bc1\n</code></pre>"},{"location":"zh/development/testing/#_12","title":"\ud83d\udd17 \u96c6\u6210\u6d4b\u8bd5","text":"<p>\u96c6\u6210\u6d4b\u8bd5\u9a8c\u8bc1\u591a\u4e2a\u7ec4\u4ef6\u534f\u540c\u5de5\u4f5c\uff1a</p> Python<pre><code>import pytest\nimport pandas as pd\nfrom email_widget import Email\nfrom email_widget.widgets import TextWidget, TableWidget, ProgressWidget\n\nclass TestWidgetIntegration:\n    \"\"\"\u7ec4\u4ef6\u96c6\u6210\u6d4b\u8bd5\"\"\"\n\n    def test_email_with_multiple_widgets(self):\n        \"\"\"\u6d4b\u8bd5\u90ae\u4ef6\u5305\u542b\u591a\u4e2a\u7ec4\u4ef6\"\"\"\n        email = Email(\"\u96c6\u6210\u6d4b\u8bd5\u90ae\u4ef6\")\n\n        # \u6dfb\u52a0\u6807\u9898\n        title = TextWidget()\n        title.set_content(\"\u6d4b\u8bd5\u62a5\u544a\").set_type(TextType.TITLE_LARGE)\n        email.add_widget(title)\n\n        # \u6dfb\u52a0\u8868\u683c\n        table = TableWidget()\n        table.set_headers([\"\u59d3\u540d\", \"\u5e74\u9f84\"])\n        table.add_row([\"\u5f20\u4e09\", \"25\"])\n        table.add_row([\"\u674e\u56db\", \"30\"])\n        email.add_widget(table)\n\n        # \u6dfb\u52a0\u8fdb\u5ea6\u6761\n        progress = ProgressWidget()\n        progress.set_value(75).set_label(\"\u5b8c\u6210\u5ea6\")\n        email.add_widget(progress)\n\n        # \u6e32\u67d3\u90ae\u4ef6\n        html = email.export_str()\n\n        # \u9a8c\u8bc1\u6240\u6709\u7ec4\u4ef6\u90fd\u5728\u8f93\u51fa\u4e2d\n        assert \"\u6d4b\u8bd5\u62a5\u544a\" in html\n        assert \"\u5f20\u4e09\" in html\n        assert \"\u674e\u56db\" in html\n        assert \"75%\" in html or \"75.0%\" in html\n\n    def test_dataframe_to_table_integration(self):\n        \"\"\"\u6d4b\u8bd5 DataFrame \u4e0e\u8868\u683c\u7ec4\u4ef6\u96c6\u6210\"\"\"\n        # \u521b\u5efa\u6d4b\u8bd5\u6570\u636e\n        df = pd.DataFrame({\n            '\u4ea7\u54c1': ['A', 'B', 'C'],\n            '\u9500\u91cf': [100, 200, 150],\n            '\u4ef7\u683c': [10.5, 20.0, 15.8]\n        })\n\n        email = Email(\"\u6570\u636e\u62a5\u544a\")\n\n        # \u4f7f\u7528\u4fbf\u6377\u65b9\u6cd5\u4ece DataFrame \u521b\u5efa\u8868\u683c\n        email.add_table_from_df(df, title=\"\u4ea7\u54c1\u9500\u552e\u6570\u636e\")\n\n        html = email.export_str()\n\n        # \u9a8c\u8bc1\u6570\u636e\u6b63\u786e\u6e32\u67d3\n        assert \"\u4ea7\u54c1\u9500\u552e\u6570\u636e\" in html\n        assert \"\u4ea7\u54c1\" in html and \"\u9500\u91cf\" in html and \"\u4ef7\u683c\" in html\n        assert \"100\" in html and \"200\" in html and \"150\" in html\n\n    @pytest.mark.integration\n    def test_template_engine_integration(self):\n        \"\"\"\u6d4b\u8bd5\u6a21\u677f\u5f15\u64ce\u96c6\u6210\"\"\"\n        email = Email(\"\u6a21\u677f\u6d4b\u8bd5\")\n\n        # \u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u677f\n        custom_widget = CustomTemplateWidget()\n        custom_widget.set_template(\"Hello {{name}}!\")\n        custom_widget.set_data(name=\"World\")\n\n        email.add_widget(custom_widget)\n        html = email.export_str()\n\n        assert \"Hello World!\" in html\n</code></pre>"},{"location":"zh/development/testing/#_13","title":"\ud83c\udf10 \u7aef\u5230\u7aef\u6d4b\u8bd5","text":"<p>\u7aef\u5230\u7aef\u6d4b\u8bd5\u9a8c\u8bc1\u5b8c\u6574\u7684\u7528\u6237\u5de5\u4f5c\u6d41\uff1a</p> Python<pre><code>import pytest\nfrom pathlib import Path\nimport tempfile\nfrom email_widget import Email\n\nclass TestE2EWorkflows:\n    \"\"\"\u7aef\u5230\u7aef\u6d4b\u8bd5\"\"\"\n\n    @pytest.mark.e2e\n    def test_complete_report_generation(self):\n        \"\"\"\u6d4b\u8bd5\u5b8c\u6574\u62a5\u544a\u751f\u6210\u6d41\u7a0b\"\"\"\n        # 1. \u521b\u5efa\u90ae\u4ef6\n        email = Email(\"\u6708\u5ea6\u4e1a\u52a1\u62a5\u544a\")\n\n        # 2. \u6dfb\u52a0\u6807\u9898\u548c\u8bf4\u660e\n        email.add_title(\"2024\u5e741\u6708\u4e1a\u52a1\u62a5\u544a\", TextType.TITLE_LARGE)\n        email.add_text(\"\u672c\u62a5\u544a\u5305\u542b\u4e3b\u8981\u4e1a\u52a1\u6307\u6807\u548c\u5206\u6790\u3002\")\n\n        # 3. \u6dfb\u52a0\u5173\u952e\u6307\u6807\n        email.add_card(\"\u603b\u6536\u5165\", \"\u00a51,250,000\", \"\ud83d\udcb0\")\n        email.add_card(\"\u65b0\u7528\u6237\", \"2,847\", \"\ud83d\udc65\")\n\n        # 4. \u6dfb\u52a0\u8be6\u7ec6\u6570\u636e\u8868\u683c\n        data = [\n            [\"\u4ea7\u54c1A\", \"\u00a5500,000\", \"1,200\"],\n            [\"\u4ea7\u54c1B\", \"\u00a5750,000\", \"1,647\"]\n        ]\n        email.add_table_from_data(data, [\"\u4ea7\u54c1\", \"\u6536\u5165\", \"\u9500\u91cf\"])\n\n        # 5. \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\n        email.add_progress(85, \"\u76ee\u6807\u5b8c\u6210\u5ea6\", ProgressTheme.SUCCESS)\n\n        # 6. \u6dfb\u52a0\u63d0\u9192\n        email.add_alert(\"\u4e0b\u6708\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u4ea7\u54c1A\u7684\u5e93\u5b58\u60c5\u51b5\", AlertType.WARNING)\n\n        # 7. \u5bfc\u51fa\u4e3a HTML\n        with tempfile.NamedTemporaryFile(suffix='.html', delete=False) as f:\n            email.export_html(f.name)\n\n            # 8. \u9a8c\u8bc1\u6587\u4ef6\u751f\u6210\n            output_path = Path(f.name)\n            assert output_path.exists()\n\n            # 9. \u9a8c\u8bc1\u5185\u5bb9\u5b8c\u6574\u6027\n            content = output_path.read_text(encoding='utf-8')\n            assert \"\u6708\u5ea6\u4e1a\u52a1\u62a5\u544a\" in content\n            assert \"\u00a51,250,000\" in content\n            assert \"\u4ea7\u54c1A\" in content\n            assert \"85%\" in content or \"85.0%\" in content\n            assert \"\u5e93\u5b58\u60c5\u51b5\" in content\n\n            # 10. \u9a8c\u8bc1 HTML \u7ed3\u6784\n            assert \"&lt;html\" in content\n            assert \"&lt;/html&gt;\" in content\n            assert \"&lt;head&gt;\" in content\n            assert \"&lt;body&gt;\" in content\n\n    @pytest.mark.e2e\n    @pytest.mark.slow\n    def test_large_dataset_performance(self):\n        \"\"\"\u6d4b\u8bd5\u5927\u6570\u636e\u96c6\u6027\u80fd\"\"\"\n        import time\n\n        # \u521b\u5efa\u5927\u91cf\u6570\u636e\n        email = Email(\"\u5927\u6570\u636e\u6d4b\u8bd5\")\n\n        # \u6dfb\u52a0\u5927\u8868\u683c\n        large_data = []\n        for i in range(1000):\n            large_data.append([f\"\u9879\u76ee{i}\", f\"\u503c{i}\", f\"\u63cf\u8ff0{i}\"])\n\n        start_time = time.time()\n        email.add_table_from_data(large_data, [\"\u9879\u76ee\", \"\u503c\", \"\u63cf\u8ff0\"])\n\n        # \u6e32\u67d3\u65f6\u95f4\u5e94\u8be5\u5728\u5408\u7406\u8303\u56f4\u5185\n        html = email.export_str()\n        end_time = time.time()\n\n        # \u6027\u80fd\u65ad\u8a00\uff08\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\uff09\n        assert (end_time - start_time) &lt; 10.0  # \u5e94\u8be5\u572810\u79d2\u5185\u5b8c\u6210\n        assert len(html) &gt; 10000  # \u786e\u4fdd\u5185\u5bb9\u5df2\u751f\u6210\n        assert \"\u9879\u76ee999\" in html  # \u786e\u4fdd\u6240\u6709\u6570\u636e\u90fd\u5305\u542b\n</code></pre>"},{"location":"zh/development/testing/#_14","title":"\u26a1 \u6027\u80fd\u6d4b\u8bd5","text":"<p>\u76d1\u63a7\u5173\u952e\u6027\u80fd\u6307\u6807\uff1a</p> Python<pre><code>import pytest\nimport time\nimport psutil\nimport os\nfrom email_widget import Email\n\nclass TestPerformance:\n    \"\"\"\u6027\u80fd\u6d4b\u8bd5\"\"\"\n\n    @pytest.mark.performance\n    def test_rendering_speed(self):\n        \"\"\"\u6d4b\u8bd5\u6e32\u67d3\u901f\u5ea6\"\"\"\n        email = Email(\"\u6027\u80fd\u6d4b\u8bd5\")\n\n        # \u6dfb\u52a0\u591a\u4e2a\u7ec4\u4ef6\n        for i in range(100):\n            email.add_text(f\"\u6587\u672c\u5185\u5bb9 {i}\")\n\n        # \u6d4b\u91cf\u6e32\u67d3\u65f6\u95f4\n        start_time = time.perf_counter()\n        html = email.export_str()\n        end_time = time.perf_counter()\n\n        render_time = end_time - start_time\n\n        # \u65ad\u8a00\u6e32\u67d3\u65f6\u95f4\n        assert render_time &lt; 1.0, f\"\u6e32\u67d3\u65f6\u95f4\u8fc7\u957f: {render_time:.3f}\u79d2\"\n        assert len(html) &gt; 1000, \"\u8f93\u51fa\u5185\u5bb9\u592a\u5c11\"\n\n    @pytest.mark.performance\n    def test_memory_usage(self):\n        \"\"\"\u6d4b\u8bd5\u5185\u5b58\u4f7f\u7528\"\"\"\n        process = psutil.Process(os.getpid())\n        initial_memory = process.memory_info().rss\n\n        # \u521b\u5efa\u5927\u91cf\u5bf9\u8c61\n        emails = []\n        for i in range(50):\n            email = Email(f\"\u6d4b\u8bd5\u90ae\u4ef6 {i}\")\n            for j in range(20):\n                email.add_text(f\"\u5185\u5bb9 {i}-{j}\")\n            emails.append(email)\n\n        # \u68c0\u67e5\u5185\u5b58\u589e\u957f\n        peak_memory = process.memory_info().rss\n        memory_increase = peak_memory - initial_memory\n\n        # \u65ad\u8a00\u5185\u5b58\u4f7f\u7528\u5408\u7406\uff08\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\uff09\n        assert memory_increase &lt; 100 * 1024 * 1024, f\"\u5185\u5b58\u4f7f\u7528\u8fc7\u591a: {memory_increase / 1024 / 1024:.1f}MB\"\n\n    @pytest.mark.performance\n    def test_cache_effectiveness(self):\n        \"\"\"\u6d4b\u8bd5\u7f13\u5b58\u6548\u679c\"\"\"\n        from email_widget.core.cache import Cache\n\n        cache = Cache(max_size=100)\n\n        # \u7b2c\u4e00\u6b21\u8bbf\u95ee\uff08\u672a\u7f13\u5b58\uff09\n        start_time = time.perf_counter()\n        result1 = cache.get_or_set(\"test_key\", lambda: expensive_operation())\n        first_time = time.perf_counter() - start_time\n\n        # \u7b2c\u4e8c\u6b21\u8bbf\u95ee\uff08\u5df2\u7f13\u5b58\uff09\n        start_time = time.perf_counter()\n        result2 = cache.get(\"test_key\")\n        second_time = time.perf_counter() - start_time\n\n        # \u7f13\u5b58\u5e94\u8be5\u663e\u8457\u63d0\u5347\u6027\u80fd\n        assert result1 == result2\n        assert second_time &lt; first_time / 10, \"\u7f13\u5b58\u6ca1\u6709\u663e\u8457\u63d0\u5347\u6027\u80fd\"\n\ndef expensive_operation():\n    \"\"\"\u6a21\u62df\u8017\u65f6\u64cd\u4f5c\"\"\"\n    time.sleep(0.1)\n    return \"expensive_result\"\n</code></pre>"},{"location":"zh/development/testing/#_15","title":"\ud83d\udcca \u6d4b\u8bd5\u8986\u76d6\u7387","text":""},{"location":"zh/development/testing/#_16","title":"\u751f\u6210\u8986\u76d6\u7387\u62a5\u544a","text":"PowerShell<pre><code># \u8fd0\u884c\u6d4b\u8bd5\u5e76\u751f\u6210\u8986\u76d6\u7387\u62a5\u544a\npython -m pytest --cov=email_widget --cov-report=html --cov-report=term\n\n# \u67e5\u770b HTML \u62a5\u544a\nstart htmlcov/index.html\n\n# \u53ea\u67e5\u770b\u7f3a\u5931\u8986\u76d6\u7684\u884c\npython -m pytest --cov=email_widget --cov-report=term-missing\n</code></pre>"},{"location":"zh/development/testing/#_17","title":"\u8986\u76d6\u7387\u76ee\u6807","text":"Python<pre><code># pytest.ini \u4e2d\u8bbe\u7f6e\u8986\u76d6\u7387\u8981\u6c42\n[tool:pytest]\naddopts = --cov-fail-under=90\n\n# \u6392\u9664\u67d0\u4e9b\u6587\u4ef6\n--cov-config=.coveragerc\n\n# .coveragerc \u6587\u4ef6\u5185\u5bb9\n[run]\nsource = email_widget\nomit = \n    */tests/*\n    */venv/*\n    setup.py\n    */migrations/*\n\n[report]\nexclude_lines =\n    pragma: no cover\n    def __repr__\n    raise AssertionError\n    raise NotImplementedError\n</code></pre>"},{"location":"zh/development/testing/#_18","title":"\ud83d\udd27 \u6d4b\u8bd5\u5de5\u5177\u548c\u547d\u4ee4","text":""},{"location":"zh/development/testing/#_19","title":"\u5e38\u7528\u6d4b\u8bd5\u547d\u4ee4","text":"PowerShell<pre><code># \u57fa\u672c\u6d4b\u8bd5\u8fd0\u884c\npython -m pytest\n\n# \u8be6\u7ec6\u8f93\u51fa\npython -m pytest -v\n\n# \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5\u6587\u4ef6\npython -m pytest tests/test_email.py\n\n# \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5\u65b9\u6cd5\npython -m pytest tests/test_email.py::TestEmail::test_add_widget\n\n# \u8fd0\u884c\u6807\u8bb0\u7684\u6d4b\u8bd5\npython -m pytest -m unit\npython -m pytest -m \"not slow\"\n\n# \u5e76\u884c\u8fd0\u884c\u6d4b\u8bd5\npython -m pytest -n auto\n\n# \u751f\u6210 HTML \u62a5\u544a\npython -m pytest --html=report.html --self-contained-html\n\n# \u53ea\u8fd0\u884c\u5931\u8d25\u7684\u6d4b\u8bd5\npython -m pytest --lf\n\n# \u505c\u5728\u7b2c\u4e00\u4e2a\u5931\u8d25\npython -m pytest -x\n\n# \u8be6\u7ec6\u7684\u5931\u8d25\u4fe1\u606f\npython -m pytest -vv --tb=long\n</code></pre>"},{"location":"zh/development/testing/#_20","title":"\u6d4b\u8bd5\u811a\u672c","text":"<p>\u521b\u5efa <code>scripts/run_tests.py</code> \u811a\u672c\uff1a</p> Python<pre><code>#!/usr/bin/env python\n\"\"\"\n\u6d4b\u8bd5\u8fd0\u884c\u811a\u672c\n\"\"\"\nimport subprocess\nimport sys\nimport argparse\nfrom pathlib import Path\n\ndef run_command(cmd, description):\n    \"\"\"\u8fd0\u884c\u547d\u4ee4\u5e76\u68c0\u67e5\u7ed3\u679c\"\"\"\n    print(f\"\\n\ud83d\udd04 {description}...\")\n    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)\n\n    if result.returncode == 0:\n        print(f\"\u2705 {description} \u6210\u529f\")\n        if result.stdout:\n            print(result.stdout)\n    else:\n        print(f\"\u274c {description} \u5931\u8d25\")\n        print(result.stderr)\n        return False\n    return True\n\ndef main():\n    parser = argparse.ArgumentParser(description=\"\u8fd0\u884c EmailWidget \u6d4b\u8bd5\")\n    parser.add_argument(\"--unit\", action=\"store_true\", help=\"\u53ea\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\")\n    parser.add_argument(\"--integration\", action=\"store_true\", help=\"\u53ea\u8fd0\u884c\u96c6\u6210\u6d4b\u8bd5\")\n    parser.add_argument(\"--e2e\", action=\"store_true\", help=\"\u53ea\u8fd0\u884c\u7aef\u5230\u7aef\u6d4b\u8bd5\")\n    parser.add_argument(\"--performance\", action=\"store_true\", help=\"\u53ea\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\")\n    parser.add_argument(\"--coverage\", action=\"store_true\", help=\"\u751f\u6210\u8986\u76d6\u7387\u62a5\u544a\")\n    parser.add_argument(\"--html\", action=\"store_true\", help=\"\u751f\u6210 HTML \u62a5\u544a\")\n\n    args = parser.parse_args()\n\n    # \u57fa\u672c\u6d4b\u8bd5\u547d\u4ee4\n    pytest_cmd = \"python -m pytest\"\n\n    if args.unit:\n        pytest_cmd += \" -m unit\"\n    elif args.integration:\n        pytest_cmd += \" -m integration\"\n    elif args.e2e:\n        pytest_cmd += \" -m e2e\"\n    elif args.performance:\n        pytest_cmd += \" -m performance\"\n\n    if args.coverage:\n        pytest_cmd += \" --cov=email_widget --cov-report=term-missing\"\n        if args.html:\n            pytest_cmd += \" --cov-report=html\"\n\n    if args.html:\n        pytest_cmd += \" --html=reports/test_report.html --self-contained-html\"\n\n    # \u786e\u4fdd\u62a5\u544a\u76ee\u5f55\u5b58\u5728\n    Path(\"reports\").mkdir(exist_ok=True)\n\n    # \u8fd0\u884c\u6d4b\u8bd5\n    success = run_command(pytest_cmd, \"\u8fd0\u884c\u6d4b\u8bd5\")\n\n    if success:\n        print(\"\\n\ud83c\udf89 \u6240\u6709\u6d4b\u8bd5\u901a\u8fc7!\")\n    else:\n        print(\"\\n\ud83d\udca5 \u6d4b\u8bd5\u5931\u8d25!\")\n        sys.exit(1)\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u4f7f\u7528\u811a\u672c\uff1a</p> PowerShell<pre><code># \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\npython scripts/run_tests.py\n\n# \u53ea\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\npython scripts/run_tests.py --unit\n\n# \u8fd0\u884c\u6d4b\u8bd5\u5e76\u751f\u6210\u8986\u76d6\u7387\u62a5\u544a\npython scripts/run_tests.py --coverage --html\n</code></pre>"},{"location":"zh/development/testing/#_21","title":"\ud83d\ude80 \u6301\u7eed\u96c6\u6210","text":""},{"location":"zh/development/testing/#github-actions","title":"GitHub Actions \u914d\u7f6e","text":"<p><code>.github/workflows/test.yml</code>\uff1a</p> YAML<pre><code>name: Tests\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: windows-latest\n    strategy:\n      matrix:\n        python-version: [3.10, 3.11, 3.12]\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Set up Python ${{ matrix.python-version }}\n      uses: actions/setup-python@v4\n      with:\n        python-version: ${{ matrix.python-version }}\n\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements-test.txt\n        pip install -e .\n\n    - name: Run tests\n      run: |\n        python -m pytest --cov=email_widget --cov-report=xml\n\n    - name: Upload coverage to Codecov\n      uses: codecov/codecov-action@v3\n      with:\n        file: ./coverage.xml\n        fail_ci_if_error: true\n</code></pre>"},{"location":"zh/development/testing/#_22","title":"\ud83d\udccb \u6d4b\u8bd5\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/development/testing/#_23","title":"\u6d4b\u8bd5\u539f\u5219","text":"<ol> <li>AAA \u6a21\u5f0f - Arrange, Act, Assert</li> <li>\u5355\u4e00\u804c\u8d23 - \u6bcf\u4e2a\u6d4b\u8bd5\u53ea\u9a8c\u8bc1\u4e00\u4e2a\u529f\u80fd</li> <li>\u72ec\u7acb\u6027 - \u6d4b\u8bd5\u4e4b\u95f4\u4e0d\u5e94\u76f8\u4e92\u4f9d\u8d56</li> <li>\u53ef\u91cd\u590d - \u6d4b\u8bd5\u7ed3\u679c\u5e94\u8be5\u662f\u786e\u5b9a\u7684</li> <li>\u5feb\u901f - \u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u5feb\u901f\u6267\u884c</li> </ol>"},{"location":"zh/development/testing/#_24","title":"\u6d4b\u8bd5\u547d\u540d","text":"Python<pre><code># \u597d\u7684\u6d4b\u8bd5\u540d\u79f0\ndef test_set_title_with_valid_string_updates_title():\n    pass\n\ndef test_render_returns_html_with_title_content():\n    pass\n\ndef test_add_widget_with_none_raises_type_error():\n    pass\n\n# \u907f\u514d\u7684\u6d4b\u8bd5\u540d\u79f0\ndef test_title():  # \u592a\u6a21\u7cca\n    pass\n\ndef test_1():  # \u6ca1\u6709\u610f\u4e49\n    pass\n</code></pre>"},{"location":"zh/development/testing/#_25","title":"\u6d4b\u8bd5\u6570\u636e","text":"Python<pre><code># \u4f7f\u7528\u6709\u610f\u4e49\u7684\u6d4b\u8bd5\u6570\u636e\ndef test_user_registration():\n    user_data = {\n        \"name\": \"\u5f20\u4e09\",\n        \"email\": \"zhangsan@example.com\",\n        \"age\": 25\n    }\n    # \u800c\u4e0d\u662f\n    # user_data = {\"a\": \"b\", \"c\": \"d\"}\n</code></pre>"},{"location":"zh/development/testing/#_26","title":"\u5f02\u5e38\u6d4b\u8bd5","text":"Python<pre><code>def test_invalid_input_handling():\n    \"\"\"\u6d4b\u8bd5\u65e0\u6548\u8f93\u5165\u7684\u5904\u7406\"\"\"\n    widget = TextWidget()\n\n    # \u6d4b\u8bd5\u5177\u4f53\u7684\u5f02\u5e38\u7c7b\u578b\u548c\u6d88\u606f\n    with pytest.raises(ValueError, match=\"\u5185\u5bb9\u4e0d\u80fd\u4e3a\u7a7a\"):\n        widget.set_content(\"\")\n\n    with pytest.raises(TypeError, match=\"\u5185\u5bb9\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\"):\n        widget.set_content(123)\n</code></pre>"},{"location":"zh/development/testing/#_27","title":"\ud83c\udf89 \u603b\u7ed3","text":"<p>\u9075\u5faa\u672c\u6d4b\u8bd5\u6307\u5357\uff0c\u60a8\u5c06\u80fd\u591f\uff1a</p> <ol> <li>\u7f16\u5199\u9ad8\u8d28\u91cf\u6d4b\u8bd5 - \u8986\u76d6\u5404\u79cd\u573a\u666f\u548c\u8fb9\u754c\u6761\u4ef6</li> <li>\u4fdd\u8bc1\u4ee3\u7801\u8d28\u91cf - \u901a\u8fc7\u81ea\u52a8\u5316\u6d4b\u8bd5\u53d1\u73b0\u95ee\u9898</li> <li>\u63d0\u5347\u5f00\u53d1\u6548\u7387 - \u5feb\u901f\u9a8c\u8bc1\u4fee\u6539\u7684\u6b63\u786e\u6027</li> <li>\u7ef4\u62a4\u4ee3\u7801\u7a33\u5b9a\u6027 - \u9632\u6b62\u56de\u5f52\u9519\u8bef</li> </ol> <p>\u73b0\u5728\u5f00\u59cb\u4e3a\u60a8\u7684\u4ee3\u7801\u7f16\u5199\u6d4b\u8bd5\u5427\uff01\u826f\u597d\u7684\u6d4b\u8bd5\u4e60\u60ef\u5c06\u8ba9\u60a8\u7684\u4ee3\u7801\u66f4\u52a0\u5065\u58ee\u548c\u53ef\u7ef4\u62a4\u3002\ud83e\uddea\u2728 </p>"},{"location":"zh/examples/","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u6b22\u8fce\u6765\u5230 EmailWidget \u793a\u4f8b\u4ee3\u7801\u5e93\uff01\u8fd9\u91cc\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u5e94\u7528\u793a\u4f8b\uff0c\u5e2e\u52a9\u60a8\u5feb\u901f\u638c\u63e1 EmailWidget \u7684\u6838\u5fc3\u529f\u80fd\u548c\u6700\u4f73\u5b9e\u8df5\u3002</p>"},{"location":"zh/examples/#_2","title":"\ud83c\udfaf \u7cbe\u9009\u793a\u4f8b","text":"<p>\u6211\u4eec\u7cbe\u5fc3\u6311\u9009\u4e86\u6700\u5b9e\u7528\u3001\u6700\u5e38\u7528\u7684\u793a\u4f8b\uff0c\u8ba9\u60a8\u80fd\u591f\u5feb\u901f\u4e0a\u624b\u5e76\u5e94\u7528\u5230\u5b9e\u9645\u9879\u76ee\u4e2d\u3002</p>"},{"location":"zh/examples/#_3","title":"\ud83d\ude80 \u57fa\u7840\u793a\u4f8b \u2b50 \u63a8\u8350","text":"<p>\u9002\u5408\u6240\u6709\u7528\u6237\uff0c\u6db5\u76d6\u6838\u5fc3\u529f\u80fd - \u5feb\u901f\u5165\u95e8 - \u521b\u5efa\u7b2c\u4e00\u4e2a\u90ae\u4ef6\u62a5\u544a - \u6587\u672c\u6837\u5f0f - \u5404\u79cd\u6587\u672c\u7c7b\u578b\u548c\u989c\u8272\u8bbe\u7f6e - \u6570\u636e\u5c55\u793a - \u8868\u683c\u548c\u8fdb\u5ea6\u6761\u7ec4\u5408\u4f7f\u7528 - \u7efc\u5408\u5e94\u7528 - \u5b8c\u6574\u7684\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a</p>"},{"location":"zh/examples/#_4","title":"\ud83d\udcca \u6570\u636e\u62a5\u544a","text":"<p>\u4e13\u6ce8\u4e8e\u6570\u636e\u53ef\u89c6\u5316\u548c\u5206\u6790 - \u9500\u552e\u62a5\u544a - \u4e1a\u52a1\u6570\u636e\u53ef\u89c6\u5316 - \u8d22\u52a1\u62a5\u8868 - \u56fe\u8868\u548c\u8868\u683c\u7ed3\u5408 - pandas\u96c6\u6210 - DataFrame \u65e0\u7f1d\u5bf9\u63a5</p>"},{"location":"zh/examples/#_5","title":"\ud83d\udda5\ufe0f \u7cfb\u7edf\u76d1\u63a7","text":"<p>\u8fd0\u7ef4\u548c\u76d1\u63a7\u573a\u666f\u4e13\u7528 - \u670d\u52a1\u5668\u76d1\u63a7 - \u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u5c55\u793a - \u5e94\u7528\u72b6\u6001 - \u670d\u52a1\u5065\u5eb7\u68c0\u67e5\u62a5\u544a - \u544a\u8b66\u901a\u77e5 - \u591a\u7ea7\u522b\u8b66\u544a\u7cfb\u7edf</p>"},{"location":"zh/examples/#_6","title":"\ud83c\udf0d \u5b9e\u9645\u5e94\u7528","text":"<p>\u5b8c\u6574\u7684\u4e1a\u52a1\u573a\u666f\u6848\u4f8b - \u7535\u5546\u5206\u6790 - \u5b8c\u6574\u7684\u7535\u5546\u6570\u636e\u5206\u6790\u62a5\u544a - DevOps\u4eea\u8868\u677f - \u8fd0\u7ef4\u76d1\u63a7\u7efc\u5408\u4eea\u8868\u677f - \u4e1a\u52a1\u770b\u677f - \u4f01\u4e1a\u7ea7\u4e1a\u52a1\u6307\u6807\u770b\u677f</p>"},{"location":"zh/examples/#_7","title":"\ud83c\udf93 \u5b66\u4e60\u8def\u5f84","text":""},{"location":"zh/examples/#_8","title":"\u96f6\u57fa\u7840\u7528\u6237 (\u2b50)","text":"<ol> <li>\u7b2c\u4e00\u6b65 - \u4ece \u57fa\u7840\u793a\u4f8b \u5f00\u59cb\uff0c\u8fd0\u884c\"\u5feb\u901f\u5165\u95e8\"\u793a\u4f8b</li> <li>\u7b2c\u4e8c\u6b65 - \u5b66\u4e60\u6587\u672c\u6837\u5f0f\uff0c\u638c\u63e1\u57fa\u672c\u7ec4\u4ef6\u4f7f\u7528</li> <li>\u7b2c\u4e09\u6b65 - \u5c1d\u8bd5\u6570\u636e\u5c55\u793a\u793a\u4f8b\uff0c\u5b66\u4e60\u8868\u683c\u548c\u8fdb\u5ea6\u6761</li> </ol>"},{"location":"zh/examples/#_9","title":"\u6709\u7ecf\u9a8c\u7528\u6237 (\u2b50\u2b50)","text":"<ol> <li>\u6df1\u5165\u5b66\u4e60 - \u5b8c\u6210\u57fa\u7840\u793a\u4f8b\u7684\u6240\u6709\u6848\u4f8b</li> <li>\u4e13\u4e1a\u5e94\u7528 - \u6839\u636e\u9700\u6c42\u9009\u62e9 \u6570\u636e\u62a5\u544a \u6216 \u7cfb\u7edf\u76d1\u63a7</li> <li>\u7efc\u5408\u63d0\u5347 - \u5b66\u4e60 \u5b9e\u9645\u5e94\u7528 \u7684\u5b8c\u6574\u6848\u4f8b</li> </ol>"},{"location":"zh/examples/#_10","title":"\ud83d\udccb \u793a\u4f8b\u7279\u8272","text":""},{"location":"zh/examples/#_11","title":"\u2705 \u5b8c\u6574\u53ef\u8fd0\u884c","text":"<p>\u6240\u6709\u793a\u4f8b\u4ee3\u7801\u90fd\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u8fd0\u884c\uff1a</p> Bash<pre><code># \u5b89\u88c5\u4f9d\u8d56\npip install EmailWidget\n\n# \u8fd0\u884c\u793a\u4f8b\npython your_example.py\n</code></pre>"},{"location":"zh/examples/#_12","title":"\u2705 \u5373\u65f6\u9884\u89c8","text":"<p>\u6bcf\u4e2a\u793a\u4f8b\u90fd\u63d0\u4f9bHTML\u9884\u89c8\uff0c\u8ba9\u60a8\u7acb\u5373\u770b\u5230\u6548\u679c\uff1a</p> Python<pre><code># \u793a\u4f8b\u4ee3\u7801\nemail = Email(\"\u6211\u7684\u62a5\u544a\")\nemail.add_text(\"Hello World\", TextType.TITLE_LARGE)\nemail.export_html(\"report.html\")\n</code></pre>"},{"location":"zh/examples/#_13","title":"\u2705 \u8be6\u7ec6\u8bf4\u660e","text":"<p>\u6bcf\u4e2a\u793a\u4f8b\u90fd\u5305\u542b\uff1a - \u529f\u80fd\u8bf4\u660e - \u793a\u4f8b\u7684\u7528\u9014\u548c\u9002\u7528\u573a\u666f - \u6838\u5fc3\u4ee3\u7801 - \u7cbe\u7b80\u7684\u5173\u952e\u4ee3\u7801 - \u6838\u5fc3\u8981\u70b9 - \u91cd\u8981\u6982\u5ff5\u548c\u6280\u5de7\u8bf4\u660e - \u5b9e\u65f6\u9884\u89c8 - \u76f4\u63a5\u67e5\u770b\u751f\u6210\u6548\u679c</p>"},{"location":"zh/examples/#_14","title":"\ud83d\udd0d \u5feb\u901f\u67e5\u627e","text":""},{"location":"zh/examples/#_15","title":"\u6309\u9700\u6c42\u67e5\u627e","text":"\u6211\u60f3\u8981... \u63a8\u8350\u793a\u4f8b \u94fe\u63a5 \u521b\u5efa\u7b2c\u4e00\u4e2a\u90ae\u4ef6 \u5feb\u901f\u5165\u95e8 basic.md \u8bbe\u7f6e\u6587\u672c\u6837\u5f0f \u6587\u672c\u6837\u5f0f basic.md \u663e\u793a\u6570\u636e\u8868\u683c \u6570\u636e\u5c55\u793a basic.md \u521b\u5efa\u5b8c\u6574\u62a5\u544a \u7efc\u5408\u5e94\u7528 basic.md \u5236\u4f5c\u4e1a\u52a1\u62a5\u544a \u6570\u636e\u62a5\u544a data-reports.md \u76d1\u63a7\u7cfb\u7edf\u72b6\u6001 \u7cfb\u7edf\u76d1\u63a7 system-monitoring.md \u5b66\u4e60\u6700\u4f73\u5b9e\u8df5 \u5b9e\u9645\u5e94\u7528 real-world.md"},{"location":"zh/examples/#_16","title":"\u6309\u7ec4\u4ef6\u67e5\u627e","text":"\u7ec4\u4ef6 \u4e3b\u8981\u529f\u80fd \u6700\u4f73\u793a\u4f8b TextWidget \u6587\u672c\u663e\u793a \u6587\u672c\u6837\u5f0f TableWidget \u6570\u636e\u8868\u683c \u6570\u636e\u5c55\u793a ProgressWidget \u8fdb\u5ea6\u6761 \u6570\u636e\u5c55\u793a AlertWidget \u63d0\u9192\u4fe1\u606f \u7efc\u5408\u5e94\u7528 ChartWidget \u56fe\u8868 \u6570\u636e\u62a5\u544a SeparatorWidget \u5206\u9694\u7ebf \u6587\u672c\u6837\u5f0f"},{"location":"zh/examples/#_17","title":"\ud83d\udca1 \u4f7f\u7528\u5efa\u8bae","text":""},{"location":"zh/examples/#_18","title":"\u5b66\u4e60\u7b56\u7565","text":"<ul> <li>\ud83d\udcd6 \u6309\u987a\u5e8f\u5b66\u4e60 - \u5efa\u8bae\u4ece\u57fa\u7840\u793a\u4f8b\u5f00\u59cb</li> <li>\ud83d\udd04 \u8fb9\u5b66\u8fb9\u7ec3 - \u590d\u5236\u4ee3\u7801\u5230\u672c\u5730\u8fd0\u884c</li> <li>\ud83d\udee0\ufe0f \u52a8\u624b\u4fee\u6539 - \u5c1d\u8bd5\u4fee\u6539\u53c2\u6570\u548c\u6837\u5f0f</li> <li>\ud83d\udce7 \u5b9e\u9645\u5e94\u7528 - \u5c06\u793a\u4f8b\u5e94\u7528\u5230\u771f\u5b9e\u9879\u76ee</li> </ul>"},{"location":"zh/examples/#_19","title":"\u6700\u4f73\u5b9e\u8df5","text":"<ul> <li>\ud83c\udfaf \u76ee\u6807\u660e\u786e - \u6839\u636e\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u793a\u4f8b</li> <li>\ud83d\udcdd \u8bb0\u5f55\u7b14\u8bb0 - \u8bb0\u5f55\u6709\u7528\u7684\u4ee3\u7801\u7247\u6bb5</li> <li>\ud83d\udd0d \u6df1\u5165\u7406\u89e3 - \u7406\u89e3\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u4f5c\u7528</li> <li>\ud83d\udcac \u53c2\u4e0e\u8ba8\u8bba - \u5728\u793e\u533a\u5206\u4eab\u60a8\u7684\u7ecf\u9a8c</li> </ul>"},{"location":"zh/examples/#_20","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/examples/#1","title":"1. \u73af\u5883\u51c6\u5907","text":"Bash<pre><code>pip install EmailWidget\n</code></pre>"},{"location":"zh/examples/#2","title":"2. \u9009\u62e9\u793a\u4f8b","text":"<ul> <li>\u65b0\u624b\u7528\u6237\uff1a\u4ece \u57fa\u7840\u793a\u4f8b \u5f00\u59cb</li> <li>\u6709\u7ecf\u9a8c\u7528\u6237\uff1a\u76f4\u63a5\u9009\u62e9\u76f8\u5173\u9886\u57df\u7684\u793a\u4f8b</li> </ul>"},{"location":"zh/examples/#3","title":"3. \u8fd0\u884c\u4ee3\u7801","text":"Bash<pre><code>python example.py\n</code></pre>"},{"location":"zh/examples/#4","title":"4. \u67e5\u770b\u7ed3\u679c","text":"<p>\u751f\u6210\u7684HTML\u6587\u4ef6\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\uff0c\u6216\u4f5c\u4e3a\u90ae\u4ef6\u53d1\u9001\u3002</p>"},{"location":"zh/examples/#_21","title":"\ud83d\udcc8 \u793a\u4f8b\u66f4\u65b0","text":"<p>\u6211\u4eec\u4f1a\u6301\u7eed\u66f4\u65b0\u548c\u4f18\u5316\u793a\u4f8b\u4ee3\u7801\uff0c\u786e\u4fdd\uff1a - \u2705 \u4ee3\u7801\u59cb\u7ec8\u53ef\u8fd0\u884c - \u2705 \u529f\u80fd\u8986\u76d6\u5168\u9762 - \u2705 \u6700\u4f73\u5b9e\u8df5\u6307\u5bfc - \u2705 \u5b9e\u9645\u5e94\u7528\u5bfc\u5411</p>"},{"location":"zh/examples/#_22","title":"\ud83e\udd1d \u8d21\u732e\u4ee3\u7801","text":"<p>\u5982\u679c\u60a8\u6709\u597d\u7684\u793a\u4f8b\u60f3\u6cd5\u6216\u6539\u8fdb\u5efa\u8bae\uff1a</p> <ol> <li>\u5728 GitHub Issues \u63d0\u51fa\u5efa\u8bae</li> <li>\u63d0\u4ea4 Pull Request \u8d21\u732e\u4ee3\u7801</li> <li>\u5206\u4eab\u60a8\u7684\u5b9e\u9645\u5e94\u7528\u6848\u4f8b</li> </ol> <p>\u73b0\u5728\u5f00\u59cb\u5b66\u4e60\u5427\uff01 \u5efa\u8bae\u4ece \u57fa\u7840\u793a\u4f8b \u5f00\u59cb\uff0c\u7136\u540e\u6839\u636e\u9700\u6c42\u63a2\u7d22\u66f4\u591a\u529f\u80fd\u3002</p>"},{"location":"zh/examples/basic/","title":"\u57fa\u7840\u793a\u4f8b","text":"<p>\u672c\u9875\u9762\u63d0\u4f9b EmailWidget \u7684\u6838\u5fc3\u529f\u80fd\u793a\u4f8b\uff0c\u6db5\u76d6\u6700\u5e38\u7528\u7684\u4f7f\u7528\u573a\u666f\u548c\u6700\u4f73\u5b9e\u8df5\u3002</p>"},{"location":"zh/examples/basic/#_2","title":"\ud83d\udcda \u793a\u4f8b\u6982\u89c8","text":"\u793a\u4f8b \u529f\u80fd \u6d89\u53ca\u7ec4\u4ef6 \u96be\u5ea6 \u5feb\u901f\u5165\u95e8 \u521b\u5efa\u7b2c\u4e00\u4e2a\u90ae\u4ef6\u62a5\u544a TextWidget, AlertWidget \u2b50 \u6587\u672c\u6837\u5f0f \u5404\u79cd\u6587\u672c\u7c7b\u578b\u548c\u989c\u8272 TextWidget, SeparatorWidget \u2b50 \u6570\u636e\u5c55\u793a \u8868\u683c\u548c\u8fdb\u5ea6\u6761 TableWidget, ProgressWidget \u2b50\u2b50 \u7efc\u5408\u5e94\u7528 \u5b8c\u6574\u7684\u76d1\u63a7\u62a5\u544a \u591a\u7ec4\u4ef6\u7efc\u5408 \u2b50\u2b50\u2b50"},{"location":"zh/examples/basic/#quick-start","title":"\u5feb\u901f\u5165\u95e8","text":""},{"location":"zh/examples/basic/#_3","title":"\u521b\u5efa\u7b2c\u4e00\u4e2a\u90ae\u4ef6\u62a5\u544a","text":"<p>\u8fd9\u662f\u6700\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u6807\u9898\u3001\u6587\u672c\u548c\u63d0\u793a\u7684\u57fa\u7840\u90ae\u4ef6\uff1a</p> Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import TextType, AlertType\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\nemail = Email(\"\u6211\u7684\u7b2c\u4e00\u4e2a\u62a5\u544a\")\n\n# \u6dfb\u52a0\u4e3b\u6807\u9898\nemail.add_text(\"\u6b22\u8fce\u4f7f\u7528 EmailWidget\", TextType.TITLE_LARGE)\n\n# \u6dfb\u52a0\u8bf4\u660e\u6587\u672c\nemail.add_text(\"\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u90ae\u4ef6\u62a5\u544a\u793a\u4f8b\uff0c\u5c55\u793a\u57fa\u672c\u529f\u80fd\u3002\", TextType.BODY)\n\n# \u6dfb\u52a0\u91cd\u8981\u63d0\u793a\nemail.add_alert(\"EmailWidget \u8ba9\u521b\u5efa\u7f8e\u89c2\u7684HTML\u90ae\u4ef6\u53d8\u5f97\u7b80\u5355\u5feb\u6377\uff01\", AlertType.TIP)\n\n# \u5bfc\u51fa\u4e3aHTML\u6587\u4ef6\nemail.export_html(\"my_first_report.html\")\nprint(\"\u2705 \u90ae\u4ef6\u62a5\u544a\u5df2\u751f\u6210\uff1amy_first_report.html\")\n</code></pre> \u6211\u7684\u7b2c\u4e00\u4e2a\u62a5\u544a \u6211\u7684\u7b2c\u4e00\u4e2a\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:27:24 <p>\u6b22\u8fce\u4f7f\u7528 EmailWidget</p> <p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u90ae\u4ef6\u62a5\u544a\u793a\u4f8b\uff0c\u5c55\u793a\u57fa\u672c\u529f\u80fd\u3002</p> \ud83d\udca1 \u63d0\u793a EmailWidget \u8ba9\u521b\u5efa\u7f8e\u89c2\u7684HTML\u90ae\u4ef6\u53d8\u5f97\u7b80\u5355\u5feb\u6377\uff01 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u6838\u5fc3\u8981\u70b9\uff1a - \u4f7f\u7528 <code>Email()</code> \u521b\u5efa\u90ae\u4ef6\u5bb9\u5668 - <code>add_text()</code> \u5feb\u6377\u65b9\u6cd5\u6dfb\u52a0\u6587\u672c - <code>add_alert()</code> \u5feb\u6377\u65b9\u6cd5\u6dfb\u52a0\u63d0\u793a\u4fe1\u606f - <code>export_html()</code> \u5bfc\u51fa\u4e3aHTML\u6587\u4ef6</p>"},{"location":"zh/examples/basic/#text-styles","title":"\u6587\u672c\u6837\u5f0f\u5c55\u793a","text":""},{"location":"zh/examples/basic/#_4","title":"\u5404\u79cd\u6587\u672c\u7c7b\u578b\u548c\u989c\u8272\u6837\u5f0f1.1. \u8fd9\u662f\u4e09\u7ea7\u7ae0\u8282\u6807\u9898","text":"<p>\u5c55\u793a EmailWidget \u652f\u6301\u7684\u6240\u6709\u6587\u672c\u7c7b\u578b\u548c\u989c\u8272\u8bbe\u7f6e\uff1a</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.text_widget import TextWidget\nfrom email_widget.core.enums import TextType\n\nemail = Email(\"\u6587\u672c\u6837\u5f0f\u5c55\u793a\")\n\n# \u5c55\u793a\u4e0d\u540c\u7684\u6587\u672c\u7c7b\u578b\nemail.add_text(\"\u6587\u672c\u7c7b\u578b\u5c55\u793a\", TextType.TITLE_LARGE)\n\nemail.add_text(\"\u8fd9\u662f\u5927\u6807\u9898\", TextType.TITLE_LARGE)\nemail.add_text(\"\u8fd9\u662f\u5c0f\u6807\u9898\", TextType.TITLE_SMALL)\nemail.add_text(\"\u8fd9\u662f\u4e8c\u7ea7\u7ae0\u8282\u6807\u9898\", TextType.SECTION_H2)\nemail.add_text(\"\u8fd9\u662f\u4e09\u7ea7\u7ae0\u8282\u6807\u9898\", TextType.SECTION_H3)\nemail.add_text(\"\u8fd9\u662f\u6b63\u6587\u5185\u5bb9\uff0c\u7528\u4e8e\u6bb5\u843d\u63cf\u8ff0\u548c\u8be6\u7ec6\u8bf4\u660e\u3002\", TextType.BODY)\nemail.add_text(\"\u8fd9\u662f\u8bf4\u660e\u6587\u5b57\uff0c\u901a\u5e38\u7528\u4e8e\u8865\u5145\u4fe1\u606f\u3002\", TextType.CAPTION)\n\n# \u5206\u9694\u7ebf\nemail.add_separator()\n\n# \u5e26\u989c\u8272\u7684\u6587\u672c\nemail.add_text(\"\u989c\u8272\u6837\u5f0f\u5c55\u793a\", TextType.TITLE_SMALL)\n\nblue_text = (TextWidget()\n            .set_content(\"\u8fd9\u662f\u84dd\u8272\u7684\u91cd\u8981\u6587\u672c\")\n            .set_type(TextType.BODY)\n            .set_color(\"#0078d4\"))\nemail.add_widget(blue_text)\n\ngreen_text = (TextWidget()\n             .set_content(\"\u8fd9\u662f\u7eff\u8272\u7684\u6210\u529f\u6587\u672c\")\n             .set_type(TextType.BODY)\n             .set_color(\"#107c10\"))\nemail.add_widget(green_text)\n\nred_text = (TextWidget()\n           .set_content(\"\u8fd9\u662f\u7ea2\u8272\u7684\u8b66\u544a\u6587\u672c\")\n           .set_type(TextType.BODY)\n           .set_color(\"#d13438\"))\nemail.add_widget(red_text)\n\nemail.export_html(\"text_styles.html\")\n</code></pre> \u6587\u672c\u6837\u5f0f\u5c55\u793a \u6587\u672c\u6837\u5f0f\u5c55\u793a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:27:24 <p>\u6587\u672c\u7c7b\u578b\u5c55\u793a</p> <p>\u8fd9\u662f\u5927\u6807\u9898</p> <p>\u8fd9\u662f\u5c0f\u6807\u9898</p> 1. \u8fd9\u662f\u4e8c\u7ea7\u7ae0\u8282\u6807\u9898 <p>\u8fd9\u662f\u6b63\u6587\u5185\u5bb9\uff0c\u7528\u4e8e\u6bb5\u843d\u63cf\u8ff0\u548c\u8be6\u7ec6\u8bf4\u660e\u3002</p> <p>\u8fd9\u662f\u8bf4\u660e\u6587\u5b57\uff0c\u901a\u5e38\u7528\u4e8e\u8865\u5145\u4fe1\u606f\u3002</p> <p>\u989c\u8272\u6837\u5f0f\u5c55\u793a</p> <p>\u8fd9\u662f\u84dd\u8272\u7684\u91cd\u8981\u6587\u672c</p> <p>\u8fd9\u662f\u7eff\u8272\u7684\u6210\u529f\u6587\u672c</p> <p>\u8fd9\u662f\u7ea2\u8272\u7684\u8b66\u544a\u6587\u672c</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u6838\u5fc3\u8981\u70b9\uff1a - \u652f\u6301\u591a\u79cd\u9884\u5b9a\u4e49\u6587\u672c\u7c7b\u578b\uff08\u6807\u9898\u3001\u7ae0\u8282\u3001\u6b63\u6587\u3001\u8bf4\u660e\uff09 - \u7ae0\u8282\u6807\u9898\u4f1a\u81ea\u52a8\u6dfb\u52a0\u7f16\u53f7 - \u652f\u6301\u81ea\u5b9a\u4e49\u989c\u8272\u8bbe\u7f6e - \u5206\u9694\u7b26\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u5185\u5bb9\u533a\u57df</p>"},{"location":"zh/examples/basic/#data-display","title":"\u6570\u636e\u5c55\u793a","text":""},{"location":"zh/examples/basic/#_5","title":"\u8868\u683c\u548c\u8fdb\u5ea6\u6761\u7ec4\u5408","text":"<p>\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u8868\u683c\u548c\u8fdb\u5ea6\u6761\u5c55\u793a\u9879\u76ee\u6570\u636e\uff1a</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.table_widget import TableWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\nemail = Email(\"\u6570\u636e\u5c55\u793a\u793a\u4f8b\")\n\n# \u6807\u9898\nemail.add_text(\"\u9879\u76ee\u8fdb\u5ea6\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u9879\u76ee\u6982\u51b5\nemail.add_text(\"\u9879\u76ee\u6982\u51b5\", TextType.SECTION_H2)\nemail.add_text(\"\u4ee5\u4e0b\u662f\u672c\u6708\u5404\u9879\u76ee\u7684\u8fdb\u5c55\u60c5\u51b5\uff1a\", TextType.BODY)\n\n# \u521b\u5efa\u6570\u636e\u8868\u683c\ntable = TableWidget()\ntable.set_headers([\"\u9879\u76ee\u540d\u79f0\", \"\u8d1f\u8d23\u4eba\", \"\u8fdb\u5ea6\", \"\u72b6\u6001\"])\n\n# \u6dfb\u52a0\u6570\u636e\u884c\ntable_data = [\n    [\"\u7f51\u7ad9\u91cd\u6784\", \"\u5f20\u4e09\", \"85%\", \"\u8fdb\u884c\u4e2d\"],\n    [\"\u79fb\u52a8\u5e94\u7528\", \"\u674e\u56db\", \"60%\", \"\u8fdb\u884c\u4e2d\"],\n    [\"\u6570\u636e\u5206\u6790\", \"\u738b\u4e94\", \"100%\", \"\u5df2\u5b8c\u6210\"],\n    [\"\u7cfb\u7edf\u4f18\u5316\", \"\u8d75\u516d\", \"30%\", \"\u521a\u5f00\u59cb\"]\n]\n\nfor row in table_data:\n    table.add_row(row)\n\nemail.add_widget(table)\n\n# \u5206\u9694\u7ebf\nemail.add_separator()\n\n# \u6574\u4f53\u8fdb\u5ea6\nemail.add_text(\"\u6574\u4f53\u8fdb\u5ea6\", TextType.SECTION_H2)\n\n# \u8fdb\u5ea6\u6761\u5c55\u793a\nemail.add_progress(68.7, label=\"\u9879\u76ee\u603b\u4f53\u5b8c\u6210\u5ea6\", theme=ProgressTheme.PRIMARY)\nemail.add_progress(85, label=\"\u7f51\u7ad9\u91cd\u6784\", theme=ProgressTheme.SUCCESS)\nemail.add_progress(60, label=\"\u79fb\u52a8\u5e94\u7528\", theme=ProgressTheme.PRIMARY)\nemail.add_progress(30, label=\"\u7cfb\u7edf\u4f18\u5316\", theme=ProgressTheme.PRIMARY)\n\n# \u7ed3\u8bba\nemail.add_text(\"\u603b\u7ed3\", TextType.SECTION_H2)\nemail.add_text(\"\u672c\u6708\u6574\u4f53\u8fdb\u5ea6\u826f\u597d\uff0c\u7f51\u7ad9\u91cd\u6784\u9879\u76ee\u5373\u5c06\u5b8c\u6210\uff0c\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u7cfb\u7edf\u4f18\u5316\u9879\u76ee\u7684\u8fdb\u5c55\u3002\", TextType.BODY)\n\nemail.export_html(\"data_display.html\")\n</code></pre> \u6570\u636e\u5c55\u793a\u793a\u4f8b \u6570\u636e\u5c55\u793a\u793a\u4f8b \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:27:24 <p>\u9879\u76ee\u8fdb\u5ea6\u62a5\u544a</p> 2. \u9879\u76ee\u6982\u51b5 <p>\u4ee5\u4e0b\u662f\u672c\u6708\u5404\u9879\u76ee\u7684\u8fdb\u5c55\u60c5\u51b5\uff1a</p> \u9879\u76ee\u540d\u79f0 \u8d1f\u8d23\u4eba \u8fdb\u5ea6 \u72b6\u6001 \u7f51\u7ad9\u91cd\u6784 \u5f20\u4e09 85% \u8fdb\u884c\u4e2d \u79fb\u52a8\u5e94\u7528 \u674e\u56db 60% \u8fdb\u884c\u4e2d \u6570\u636e\u5206\u6790 \u738b\u4e94 100% \u5df2\u5b8c\u6210 \u7cfb\u7edf\u4f18\u5316 \u8d75\u516d 30% \u521a\u5f00\u59cb 3. \u6574\u4f53\u8fdb\u5ea6 \u9879\u76ee\u603b\u4f53\u5b8c\u6210\u5ea6 68.7% \u7f51\u7ad9\u91cd\u6784 85.0% \u79fb\u52a8\u5e94\u7528 60.0% \u7cfb\u7edf\u4f18\u5316 30.0% 4. \u603b\u7ed3 <p>\u672c\u6708\u6574\u4f53\u8fdb\u5ea6\u826f\u597d\uff0c\u7f51\u7ad9\u91cd\u6784\u9879\u76ee\u5373\u5c06\u5b8c\u6210\uff0c\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u7cfb\u7edf\u4f18\u5316\u9879\u76ee\u7684\u8fdb\u5c55\u3002</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u6838\u5fc3\u8981\u70b9\uff1a - <code>TableWidget</code> \u7528\u4e8e\u7ed3\u6784\u5316\u6570\u636e\u5c55\u793a - <code>add_progress()</code> \u5feb\u6377\u65b9\u6cd5\u521b\u5efa\u8fdb\u5ea6\u6761 - \u4e0d\u540c\u4e3b\u9898\u7684\u8fdb\u5ea6\u6761\u8868\u793a\u4e0d\u540c\u72b6\u6001 - \u7ec4\u5408\u4f7f\u7528\u591a\u4e2a\u7ec4\u4ef6\u589e\u5f3a\u4fe1\u606f\u8868\u8fbe</p>"},{"location":"zh/examples/basic/#comprehensive","title":"\u7efc\u5408\u5e94\u7528","text":""},{"location":"zh/examples/basic/#_6","title":"\u5b8c\u6574\u7684\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a6.1. \u8d44\u6e90\u4f7f\u7528\u60c5\u51b5","text":"<p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u7ec4\u5408\u4f7f\u7528\u591a\u4e2a\u7ec4\u4ef6\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\uff1a</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.table_widget import TableWidget\nfrom email_widget.core.enums import TextType, AlertType, ProgressTheme\n\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u5468\u62a5\")\n\n# \u62a5\u544a\u6807\u9898\nemail.add_text(\"\u7cfb\u7edf\u76d1\u63a7\u5468\u62a5\", TextType.TITLE_LARGE)\nemail.add_text(\"\u76d1\u63a7\u65f6\u95f4\uff1a2024\u5e747\u67088\u65e5 - 2024\u5e747\u670814\u65e5\", TextType.CAPTION)\n\n# \u7cfb\u7edf\u72b6\u6001\u6982\u89c8\nemail.add_text(\"\u7cfb\u7edf\u72b6\u6001\u6982\u89c8\", TextType.SECTION_H2)\n\n# \u6b63\u5e38\u670d\u52a1\nemail.add_alert(\"Web\u670d\u52a1\u8fd0\u884c\u6b63\u5e38\uff0c\u54cd\u5e94\u65f6\u95f4\u7a33\u5b9a\", AlertType.TIP)\nemail.add_alert(\"\u6570\u636e\u5e93\u8fde\u63a5\u826f\u597d\uff0c\u67e5\u8be2\u6027\u80fd\u4f18\u79c0\", AlertType.TIP)\n\n# \u8b66\u544a\u4fe1\u606f\nemail.add_alert(\"\u7f13\u5b58\u670d\u52a1\u5076\u6709\u5ef6\u8fdf\uff0c\u5efa\u8bae\u5173\u6ce8\", AlertType.WARNING)\n\n# \u5206\u9694\u7ebf\nemail.add_separator()\n\n# \u6027\u80fd\u6307\u6807\nemail.add_text(\"\u5173\u952e\u6027\u80fd\u6307\u6807\", TextType.SECTION_H2)\n\n# \u6027\u80fd\u8868\u683c\nperf_table = TableWidget()\nperf_table.set_headers([\"\u6307\u6807\", \"\u5f53\u524d\u503c\", \"\u76ee\u6807\u503c\", \"\u72b6\u6001\"])\n\nperf_data = [\n    [\"CPU\u4f7f\u7528\u7387\", \"65%\", \"&lt; 80%\", \"\u6b63\u5e38\"],\n    [\"\u5185\u5b58\u4f7f\u7528\u7387\", \"72%\", \"&lt; 85%\", \"\u6b63\u5e38\"],\n    [\"\u78c1\u76d8\u4f7f\u7528\u7387\", \"45%\", \"&lt; 90%\", \"\u6b63\u5e38\"],\n    [\"\u54cd\u5e94\u65f6\u95f4\", \"120ms\", \"&lt; 200ms\", \"\u4f18\u79c0\"]\n]\n\nfor row in perf_data:\n    perf_table.add_row(row)\n\nemail.add_widget(perf_table)\n\n# \u6027\u80fd\u8fdb\u5ea6\u6761\nemail.add_text(\"\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\", TextType.SECTION_H3)\nemail.add_progress(65, label=\"CPU\u4f7f\u7528\u7387\", theme=ProgressTheme.SUCCESS)\nemail.add_progress(72, label=\"\u5185\u5b58\u4f7f\u7528\u7387\", theme=ProgressTheme.SUCCESS)\nemail.add_progress(45, label=\"\u78c1\u76d8\u4f7f\u7528\u7387\", theme=ProgressTheme.SUCCESS)\n\n# \u5206\u9694\u7ebf\nemail.add_separator()\n\n# \u603b\u7ed3\u548c\u5efa\u8bae\nemail.add_text(\"\u603b\u7ed3\u4e0e\u5efa\u8bae\", TextType.SECTION_H2)\nemail.add_text(\"\u672c\u5468\u7cfb\u7edf\u8fd0\u884c\u7a33\u5b9a\uff0c\u5404\u9879\u6307\u6807\u5747\u5728\u6b63\u5e38\u8303\u56f4\u5185\u3002\u5efa\u8bae\uff1a\", TextType.BODY)\n\n# \u5efa\u8bae\u5217\u8868\nemail.add_text(\"1. \u7ee7\u7eed\u76d1\u63a7\u7f13\u5b58\u670d\u52a1\u6027\u80fd\", TextType.BODY)\nemail.add_text(\"2. \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u54cd\u5e94\u901f\u5ea6\", TextType.BODY)\nemail.add_text(\"3. \u5b9a\u671f\u6e05\u7406\u65e5\u5fd7\u6587\u4ef6\uff0c\u4fdd\u6301\u78c1\u76d8\u7a7a\u95f4\u5145\u8db3\", TextType.BODY)\n\n# \u91cd\u8981\u63d0\u9192\nemail.add_alert(\"\u4e0b\u5468\u8ba1\u5212\u8fdb\u884c\u7cfb\u7edf\u7ef4\u62a4\uff0c\u8bf7\u63d0\u524d\u505a\u597d\u51c6\u5907\uff01\", AlertType.IMPORTANT)\n\nemail.export_html(\"system_monitoring.html\")\n</code></pre> \u7cfb\u7edf\u76d1\u63a7\u5468\u62a5 \u7cfb\u7edf\u76d1\u63a7\u5468\u62a5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:27:24 <p>\u7cfb\u7edf\u76d1\u63a7\u5468\u62a5</p> <p>\u76d1\u63a7\u65f6\u95f4\uff1a2024\u5e747\u67088\u65e5 - 2024\u5e747\u670814\u65e5</p> 5. \u7cfb\u7edf\u72b6\u6001\u6982\u89c8 \ud83d\udca1 \u63d0\u793a Web\u670d\u52a1\u8fd0\u884c\u6b63\u5e38\uff0c\u54cd\u5e94\u65f6\u95f4\u7a33\u5b9a \ud83d\udca1 \u63d0\u793a \u6570\u636e\u5e93\u8fde\u63a5\u826f\u597d\uff0c\u67e5\u8be2\u6027\u80fd\u4f18\u79c0 \u26a0\ufe0f \u8b66\u544a \u7f13\u5b58\u670d\u52a1\u5076\u6709\u5ef6\u8fdf\uff0c\u5efa\u8bae\u5173\u6ce8 6. \u5173\u952e\u6027\u80fd\u6307\u6807 \u6307\u6807 \u5f53\u524d\u503c \u76ee\u6807\u503c \u72b6\u6001 CPU\u4f7f\u7528\u7387 65% &lt; 80% \u6b63\u5e38 \u5185\u5b58\u4f7f\u7528\u7387 72% &lt; 85% \u6b63\u5e38 \u78c1\u76d8\u4f7f\u7528\u7387 45% &lt; 90% \u6b63\u5e38 \u54cd\u5e94\u65f6\u95f4 120ms &lt; 200ms \u4f18\u79c0 CPU\u4f7f\u7528\u7387 65.0% \u5185\u5b58\u4f7f\u7528\u7387 72.0% \u78c1\u76d8\u4f7f\u7528\u7387 45.0% 7. \u603b\u7ed3\u4e0e\u5efa\u8bae <p>\u672c\u5468\u7cfb\u7edf\u8fd0\u884c\u7a33\u5b9a\uff0c\u5404\u9879\u6307\u6807\u5747\u5728\u6b63\u5e38\u8303\u56f4\u5185\u3002\u5efa\u8bae\uff1a</p> <p>1. \u7ee7\u7eed\u76d1\u63a7\u7f13\u5b58\u670d\u52a1\u6027\u80fd</p> <p>2. \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u54cd\u5e94\u901f\u5ea6</p> <p>3. \u5b9a\u671f\u6e05\u7406\u65e5\u5fd7\u6587\u4ef6\uff0c\u4fdd\u6301\u78c1\u76d8\u7a7a\u95f4\u5145\u8db3</p> \u2757 \u91cd\u8981 \u4e0b\u5468\u8ba1\u5212\u8fdb\u884c\u7cfb\u7edf\u7ef4\u62a4\uff0c\u8bf7\u63d0\u524d\u505a\u597d\u51c6\u5907\uff01 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u6838\u5fc3\u8981\u70b9\uff1a - \u7ed3\u6784\u5316\u7684\u62a5\u544a\u5e03\u5c40\uff0c\u4ece\u6982\u89c8\u5230\u8be6\u7ec6\u6570\u636e - \u4e0d\u540c\u7c7b\u578b\u7684\u63d0\u9192\u4fe1\u606f\u4f20\u8fbe\u4e0d\u540c\u7a0b\u5ea6\u7684\u91cd\u8981\u6027 - \u8868\u683c\u548c\u8fdb\u5ea6\u6761\u7ed3\u5408\u5c55\u793a\u91cf\u5316\u6570\u636e - \u5408\u7406\u4f7f\u7528\u5206\u9694\u7b26\u7ec4\u7ec7\u5185\u5bb9\u5c42\u6b21</p>"},{"location":"zh/examples/basic/#_7","title":"\ud83d\ude80 \u5feb\u901f\u8fd0\u884c","text":""},{"location":"zh/examples/basic/#_8","title":"\u8fd0\u884c\u73af\u5883\u51c6\u5907","text":"Bash<pre><code># \u5b89\u88c5 EmailWidget\npip install EmailWidget\n\n# \u6216\u4ece\u6e90\u7801\u5b89\u88c5\ngit clone https://github.com/271374667/EmailWidget.git\ncd EmailWidget\npip install -e .\n</code></pre>"},{"location":"zh/examples/basic/#_9","title":"\u6279\u91cf\u8fd0\u884c\u793a\u4f8b","text":"<p>\u5c06\u4ee5\u4e0a\u4efb\u610f\u793a\u4f8b\u4ee3\u7801\u4fdd\u5b58\u4e3a <code>.py</code> \u6587\u4ef6\uff0c\u7136\u540e\u8fd0\u884c\uff1a</p> Bash<pre><code>python your_example.py\n</code></pre> <p>\u751f\u6210\u7684HTML\u6587\u4ef6\u53ef\u4ee5\uff1a - \u5728\u6d4f\u89c8\u5668\u4e2d\u76f4\u63a5\u6253\u5f00\u9884\u89c8 - \u4f5c\u4e3a\u90ae\u4ef6\u6b63\u6587\u53d1\u9001 - \u96c6\u6210\u5230\u90ae\u4ef6\u53d1\u9001\u7cfb\u7edf\u4e2d</p>"},{"location":"zh/examples/basic/#_10","title":"\u90ae\u4ef6\u53d1\u9001\u96c6\u6210","text":"Python<pre><code>from email_widget import Email, QQEmailSender\n\n# \u521b\u5efa\u90ae\u4ef6\u5185\u5bb9\nemail = Email(\"\u76d1\u63a7\u62a5\u544a\")\nemail.add_text(\"\u7cfb\u7edf\u8fd0\u884c\u6b63\u5e38\", TextType.TITLE_LARGE)\n\n# \u83b7\u53d6HTML\u5185\u5bb9\nhtml_content = email.export_str()\n\n# \u53d1\u9001\u90ae\u4ef6\uff08\u9700\u8981\u914d\u7f6eSMTP\uff09\nsender = QQEmailSender(\n    email_address=\"your_email@qq.com\",\n    password=\"your_password\"  # \u4f7f\u7528\u5e94\u7528\u5bc6\u7801\n)\n\nsender.send_email(\n    to_emails=[\"recipient@example.com\"],\n    subject=\"\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\",\n    html_body=html_content\n)\n</code></pre>"},{"location":"zh/examples/basic/#_11","title":"\ud83d\udca1 \u5b66\u4e60\u5efa\u8bae","text":""},{"location":"zh/examples/basic/#_12","title":"\u5faa\u5e8f\u6e10\u8fdb\u5b66\u4e60\u8def\u5f84","text":"<ol> <li>\u5165\u95e8\u9636\u6bb5 - \u4ece\u5feb\u901f\u5165\u95e8\u793a\u4f8b\u5f00\u59cb\uff0c\u638c\u63e1\u57fa\u672c\u6982\u5ff5</li> <li>\u6837\u5f0f\u9636\u6bb5 - \u5b66\u4e60\u6587\u672c\u6837\u5f0f\uff0c\u4e86\u89e3\u7ec4\u4ef6\u5c5e\u6027\u8bbe\u7f6e</li> <li>\u6570\u636e\u9636\u6bb5 - \u638c\u63e1\u8868\u683c\u548c\u8fdb\u5ea6\u6761\uff0c\u5904\u7406\u7ed3\u6784\u5316\u6570\u636e</li> <li>\u7efc\u5408\u9636\u6bb5 - \u7ec4\u5408\u591a\u4e2a\u7ec4\u4ef6\uff0c\u521b\u5efa\u5b8c\u6574\u5e94\u7528</li> </ol>"},{"location":"zh/examples/basic/#_13","title":"\u5b9e\u8df5\u5efa\u8bae","text":"<ul> <li>\ud83d\udcdd \u52a8\u624b\u5b9e\u8df5 - \u590d\u5236\u4ee3\u7801\u5230\u672c\u5730\u8fd0\u884c</li> <li>\ud83d\udd04 \u4fee\u6539\u53c2\u6570 - \u5c1d\u8bd5\u4fee\u6539\u989c\u8272\u3001\u6587\u5b57\u3001\u6570\u636e</li> <li>\ud83c\udfa8 \u81ea\u5b9a\u4e49\u6837\u5f0f - \u5b9e\u9a8c\u4e0d\u540c\u7684\u7ec4\u4ef6\u7ec4\u5408</li> <li>\ud83d\udce7 \u5b9e\u9645\u5e94\u7528 - \u5c06\u793a\u4f8b\u5e94\u7528\u5230\u5b9e\u9645\u9879\u76ee\u4e2d</li> </ul>"},{"location":"zh/examples/basic/#_14","title":"\u8fdb\u9636\u65b9\u5411","text":"<p>\u5b8c\u6210\u57fa\u7840\u793a\u4f8b\u540e\uff0c\u53ef\u4ee5\u63a2\u7d22\uff1a - \u6570\u636e\u62a5\u544a - \u6df1\u5165\u7684\u6570\u636e\u53ef\u89c6\u5316 - \u7cfb\u7edf\u76d1\u63a7 - \u4e13\u4e1a\u7684\u76d1\u63a7\u62a5\u544a - \u5b9e\u9645\u5e94\u7528 - \u590d\u6742\u7684\u4e1a\u52a1\u573a\u666f</p> <p>\u4e0b\u4e00\u6b65\uff1a \u5c1d\u8bd5\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\uff0c\u7136\u540e\u6839\u636e\u60a8\u7684\u9700\u6c42\u63a2\u7d22\u66f4\u591a\u529f\u80fd\uff01</p>"},{"location":"zh/examples/data-reports/","title":"\u6570\u636e\u62a5\u544a\u793a\u4f8b","text":"<p>\u672c\u9875\u9762\u5c55\u793a\u5982\u4f55\u4f7f\u7528 EmailWidget \u521b\u5efa\u4e13\u4e1a\u7684\u6570\u636e\u5206\u6790\u62a5\u544a\uff0c\u91cd\u70b9\u4ecb\u7ecd\u4e0e pandas \u548c matplotlib \u7684\u96c6\u6210\u4f7f\u7528\u3002</p>"},{"location":"zh/examples/data-reports/#_2","title":"\u9500\u552e\u6570\u636e\u62a5\u544a","text":""},{"location":"zh/examples/data-reports/#dataframe","title":"\u57fa\u4e8e DataFrame \u7684\u9500\u552e\u5206\u6790 \ud83d\udcb0 \u603b\u9500\u552e\u989d                  \ud83d\udccb \u603b\u8ba2\u5355\u6570                  \ud83d\udc64 \u5e73\u5747\u5ba2\u5355\u4ef7                  \ud83d\udcc8 \u589e\u957f\u7387                 \u9500\u552e\u989d\u6708\u5ea6\u8d8b\u52bf","text":"Python<pre><code>import pandas as pd\nfrom email_widget import Email, TableWidget, ChartWidget, TextWidget\nfrom email_widget.core.enums import TextType, TextAlign\nimport matplotlib.pyplot as plt\n\n# \u521b\u5efa\u9500\u552e\u6570\u636e\nsales_data = {\n    '\u6708\u4efd': ['1\u6708', '2\u6708', '3\u6708', '4\u6708', '5\u6708', '6\u6708'],\n    '\u9500\u552e\u989d': [150000, 180000, 220000, 195000, 250000, 280000],\n    '\u8ba2\u5355\u6570': [450, 520, 680, 590, 720, 850],\n    '\u5ba2\u5355\u4ef7': [333, 346, 324, 331, 347, 329]\n}\n\ndf = pd.DataFrame(sales_data)\n\n# \u521b\u5efa\u90ae\u4ef6\u62a5\u544a\nemail = Email(\"2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u62a5\u544a\")\n\n# \u62a5\u544a\u6807\u9898\nemail.add_title(\"\ud83d\udcca 2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u5206\u6790\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u62a5\u544a\u751f\u6210\u65f6\u95f4: {pd.Timestamp.now().strftime('%Y-%m-%d %H:%M')}\", \n               align=TextAlign.RIGHT, color=\"#666666\")\n\n# \u5173\u952e\u6307\u6807\u6c47\u603b\nemail.add_title(\"\ud83d\udcc8 \u5173\u952e\u6307\u6807\", TextType.SECTION_H2)\n\n# \u8ba1\u7b97\u603b\u4f53\u6307\u6807\ntotal_sales = df['\u9500\u552e\u989d'].sum()\ntotal_orders = df['\u8ba2\u5355\u6570'].sum()\navg_order_value = df['\u5ba2\u5355\u4ef7'].mean()\ngrowth_rate = ((df['\u9500\u552e\u989d'].iloc[-1] - df['\u9500\u552e\u989d'].iloc[0]) / df['\u9500\u552e\u989d'].iloc[0]) * 100\n\n# \u4f7f\u7528\u5361\u7247\u5c55\u793a\u5173\u952e\u6307\u6807\nmetrics = [\n    (\"\u603b\u9500\u552e\u989d\", f\"\u00a5{total_sales:,}\", \"\ud83d\udcb0\"),\n    (\"\u603b\u8ba2\u5355\u6570\", f\"{total_orders:,}\", \"\ud83d\udccb\"),\n    (\"\u5e73\u5747\u5ba2\u5355\u4ef7\", f\"\u00a5{avg_order_value:.0f}\", \"\ud83d\udc64\"),\n    (\"\u589e\u957f\u7387\", f\"{growth_rate:.1f}%\", \"\ud83d\udcc8\")\n]\n\nfor title, value, icon in metrics:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u8be6\u7ec6\u6570\u636e\u8868\u683c\nemail.add_title(\"\ud83d\udccb \u8be6\u7ec6\u6570\u636e\", TextType.SECTION_H2)\n\n# \u76f4\u63a5\u4ece DataFrame \u521b\u5efa\u8868\u683c\ntable = TableWidget()\ntable.set_headers(df.columns.tolist())\n\n# \u6dfb\u52a0\u6570\u636e\u884c\u5e76\u683c\u5f0f\u5316\nfor _, row in df.iterrows():\n    formatted_row = [\n        row['\u6708\u4efd'],\n        f\"\u00a5{row['\u9500\u552e\u989d']:,}\",  # \u683c\u5f0f\u5316\u91d1\u989d\n        f\"{row['\u8ba2\u5355\u6570']:,}\",    # \u683c\u5f0f\u5316\u6570\u91cf\n        f\"\u00a5{row['\u5ba2\u5355\u4ef7']:.0f}\" # \u683c\u5f0f\u5316\u5ba2\u5355\u4ef7\n    ]\n    table.add_row(formatted_row)\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u8d8b\u52bf\u5206\u6790\nemail.add_title(\"\ud83d\udcc9 \u8d8b\u52bf\u5206\u6790\", TextType.SECTION_H2)\n\n# \u521b\u5efa\u8d8b\u52bf\u56fe\u8868\nplt.figure(figsize=(10, 6))\nplt.plot(df['\u6708\u4efd'], df['\u9500\u552e\u989d'], marker='o', linewidth=2, label='\u9500\u552e\u989d')\nplt.title('\u9500\u552e\u989d\u8d8b\u52bf', fontsize=14)\nplt.xlabel('\u6708\u4efd')\nplt.ylabel('\u9500\u552e\u989d (\u5143)')\nplt.grid(True, alpha=0.3)\nplt.xticks(rotation=45)\nplt.tight_layout()\n\n# \u4fdd\u5b58\u56fe\u8868\nchart_path = \"sales_trend.png\"\nplt.savefig(chart_path, dpi=150, bbox_inches='tight')\nplt.close()\n\n# \u6dfb\u52a0\u56fe\u8868\u5230\u90ae\u4ef6\nchart = ChartWidget()\nchart.set_chart_path(chart_path) \\\n     .set_title(\"\u9500\u552e\u989d\u6708\u5ea6\u8d8b\u52bf\") \\\n     .set_description(\"\u663e\u793a\u4e0a\u534a\u5e74\u9500\u552e\u989d\u7684\u6708\u5ea6\u53d8\u5316\u60c5\u51b5\")\nemail.add_widget(chart)\n\n# \u5206\u6790\u603b\u7ed3\nemail.add_title(\"\ud83d\udca1 \u5206\u6790\u603b\u7ed3\", TextType.SECTION_H2)\nsummary_text = f\"\"\"\n\u6839\u636e\u4e0a\u534a\u5e74\u6570\u636e\u5206\u6790\uff1a\n\n\u2705 **\u79ef\u6781\u6307\u6807**\n\u2022 \u9500\u552e\u989d\u7a33\u6b65\u589e\u957f\uff0c\u603b\u589e\u957f\u7387\u8fbe\u5230 {growth_rate:.1f}%\n\u2022 6\u6708\u4efd\u521b\u9020\u4e86\u5355\u6708\u6700\u9ad8\u9500\u552e\u989d \u00a5{df['\u9500\u552e\u989d'].max():,}\n\u2022 \u8ba2\u5355\u6570\u6301\u7eed\u589e\u957f\uff0c\u663e\u793a\u5ba2\u6237\u57fa\u7840\u6269\u5927\n\n\u26a0\ufe0f **\u9700\u8981\u5173\u6ce8**\n\u2022 4\u6708\u4efd\u51fa\u73b0\u5c0f\u5e45\u56de\u843d\uff0c\u9700\u5206\u6790\u539f\u56e0\n\u2022 \u5ba2\u5355\u4ef7\u6ce2\u52a8\u8f83\u5927\uff0c\u5efa\u8bae\u4f18\u5316\u4ea7\u54c1\u7ed3\u6784\n\n\ud83c\udfaf **\u4e0b\u534a\u5e74\u5efa\u8bae**\n\u2022 \u4fdd\u6301\u589e\u957f\u52bf\u5934\uff0c\u76ee\u6807\u5e74\u9500\u552e\u989d \u00a5{total_sales * 2:,}\n\u2022 \u52a0\u5f3a4\u6708\u4efd\u540c\u671f\u5e02\u573a\u6d3b\u52a8\n\u2022 \u7a33\u5b9a\u5ba2\u5355\u4ef7\uff0c\u63d0\u5347\u4ea7\u54c1\u4ef7\u503c\n\"\"\"\n\nemail.add_text(summary_text.strip())\n\nemail.export_html(\"sales_report.html\")\nprint(\"\u2705 \u9500\u552e\u6570\u636e\u62a5\u544a\u5df2\u751f\u6210\uff1asales_report.html\")\n</code></pre> 2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u62a5\u544a 2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:27:39 <p>\ud83d\udcca 2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u6570\u636e\u5206\u6790</p> <p>\u62a5\u544a\u751f\u6210\u65f6\u95f4: 2025-07-07 23:27</p> 1. \ud83d\udcc8 \u5173\u952e\u6307\u6807 \u00a51,275,000 3,810 \u00a5335 86.7% 2. \ud83d\udccb \u8be6\u7ec6\u6570\u636e \u6708\u4efd \u9500\u552e\u989d \u8ba2\u5355\u6570 \u5ba2\u5355\u4ef7 1\u6708 \u00a5150,000 450 \u00a5333 2\u6708 \u00a5180,000 520 \u00a5346 3\u6708 \u00a5220,000 680 \u00a5324 4\u6708 \u00a5195,000 590 \u00a5331 5\u6708 \u00a5250,000 720 \u00a5347 6\u6708 \u00a5280,000 850 \u00a5329 3. \ud83d\udcc9 \u8d8b\u52bf\u5206\u6790 <p>\u663e\u793a\u4e0a\u534a\u5e74\u9500\u552e\u989d\u7684\u6708\u5ea6\u53d8\u5316\u60c5\u51b5</p> 4. \ud83d\udca1 \u5206\u6790\u603b\u7ed3 <p>\u6839\u636e\u4e0a\u534a\u5e74\u6570\u636e\u5206\u6790\uff1a</p> <p>\u2705 **\u79ef\u6781\u6307\u6807**</p> <p>\u2022 \u9500\u552e\u989d\u7a33\u6b65\u589e\u957f\uff0c\u603b\u589e\u957f\u7387\u8fbe\u5230 86.7%</p> <p>\u2022 6\u6708\u4efd\u521b\u9020\u4e86\u5355\u6708\u6700\u9ad8\u9500\u552e\u989d \u00a5280,000</p> <p>\u2022 \u8ba2\u5355\u6570\u6301\u7eed\u589e\u957f\uff0c\u663e\u793a\u5ba2\u6237\u57fa\u7840\u6269\u5927</p> <p>\u26a0\ufe0f **\u9700\u8981\u5173\u6ce8**</p> <p>\u2022 4\u6708\u4efd\u51fa\u73b0\u5c0f\u5e45\u56de\u843d\uff0c\u9700\u5206\u6790\u539f\u56e0</p> <p>\u2022 \u5ba2\u5355\u4ef7\u6ce2\u52a8\u8f83\u5927\uff0c\u5efa\u8bae\u4f18\u5316\u4ea7\u54c1\u7ed3\u6784</p> <p>\ud83c\udfaf **\u4e0b\u534a\u5e74\u5efa\u8bae**</p> <p>\u2022 \u4fdd\u6301\u589e\u957f\u52bf\u5934\uff0c\u76ee\u6807\u5e74\u9500\u552e\u989d \u00a52,550,000</p> <p>\u2022 \u52a0\u5f3a4\u6708\u4efd\u540c\u671f\u5e02\u573a\u6d3b\u52a8</p> <p>\u2022 \u7a33\u5b9a\u5ba2\u5355\u4ef7\uff0c\u63d0\u5347\u4ea7\u54c1\u4ef7\u503c</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u529f\u80fd\u7279\u70b9\uff1a - \u81ea\u52a8\u8ba1\u7b97\u5173\u952e\u4e1a\u52a1\u6307\u6807 - DataFrame \u6570\u636e\u76f4\ufffd\ufffd\ufffd\u8f6c\u6362\u4e3a\u8868\u683c - \u96c6\u6210 matplotlib \u751f\u6210\u8d8b\u52bf\u56fe - \u6570\u636e\u683c\u5f0f\u5316\u548c\u7f8e\u5316\u5c55\u793a</p>"},{"location":"zh/examples/data-reports/#_3","title":"\u8d22\u52a1\u62a5\u8868","text":""},{"location":"zh/examples/data-reports/#_4","title":"\u635f\u76ca\u8868\u5c55\u793a \ud83d\udcb0 \u8425\u4e1a\u6536\u5165                  \ud83d\udcc8 \u51c0\u5229\u6da6                  \ud83d\udcca \u6bdb\u5229\u7387                  \ud83c\udfaf \u51c0\u5229\u7387","text":"Python<pre><code>import pandas as pd\nfrom email_widget import Email, TableWidget, ProgressWidget, AlertWidget\nfrom email_widget.core.enums import TextType, ProgressTheme, AlertType\n\n# \u8d22\u52a1\u6570\u636e\nfinancial_data = {\n    '\u79d1\u76ee': ['\u8425\u4e1a\u6536\u5165', '\u8425\u4e1a\u6210\u672c', '\u6bdb\u5229\u6da6', '\u9500\u552e\u8d39\u7528', '\u7ba1\u7406\u8d39\u7528', '\u8d22\u52a1\u8d39\u7528', '\u8425\u4e1a\u5229\u6da6', '\u51c0\u5229\u6da6'],\n    '\u672c\u671f\u91d1\u989d': [2800000, 1680000, 1120000, 280000, 350000, 45000, 445000, 356000],\n    '\u4e0a\u671f\u91d1\u989d': [2400000, 1440000, 960000, 240000, 320000, 40000, 360000, 288000],\n    '\u9884\u7b97\u91d1\u989d': [3000000, 1800000, 1200000, 300000, 360000, 50000, 490000, 392000]\n}\n\ndf_financial = pd.DataFrame(financial_data)\n\n# \u8ba1\u7b97\u540c\u6bd4\u548c\u9884\u7b97\u5b8c\u6210\u7387\ndf_financial['\u540c\u6bd4\u589e\u957f'] = ((df_financial['\u672c\u671f\u91d1\u989d'] - df_financial['\u4e0a\u671f\u91d1\u989d']) / df_financial['\u4e0a\u671f\u91d1\u989d'] * 100).round(1)\ndf_financial['\u9884\u7b97\u5b8c\u6210\u7387'] = (df_financial['\u672c\u671f\u91d1\u989d'] / df_financial['\u9884\u7b97\u91d1\u989d'] * 100).round(1)\n\n# \u521b\u5efa\u8d22\u52a1\u62a5\u544a\nemail = Email(\"2024\u5e74Q2\u8d22\u52a1\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udcbc 2024\u5e74\u7b2c\u4e8c\u5b63\u5ea6\u8d22\u52a1\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u6838\u5fc3\u8d22\u52a1\u6307\u6807\nemail.add_title(\"\ud83c\udfaf \u6838\u5fc3\u6307\u6807\", TextType.SECTION_H2)\n\n# \u5173\u952e\u6307\u6807\u5361\u7247\nkey_metrics = [\n    (\"\u8425\u4e1a\u6536\u5165\", df_financial.loc[0, '\ufffd\ufffd\ufffd\u671f\u91d1\u989d'], \"\ud83d\udcb0\"),\n    (\"\u51c0\u5229\u6da6\", df_financial.loc[7, '\u672c\u671f\u91d1\u989d'], \"\ud83d\udcc8\"),\n    (\"\u6bdb\u5229\u7387\", f\"{(df_financial.loc[2, '\u672c\u671f\u91d1\u989d'] / df_financial.loc[0, '\u672c\u671f\u91d1\u989d'] * 100):.1f}%\", \"\ud83d\udcca\"),\n    (\"\u51c0\u5229\u7387\", f\"{(df_financial.loc[7, '\u672c\u671f\u91d1\u989d'] / df_financial.loc[0, '\u672c\u671f\u91d1\u989d'] * 100):.1f}%\", \"\ud83c\udfaf\")\n]\n\nfor title, value, icon in key_metrics:\n    if isinstance(value, (int, float)):\n        value = f\"\u00a5{value:,}\"\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u8d22\u52a1\u6570\u636e\u8be6\u8868\nemail.add_title(\"\ud83d\udcca \u8d22\u52a1\u660e\u7ec6\", TextType.SECTION_H2)\n\ntable = TableWidget()\ntable.set_headers(['\u79d1\u76ee', '\u672c\u671f\u91d1\u989d', '\u4e0a\u671f\u91d1\u989d', '\u540c\u6bd4\u589e\u957f', '\u9884\u7b97\u5b8c\u6210\u7387'])\n\nfor _, row in df_financial.iterrows():\n    formatted_row = [\n        row['\u79d1\u76ee'],\n        f\"\u00a5{row['\u672c\u671f\u91d1\u989d']:,}\",\n        f\"\u00a5{row['\u4e0a\u671f\u91d1\u989d']:,}\",\n        f\"{row['\u540c\u6bd4\u589e\u957f']:+.1f}%\",\n        f\"{row['\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\"\n    ]\n    table.add_row(formatted_row)\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u9884\u7b97\u6267\u884c\u60c5\u51b5\nemail.add_title(\"\ud83c\udfaf \u9884\u7b97\u6267\u884c\u5206\u6790\", TextType.SECTION_H2)\n\n# \u4e3a\u4e3b\u8981\u79d1\u76ee\u663e\u793a\u9884\u7b97\u5b8c\u6210\u8fdb\u5ea6\nkey_items = ['\u8425\u4e1a\u6536\u5165', '\u8425\u4e1a\u5229\u6da6', '\u51c0\u5229\u6da6']\nfor item in key_items:\n    row = df_financial[df_financial['\u79d1\u76ee'] == item].iloc[0]\n    completion_rate = row['\u9884\u7b97\u5b8c\u6210\u7387']\n\n    # \u6839\u636e\u5b8c\u6210\u7387\u9009\u62e9\u4e3b\u9898\u8272\n    if completion_rate &gt;= 100:\n        theme = ProgressTheme.SUCCESS\n    elif completion_rate &gt;= 80:\n        theme = ProgressTheme.INFO\n    elif completion_rate &gt;= 60:\n        theme = ProgressTheme.WARNING\n    else:\n        theme = ProgressTheme.ERROR\n\n    email.add_text(f\"\ud83d\udccb {item}\")\n    email.add_progress(\n        value=min(completion_rate, 100),  # \u9650\u5236\u5728100%\u5185\u663e\u793a\n        label=f\"\u9884\u7b97\u5b8c\u6210\u7387: {completion_rate:.1f}%\",\n        theme=theme\n    )\n\n# \u98ce\u9669\u63d0\u793a\nemail.add_title(\"\u26a0\ufe0f \u98ce\u9669\u63d0\u793a\", TextType.SECTION_H2)\n\n# \u5206\u6790\u9884\u7b97\u5b8c\u6210\u60c5\u51b5\uff0c\u751f\u6210\u63d0\u9192\nrisk_items = df_financial[df_financial['\u9884\u7b97\u5b8c\u6210\u7387'] &lt; 90]\nif not risk_items.empty:\n    for _, item in risk_items.iterrows():\n        alert_type = AlertType.WARNING if item['\u9884\u7b97\u5b8c\u6210\u7387'] &gt;= 80 else AlertType.CAUTION\n        email.add_alert(\n            f\"{item['\u79d1\u76ee']}\u9884\u7b97\u5b8c\u6210\u7387\u4ec5\u4e3a{item['\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\uff0c\u9700\u8981\u91cd\u70b9\u5173\u6ce8\",\n            alert_type,\n            \"\u9884\u7b97\u6267\u884c\u9884\u8b66\"\n        )\n\n# \u8d22\u52a1\u5206\u6790\nemail.add_title(\"\ud83d\udcc8 \u8d22\u52a1\u5206\u6790\", TextType.SECTION_H2)\n\nrevenue_growth = df_financial.loc[0, '\u540c\u6bd4\u589e\u957f']\nprofit_growth = df_financial.loc[7, '\u540c\u6bd4\u589e\u957f']\n\nanalysis = f\"\"\"\n**\u7ecf\u8425\u4e1a\u7ee9\u5206\u6790\uff1a**\n\n\ud83d\udcca **\u6536\u5165\u5206\u6790**\n\u2022 \u8425\u4e1a\u6536\u5165\u540c\u6bd4\u589e\u957f {revenue_growth:.1f}%\uff0c\u8868\u73b0{('\u4f18\u79c0' if revenue_growth &gt; 15 else '\u826f\u597d' if revenue_growth &gt; 5 else '\u4e00\u822c')}\n\u2022 \u6536\u5165\u9884\u7b97\u5b8c\u6210\u7387 {df_financial.loc[0, '\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\n\n\ud83d\udcb0 **\u76c8\u5229\u80fd\u529b**\n\u2022 \u51c0\u5229\u6da6\u540c\u6bd4\u589e\u957f {profit_growth:.1f}%\uff0c\u76c8\u5229\u80fd\u529b{'\u663e\u8457\u63d0\u5347' if profit_growth &gt; 20 else '\u7a33\u6b65\u63d0\u5347' if profit_growth &gt; 0 else '\u6709\u6240\u4e0b\u964d'}\n\u2022 \u51c0\u5229\u7387 {(df_financial.loc[7, '\u672c\u671f\u91d1\u989d'] / df_financial.loc[0, '\u672c\u671f\u91d1\u989d'] * 100):.1f}%\uff0c\u4fdd\u6301\u5065\u5eb7\u6c34\u5e73\n\n\ud83c\udfaf **\u9884\u7b97\u6267\u884c**\n\u2022 \u8425\u4e1a\u6536\u5165\u9884\u7b97\u5b8c\u6210\u7387 {df_financial.loc[0, '\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\n\u2022 \u51c0\u5229\u6da6\u9884\u7b97\u5b8c\u6210\u7387 {df_financial.loc[7, '\u9884\u7b97\u5b8c\u6210\u7387']:.1f}%\n\"\"\"\n\nemail.add_text(analysis.strip())\n\nemail.export_html(\"financial_report.html\")\nprint(\"\u2705 \u8d22\u52a1\u62a5\u544a\u5df2\u751f\u6210\uff1afinancial_report.html\")\n</code></pre> 2024\u5e74Q2\u8d22\u52a1\u62a5\u544a 2024\u5e74Q2\u8d22\u52a1\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:30:18 <p>\ud83d\udcbc 2024\u5e74\u7b2c\u4e8c\u5b63\u5ea6\u8d22\u52a1\u62a5\u544a</p> 1. \ud83c\udfaf \u6838\u5fc3\u6307\u6807 2800000 356000 40.0% 12.7% 2. \ud83d\udcca \u8d22\u52a1\u660e\u7ec6 \u79d1\u76ee \u672c\u671f\u91d1\u989d \u4e0a\u671f\u91d1\u989d \u540c\u6bd4\u589e\u957f \u9884\u7b97\u5b8c\u6210\u7387 \u8425\u4e1a\u6536\u5165 \u00a52,800,000 \u00a52,400,000 16.7% 93.3% \u8425\u4e1a\u6210\u672c \u00a51,680,000 \u00a51,440,000 16.7% 93.3% \u6bdb\u5229\u6da6 \u00a51,120,000 \u00a5960,000 16.7% 93.3% \u9500\u552e\u8d39\u7528 \u00a5280,000 \u00a5240,000 16.7% 93.3% \u7ba1\u7406\u8d39\u7528 \u00a5350,000 \u00a5320,000 9.4% 97.2% \u8d22\u52a1\u8d39\u7528 \u00a545,000 \u00a540,000 12.5% 90.0% \u8425\u4e1a\u5229\u6da6 \u00a5445,000 \u00a5360,000 23.6% 90.8% \u51c0\u5229\u6da6 \u00a5356,000 \u00a5288,000 23.6% 90.8% 3. \ud83c\udfaf \u9884\u7b97\u6267\u884c\u5206\u6790 <p>\ud83d\udccb \u8425\u4e1a\u6536\u5165</p> \u9884\u7b97\u5b8c\u6210\u7387: 93.3% 93.3% <p>\ud83d\udccb \u8425\u4e1a\u5229\u6da6</p> \u9884\u7b97\u5b8c\u6210\u7387: 90.8% 90.8% <p>\ud83d\udccb \u51c0\u5229\u6da6</p> \u9884\u7b97\u5b8c\u6210\u7387: 90.8% 90.8% 4. \u26a0\ufe0f \u98ce\u9669\u63d0\u793a 5. \ud83d\udcc8 \u8d22\u52a1\u5206\u6790 <p>**\u7ecf\u8425\u4e1a\u7ee9\u5206\u6790\uff1a**</p> <p>\ud83d\udcca **\u6536\u5165\u5206\u6790**</p> <p>\u2022 \u8425\u4e1a\u6536\u5165\u540c\u6bd4\u589e\u957f 16.7%\uff0c\u8868\u73b0\u4f18\u79c0</p> <p>\u2022 \u6536\u5165\u9884\u7b97\u5b8c\u6210\u7387 93.3%</p> <p>\ud83d\udcb0 **\u76c8\u5229\u80fd\u529b**</p> <p>\u2022 \u51c0\u5229\u6da6\u540c\u6bd4\u589e\u957f 23.6%\uff0c\u76c8\u5229\u80fd\u529b\u663e\u8457\u63d0\u5347</p> <p>\u2022 \u51c0\u5229\u7387 12.7%\uff0c\u4fdd\u6301\u5065\u5eb7\u6c34\u5e73</p> <p>\ud83c\udfaf **\u9884\u7b97\u6267\u884c**</p> <p>\u2022 \u8425\u4e1a\u6536\u5165\u9884\u7b97\u5b8c\u6210\u7387 93.3%</p> <p>\u2022 \u51c0\u5229\u6da6\u9884\u7b97\u5b8c\u6210\u7387 90.8%</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u4e13\u4e1a\u7279\u8272\uff1a - \u5b8c\u6574\u7684\u8d22\u52a1\u62a5\u8868\u7ed3\u6784 - \u81ea\u52a8\u8ba1\u7b97\u540c\u6bd4\u589e\u957f\u548c\u9884\u7b97\u5b8c\u6210\u7387 - \u98ce\u9669\u9884\u8b66\u548c\u667a\u80fd\u63d0\u9192 - \u4e13\u4e1a\u7684\u8d22\u52a1\u5206\u6790\u7528\u8bed</p>"},{"location":"zh/examples/data-reports/#_5","title":"\u4ea7\u54c1\u5206\u6790\u62a5\u8868","text":""},{"location":"zh/examples/data-reports/#_6","title":"\u591a\u7ef4\u5ea6\u4ea7\u54c1\u6570\u636e\u5206\u6790 \ud83d\udcb0 \u603b\u9500\u552e\u989d                  \ud83d\udcc8 \u603b\u6bdb\u5229\u6da6                  \u2b50 \u5e73\u5747\u8bc4\u5206                  \ud83c\udfc6 \u6700\u4f73\u9500\u91cf                 \u4ea7\u54c1\u9500\u552e\u989d\u5206\u5e03\u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5173\u7cfb","text":"Python<pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom email_widget import Email, ChartWidget, TableWidget\nfrom email_widget.core.enums import TextType\n\n# \u8bbe\u7f6e\u4e2d\u6587\u5b57\u4f53\uff08\u6839\u636e\u7cfb\u7edf\u8c03\u6574\uff09\nplt.rcParams['font.sans-serif'] = ['SimHei', 'Arial Unicode MS', 'DejaVu Sans']\nplt.rcParams['axes.unicode_minus'] = False\n\n# \u4ea7\u54c1\u9500\u552e\u6570\u636e\nproducts_data = {\n    '\u4ea7\u54c1\u540d\u79f0': ['\u667a\u80fd\u624b\u673aA', '\u667a\u80fd\u624b\u673aB', '\u5e73\u677f\u7535\u8111C', '\u7b14\u8bb0\u672cD', '\u8033\u673aE', '\u5145\u7535\u5668F'],\n    '\u9500\u552e\u6570\u91cf': [1200, 800, 600, 450, 2000, 1500],\n    '\u5355\u4ef7': [2999, 3999, 1999, 5999, 299, 99],\n    '\u6210\u672c': [2100, 2800, 1400, 4200, 180, 60],\n    '\u5e93\u5b58': [300, 150, 200, 100, 500, 800],\n    '\u8bc4\u5206': [4.5, 4.7, 4.2, 4.8, 4.3, 4.0]\n}\n\ndf_products = pd.DataFrame(products_data)\n\n# \u8ba1\u7b97\u884d\u751f\u6307\u6807\ndf_products['\u9500\u552e\u989d'] = df_products['\u9500\u552e\u6570\u91cf'] * df_products['\u5355\u4ef7']\ndf_products['\u6bdb\u5229\u6da6'] = (df_products['\u5355\u4ef7'] - df_products['\u6210\u672c']) * df_products['\u9500\u552e\u6570\u91cf']\ndf_products['\u6bdb\u5229\u7387'] = ((df_products['\u5355\u4ef7'] - df_products['\u6210\u672c']) / df_products['\u5355\u4ef7'] * 100).round(1)\ndf_products['\u5e93\u5b58\u5468\u8f6c'] = (df_products['\u9500\u552e\u6570\u91cf'] / (df_products['\u5e93\u5b58'] + df_products['\u9500\u552e\u6570\u91cf']) * 100).round(1)\n\n# \u521b\u5efa\u4ea7\u54c1\u5206\u6790\u62a5\u544a\nemail = Email(\"\u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udcf1 \u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u4ea7\u54c1\u7ec4\u5408\u6982\u89c8\nemail.add_title(\"\ud83c\udfaf \u4ea7\u54c1\u7ec4\u5408\u6982\u89c8\", TextType.SECTION_H2)\n\n# \u8ba1\u7b97\u603b\u4f53\u6307\u6807\ntotal_revenue = df_products['\u9500\u552e\u989d'].sum()\ntotal_profit = df_products['\u6bdb\u5229\u6da6'].sum()\navg_rating = df_products['\u8bc4\u5206'].mean()\nbest_seller = df_products.loc[df_products['\u9500\u552e\u6570\u91cf'].idxmax(), '\u4ea7\u54c1\u540d\u79f0']\n\noverview_metrics = [\n    (\"\u603b\u9500\u552e\u989d\", f\"\u00a5{total_revenue:,}\", \"\ud83d\udcb0\"),\n    (\"\u603b\u6bdb\u5229\u6da6\", f\"\u00a5{total_profit:,}\", \"\ud83d\udcc8\"),\n    (\"\u5e73\u5747\u8bc4\u5206\", f\"{avg_rating:.1f}\u2605\", \"\u2b50\"),\n    (\"\u6700\u4f73\u9500\u91cf\", best_seller, \"\ud83c\udfc6\")\n]\n\nfor title, value, icon in overview_metrics:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u4ea7\u54c1\u660e\u7ec6\u8868\nemail.add_title(\"\ud83d\udcca \u4ea7\u54c1\u9500\u552e\u660e\u7ec6\", TextType.SECTION_H2)\n\ntable = TableWidget()\ntable.set_headers(['\u4ea7\u54c1', '\u6570\u91cf', '\u5355\u4ef7', '\u9500\u552e\u989d', '\u6bdb\u5229\u7387', '\u8bc4\u5206'])\n\nfor _, row in df_products.iterrows():\n    formatted_row = [\n        row['\u4ea7\u54c1\u540d\u79f0'],\n        f\"{row['\u9500\u552e\u6570\u91cf']:,}\",\n        f\"\u00a5{row['\u5355\u4ef7']:,}\",\n        f\"\u00a5{row['\u9500\u552e\u989d']:,}\",\n        f\"{row['\u6bdb\u5229\u7387']:.1f}%\",\n        f\"{row['\u8bc4\u5206']:.1f}\u2605\"\n    ]\n    table.add_row(formatted_row)\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u9500\u552e\u989d\u5206\u5e03\u56fe\nemail.add_title(\"\ud83d\udcc8 \u9500\u552e\u989d\u5206\u5e03\", TextType.SECTION_H2)\n\nplt.figure(figsize=(10, 6))\ncolors = plt.cm.Set3(range(len(df_products)))\nplt.pie(df_products['\u9500\u552e\u989d'], labels=df_products['\u4ea7\u54c1\u540d\u79f0'], \n        autopct='%1.1f%%', startangle=90, colors=colors)\nplt.title('\u5404\u4ea7\u54c1\u9500\u552e\u989d\u5360\u6bd4', fontsize=14)\nplt.axis('equal')\n\npie_chart_path = \"sales_distribution.png\"\nplt.savefig(pie_chart_path, dpi=150, bbox_inches='tight')\nplt.close()\n\nchart1 = ChartWidget()\nchart1.set_chart_path(pie_chart_path) \\\n      .set_title(\"\u4ea7\u54c1\u9500\u552e\u989d\u5206\u5e03\") \\\n      .set_description(\"\u5c55\u793a\u5404\u4ea7\u54c1\u5bf9\u603b\u9500\u552e\u989d\u7684\u8d21\u732e\u6bd4\u4f8b\")\nemail.add_widget(chart1)\n\n# \u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5173\u7cfb\u5206\u6790\nemail.add_title(\"\ud83d\udd0d \u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5206\u6790\", TextType.SECTION_H2)\n\nplt.figure(figsize=(10, 6))\nscatter = plt.scatter(df_products['\u9500\u552e\u6570\u91cf'], df_products['\u6bdb\u5229\u7387'], \n                     s=df_products['\u8bc4\u5206']*50, alpha=0.7, c=colors)\n\n# \u6dfb\u52a0\u4ea7\u54c1\u6807\u7b7e\nfor i, txt in enumerate(df_products['\u4ea7\u54c1\u540d\u79f0']):\n    plt.annotate(txt, (df_products['\u9500\u552e\u6570\u91cf'].iloc[i], df_products['\u6bdb\u5229\u7387'].iloc[i]),\n                xytext=(5, 5), textcoords='offset points', fontsize=8)\n\nplt.xlabel('\u9500\u552e\u6570\u91cf')\nplt.ylabel('\u6bdb\u5229\u7387 (%)')\nplt.title('\u4ea7\u54c1\u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5173\u7cfb\uff08\u6c14\u6ce1\u5927\u5c0f\u4ee3\u8868\u8bc4\u5206\uff09', fontsize=14)\nplt.grid(True, alpha=0.3)\n\nscatter_chart_path = \"profit_sales_analysis.png\"\nplt.savefig(scatter_chart_path, dpi=150, bbox_inches='tight')\nplt.close()\n\nchart2 = ChartWidget()\nchart2.set_chart_path(scatter_chart_path) \\\n      .set_title(\"\u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5173\u7cfb\") \\\n      .set_description(\"\u5206\u6790\u5404\u4ea7\u54c1\u7684\u76c8\u5229\u80fd\u529b\u4e0e\u5e02\u573a\u8868\u73b0\u7684\u5173\u7cfb\")\nemail.add_widget(chart2)\n\n# \u4ea7\u54c1\u7b56\u7565\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u4ea7\u54c1\u7b56\u7565\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u5206\u6790\u5404\u4ea7\u54c1\u8868\u73b0\nhigh_margin_products = df_products[df_products['\u6bdb\u5229\u7387'] &gt; df_products['\u6bdb\u5229\u7387'].mean()]\nhigh_volume_products = df_products[df_products['\u9500\u552e\u6570\u91cf'] &gt; df_products['\u9500\u552e\u6570\u91cf'].mean()]\nlow_stock_products = df_products[df_products['\u5e93\u5b58\u5468\u8f6c'] &gt; 80]\n\nstrategy_text = f\"\"\"\n**\u57fa\u4e8e\u6570\u636e\u5206\u6790\u7684\u4ea7\u54c1\u7b56\u7565\u5efa\u8bae\uff1a**\n\n\ud83c\udf1f **\u4f18\u52bf\u4ea7\u54c1** (\u9ad8\u6bdb\u5229\u7387)\n{', '.join(high_margin_products['\u4ea7\u54c1\u540d\u79f0'].tolist())}\n\u2022 \u5efa\u8bae\u52a0\u5927\u8425\u9500\u6295\u5165\uff0c\u6269\u5927\u5e02\u573a\u4efd\u989d\n\n\ud83d\udcc8 **\u70ed\u9500\u4ea7\u54c1** (\u9ad8\u9500\u91cf)\n{', '.join(high_volume_products['\u4ea7\u54c1\u540d\u79f0'].tolist())}\n\u2022 \u4fdd\u6301\u5e93\u5b58\u5145\u8db3\uff0c\u4f18\u5316\u4f9b\u5e94\u94fe\n\n\u26a1 **\u5feb\u5468\u8f6c\u4ea7\u54c1** (\u5e93\u5b58\u5468\u8f6c\u7387&gt;80%)\n{', '.join(low_stock_products['\u4ea7\u54c1\u540d\u79f0'].tolist()) if not low_stock_products.empty else '\u6682\u65e0'}\n\u2022 \u53ca\u65f6\u8865\u8d27\uff0c\u907f\u514d\u7f3a\u8d27\u5f71\u54cd\u9500\u552e\n\n\ud83c\udfaf **\u7efc\u5408\u7b56\u7565**\n\u2022 \u91cd\u70b9\u5173\u6ce8\u9ad8\u6bdb\u5229\u7387\u4ea7\u54c1\u7684\u5e02\u573a\u63a8\u5e7f\n\u2022 \u4f18\u5316\u4f4e\u8bc4\u5206\u4ea7\u54c1\u7684\u7528\u6237\u4f53\u9a8c\n\u2022 \u5e73\u8861\u4ea7\u54c1\u7ec4\u5408\uff0c\u964d\u4f4e\u5355\u4e00\u4ea7\u54c1\u4f9d\u8d56\n\"\"\"\n\nemail.add_text(strategy_text.strip())\n\nemail.export_html(\"product_analysis.html\")\nprint(\"\u2705 \u4ea7\u54c1\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1aproduct_analysis.html\")\n</code></pre> \u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a \u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:32:02 <p>\ud83d\udcf1 \u4ea7\u54c1\u9500\u552e\u5206\u6790\u62a5\u544a</p> 1. \ud83c\udfaf \u4ea7\u54c1\u7ec4\u5408\u6982\u89c8 \u00a511,443,450 \u00a53,503,450 4.4\u2605 \u8033\u673aE 2. \ud83d\udcca \u4ea7\u54c1\u9500\u552e\u660e\u7ec6 \u4ea7\u54c1 \u6570\u91cf \u5355\u4ef7 \u9500\u552e\u989d \u6bdb\u5229\u7387 \u8bc4\u5206 \u667a\u80fd\u624b\u673aA 1,200 \u00a52,999 \u00a53,598,800 30.0% 4.5\u2605 \u667a\u80fd\u624b\u673aB 800 \u00a53,999 \u00a53,199,200 30.0% 4.7\u2605 \u5e73\u677f\u7535\u8111C 600 \u00a51,999 \u00a51,199,400 30.0% 4.2\u2605 \u7b14\u8bb0\u672cD 450 \u00a55,999 \u00a52,699,550 30.0% 4.8\u2605 \u8033\u673aE 2,000 \u00a5299 \u00a5598,000 39.8% 4.3\u2605 \u5145\u7535\u5668F 1,500 \u00a599 \u00a5148,500 39.4% 4.0\u2605 3. \ud83d\udcc8 \u9500\u552e\u989d\u5206\u5e03 <p>\u5c55\u793a\u5404\u4ea7\u54c1\u5bf9\u603b\u9500\u552e\u989d\u7684\u8d21\u732e\u6bd4\u4f8b</p> 4. \ud83d\udd0d \u6bdb\u5229\u7387\u4e0e\u9500\u91cf\u5206\u6790 <p>\u5206\u6790\u5404\u4ea7\u54c1\u7684\u76c8\u5229\u80fd\u529b\u4e0e\u5e02\u573a\u8868\u73b0\u7684\u5173\u7cfb</p> 5. \ud83d\udca1 \u4ea7\u54c1\u7b56\u7565\u5efa\u8bae <p>**\u57fa\u4e8e\u6570\u636e\u5206\u6790\u7684\u4ea7\u54c1\u7b56\u7565\u5efa\u8bae\uff1a**</p> <p>\ud83c\udf1f **\u4f18\u52bf\u4ea7\u54c1** (\u9ad8\u6bdb\u5229\u7387)</p> <p>\u8033\u673aE, \u5145\u7535\u5668F</p> <p>\u2022 \u5efa\u8bae\u52a0\u5927\u8425\u9500\u6295\u5165\uff0c\u6269\u5927\u5e02\u573a\u4efd\u989d</p> <p>\ud83d\udcc8 **\u70ed\u9500\u4ea7\u54c1** (\u9ad8\u9500\u91cf)</p> <p>\u667a\u80fd\u624b\u673aA, \u8033\u673aE, \u5145\u7535\u5668F</p> <p>\u2022 \u4fdd\u6301\u5e93\u5b58\u5145\u8db3\uff0c\u4f18\u5316\u4f9b\u5e94\u94fe</p> <p>\u26a1 **\u5feb\u5468\u8f6c\u4ea7\u54c1** (\u5e93\u5b58\u5468\u8f6c\u7387&gt;80%)</p> <p>\u667a\u80fd\u624b\u673aB, \u7b14\u8bb0\u672cD</p> <p>\u2022 \u53ca\u65f6\u8865\u8d27\uff0c\u907f\u514d\u7f3a\u8d27\u5f71\u54cd\u9500\u552e</p> <p>\ud83c\udfaf **\u7efc\u5408\u7b56\u7565**</p> <p>\u2022 \u91cd\u70b9\u5173\u6ce8\u9ad8\u6bdb\u5229\u7387\u4ea7\u54c1\u7684\u5e02\u573a\u63a8\u5e7f</p> <p>\u2022 \u4f18\u5316\u4f4e\u8bc4\u5206\u4ea7\u54c1\u7684\u7528\u6237\u4f53\u9a8c</p> <p>\u2022 \u5e73\u8861\u4ea7\u54c1\u7ec4\u5408\uff0c\u964d\u4f4e\u5355\u4e00\u4ea7\u54c1\u4f9d\u8d56</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u5206\u6790\u4eae\u70b9\uff1a - \u591a\u7ef4\u5ea6\u4ea7\u54c1\u6570\u636e\u5206\u6790 - \u53ef\u89c6\u5316\u56fe\u8868\u5c55\u793a\u4ea7\u54c1\u5173\u7cfb - \u57fa\u4e8e\u6570\u636e\u7684\u7b56\u7565\u5efa\u8bae - \u7efc\u5408\u8003\u8651\u9500\u91cf\u3001\u5229\u6da6\u3001\u8bc4\u5206\u7b49\u56e0\u7d20</p>"},{"location":"zh/examples/data-reports/#_7","title":"\u5ba2\u6237\u5206\u6790\u62a5\u544a","text":""},{"location":"zh/examples/data-reports/#rfm","title":"RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790 \ud83d\udc65 \u5ba2\u6237\u603b\u6570                  \ud83d\udd04 \u5e73\u5747\u8d2d\u4e70\u9891\u6b21                  \ud83d\udcb0 \u5e73\u5747\u8d2d\u4e70\u91d1\u989d                  \ud83d\udcc5 \u5e73\u5747\u95f4\u9694\u5929\u6570","text":"Python<pre><code>import pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom email_widget import Email, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u751f\u6210\u5ba2\u6237\u6570\u636e\nnp.random.seed(42)\ncustomer_data = {\n    '\u5ba2\u6237ID': [f'C{str(i).zfill(4)}' for i in range(1, 101)],\n    '\u6700\u8fd1\u8d2d\u4e70\u5929\u6570': np.random.randint(1, 365, 100),\n    '\u8d2d\u4e70\u9891\u6b21': np.random.randint(1, 20, 100),\n    '\u8d2d\u4e70\u91d1\u989d': np.random.randint(100, 10000, 100)\n}\n\ndf_customers = pd.DataFrame(customer_data)\n\n# RFM\u5206\u6790\u51fd\u6570\ndef rfm_analysis(df):\n    \"\"\"RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\"\"\"\n    # \u8ba1\u7b97RFM\u5206\u4f4d\u6570\n    r_quartiles = pd.qcut(df['\u6700\u8fd1\u8d2d\u4e70\u5929\u6570'], 4, labels=[4, 3, 2, 1])  # \u6700\u8fd1\u8d2d\u4e70\uff0c\u5929\u6570\u8d8a\u5c11\u5206\u503c\u8d8a\u9ad8\n    f_quartiles = pd.qcut(df['\u8d2d\u4e70\u9891\u6b21'].rank(method='first'), 4, labels=[1, 2, 3, 4])\n    m_quartiles = pd.qcut(df['\u8d2d\u4e70\u91d1\u989d'], 4, labels=[1, 2, 3, 4])\n\n    df['R\u5206\u503c'] = r_quartiles\n    df['F\u5206\u503c'] = f_quartiles  \n    df['M\u5206\u503c'] = m_quartiles\n\n    # \u8ba1\u7b97RFM\u7efc\u5408\u5206\u503c\n    df['RFM\u7efc\u5408\u5206\u503c'] = df['R\u5206\u503c'].astype(str) + df['F\u5206\u503c'].astype(str) + df['M\u5206\u503c'].astype(str)\n\n    # \u5ba2\u6237\u5206\u7ea7\n    def customer_segment(rfm_score):\n        score = int(rfm_score)\n        if score &gt;= 444:\n            return '\u91cd\u8981\u4ef7\u503c\u5ba2\u6237'\n        elif score &gt;= 344:\n            return '\u91cd\u8981\u53d1\u5c55\u5ba2\u6237'\n        elif score &gt;= 244:\n            return '\u91cd\u8981\u4fdd\u6301\u5ba2\u6237'\n        elif score &gt;= 144:\n            return '\u91cd\u8981\u633d\u7559\u5ba2\u6237'\n        elif score &gt;= 134:\n            return '\u4e00\u822c\u4ef7\u503c\u5ba2\u6237'\n        elif score &gt;= 124:\n            return '\u4e00\u822c\u53d1\u5c55\u5ba2\u6237'\n        elif score &gt;= 114:\n            return '\u4e00\u822c\u4fdd\u6301\u5ba2\u6237'\n        else:\n            return '\u4e00\u822c\u633d\u7559\u5ba2\u6237'\n\n    df['\u5ba2\u6237\u5206\u7ea7'] = df['RFM\u7efc\u5408\u5206\u503c'].apply(customer_segment)\n    return df\n\n# \u6267\u884cRFM\u5206\u6790\ndf_rfm = rfm_analysis(df_customers.copy())\n\n# \u521b\u5efa\u5ba2\u6237\u5206\u6790\u62a5\u544a\nemail = Email(\"RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udc65 RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u5ba2\u6237\u603b\u4f53\u6982\u51b5\nemail.add_title(\"\ud83d\udcca \u5ba2\u6237\u603b\u4f53\u6982\u51b5\", TextType.SECTION_H2)\n\ntotal_customers = len(df_rfm)\navg_frequency = df_rfm['\u8d2d\u4e70\u9891\u6b21'].mean()\navg_monetary = df_rfm['\u8d2d\u4e70\u91d1\u989d'].mean()\navg_recency = df_rfm['\u6700\u8fd1\u8d2d\u4e70\u5929\u6570'].mean()\n\noverview_stats = [\n    (\"\u5ba2\u6237\u603b\u6570\", f\"{total_customers:,}\", \"\ud83d\udc65\"),\n    (\"\u5e73\u5747\u8d2d\u4e70\u9891\u6b21\", f\"{avg_frequency:.1f}\u6b21\", \"\ud83d\udd04\"),\n    (\"\u5e73\u5747\u8d2d\u4e70\u91d1\u989d\", f\"\u00a5{avg_monetary:,.0f}\", \"\ud83d\udcb0\"),\n    (\"\u5e73\u5747\u95f4\u9694\u5929\u6570\", f\"{avg_recency:.0f}\u5929\", \"\ud83d\udcc5\")\n]\n\nfor title, value, icon in overview_stats:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u5ba2\u6237\u5206\u7ea7\u7edf\u8ba1\nemail.add_title(\"\ud83c\udfaf \u5ba2\u6237\u5206\u7ea7\u5206\u5e03\", TextType.SECTION_H2)\n\nsegment_stats = df_rfm['\u5ba2\u6237\u5206\u7ea7'].value_counts().sort_index()\n\ntable = TableWidget()\ntable.set_headers(['\u5ba2\u6237\u7ea7\u522b', '\u5ba2\u6237\u6570\u91cf', '\u5360\u6bd4', '\u5e73\u5747\u91d1\u989d'])\n\nfor segment, count in segment_stats.items():\n    segment_customers = df_rfm[df_rfm['\u5ba2\u6237\u5206\u7ea7'] == segment]\n    avg_amount = segment_customers['\u8d2d\u4e70\u91d1\u989d'].mean()\n    percentage = (count / total_customers * 100)\n\n    table.add_row([\n        segment,\n        f\"{count:,}\",\n        f\"{percentage:.1f}%\",\n        f\"\u00a5{avg_amount:,.0f}\"\n    ])\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u5404\u7ea7\u522b\u5ba2\u6237\u5360\u6bd4\u8fdb\u5ea6\u6761\nemail.add_title(\"\ud83d\udcc8 \u5ba2\u6237\u5206\u7ea7\u5360\u6bd4\", TextType.SECTION_H2)\n\n# \u5b9a\u4e49\u5ba2\u6237\u7ea7\u522b\u5bf9\u5e94\u7684\u4e3b\u9898\u8272\nsegment_themes = {\n    '\u91cd\u8981\u4ef7\u503c\u5ba2\u6237': ProgressTheme.SUCCESS,\n    '\u91cd\u8981\u53d1\u5c55\u5ba2\u6237': ProgressTheme.INFO,\n    '\u91cd\u8981\u4fdd\u6301\u5ba2\u6237': ProgressTheme.WARNING,\n    '\u91cd\u8981\u633d\u7559\u5ba2\u6237': ProgressTheme.ERROR,\n    '\u4e00\u822c\u4ef7\u503c\u5ba2\u6237': ProgressTheme.SUCCESS,\n    '\u4e00\u822c\u53d1\u5c55\u5ba2\u6237': ProgressTheme.INFO,\n    '\u4e00\u822c\u4fdd\u6301\u5ba2\u6237': ProgressTheme.WARNING,\n    '\u4e00\u822c\u633d\u7559\u5ba2\u6237': ProgressTheme.ERROR\n}\n\nfor segment, count in segment_stats.items():\n    percentage = (count / total_customers * 100)\n    theme = segment_themes.get(segment, ProgressTheme.INFO)\n\n    email.add_text(f\"\ud83d\udd39 {segment}\")\n    email.add_progress(\n        value=percentage,\n        label=f\"{count}\u4eba ({percentage:.1f}%)\",\n        theme=theme\n    )\n\n# \u9ad8\u4ef7\u503c\u5ba2\u6237\u8be6\u60c5\nemail.add_title(\"\u2b50 \u9ad8\u4ef7\u503c\u5ba2\u6237\u5206\u6790\", TextType.SECTION_H2)\n\nhigh_value_customers = df_rfm[df_rfm['\u5ba2\u6237\u5206\u7ea7'].str.contains('\u91cd\u8981\u4ef7\u503c|\u91cd\u8981\u53d1\u5c55')]\n\nif not high_value_customers.empty:\n    hv_table = TableWidget()\n    hv_table.set_headers(['\u5ba2\u6237ID', 'R\u5206\u503c', 'F\u5206\u503c', 'M\u5206\u503c', '\u5ba2\u6237\u7ea7\u522b', '\u8d2d\u4e70\u91d1\u989d'])\n\n    # \u663e\u793a\u524d10\u4e2a\u9ad8\u4ef7\u503c\u5ba2\u6237\n    for _, customer in high_value_customers.head(10).iterrows():\n        hv_table.add_row([\n            customer['\u5ba2\u6237ID'],\n            str(customer['R\u5206\u503c']),\n            str(customer['F\u5206\u503c']),\n            str(customer['M\u5206\u503c']),\n            customer['\u5ba2\u6237\u5206\u7ea7'],\n            f\"\u00a5{customer['\u8d2d\u4e70\u91d1\u989d']:,}\"\n        ])\n\n    hv_table.set_striped(True)\n    email.add_widget(hv_table)\n\n# \u8425\u9500\u7b56\u7565\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u8425\u9500\u7b56\u7565\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u7edf\u8ba1\u5404\u7c7b\u5ba2\u6237\u6bd4\u4f8b\nimportant_customers_pct = (segment_stats.filter(regex='\u91cd\u8981').sum() / total_customers * 100)\nhigh_frequency_pct = (len(df_rfm[df_rfm['\u8d2d\u4e70\u9891\u6b21'] &gt; avg_frequency]) / total_customers * 100)\n\nstrategy_recommendations = f\"\"\"\n**\u57fa\u4e8eRFM\u5206\u6790\u7684\u8425\u9500\u7b56\u7565\u5efa\u8bae\uff1a**\n\n\ud83c\udfaf **\u91cd\u8981\u5ba2\u6237\u7ef4\u62a4** ({important_customers_pct:.1f}%\u7684\u5ba2\u6237)\n\u2022 \u91cd\u8981\u4ef7\u503c\u5ba2\u6237\uff1a\u63d0\u4f9bVIP\u670d\u52a1\uff0c\u4e2a\u6027\u5316\u63a8\u8350\n\u2022 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237\uff1a\u589e\u52a0\u89e6\u8fbe\u9891\u7387\uff0c\u63d0\u5347\u8d2d\u4e70\u9891\u6b21\n\u2022 \u91cd\u8981\u4fdd\u6301\u5ba2\u6237\uff1a\u5b9a\u671f\u5173\u6000\uff0c\u9632\u6b62\u6d41\u5931\n\u2022 \u91cd\u8981\u633d\u7559\u5ba2\u6237\uff1a\u7d27\u6025\u633d\u56de\u7b56\u7565\uff0c\u7279\u522b\u4f18\u60e0\n\n\ud83d\udcc8 **\u4e00\u822c\u5ba2\u6237\u63d0\u5347**\n\u2022 \u4e00\u822c\u4ef7\u503c\u5ba2\u6237\uff1a\u4ea4\u53c9\u9500\u552e\uff0c\u63d0\u5347\u5ba2\u5355\u4ef7\n\u2022 \u4e00\u822c\u53d1\u5c55\u5ba2\u6237\uff1a\u57f9\u517b\u5fe0\u8bda\u5ea6\uff0c\u589e\u52a0\u8d2d\u4e70\u9891\u6b21\n\u2022 \u4e00\u822c\u4fdd\u6301\u5ba2\u6237\uff1a\u4fdd\u6301\u73b0\u72b6\uff0c\u9002\u5ea6\u8425\u9500\n\u2022 \u4e00\u822c\u633d\u7559\u5ba2\u6237\uff1a\u6d41\u5931\u9884\u8b66\uff0c\u633d\u56de\u63aa\u65bd\n\n\ufffd\ufffd **\u91cd\u70b9\u5173\u6ce8\u6307\u6807**\n\u2022 \u9ad8\u9891\u8d2d\u4e70\u5ba2\u6237\u5360\u6bd4\uff1a{high_frequency_pct:.1f}%\n\u2022 \u5e73\u5747\u5ba2\u6237\u751f\u547d\u5468\u671f\uff1a{avg_recency:.0f}\u5929\n\u2022 \u5ba2\u6237\u4ef7\u503c\u63d0\u5347\u6f5c\u529b\uff1a\u5173\u6ce8F\u5206\u503c\u548cM\u5206\u503c\u8f83\u4f4e\u7684\u5ba2\u6237\n\n\ud83d\udcb0 **\u6295\u5165\u4ea7\u51fa\u4f18\u5316**\n\u2022 80%\u7684\u8425\u9500\u8d44\u6e90\u6295\u5165\u5230\u91cd\u8981\u5ba2\u6237\n\u2022 20%\u7684\u8d44\u6e90\u7528\u4e8e\u4e00\u822c\u5ba2\u6237\u7684\u4ef7\u503c\u63d0\u5347\n\u2022 \u5b9a\u671f\u590d\u8bc4RFM\u6a21\u578b\uff0c\u4f18\u5316\u5ba2\u6237\u5206\u7ea7\u6807\u51c6\n\"\"\"\n\nemail.add_text(strategy_recommendations.strip())\n\nemail.export_html(\"rfm_customer_analysis.html\")\nprint(\"\u2705 RFM\u5ba2\u6237\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1arfm_customer_analysis.html\")\n</code></pre> RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:33:03 <p>\ud83d\udc65 RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u62a5\u544a</p> 1. \ud83d\udcca \u5ba2\u6237\u603b\u4f53\u6982\u51b5 100 8.8\u6b21 \u00a55,274 195\u5929 2. \ud83c\udfaf \u5ba2\u6237\u5206\u7ea7\u5206\u5e03 \u5ba2\u6237\u7ea7\u522b \u5ba2\u6237\u6570\u91cf \u5360\u6bd4 \u5e73\u5747\u91d1\u989d \u4e00\u822c\u4ef7\u503c\u5ba2\u6237 10 10.0% \u00a55,285 \u4e00\u822c\u4fdd\u6301\u5ba2\u6237 8 8.0% \u00a55,024 \u4e00\u822c\u53d1\u5c55\u5ba2\u6237 2 2.0% \u00a56,724 \u4e00\u822c\u633d\u7559\u5ba2\u6237 4 4.0% \u00a53,874 \u91cd\u8981\u4fdd\u6301\u5ba2\u6237 26 26.0% \u00a55,294 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 26 26.0% \u00a54,721 \u91cd\u8981\u633d\u7559\u5ba2\u6237 24 24.0% \u00a56,044 3. \ud83d\udcc8 \u5ba2\u6237\u5206\u7ea7\u5360\u6bd4 <p>\ud83d\udd39 \u4e00\u822c\u4ef7\u503c\u5ba2\u6237</p> 10\u4eba (10.0%) 10.0% <p>\ud83d\udd39 \u4e00\u822c\u4fdd\u6301\u5ba2\u6237</p> 8\u4eba (8.0%) 8.0% <p>\ud83d\udd39 \u4e00\u822c\u53d1\u5c55\u5ba2\u6237</p> 2\u4eba (2.0%) 2.0% <p>\ud83d\udd39 \u4e00\u822c\u633d\u7559\u5ba2\u6237</p> 4\u4eba (4.0%) 4.0% <p>\ud83d\udd39 \u91cd\u8981\u4fdd\u6301\u5ba2\u6237</p> 26\u4eba (26.0%) 26.0% <p>\ud83d\udd39 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237</p> 26\u4eba (26.0%) 26.0% <p>\ud83d\udd39 \u91cd\u8981\u633d\u7559\u5ba2\u6237</p> 24\u4eba (24.0%) 24.0% 4. \u2b50 \u9ad8\u4ef7\u503c\u5ba2\u6237\u5206\u6790 \u5ba2\u6237ID R\u5206\u503c F\u5206\u503c M\u5206\u503c \u5ba2\u6237\u7ea7\u522b \u8d2d\u4e70\u91d1\u989d C0004 3 4 4 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a58,104 C0005 4 4 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a53,031 C0007 4 1 1 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a5297 C0012 4 2 4 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a59,439 C0013 4 3 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a54,382 C0026 4 1 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a53,076 C0030 4 4 1 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a52,485 C0031 4 1 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a54,836 C0037 4 4 2 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a54,161 C0039 4 3 3 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237 \u00a56,387 5. \ud83d\udca1 \u8425\u9500\u7b56\u7565\u5efa\u8bae <p>**\u57fa\u4e8eRFM\u5206\u6790\u7684\u8425\u9500\u7b56\u7565\u5efa\u8bae\uff1a**</p> <p>\ud83c\udfaf **\u91cd\u8981\u5ba2\u6237\u7ef4\u62a4** (76.0%\u7684\u5ba2\u6237)</p> <p>\u2022 \u91cd\u8981\u4ef7\u503c\u5ba2\u6237\uff1a\u63d0\u4f9bVIP\u670d\u52a1\uff0c\u4e2a\u6027\u5316\u63a8\u8350</p> <p>\u2022 \u91cd\u8981\u53d1\u5c55\u5ba2\u6237\uff1a\u589e\u52a0\u89e6\u8fbe\u9891\u7387\uff0c\u63d0\u5347\u8d2d\u4e70\u9891\u6b21</p> <p>\u2022 \u91cd\u8981\u4fdd\u6301\u5ba2\u6237\uff1a\u5b9a\u671f\u5173\u6000\uff0c\u9632\u6b62\u6d41\u5931</p> <p>\u2022 \u91cd\u8981\u633d\u7559\u5ba2\u6237\uff1a\u7d27\u6025\u633d\u56de\u7b56\u7565\uff0c\u7279\u522b\u4f18\u60e0</p> <p>\ud83d\udcc8 **\u4e00\u822c\u5ba2\u6237\u63d0\u5347**</p> <p>\u2022 \u4e00\u822c\u4ef7\u503c\u5ba2\u6237\uff1a\u4ea4\u53c9\u9500\u552e\uff0c\u63d0\u5347\u5ba2\u5355\u4ef7</p> <p>\u2022 \u4e00\u822c\u53d1\u5c55\u5ba2\u6237\uff1a\u57f9\u517b\u5fe0\u8bda\u5ea6\uff0c\u589e\u52a0\u8d2d\u4e70\u9891\u6b21</p> <p>\u2022 \u4e00\u822c\u4fdd\u6301\u5ba2\u6237\uff1a\u4fdd\u6301\u73b0\u72b6\uff0c\u9002\u5ea6\u8425\u9500</p> <p>\u2022 \u4e00\u822c\u633d\u7559\u5ba2\u6237\uff1a\u6d41\u5931\u9884\u8b66\uff0c\u633d\u56de\u63aa\u65bd</p> <p>\ud83d\udd0d **\u91cd\u70b9\u5173\u6ce8\u6307\u6807**</p> <p>\u2022 \u9ad8\u9891\u8d2d\u4e70\u5ba2\u6237\u5360\u6bd4\uff1a49.0%</p> <p>\u2022 \u5e73\u5747\u5ba2\u6237\u751f\u547d\u5468\u671f\uff1a195\u5929</p> <p>\u2022 \u5ba2\u6237\u4ef7\u503c\u63d0\u5347\u6f5c\u529b\uff1a\u5173\u6ce8F\u5206\u503c\u548cM\u5206\u503c\u8f83\u4f4e\u7684\u5ba2\u6237</p> <p>\ud83d\udcb0 **\u6295\u5165\u4ea7\u51fa\u4f18\u5316**</p> <p>\u2022 80%\u7684\u8425\u9500\u8d44\u6e90\u6295\u5165\u5230\u91cd\u8981\u5ba2\u6237</p> <p>\u2022 20%\u7684\u8d44\u6e90\u7528\u4e8e\u4e00\u822c\u5ba2\u6237\u7684\u4ef7\u503c\u63d0\u5347</p> <p>\u2022 \u5b9a\u671f\u590d\u8bc4RFM\u6a21\u578b\uff0c\u4f18\u5316\u5ba2\u6237\u5206\u7ea7\u6807\u51c6</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u5206\u6790\u4ef7\u503c\uff1a - \u79d1\u5b66\u7684RFM\u5ba2\u6237\u4ef7\u503c\u5206\u6790\u6a21\u578b - \u81ea\u52a8\u5316\u5ba2\u6237\u5206\u7ea7\u548c\u7b56\u7565\u5efa\u8bae - \u53ef\u89c6\u5316\u5c55\u793a\u5ba2\u6237\u5206\u5e03\u60c5\u51b5 - \u4e3a\u7cbe\u51c6\u8425\u9500\u63d0\u4f9b\u6570\u636e\u652f\u6301</p>"},{"location":"zh/examples/data-reports/#_8","title":"\u56fe\u8868\u96c6\u6210","text":""},{"location":"zh/examples/data-reports/#_9","title":"\u793a\u4f8b\u56fe\u8868","text":"<p>\u6b64\u5904\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u56fe\u8868\u96c6\u6210\u7684\u793a\u4f8b\u4ee3\u7801\u548c\u8bf4\u660e\u3002</p>"},{"location":"zh/examples/data-reports/#_10","title":"\u5b66\u4e60\u603b\u7ed3","text":"<p>\u901a\u8fc7\u8fd9\u4e9b\u6570\u636e\u62a5\u544a\u793a\u4f8b\uff0c\u60a8\u5df2\u7ecf\u638c\u63e1\u4e86\uff1a</p>"},{"location":"zh/examples/data-reports/#_11","title":"\ud83c\udfaf \u6838\u5fc3\u6280\u80fd","text":"<ul> <li>pandas\u96c6\u6210 - DataFrame\u65e0\u7f1d\u8f6c\u6362\u4e3a\u8868\u683c</li> <li>matplotlib\u96c6\u6210 - \u81ea\u52a8\u751f\u6210\u548c\u5d4c\u5165\u56fe\u8868</li> <li>\u6570\u636e\u8ba1\u7b97 - \u4e1a\u52a1\u6307\u6807\u7684\u81ea\u52a8\u8ba1\u7b97</li> <li>\u683c\u5f0f\u5316\u5c55\u793a - \u4e13\u4e1a\u7684\u6570\u636e\u683c\u5f0f\u5316</li> </ul>"},{"location":"zh/examples/data-reports/#_12","title":"\ud83d\udcca \u62a5\u544a\u7c7b\u578b","text":"<ul> <li>\u9500\u552e\u5206\u6790 - \u8d8b\u52bf\u5206\u6790\u548c\u589e\u957f\u8ba1\u7b97</li> <li>\u8d22\u52a1\u62a5\u8868 - \u635f\u76ca\u8868\u548c\u9884\u7b97\u5206\u6790</li> <li>\u4ea7\u54c1\u5206\u6790 - \u591a\u7ef4\u5ea6\u4ea7\u54c1\u8bc4\u4f30</li> <li>\u5ba2\u6237\u5206\u6790 - RFM\u4ef7\u503c\u6a21\u578b\u5e94\u7528</li> </ul>"},{"location":"zh/examples/data-reports/#_13","title":"\ud83d\udca1 \u6700\u4f73\u5b9e\u8df5","text":"<ul> <li>\u6570\u636e\u9a71\u52a8\u7684\u6d1e\u5bdf\u751f\u6210</li> <li>\u53ef\u89c6\u5316\u4e0e\u6587\u5b57\u8bf4\u660e\u7ed3\u5408</li> <li>\u81ea\u52a8\u5316\u6307\u6807\u8ba1\u7b97\u548c\u5f02\u5e38\u63d0\u9192</li> <li>\u57fa\u4e8e\u6570\u636e\u7684\u7b56\u7565\u5efa\u8bae</li> </ul>"},{"location":"zh/examples/data-reports/#_14","title":"\ud83d\ude80 \u8fdb\u9636\u65b9\u5411","text":"<ul> <li>\u5b66\u4e60 \u7cfb\u7edf\u76d1\u63a7 \u7684\u5b9e\u65f6\u6570\u636e\u5c55\u793a</li> <li>\u63a2\u7d22 \u9ad8\u7ea7\u793a\u4f8b \u7684\u81ea\u5b9a\u4e49\u6269\u5c55</li> <li>\u53c2\u8003 \u5b9e\u9645\u5e94\u7528 \u6784\u5efa\u5b8c\u6574\u5206\u6790\u7cfb\u7edf</li> </ul> <p>\u7ee7\u7eed\u63a2\u7d22\u66f4\u591a\u9ad8\u7ea7\u529f\u80fd\uff0c\u6253\u9020\u4e13\u4e1a\u7684\u6570\u636e\u5206\u6790\u62a5\u544a\uff01</p>"},{"location":"zh/examples/real-world/","title":"\u5b9e\u9645\u5e94\u7528\u793a\u4f8b","text":"<p>\u672c\u9875\u9762\u5c55\u793a EmailWidget \u5728\u771f\u5b9e\u9879\u76ee\u4e2d\u7684\u5b8c\u6574\u5e94\u7528\u6848\u4f8b\uff0c\u5305\u62ec\u7535\u5546\u5206\u6790\u3001DevOps\u76d1\u63a7\u3001\u6570\u636e\u79d1\u5b66\u7b49\u9886\u57df\u7684\u7efc\u5408\u5e94\u7528\u3002</p>"},{"location":"zh/examples/real-world/#_2","title":"\u7535\u5546\u6570\u636e\u5206\u6790\u4eea\u8868\u677f","text":""},{"location":"zh/examples/real-world/#_3","title":"\u5b8c\u6574\u7684\u7535\u5546\u8fd0\u8425\u62a5\u544a \ud83d\udcb0 \u603b\u9500\u552e\u989d                  \ud83d\udce6 \u8ba2\u5355\u6570\u91cf                  \ud83d\udc65 \u6d3b\u8dc3\u7528\u6237                  \ud83d\udcc8 \u8f6c\u5316\u7387                  \ud83d\udcb3 \u5ba2\u5355\u4ef7","text":"Python<pre><code>import pandas as pd\nfrom datetime import datetime, timedelta\nfrom email_widget import Email\nfrom email_widget.core.enums import TextType, ProgressTheme, AlertType\n\ndef create_ecommerce_dashboard():\n    \"\"\"\u521b\u5efa\u7535\u5546\u6570\u636e\u5206\u6790\u4eea\u8868\u677f\"\"\"\n\n    # \u6a21\u62df\u7535\u5546\u6570\u636e\n    ecommerce_data = {\n        'overview': {\n            'revenue': 12500000,\n            'orders': 8547,\n            'users': 125000,\n            'conversion_rate': 3.2,\n            'avg_order_value': 1462\n        },\n        'products': [\n            {'name': '\u667a\u80fd\u624b\u673a', 'sales': 3200000, 'units': 1200, 'margin': 22.5},\n            {'name': '\u7b14\u8bb0\u672c\u7535\u8111', 'sales': 4800000, 'units': 800, 'margin': 18.3},\n            {'name': '\u5e73\u677f\u7535\u8111', 'sales': 2100000, 'units': 1050, 'margin': 25.1},\n            {'name': '\u667a\u80fd\u624b\u8868', 'sales': 1800000, 'units': 1800, 'margin': 35.2},\n            {'name': '\u8033\u673a', 'sales': 600000, 'units': 2000, 'margin': 45.8}\n        ],\n        'channels': {\n            '\u5b98\u7f51\u76f4\u9500': {'revenue': 6250000, 'orders': 3500, 'rate': 50.0},\n            '\u5929\u732b\u65d7\u8230\u5e97': {'revenue': 3750000, 'orders': 2800, 'rate': 30.0},\n            '\u4eac\u4e1c\u5e97\u94fa': {'revenue': 1875000, 'orders': 1547, 'rate': 15.0},\n            '\u7ebf\u4e0b\u95e8\u5e97': {'revenue': 625000, 'orders': 700, 'rate': 5.0}\n        }\n    }\n\n    email = Email(\"\u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f\")\n\n    # \u62a5\u544a\u6807\u9898\u548c\u65f6\u95f4\n    email.add_title(\"\ud83d\uded2 \u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f\", TextType.TITLE_LARGE)\n    email.add_text(f\"\u62a5\u544a\u5468\u671f: {(datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')} \u81f3 {datetime.now().strftime('%Y-%m-%d')}\")\n\n    # \u6838\u5fc3\u6307\u6807\u6982\u89c8\n    email.add_title(\"\ud83d\udcca \u6838\u5fc3\u6307\u6807\u6982\u89c8\", TextType.SECTION_H2)\n\n    overview = ecommerce_data['overview']\n    metrics = [\n        (\"\u603b\u9500\u552e\u989d\", f\"\u00a5{overview['revenue']:,}\", \"\ud83d\udcb0\"),\n        (\"\u8ba2\u5355\u6570\u91cf\", f\"{overview['orders']:,}\", \"\ud83d\udce6\"),\n        (\"\u6d3b\u8dc3\u7528\u6237\", f\"{overview['users']:,}\", \"\ud83d\udc65\"),\n        (\"\u8f6c\u5316\u7387\", f\"{overview['conversion_rate']:.1f}%\", \"\ud83d\udcc8\"),\n        (\"\u5ba2\u5355\u4ef7\", f\"\u00a5{overview['avg_order_value']:,}\", \"\ud83d\udcb3\")\n    ]\n\n    for title, value, icon in metrics:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # \u4ea7\u54c1\u9500\u552e\u6392\u884c\n    email.add_title(\"\ud83c\udfc6 \u4ea7\u54c1\u9500\u552e\u6392\u884c\", TextType.SECTION_H2)\n\n    product_table_data = [[\"\u4ea7\u54c1\u540d\u79f0\", \"\u9500\u552e\u989d\", \"\u9500\u91cf\", \"\u6bdb\u5229\u7387\", \"\u5e02\u573a\u8868\u73b0\"]]\n\n    for product in ecommerce_data['products']:\n        performance = \"\ud83d\udd25 \u70ed\u9500\" if product['sales'] &gt; 3000000 else \\\n                     \"\ud83d\udcc8 \u826f\u597d\" if product['sales'] &gt; 1500000 else \"\ud83d\udcca \u4e00\u822c\"\n\n        product_table_data.append([\n            product['name'],\n            f\"\u00a5{product['sales']:,}\",\n            f\"{product['units']:,}\u53f0\",\n            f\"{product['margin']:.1f}%\",\n            performance\n        ])\n\n    email.add_table_from_data(\n        data=product_table_data[1:],\n        headers=product_table_data[0],\n        title=\"\u4ea7\u54c1\u9500\u552e\u660e\u7ec6\"\n    )\n\n    # \u9500\u552e\u6e20\u9053\u5206\u6790\n    email.add_title(\"\ud83c\udf10 \u9500\u552e\u6e20\u9053\u5206\u6790\", TextType.SECTION_H2)\n\n    for channel, data in ecommerce_data['channels'].items():\n        # \u6e20\u9053\u5360\u6bd4\u8fdb\u5ea6\u6761\n        theme = ProgressTheme.SUCCESS if data['rate'] &gt;= 30 else \\\n               ProgressTheme.INFO if data['rate'] &gt;= 15 else \\\n               ProgressTheme.WARNING if data['rate'] &gt;= 10 else ProgressTheme.ERROR\n\n        email.add_text(f\"\ud83d\udd39 {channel}\")\n        email.add_progress(\n            value=data['rate'],\n            label=f\"\u00a5{data['revenue']:,} ({data['orders']:,}\u5355)\",\n            theme=theme\n        )\n\n    # \u8fd0\u8425\u5efa\u8bae\n    email.add_title(\"\ud83d\udca1 \u8fd0\u8425\u7b56\u7565\u5efa\u8bae\", TextType.SECTION_H2)\n\n    # \u57fa\u4e8e\u6570\u636e\u5206\u6790\u751f\u6210\u5efa\u8bae\n    top_product = max(ecommerce_data['products'], key=lambda x: x['sales'])\n    high_margin_products = [p for p in ecommerce_data['products'] if p['margin'] &gt; 30]\n\n    suggestions = f\"\"\"\n**\u57fa\u4e8e\u6570\u636e\u5206\u6790\u7684\u8fd0\u8425\u5efa\u8bae\uff1a**\n\n\ud83c\udfaf **\u4ea7\u54c1\u7b56\u7565**\n\u2022 \u91cd\u70b9\u63a8\u5e7f {top_product['name']}\uff0c\u9500\u552e\u989d\u9886\u5148\n\u2022 \u63d0\u5347\u9ad8\u6bdb\u5229\u4ea7\u54c1\u63a8\u5e7f\uff1a{', '.join(p['name'] for p in high_margin_products)}\n\u2022 \u4f18\u5316\u4f4e\u8f6c\u5316\u4ea7\u54c1\u7684\u8425\u9500\u7b56\u7565\n\n\ud83d\udcc8 **\u6e20\u9053\u4f18\u5316**\n\u2022 \u52a0\u5f3a\u5b98\u7f51\u76f4\u9500\u6e20\u9053\u5efa\u8bbe\uff0c\u5360\u6bd4\u5df2\u8fbe50%\n\u2022 \u589e\u52a0\u4eac\u4e1c\u5e97\u94fa\u6295\u5165\uff0c\u63d0\u5347\u5e02\u573a\u4efd\u989d\n\u2022 \u8003\u8651\u5f00\u62d3\u65b0\u7684\u9500\u552e\u6e20\u9053\n\n\ud83d\udcb0 **\u6536\u76ca\u63d0\u5347**\n\u2022 \u5f53\u524d\u5ba2\u5355\u4ef7\u00a5{overview['avg_order_value']:,}\",\n\u2022 \u8f6c\u5316\u7387{overview['conversion_rate']:.1f}%\u6709\u63d0\u5347\u7a7a\u95f4\uff0c\u4f18\u5316\u7528\u6237\u4f53\u9a8c\n\"\"\"\n\n    email.add_text(suggestions.strip())\n\n    # \u98ce\u9669\u63d0\u9192\n    if overview['conversion_rate'] &lt; 3.0:\n        email.add_alert(\n            \"\u8f6c\u5316\u7387\u4f4e\u4e8e3%\uff0c\u5efa\u8bae\u4f18\u5316\u5546\u54c1\u9875\u9762\u548c\u8d2d\u4e70\u6d41\u7a0b\",\n            AlertType.WARNING,\n            \"\u26a0\ufe0f \u8f6c\u5316\u7387\u544a\u8b66\"\n        )\n\n    return email\n\n# \u751f\u6210\u7535\u5546\u4eea\u8868\u677f\necommerce_email = create_ecommerce_dashboard()\necommerce_email.export_html(\"ecommerce_dashboard.html\")\nprint(\"\u2705 \u7535\u5546\u6570\u636e\u4eea\u8868\u677f\u5df2\u751f\u6210\uff1aecommerce_dashboard.html\")\n</code></pre> \u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f \u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:56:58 <p>\ud83d\uded2 \u7535\u5546\u8fd0\u8425\u6570\u636e\u4eea\u8868\u677f</p> <p>\u62a5\u544a\u5468\u671f: 2025-06-30 \u81f3 2025-07-07</p> 1. \ud83d\udcca \u6838\u5fc3\u6307\u6807\u6982\u89c8 \u00a512,500,000 8,547 125,000 3.2% \u00a51,462 2. \ud83c\udfc6 \u4ea7\u54c1\u9500\u552e\u6392\u884c \u4ea7\u54c1\u540d\u79f0 \u9500\u552e\u989d \u9500\u91cf \u6bdb\u5229\u7387 \u5e02\u573a\u8868\u73b0 \u667a\u80fd\u624b\u673a \u00a53,200,000 1,200\u53f0 22.5% \ud83d\udd25 \u70ed\u9500 \u7b14\u8bb0\u672c\u7535\u8111 \u00a54,800,000 800\u53f0 18.3% \ud83d\udd25 \u70ed\u9500 \u5e73\u677f\u7535\u8111 \u00a52,100,000 1,050\u53f0 25.1% \ud83d\udcc8 \u826f\u597d \u667a\u80fd\u624b\u8868 \u00a51,800,000 1,800\u53f0 35.2% \ud83d\udcc8 \u826f\u597d \u8033\u673a \u00a5600,000 2,000\u53f0 45.8% \ud83d\udcca \u4e00\u822c 3. \ud83c\udf10 \u9500\u552e\u6e20\u9053\u5206\u6790 <p>\ud83d\udd39 \u5b98\u7f51\u76f4\u9500</p> \u00a56,250,000 (3,500\u5355) 50.0% <p>\ud83d\udd39 \u5929\u732b\u65d7\u8230\u5e97</p> \u00a53,750,000 (2,800\u5355) 30.0% <p>\ud83d\udd39 \u4eac\u4e1c\u5e97\u94fa</p> \u00a51,875,000 (1,547\u5355) 15.0% <p>\ud83d\udd39 \u7ebf\u4e0b\u95e8\u5e97</p> \u00a5625,000 (700\u5355) 5.0% 4. \ud83d\udca1 \u8fd0\u8425\u7b56\u7565\u5efa\u8bae <p>**\u57fa\u4e8e\u6570\u636e\u5206\u6790\u7684\u8fd0\u8425\u5efa\u8bae\uff1a**</p> <p>\ud83c\udfaf **\u4ea7\u54c1\u7b56\u7565**</p> <p>\u2022 \u91cd\u70b9\u63a8\u5e7f \u7b14\u8bb0\u672c\u7535\u8111\uff0c\u9500\u552e\u989d\u9886\u5148</p> <p>\u2022 \u63d0\u5347\u9ad8\u6bdb\u5229\u4ea7\u54c1\u63a8\u5e7f\uff1a\u667a\u80fd\u624b\u8868, \u8033\u673a</p> <p>\u2022 \u4f18\u5316\u4f4e\u8f6c\u5316\u4ea7\u54c1\u7684\u8425\u9500\u7b56\u7565</p> <p>\ud83d\udcc8 **\u6e20\u9053\u4f18\u5316**</p> <p>\u2022 \u52a0\u5f3a\u5b98\u7f51\u76f4\u9500\u6e20\u9053\u5efa\u8bbe\uff0c\u5360\u6bd4\u5df2\u8fbe50%</p> <p>\u2022 \u589e\u52a0\u4eac\u4e1c\u5e97\u94fa\u6295\u5165\uff0c\u63d0\u5347\u5e02\u573a\u4efd\u989d</p> <p>\u2022 \u8003\u8651\u5f00\u62d3\u65b0\u7684\u9500\u552e\u6e20\u9053</p> <p>\ud83d\udcb0 **\u6536\u76ca\u63d0\u5347**</p> <p>\u2022 \u5f53\u524d\u5ba2\u5355\u4ef7\u00a51,462\",</p> <p>\u2022 \u8f6c\u5316\u73873.2%\u6709\u63d0\u5347\u7a7a\u95f4\uff0c\u4f18\u5316\u7528\u6237\u4f53\u9a8c</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u7535\u5546\u4eea\u8868\u677f\u7279\u70b9\uff1a - \u6838\u5fc3\u4e1a\u52a1\u6307\u6807\u4e00\u76ee\u4e86\u7136 - \u4ea7\u54c1\u548c\u6e20\u9053\u591a\u7ef4\u5206\u6790 - \u6570\u636e\u9a71\u52a8\u7684\u7b56\u7565\u5efa\u8bae - \u667a\u80fd\u98ce\u9669\u63d0\u9192</p>"},{"location":"zh/examples/real-world/#devops","title":"DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3","text":""},{"location":"zh/examples/real-world/#_4","title":"\u5168\u65b9\u4f4d\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a \ud83d\udda5\ufe0f \u670d\u52a1\u5668\u603b\u6570                  \u2705 \u5065\u5eb7\u72b6\u6001                  \u26a0\ufe0f \u8b66\u544a\u72b6\u6001                  \ud83c\udfaf \u96c6\u7fa4\u53ef\u7528\u6027","text":"Python<pre><code>def create_devops_monitoring():\n    \"\"\"\u521b\u5efaDevOps\u76d1\u63a7\u4e2d\u5fc3\u62a5\u544a\"\"\"\n\n    # \u6a21\u62df\u76d1\u63a7\u6570\u636e\n    monitoring_data = {\n        'infrastructure': {\n            'servers': [\n                {'name': 'Web-01', 'cpu': 45, 'memory': 68, 'disk': 72, 'status': 'healthy'},\n                {'name': 'Web-02', 'cpu': 52, 'memory': 71, 'disk': 69, 'status': 'healthy'},\n                {'name': 'DB-01', 'cpu': 78, 'memory': 85, 'disk': 91, 'status': 'warning'},\n                {'name': 'Cache-01', 'cpu': 35, 'memory': 42, 'disk': 55, 'status': 'healthy'}\n            ],\n            'services': [\n                {'name': 'API Gateway', 'uptime': 99.95, 'response_time': 120, 'requests': 1250000},\n                {'name': 'User Service', 'uptime': 99.87, 'response_time': 85, 'requests': 856000},\n                {'name': 'Order Service', 'uptime': 98.92, 'response_time': 155, 'requests': 445000},\n                {'name': 'Payment Service', 'uptime': 99.99, 'response_time': 95, 'requests': 198000}\n            ]\n        },\n        'deployment': {\n            'recent_deploys': [\n                {'service': 'User Service', 'version': 'v2.3.1', 'status': 'success', 'time': '2\u5c0f\u65f6\u524d'},\n                {'service': 'API Gateway', 'version': 'v1.8.2', 'status': 'success', 'time': '1\u5929\u524d'},\n                {'service': 'Order Service', 'version': 'v3.1.0', 'status': 'failed', 'time': '3\u5929\u524d'}\n            ]\n        }\n    }\n\n    email = Email(\"DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3\")\n\n    email.add_title(\"\ud83d\udd27 DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3\", TextType.TITLE_LARGE)\n    email.add_text(f\"\u76d1\u63a7\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n    # \u57fa\u7840\u8bbe\u65bd\u72b6\u6001\n    email.add_title(\"\ud83d\udda5\ufe0f \u57fa\u7840\u8bbe\u65bd\u72b6\u6001\", TextType.SECTION_H2)\n\n    # \u670d\u52a1\u5668\u72b6\u6001\u6982\u89c8\n    servers = monitoring_data['infrastructure']['servers']\n    healthy_servers = sum(1 for s in servers if s['status'] == 'healthy')\n    warning_servers = sum(1 for s in servers if s['status'] == 'warning')\n\n    infra_overview = [\n        (\"\u670d\u52a1\u5668\u603b\u6570\", f\"{len(servers)}\", \"\ud83d\udda5\ufe0f\"),\n        (\"\u5065\u5eb7\u72b6\u6001\", f\"{healthy_servers}\", \"\u2705\"),\n        (\"\u8b66\u544a\u72b6\u6001\", f\"{warning_servers}\", \"\u26a0\ufe0f\"),\n        (\"\u96c6\u7fa4\u53ef\u7528\u6027\", \"99.2%\", \"\ud83c\udfaf\")\n    ]\n\n    for title, value, icon in infra_overview:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # \u670d\u52a1\u5668\u8be6\u7ec6\u72b6\u6001\n    server_table_data = [[\"\u670d\u52a1\u5668\", \"CPU\u4f7f\u7528\u7387\", \"\u5185\u5b58\u4f7f\u7528\u7387\", \"\u78c1\u76d8\u4f7f\u7528\u7387\", \"\u72b6\u6001\"]]\n\n    for server in servers:\n        status_emoji = \"\ud83d\udfe2\" if server['status'] == 'healthy' else \\\n                      \"\ud83d\udfe1\" if server['status'] == 'warning' else \"\ud83d\udd34\"\n\n        server_table_data.append([\n            server['name'],\n            f\"{server['cpu']}%\",\n            f\"{server['memory']}%\",\n            f\"{server['disk']}%\",\n            f\"{status_emoji} {server['status']}\"\n        ])\n\n    email.add_table_from_data(\n        data=server_table_data[1:],\n        headers=server_table_data[0],\n        title=\"\u670d\u52a1\u5668\u8d44\u6e90\u4f7f\u7528\u8be6\u60c5\"\n    )\n\n    # \u5e94\u7528\u670d\u52a1\u76d1\u63a7\n    email.add_title(\"\ud83d\ude80 \u5e94\u7528\u670d\u52a1\u76d1\u63a7\", TextType.SECTION_H2)\n\n    services = monitoring_data['infrastructure']['services']\n\n    for service in services:\n        # \u670d\u52a1\u53ef\u7528\u6027\n        uptime_theme = ProgressTheme.SUCCESS if service['uptime'] &gt;= 99.5 else \\\n                      ProgressTheme.WARNING if service['uptime'] &gt;= 99.0 else ProgressTheme.ERROR\n\n        email.add_text(f\"\ud83d\udd39 {service['name']}\")\n        email.add_progress(\n            value=service['uptime'],\n            label=f\"\u53ef\u7528\u6027: {service['uptime']:.2f}% | \u54cd\u5e94\u65f6\u95f4: {service['response_time']}ms\",\n            theme=uptime_theme\n        )\n\n    # \u90e8\u7f72\u5386\u53f2\n    email.add_title(\"\ud83d\udce6 \u6700\u8fd1\u90e8\u7f72\u8bb0\u5f55\", TextType.SECTION_H2)\n\n    deploy_table_data = [[\"\u670d\u52a1\u540d\u79f0\", \"\u7248\u672c\", \"\u90e8\u7f72\u72b6\u6001\", \"\u90e8\u7f72\u65f6\u95f4\"]]\n\n    for deploy in monitoring_data['deployment']['recent_deploys']:\n        status_display = \"\u2705 \u6210\u529f\" if deploy['status'] == 'success' else \\\n                        \"\u274c \u5931\u8d25\" if deploy['status'] == 'failed' else \"\ud83d\udd04 \u8fdb\u884c\u4e2d\"\n\n        deploy_table_data.append([\n            deploy['service'],\n            deploy['version'],\n            status_display,\n            deploy['time']\n        ])\n\n    email.add_table_from_data(\n        data=deploy_table_data[1:],\n        headers=deploy_table_data[0],\n        title=\"\u90e8\u7f72\u8bb0\u5f55\"\n    )\n\n    # \u544a\u8b66\u548c\u5efa\u8bae\n    email.add_title(\"\ud83d\udea8 \u8fd0\u7ef4\u544a\u8b66\", TextType.SECTION_H2)\n\n    # \u68c0\u67e5\u9700\u8981\u5173\u6ce8\u7684\u95ee\u9898\n    alerts = []\n\n    for server in servers:\n        if server['status'] == 'warning':\n            if server['memory'] &gt; 80:\n                alerts.append(f\"{server['name']} \u5185\u5b58\u4f7f\u7528\u7387\u8fc7\u9ad8({server['memory']}%)\")\n            if server['disk'] &gt; 90:\n                alerts.append(f\"{server['name']} \u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3({server['disk']}%)\")\n\n    failed_deploys = [d for d in monitoring_data['deployment']['recent_deploys'] if d['status'] == 'failed']\n    if failed_deploys:\n        for deploy in failed_deploys:\n            alerts.append(f\"{deploy['service']} \u90e8\u7f72\u5931\u8d25\uff0c\u7248\u672c {deploy['version']}\")\n\n    if alerts:\n        for alert in alerts:\n            email.add_alert(alert, AlertType.WARNING, \"\u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66\")\n    else:\n        email.add_alert(\"\u7cfb\u7edf\u8fd0\u884c\u72b6\u6001\u826f\u597d\uff0c\u65e0\u5f02\u5e38\u544a\u8b66\", AlertType.TIP, \"\u2705 \u7cfb\u7edf\u6b63\u5e38\")\n\n    return email\n\n# \u751f\u6210DevOps\u76d1\u63a7\u62a5\u544a\ndevops_email = create_devops_monitoring()\ndevops_email.export_html(\"devops_monitoring.html\")\nprint(\"\u2705 DevOps\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1adevops_monitoring.html\")\n</code></pre> DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3 DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:57:58 <p>\ud83d\udd27 DevOps\u8fd0\u7ef4\u76d1\u63a7\u4e2d\u5fc3</p> <p>\u76d1\u63a7\u65f6\u95f4: 2025-07-07 23:57:58</p> 1. \ud83d\udda5\ufe0f \u57fa\u7840\u8bbe\u65bd\u72b6\u6001 4 3 1 99.2% \u670d\u52a1\u5668 CPU\u4f7f\u7528\u7387 \u5185\u5b58\u4f7f\u7528\u7387 \u78c1\u76d8\u4f7f\u7528\u7387 \u72b6\u6001 Web-01 45% 68% 72% \ud83d\udfe2 healthy Web-02 52% 71% 69% \ud83d\udfe2 healthy DB-01 78% 85% 91% \ud83d\udfe1 warning Cache-01 35% 42% 55% \ud83d\udfe2 healthy 2. \ud83d\ude80 \u5e94\u7528\u670d\u52a1\u76d1\u63a7 <p>\ud83d\udd39 API Gateway</p> \u53ef\u7528\u6027: 99.95% | \u54cd\u5e94\u65f6\u95f4: 120ms 100.0% <p>\ud83d\udd39 User Service</p> \u53ef\u7528\u6027: 99.87% | \u54cd\u5e94\u65f6\u95f4: 85ms 99.9% <p>\ud83d\udd39 Order Service</p> \u53ef\u7528\u6027: 98.92% | \u54cd\u5e94\u65f6\u95f4: 155ms 98.9% <p>\ud83d\udd39 Payment Service</p> \u53ef\u7528\u6027: 99.99% | \u54cd\u5e94\u65f6\u95f4: 95ms 100.0% 3. \ud83d\udce6 \u6700\u8fd1\u90e8\u7f72\u8bb0\u5f55 \u670d\u52a1\u540d\u79f0 \u7248\u672c \u90e8\u7f72\u72b6\u6001 \u90e8\u7f72\u65f6\u95f4 User Service v2.3.1 \u2705 \u6210\u529f 2\u5c0f\u65f6\u524d API Gateway v1.8.2 \u2705 \u6210\u529f 1\u5929\u524d Order Service v3.1.0 \u274c \u5931\u8d25 3\u5929\u524d 4. \ud83d\udea8 \u8fd0\u7ef4\u544a\u8b66 \u26a0\ufe0f \u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66 DB-01 \u5185\u5b58\u4f7f\u7528\u7387\u8fc7\u9ad8(85%)  \u26a0\ufe0f \u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66 DB-01 \u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3(91%)  \u26a0\ufe0f \u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66 Order Service \u90e8\u7f72\u5931\u8d25\uff0c\u7248\u672c v3.1.0  <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>DevOps\u76d1\u63a7\u7279\u70b9\uff1a - \u5168\u6808\u57fa\u7840\u8bbe\u65bd\u76d1\u63a7 - \u5e94\u7528\u670d\u52a1\u5065\u5eb7\u68c0\u67e5 - \u90e8\u7f72\u6d41\u6c34\u7ebf\u8ddf\u8e2a - \u667a\u80fd\u544a\u8b66\u7cfb\u7edf</p>"},{"location":"zh/examples/real-world/#_5","title":"\u6570\u636e\u79d1\u5b66\u5b9e\u9a8c\u62a5\u544a","text":""},{"location":"zh/examples/real-world/#_6","title":"\u673a\u5668\u5b66\u4e60\u6a21\u578b\u8bc4\u4f30\u62a5\u544a \ud83d\udcca \u6570\u636e\u96c6\u5927\u5c0f                  \u23f1\ufe0f \u8bad\u7ec3\u65f6\u95f4                  \u2702\ufe0f \u9a8c\u8bc1\u96c6\u6bd4\u4f8b                  \ud83d\udd04 \u4ea4\u53c9\u9a8c\u8bc1                 \u7279\u5f81\u91cd\u8981\u6027\u5206\u5e03","text":"Python<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef create_ml_experiment_report():\n    \"\"\"\u521b\u5efa\u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\"\"\"\n\n    # \u6a21\u62df\u5b9e\u9a8c\u6570\u636e\n    experiment_data = {\n        'model_comparison': [\n            {'name': 'Random Forest', 'accuracy': 0.892, 'precision': 0.885, 'recall': 0.898, 'f1': 0.891},\n            {'name': 'XGBoost', 'accuracy': 0.907, 'precision': 0.902, 'recall': 0.911, 'f1': 0.906},\n            {'name': 'SVM', 'accuracy': 0.875, 'precision': 0.871, 'recall': 0.879, 'f1': 0.875},\n            {'name': 'Neural Network', 'accuracy': 0.923, 'precision': 0.919, 'recall': 0.927, 'f1': 0.923}\n        ],\n        'feature_importance': [\n            {'feature': '\u7528\u6237\u5e74\u9f84', 'importance': 0.23},\n            {'feature': '\u8d2d\u4e70\u5386\u53f2', 'importance': 0.19},\n            {'feature': '\u6d4f\u89c8\u65f6\u957f', 'importance': 0.15},\n            {'feature': '\u8bbe\u5907\u7c7b\u578b', 'importance': 0.12},\n            {'feature': '\u5730\u7406\u4f4d\u7f6e', 'importance': 0.10}\n        ],\n        'training_metrics': {\n            'dataset_size': 125000,\n            'training_time': 45.2,\n            'validation_split': 0.2,\n            'cross_validation_folds': 5\n        }\n    }\n\n    email = Email(\"\u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\")\n\n    email.add_title(\"\ud83e\udde0 \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\", TextType.TITLE_LARGE)\n    email.add_text(\"\u5b9e\u9a8c\u76ee\u6807: \u7528\u6237\u8d2d\u4e70\u610f\u5411\u9884\u6d4b\u6a21\u578b\")\n    email.add_text(f\"\u5b9e\u9a8c\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d')}\")\n\n    # \u5b9e\u9a8c\u6982\u89c8\n    email.add_title(\"\ud83d\udcca \u5b9e\u9a8c\u6982\u89c8\", TextType.SECTION_H2)\n\n    metrics = experiment_data['training_metrics']\n    exp_overview = [\n        (\"\u6570\u636e\u96c6\u5927\u5c0f\", f\"{metrics['dataset_size']:,\u6761\", \"\ud83d\udcca\"),\n        (\"\u8bad\u7ec3\u65f6\u95f4\", f\"{metrics['training_time']:.1f}\u5206\u949f\", \"\u23f1\ufe0f\"),\n        (\"\u9a8c\u8bc1\u96c6\u6bd4\u4f8b\", f\"{metrics['validation_split']*100:.0f}%\", \"\u2702\ufe0f\"),\n        (\"\u4ea4\u53c9\u9a8c\u8bc1\", f\"{metrics['cross_validation_folds']}\u6298\", \"\ud83d\udd04\")\n    ]\n\n    for title, value, icon in exp_overview:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # \u6a21\u578b\u6027\u80fd\u5bf9\u6bd4\n    email.add_title(\"\ud83c\udfc6 \u6a21\u578b\u6027\u80fd\u5bf9\u6bd4\", TextType.SECTION_H2)\n\n    model_table_data = [[\"\u6a21\u578b\", \"\u51c6\u786e\u7387\", \"\u7cbe\u786e\u7387\", \"\u53ec\u56de\u7387\", \"F1\u5206\u6570\", \"\u7efc\u5408\u8bc4\u4ef7\"]]\n\n    for model in experiment_data['model_comparison']:\n        # \u8ba1\u7b97\u7efc\u5408\u8bc4\u4ef7\n        avg_score = (model['accuracy'] + model['precision'] + model['recall'] + model['f1']) / 4\n        rating = \"\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\" if avg_score &gt;= 0.92 else \\\n                \"\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\" if avg_score &gt;= 0.90 else \\\n                \"\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\" if avg_score &gt;= 0.88 else \"\ud83c\udf1f\ud83c\udf1f\"\n\n        model_table_data.append([\n            model['name'],\n            f\"{model['accuracy']:.3f}\",\n            f\"{model['precision']:.3f}\",\n            f\"{model['recall']:.3f}\",\n            f\"{model['f1']:.3f}\",\n            rating\n        ])\n\n    email.add_table_from_data(\n        data=model_table_data[1:],\n        headers=model_table_data[0],\n        title=\"\u6a21\u578b\u6027\u80fd\u6307\u6807\u5bf9\u6bd4\"\n    )\n\n    # \u7279\u5f81\u91cd\u8981\u6027\u5206\u6790\n    email.add_title(\"\ud83d\udd0d \u7279\u5f81\u91cd\u8981\u6027\u5206\u6790\", TextType.SECTION_H2)\n\n    # \u521b\u5efa\u7279\u5f81\u91cd\u8981\u6027\u56fe\u8868\n    features = [f['feature'] for f in experiment_data['feature_importance']]\n    importance = [f['importance'] for f in experiment_data['feature_importance']]\n\n    plt.figure(figsize=(10, 6))\n    bars = plt.barh(features, importance, color=['#3498db', '#2ecc71', '#f39c12', '#e74c3c', '#9b59b6'])\n    plt.title('\u7279\u5f81\u91cd\u8981\u6027\u6392\u5e8f', fontsize=14)\n    plt.xlabel('\u91cd\u8981\u6027\u5206\u6570')\n\n    # \u6dfb\u52a0\u6570\u503c\u6807\u7b7e\n    for bar, imp in zip(bars, importance):\n        plt.text(bar.get_width() + 0.01, bar.get_y() + bar.get_height()/2, \n                f'{imp:.2f}', ha='left', va='center')\n\n    plt.tight_layout()\n    feature_chart_path = \"feature_importance.png\"\n    plt.savefig(feature_chart_path, dpi=150, bbox_inches='tight')\n    plt.close()\n\n    # \u6dfb\u52a0\u56fe\u8868\u5230\u90ae\u4ef6\n    email.add_chart(\n        chart_path=feature_chart_path,\n        title=\"\u7279\u5f81\u91cd\u8981\u6027\u5206\u5e03\",\n        description=\"\u663e\u793a\u5404\u7279\u5f81\u5bf9\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u7684\u5f71\u54cd\u7a0b\u5ea6\"\n    )\n\n    # \u5b9e\u9a8c\u7ed3\u8bba\n    email.add_title(\"\ud83d\udcdd \u5b9e\u9a8c\u7ed3\u8bba\", TextType.SECTION_H2)\n\n    best_model = max(experiment_data['model_comparison'], key=lambda x: x['f1'])\n    top_feature = experiment_data['feature_importance'][0]\n\n    conclusions = f\"\"\"\n**\u5b9e\u9a8c\u7ed3\u8bba\u4e0e\u5efa\u8bae\uff1a**\n\n\ud83c\udfc6 **\u6700\u4f18\u6a21\u578b**\n\u2022 {best_model['name']} \u8868\u73b0\u6700\u4f73\uff0cF1\u5206\u6570\u8fbe\u5230 {best_model['f1']:.3f}\n\u2022 \u5efa\u8bae\u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u7684\u4e3b\u8981\u6a21\u578b\n\n\ud83d\udd0d **\u5173\u952e\u53d1\u73b0**\n\u2022 {top_feature['feature']} \u662f\u6700\u91cd\u8981\u7684\u9884\u6d4b\u7279\u5f81 (\u91cd\u8981\u6027: {top_feature['importance']:.2f})\n\u2022 \u6a21\u578b\u6574\u4f53\u6027\u80fd\u7a33\u5b9a\uff0c\u5404\u6307\u6807\u5747\u8861\n\u2022 \u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c\u4e00\u81f4\uff0c\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u5f3a\n\n\ud83d\ude80 **\u540e\u7eed\u5de5\u4f5c**\n\u2022 \u8fdb\u884c\u8d85\u53c2\u6570\u4f18\u5316\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u6027\u80fd\n\u2022 \u6536\u96c6\u66f4\u591a\u6837\u672c\u6570\u636e\uff0c\u7279\u522b\u662f\u8fb9\u7f18\u6848\u4f8b\n\u2022 \u5f00\u53d1\u6a21\u578b\u89e3\u91ca\u6027\u5de5\u5177\uff0c\u63d0\u9ad8\u4e1a\u52a1\u53ef\u7406\u89e3\u6027\n\u2022 \u5efa\u7acbA/B\u6d4b\u8bd5\u6846\u67b6\uff0c\u9a8c\u8bc1\u7ebf\u4e0a\u6548\u679c\n\"\"\"\n\n    email.add_text(conclusions.strip())\n\n    # \u6a21\u578b\u90e8\u7f72\u5efa\u8bae\n    if best_model['accuracy'] &gt; 0.9:\n        email.add_alert(\n            f\"{best_model['name']} \u6a21\u578b\u6027\u80fd\u4f18\u79c0\uff0c\u5efa\u8bae\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\",\n            AlertType.TIP,\n            \"\u2705 \u90e8\u7f72\u5efa\u8bae\"\n        )\n    else:\n        email.add_alert(\n            \"\u6a21\u578b\u6027\u80fd\u6709\u5f85\u63d0\u5347\uff0c\u5efa\u8bae\u8fdb\u4e00\u6b65\u4f18\u5316\u540e\u518d\u90e8\u7f72\",\n            AlertType.WARNING,\n            \"\u26a0\ufe0f \u6027\u80fd\u63d0\u9192\"\n        )\n\n    return email\n\n# \u751f\u6210\u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\nml_email = create_ml_experiment_report()\nml_email.export_html(\"ml_experiment_report.html\")\nprint(\"\u2705 \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a\u5df2\u751f\u6210\uff1aml_experiment_report.html\")\n</code></pre> \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:58:57 <p>\ud83e\udde0 \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u62a5\u544a</p> <p>\u5b9e\u9a8c\u76ee\u6807: \u7528\u6237\u8d2d\u4e70\u610f\u5411\u9884\u6d4b\u6a21\u578b</p> <p>\u5b9e\u9a8c\u65f6\u95f4: 2025-07-07</p> 1. \ud83d\udcca \u5b9e\u9a8c\u6982\u89c8 125,000\u6761 45.2\u5206\u949f 20% 5\u6298 2. \ud83c\udfc6 \u6a21\u578b\u6027\u80fd\u5bf9\u6bd4 \u6a21\u578b \u51c6\u786e\u7387 \u7cbe\u786e\u7387 \u53ec\u56de\u7387 F1\u5206\u6570 \u7efc\u5408\u8bc4\u4ef7 Random Forest 0.892 0.885 0.898 0.891 \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f XGBoost 0.907 0.902 0.911 0.906 \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f SVM 0.875 0.871 0.879 0.875 \ud83c\udf1f\ud83c\udf1f Neural Network 0.923 0.919 0.927 0.923 \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f 3. \ud83d\udd0d \u7279\u5f81\u91cd\u8981\u6027\u5206\u6790 <p>\u663e\u793a\u5404\u7279\u5f81\u5bf9\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u7684\u5f71\u54cd\u7a0b\u5ea6</p> 4. \ud83d\udcdd \u5b9e\u9a8c\u7ed3\u8bba <p>**\u5b9e\u9a8c\u7ed3\u8bba\u4e0e\u5efa\u8bae\uff1a**</p> <p>\ud83c\udfc6 **\u6700\u4f18\u6a21\u578b**</p> <p>\u2022 Neural Network \u8868\u73b0\u6700\u4f73\uff0cF1\u5206\u6570\u8fbe\u5230 0.923</p> <p>\u2022 \u5efa\u8bae\u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u7684\u4e3b\u8981\u6a21\u578b</p> <p>\ud83d\udd0d **\u5173\u952e\u53d1\u73b0**</p> <p>\u2022 \u7528\u6237\u5e74\u9f84 \u662f\u6700\u91cd\u8981\u7684\u9884\u6d4b\u7279\u5f81 (\u91cd\u8981\u6027: 0.23)</p> <p>\u2022 \u6a21\u578b\u6574\u4f53\u6027\u80fd\u7a33\u5b9a\uff0c\u5404\u6307\u6807\u5747\u8861</p> <p>\u2022 \u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c\u4e00\u81f4\uff0c\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u5f3a</p> <p>\ud83d\ude80 **\u540e\u7eed\u5de5\u4f5c**</p> <p>\u2022 \u8fdb\u884c\u8d85\u53c2\u6570\u4f18\u5316\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u6027\u80fd</p> <p>\u2022 \u6536\u96c6\u66f4\u591a\u6837\u672c\u6570\u636e\uff0c\u7279\u522b\u662f\u8fb9\u7f18\u6848\u4f8b</p> <p>\u2022 \u5f00\u53d1\u6a21\u578b\u89e3\u91ca\u6027\u5de5\u5177\uff0c\u63d0\u9ad8\u4e1a\u52a1\u53ef\u7406\u89e3\u6027</p> <p>\u2022 \u5efa\u7acbA/B\u6d4b\u8bd5\u6846\u67b6\uff0c\u9a8c\u8bc1\u7ebf\u4e0a\u6548\u679c</p> \ud83d\udca1 \u2705 \u90e8\u7f72\u5efa\u8bae Neural Network \u6a21\u578b\u6027\u80fd\u4f18\u79c0\uff0c\u5efa\u8bae\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u6570\u636e\u79d1\u5b66\u62a5\u544a\u7279\u70b9\uff1a - \u5168\u9762\u7684\u6a21\u578b\u8bc4\u4f30\u6307\u6807 - \u53ef\u89c6\u5316\u7279\u5f81\u91cd\u8981\u6027 - \u79d1\u5b66\u7684\u5b9e\u9a8c\u8bb0\u5f55 - \u53ef\u64cd\u4f5c\u7684\u7ed3\u8bba\u5efa\u8bae</p>"},{"location":"zh/examples/real-world/#_7","title":"\u9879\u76ee\u7ba1\u7406\u770b\u677f","text":""},{"location":"zh/examples/real-world/#_8","title":"\u654f\u6377\u5f00\u53d1\u8fdb\u5ea6\u8ddf\u8e2a \ud83d\udc65 \u56e2\u961f\u89c4\u6a21                  \ud83d\udcc5 \u5f00\u59cb\u65f6\u95f4                  \ud83c\udfaf \u76ee\u6807\u65f6\u95f4                  \ud83d\udd04 \u5f53\u524d\u8fed\u4ee3                  \ud83d\udcca \u4ee3\u7801\u8986\u76d6\u7387                  \ud83d\udc1b \u5f85\u4fee\u590dBug                  \u2705 \u5df2\u4fee\u590dBug                  \u26a0\ufe0f \u6280\u672f\u503a\u52a1","text":"Python<pre><code>def create_project_management_dashboard():\n    \"\"\"\u521b\u5efa\u9879\u76ee\u7ba1\u7406\u770b\u677f\"\"\"\n\n    # \u9879\u76ee\u6570\u636e\n    project_data = {\n        'project_info': {\n            'name': 'EmailWidget v2.0',\n            'start_date': '2024-01-01',\n            'target_date': '2024-03-31',\n            'team_size': 8,\n            'current_sprint': 'Sprint 6'\n        },\n        'sprint_progress': {\n            'total_story_points': 120,\n            'completed_points': 95,\n            'in_progress_points': 15,\n            'remaining_points': 10\n        },\n        'tasks': [\n            {'title': '\u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf', 'status': 'completed', 'assignee': '\u5f20\u4e09', 'points': 13},\n            {'title': '\u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6', 'status': 'in_progress', 'assignee': '\u674e\u56db', 'points': 8},\n            {'title': '\u79fb\u52a8\u7aef\u9002\u914d', 'status': 'in_progress', 'assignee': '\u738b\u4e94', 'points': 5},\n            {'title': '\u6027\u80fd\u4f18\u5316', 'status': 'todo', 'assignee': '\u8d75\u516d', 'points': 8},\n            {'title': '\u6587\u6863\u66f4\u65b0', 'status': 'todo', 'assignee': '\u5b59\u4e03', 'points': 2}\n        ],\n        'quality_metrics': {\n            'code_coverage': 87.5,\n            'bugs_open': 12,\n            'bugs_resolved': 45,\n            'tech_debt_hours': 24\n        }\n    }\n\n    email = Email(\"\u9879\u76ee\u7ba1\u7406\u770b\u677f\")\n\n    email.add_title(\"\ud83d\udccb \u9879\u76ee\u7ba1\u7406\u770b\u677f\", TextType.TITLE_LARGE)\n\n    # \u9879\u76ee\u6982\u89c8\n    project_info = project_data['project_info']\n    email.add_text(f\"\u9879\u76ee\u540d\u79f0: {project_info['name']}\")\n    email.add_text(f\"\u5f53\u524d\u8fed\u4ee3: {project_info['current_sprint']}\")\n\n    project_overview = [\n        (\"\u56e2\u961f\u89c4\u6a21\", f\"{project_info['team_size']}\u4eba\", \"\ud83d\udc65\"),\n        (\"\u5f00\u59cb\u65f6\u95f4\", project_info['start_date'], \"\ud83d\udcc5\"),\n        (\"\u76ee\u6807\u65f6\u95f4\", project_info['target_date'], \"\ud83c\udfaf\"),\n        (\"\u5f53\u524d\u8fed\u4ee3\", project_info['current_sprint'], \"\ud83d\udd04\")\n    ]\n\n    for title, value, icon in project_overview:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # Sprint\u8fdb\u5ea6\n    email.add_title(\"\ud83d\ude80 Sprint \u8fdb\u5ea6\", TextType.SECTION_H2)\n\n    sprint = project_data['sprint_progress']\n    completed_rate = (sprint['completed_points'] / sprint['total_story_points']) * 100\n\n    email.add_progress(\n        value=completed_rate,\n        label=f\"\u5df2\u5b8c\u6210: {sprint['completed_points']}/{sprint['total_story_points']} \u6545\u4e8b\u70b9 ({completed_rate:.1f}%)\",\n        theme=ProgressTheme.SUCCESS if completed_rate &gt; 80 else ProgressTheme.INFO\n    )\n\n    # \u4efb\u52a1\u72b6\u6001\u5206\u5e03\n    email.add_title(\"\ud83d\udcca \u4efb\u52a1\u72b6\u6001\u5206\u5e03\", TextType.SECTION_H2)\n\n    tasks = project_data['tasks']\n    status_counts = {\n        'completed': len([t for t in tasks if t['status'] == 'completed']),\n        'in_progress': len([t for t in tasks if t['status'] == 'in_progress']),\n        'todo': len([t for t in tasks if t['status'] == 'todo'])\n    }\n\n    total_tasks = len(tasks)\n\n    for status, count in status_counts.items():\n        status_name = {'completed': '\u5df2\u5b8c\u6210', 'in_progress': '\u8fdb\u884c\u4e2d', 'todo': '\u5f85\u5f00\u59cb'}[status]\n        status_theme = {'completed': ProgressTheme.SUCCESS, 'in_progress': ProgressTheme.INFO, 'todo': ProgressTheme.WARNING}[status]\n        percentage = (count / total_tasks) * 100\n\n        email.add_text(f\"\ud83d\udd39 {status_name}\")\n        email.add_progress(percentage, f\"{count} \u4e2a\u4efb\u52a1 ({percentage:.1f}%)\", theme=status_theme)\n\n    # \u4efb\u52a1\u8be6\u60c5\n    email.add_title(\"\ud83d\udccb \u4efb\u52a1\u8be6\u60c5\", TextType.SECTION_H2)\n\n    task_table_data = [[\"\u4efb\u52a1\u540d\u79f0\", \"\u72b6\u6001\", \"\u8d1f\u8d23\u4eba\", \"\u6545\u4e8b\u70b9\", \"\u8fdb\u5ea6\"]]\n\n    for task in tasks:\n        status_emoji = {\"completed\": \"\u2705\", \"in_progress\": \"\ud83d\udd04\", \"todo\": \"\u23f3\"}[task['status']]\n        status_text = {\"completed\": \"\u5df2\u5b8c\u6210\", \"in_progress\": \"\u8fdb\u884c\u4e2d\", \"todo\": \"\u5f85\u5f00\u59cb\"}[task['status']]\n\n        task_table_data.append([\n            task['title'],\n            f\"{status_emoji} {status_text}\",\n            task['assignee'],\n            str(task['points']),\n            \"100%\" if task['status'] == 'completed' else \"50%\" if task['status'] == 'in_progress' else \"0%\"\n        ])\n\n    email.add_table_from_data(\n        data=task_table_data[1:],\n        headers=task_table_data[0],\n        title=\"\u4efb\u52a1\u5206\u914d\u548c\u8fdb\u5ea6\"\n    )\n\n    # \u8d28\u91cf\u6307\u6807\n    email.add_title(\"\ud83d\udd0d \u8d28\u91cf\u6307\u6807\", TextType.SECTION_H2)\n\n    quality = project_data['quality_metrics']\n\n    quality_overview = [\n        (\"\u4ee3\u7801\u8986\u76d6\u7387\", f\"{quality['code_coverage']:.1f}%\", \"\ud83d\udcca\"),\n        (\"\u5f85\u4fee\u590dBug\", f\"{quality['bugs_open']}\", \"\ud83d\udc1b\"),\n        (\"\u5df2\u4fee\u590dBug\", f\"{quality['bugs_resolved']}\", \"\u2705\"),\n        (\"\u6280\u672f\u503a\u52a1\", f\"{quality['tech_debt_hours']}\u5c0f\u65f6\", \"\u26a0\ufe0f\")\n    ]\n\n    for title, value, icon in quality_overview:\n        email.add_card(title=title, content=value, icon=icon)\n\n    # \u9879\u76ee\u98ce\u9669\u548c\u5efa\u8bae\n    email.add_title(\"\ud83d\udca1 \u9879\u76ee\u72b6\u6001\u8bc4\u4f30\", TextType.SECTION_H2)\n\n    # \u57fa\u4e8e\u6570\u636e\u751f\u6210\u8bc4\u4f30\n    risks = []\n    if completed_rate &lt; 70:\n        risks.append(\"Sprint\u8fdb\u5ea6\u6ede\u540e\uff0c\u53ef\u80fd\u5f71\u54cd\u4ea4\u4ed8\u65f6\u95f4\")\n    if quality['code_coverage'] &lt; 80:\n        risks.append(\"\u4ee3\u7801\u8986\u76d6\u7387\u504f\u4f4e\uff0c\u9700\u8981\u52a0\u5f3a\u6d4b\u8bd5\")\n    if quality['bugs_open'] &gt; 15:\n        risks.append(\"\u5f85\u4fee\u590dBug\u8f83\u591a\uff0c\u5f71\u54cd\u4ea7\u54c1\u8d28\u91cf\")\n\n    if risks:\n        for risk in risks:\n            email.add_alert(risk, AlertType.WARNING, \"\u26a0\ufe0f \u9879\u76ee\u98ce\u9669\")\n    else:\n        email.add_alert(\"\u9879\u76ee\u8fdb\u5c55\u987a\u5229\uff0c\u5404\u9879\u6307\u6807\u6b63\u5e38\", AlertType.TIP, \"\u2705 \u9879\u76ee\u72b6\u6001\u826f\u597d\")\n\n    return email\n\n# \u751f\u6210\u9879\u76ee\u7ba1\u7406\u770b\u677f\npm_email = create_project_management_dashboard()\npm_email.export_html(\"project_management_dashboard.html\")\nprint(\"\u2705 \u9879\u76ee\u7ba1\u7406\u770b\u677f\u5df2\u751f\u6210\uff1aproject_management_dashboard.html\")\n</code></pre> \u9879\u76ee\u7ba1\u7406\u770b\u677f \u9879\u76ee\u7ba1\u7406\u770b\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670808\u65e5 00:00:15 <p>\ud83d\udccb \u9879\u76ee\u7ba1\u7406\u770b\u677f</p> <p>\u9879\u76ee\u540d\u79f0: EmailWidget v2.0</p> <p>\u5f53\u524d\u8fed\u4ee3: Sprint 6</p> 8\u4eba 2024-01-01 2024-03-31 Sprint 6 1. \ud83d\ude80 Sprint \u8fdb\u5ea6 \u5df2\u5b8c\u6210: 95/120 \u6545\u4e8b\u70b9 (79.2%) 79.2% 2. \ud83d\udcca \u4efb\u52a1\u72b6\u6001\u5206\u5e03 <p>\ud83d\udd39 \u5df2\u5b8c\u6210</p> 1 \u4e2a\u4efb\u52a1 (20.0%) 20.0% <p>\ud83d\udd39 \u8fdb\u884c\u4e2d</p> 2 \u4e2a\u4efb\u52a1 (40.0%) 40.0% <p>\ud83d\udd39 \u5f85\u5f00\u59cb</p> 2 \u4e2a\u4efb\u52a1 (40.0%) 40.0% 3. \ud83d\udccb \u4efb\u52a1\u8be6\u60c5 \u4efb\u52a1\u540d\u79f0 \u72b6\u6001 \u8d1f\u8d23\u4eba \u6545\u4e8b\u70b9 \u8fdb\u5ea6 \u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf \u2705 \u5df2\u5b8c\u6210 \u5f20\u4e09 13 100% \u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6 \ud83d\udd04 \u8fdb\u884c\u4e2d \u674e\u56db 8 50% \u79fb\u52a8\u7aef\u9002\u914d \ud83d\udd04 \u8fdb\u884c\u4e2d \u738b\u4e94 5 50% \u6027\u80fd\u4f18\u5316 \u23f3 \u5f85\u5f00\u59cb \u8d75\u516d 8 0% \u6587\u6863\u66f4\u65b0 \u23f3 \u5f85\u5f00\u59cb \u5b59\u4e03 2 0% 4. \ud83d\udd0d \u8d28\u91cf\u6307\u6807 87.5% 12 45 24\u5c0f\u65f6 5. \ud83d\udca1 \u9879\u76ee\u72b6\u6001\u8bc4\u4f30 \ud83d\udca1 \u2705 \u9879\u76ee\u72b6\u6001\u826f\u597d \u9879\u76ee\u8fdb\u5c55\u987a\u5229\uff0c\u5404\u9879\u6307\u6807\u6b63\u5e38 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u9879\u76ee\u7ba1\u7406\u7279\u70b9\uff1a - \u654f\u6377\u5f00\u53d1\u8fdb\u5ea6\u8ddf\u8e2a - \u56e2\u961f\u4efb\u52a1\u5206\u914d\u7ba1\u7406 - \u8d28\u91cf\u6307\u6807\u76d1\u63a7 - \u98ce\u9669\u8bc6\u522b\u548c\u9884\u8b66</p>"},{"location":"zh/examples/real-world/#_9","title":"\u5b66\u4e60\u603b\u7ed3","text":"<p>\u901a\u8fc7\u8fd9\u4e9b\u5b9e\u9645\u5e94\u7528\u793a\u4f8b\uff0c\u60a8\u5df2\u7ecf\u770b\u5230\u4e86\uff1a</p>"},{"location":"zh/examples/real-world/#_10","title":"\ud83c\udf1f \u5e94\u7528\u9886\u57df","text":"<ul> <li>\u7535\u5546\u8fd0\u8425 - \u6570\u636e\u9a71\u52a8\u7684\u5546\u4e1a\u51b3\u7b56</li> <li>DevOps\u8fd0\u7ef4 - \u5168\u6808\u7cfb\u7edf\u76d1\u63a7</li> <li>\u6570\u636e\u79d1\u5b66 - \u673a\u5668\u5b66\u4e60\u5b9e\u9a8c\u7ba1\u7406</li> <li>\u9879\u76ee\u7ba1\u7406 - \u654f\u6377\u5f00\u53d1\u8ddf\u8e2a</li> </ul>"},{"location":"zh/examples/real-world/#_11","title":"\ud83c\udfaf \u6838\u5fc3\u4ef7\u503c","text":"<ul> <li>\u5c06\u590d\u6742\u6570\u636e\u8f6c\u5316\u4e3a\u76f4\u89c2\u62a5\u544a</li> <li>\u652f\u6301\u591a\u9886\u57df\u7684\u4e13\u4e1a\u5e94\u7528</li> <li>\u63d0\u4f9b\u51b3\u7b56\u652f\u6301\u548c\u6d1e\u5bdf</li> <li>\u81ea\u52a8\u5316\u62a5\u544a\u751f\u6210\u6d41\u7a0b</li> </ul>"},{"location":"zh/examples/real-world/#_12","title":"\ud83d\udca1 \u8bbe\u8ba1\u7406\u5ff5","text":"<ul> <li>\u6570\u636e\u9a71\u52a8\u7684\u53ef\u89c6\u5316</li> <li>\u4e1a\u52a1\u5bfc\u5411\u7684\u4fe1\u606f\u5c55\u793a</li> <li>\u667a\u80fd\u5316\u7684\u5206\u6790\u548c\u5efa\u8bae</li> <li>\u54cd\u5e94\u5f0f\u7684\u4ea4\u4e92\u4f53\u9a8c</li> </ul>"},{"location":"zh/examples/real-world/#_13","title":"\ud83d\ude80 \u6269\u5c55\u65b9\u5411","text":"<ul> <li>\u96c6\u6210\u66f4\u591a\u6570\u636e\u6e90</li> <li>\u5f00\u53d1\u884c\u4e1a\u4e13\u7528\u6a21\u677f</li> <li>\u589e\u5f3a\u5b9e\u65f6\u76d1\u63a7\u80fd\u529b</li> <li>\u6784\u5efa\u62a5\u544a\u5206\u53d1\u7cfb\u7edf</li> </ul> <p>\u8fd9\u4e9b\u5b9e\u9645\u5e94\u7528\u6848\u4f8b\u5c55\u793a\u4e86 EmailWidget \u5728\u771f\u5b9e\u4e1a\u52a1\u573a\u666f\u4e2d\u7684\u5f3a\u5927\u80fd\u529b\u3002\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u9700\u6c42\uff0c\u53c2\u8003\u8fd9\u4e9b\u793a\u4f8b\u521b\u5efa\u4e13\u4e1a\u7684\u6570\u636e\u62a5\u544a\u7cfb\u7edf\uff01 </p>"},{"location":"zh/examples/spider-reports/","title":"\u722c\u866b\u62a5\u544a\u793a\u4f8b","text":"<p>\u672c\u9875\u9762\u5c55\u793a\u5982\u4f55\u4f7f\u7528 EmailWidget \u4e3a\u722c\u866b\u548c\u6570\u636e\u91c7\u96c6\u9879\u76ee\u521b\u5efa\u4e13\u4e1a\u7684\u76d1\u63a7\u62a5\u544a\u3002</p>"},{"location":"zh/examples/spider-reports/#_2","title":"\u722c\u866b\u4efb\u52a1\u76d1\u63a7","text":""},{"location":"zh/examples/spider-reports/#_3","title":"\u6570\u636e\u91c7\u96c6\u8fdb\u5ea6\u8ddf\u8e2a \ud83c\udfaf \u4efb\u52a1\u603b\u6570                  \ud83d\udd04 \u8fd0\u884c\u4e2d                  \u2705 \u5df2\u5b8c\u6210                  \ud83d\udce6 \u603b\u91c7\u96c6\u91cf","text":"Python<pre><code>from datetime import datetime, timedelta\nimport random\nfrom email_widget import Email, ProgressWidget, TableWidget, StatusWidget\nfrom email_widget.core.enums import TextType, ProgressTheme, StatusType\n\n# \u6a21\u62df\u722c\u866b\u4efb\u52a1\u6570\u636e\nspider_tasks = [\n    {\n        'name': '\u7535\u5546\u4ea7\u54c1\u4fe1\u606f\u91c7\u96c6',\n        'target_count': 10000,\n        'completed_count': 8500,\n        'success_rate': 95.2,\n        'avg_speed': 120,  # \u6761/\u5206\u949f\n        'status': '\u8fd0\u884c\u4e2d',\n        'start_time': datetime.now() - timedelta(hours=2)\n    },\n    {\n        'name': '\u65b0\u95fb\u8d44\u8baf\u722c\u53d6',\n        'target_count': 5000,\n        'completed_count': 5000,\n        'success_rate': 98.8,\n        'avg_speed': 200,\n        'status': '\u5df2\u5b8c\u6210',\n        'start_time': datetime.now() - timedelta(hours=1, minutes=30)\n    },\n    {\n        'name': '\u7528\u6237\u8bc4\u8bba\u6570\u636e',\n        'target_count': 20000,\n        'completed_count': 12000,\n        'success_rate': 92.1,\n        'avg_speed': 80,\n        'status': '\u8fd0\u884c\u4e2d',\n        'start_time': datetime.now() - timedelta(hours=3)\n    }\n]\n\n# \u521b\u5efa\u722c\u866b\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udd77\ufe0f \u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u62a5\u544a\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n# \u4efb\u52a1\u6982\u89c8\u7edf\u8ba1\nemail.add_title(\"\ud83d\udcca \u4efb\u52a1\u6982\u89c8\", TextType.SECTION_H2)\n\ntotal_tasks = len(spider_tasks)\nrunning_tasks = sum(1 for task in spider_tasks if task['status'] == '\u8fd0\u884c\u4e2d')\ncompleted_tasks = sum(1 for task in spider_tasks if task['status'] == '\u5df2\u5b8c\u6210')\ntotal_collected = sum(task['completed_count'] for task in spider_tasks)\n\noverview_stats = [\n    (\"\u4efb\u52a1\u603b\u6570\", f\"{total_tasks}\", \"\ud83c\udfaf\"),\n    (\"\u8fd0\u884c\u4e2d\", f\"{running_tasks}\", \"\ud83d\udd04\"),\n    (\"\u5df2\u5b8c\u6210\", f\"{completed_tasks}\", \"\u2705\"),\n    (\"\u603b\u91c7\u96c6\u91cf\", f\"{total_collected:,}\", \"\ud83d\udce6\")\n]\n\nfor title, value, icon in overview_stats:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u5404\u4efb\u52a1\u8be6\u7ec6\u8fdb\u5ea6\nemail.add_title(\"\ud83d\udcc8 \u4efb\u52a1\u8fdb\u5ea6\u8be6\u60c5\", TextType.SECTION_H2)\n\nfor task in spider_tasks:\n    # \u8ba1\u7b97\u8fdb\u5ea6\u767e\u5206\u6bd4\n    progress_percent = (task['completed_count'] / task['target_count']) * 100\n\n    # \u6839\u636e\u72b6\u6001\u8bbe\u7f6e\u4e3b\u9898\u8272\n    if task['status'] == '\u5df2\u5b8c\u6210':\n        theme = ProgressTheme.SUCCESS\n        status_type = StatusType.SUCCESS\n    elif task['success_rate'] &gt; 95:\n        theme = ProgressTheme.INFO\n        status_type = StatusType.SUCCESS\n    elif task['success_rate'] &gt; 90:\n        theme = ProgressTheme.WARNING\n        status_type = StatusType.WARNING\n    else:\n        theme = ProgressTheme.ERROR\n        status_type = StatusType.ERROR\n\n    # \u4efb\u52a1\u72b6\u6001\u5361\u7247\n    status_widget = StatusWidget()\n    status_widget.set_title(task['name']) \\\n                 .set_status(task['status']) \\\n                 .set_status_type(status_type) \\\n                 .set_description(f\"\u6210\u529f\u7387: {task['success_rate']:.1f}% | \u901f\u5ea6: {task['avg_speed']}\u6761/\u5206\u949f\")\n    email.add_widget(status_widget)\n\n    # \u8fdb\u5ea6\u6761\n    email.add_progress(\n        value=progress_percent,\n        label=f\"{task['completed_count']:,}/{task['target_count']:,} ({progress_percent:.1f}%)\",\n        theme=theme\n    )\n\n# \u8be6\u7ec6\u6570\u636e\u8868\u683c\nemail.add_title(\"\ud83d\udccb \u4efb\u52a1\u8be6\u7ec6\u6570\u636e\", TextType.SECTION_H2)\n\ntable = TableWidget()\ntable.set_headers([\"\u4efb\u52a1\u540d\u79f0\", \"\u76ee\u6807\u6570\u91cf\", \"\u5df2\u5b8c\u6210\", \"\u5b8c\u6210\u7387\", \"\u6210\u529f\u7387\", \"\u5e73\u5747\u901f\u5ea6\", \"\u8fd0\u884c\u65f6\u957f\"])\n\nfor task in spider_tasks:\n    runtime = datetime.now() - task['start_time']\n    runtime_str = f\"{runtime.seconds // 3600}h {(runtime.seconds % 3600) // 60}m\"\n\n    progress_percent = (task['completed_count'] / task['target_count']) * 100\n\n    table.add_row([\n        task['name'],\n        f\"{task['target_count']:,}\",\n        f\"{task['completed_count']:,}\",\n        f\"{progress_percent:.1f}%\",\n        f\"{task['success_rate']:.1f}%\",\n        f\"{task['avg_speed']}\u6761/\u5206\u949f\",\n        runtime_str\n    ])\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u6027\u80fd\u5206\u6790\nemail.add_title(\"\u26a1 \u6027\u80fd\u5206\u6790\", TextType.SECTION_H2)\n\navg_success_rate = sum(task['success_rate'] for task in spider_tasks) / len(spider_tasks)\nfastest_task = max(spider_tasks, key=lambda x: x['avg_speed'])\nslowest_task = min(spider_tasks, key=lambda x: x['avg_speed'])\n\nperformance_text = f\"\"\"\n**\u722c\u866b\u6027\u80fd\u5206\u6790\uff1a**\n\n\ud83d\udcca **\u6574\u4f53\u8868\u73b0**\n\u2022 \u5e73\u5747\u6210\u529f\u7387: {avg_success_rate:.1f}%\n\u2022 \u6700\u5feb\u4efb\u52a1: {fastest_task['name']} ({fastest_task['avg_speed']}\u6761/\u5206\u949f)\n\u2022 \u6700\u6162\u4efb\u52a1: {slowest_task['name']} ({slowest_task['avg_speed']}\u6761/\u5206\u949f)\n\n\ud83d\udca1 **\u4f18\u5316\u5efa\u8bae**\n\u2022 \u6210\u529f\u7387\u4f4e\u4e8e90%\u7684\u4efb\u52a1\u9700\u8981\u68c0\u67e5\u53cd\u722c\u7b56\u7565\n\u2022 \u8003\u8651\u8c03\u6574\u5e76\u53d1\u6570\u4ee5\u63d0\u9ad8\u91c7\u96c6\u901f\u5ea6\n\u2022 \u76d1\u63a7\u76ee\u6807\u7f51\u7ad9\u7684\u54cd\u5e94\u65f6\u95f4\u53d8\u5316\n\"\"\"\n\nemail.add_text(performance_text.strip())\n\nemail.export_html(\"spider_monitor.html\")\nprint(\"\u2705 \u722c\u866b\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1aspider_monitor.html\")\n</code></pre> \u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a \u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:45:32 <p>\ud83d\udd77\ufe0f \u722c\u866b\u4efb\u52a1\u76d1\u63a7\u62a5\u544a</p> <p>\u62a5\u544a\u65f6\u95f4: 2025-07-07 23:45:32</p> 1. \ud83d\udcca \u4efb\u52a1\u6982\u89c8 3 2 1 25,500 2. \ud83d\udcc8 \u4efb\u52a1\u8fdb\u5ea6\u8be6\u60c5 \u7535\u5546\u4ea7\u54c1\u4fe1\u606f\u91c7\u96c6 \u8fd0\u884c\u4e2d \u6210\u529f\u7387 95.2% \u901f\u5ea6 120\u6761/\u5206\u949f 8,500/10,000 (85.0%) 85.0% \u65b0\u95fb\u8d44\u8baf\u722c\u53d6 \u5df2\u5b8c\u6210 \u6210\u529f\u7387 98.8% \u901f\u5ea6 200\u6761/\u5206\u949f 5,000/5,000 (100.0%) 100.0% \u7528\u6237\u8bc4\u8bba\u6570\u636e \u8fd0\u884c\u4e2d \u6210\u529f\u7387 92.1% \u901f\u5ea6 80\u6761/\u5206\u949f 12,000/20,000 (60.0%) 60.0% 3. \ud83d\udccb \u4efb\u52a1\u8be6\u7ec6\u6570\u636e \u4efb\u52a1\u540d\u79f0 \u76ee\u6807\u6570\u91cf \u5df2\u5b8c\u6210 \u5b8c\u6210\u7387 \u6210\u529f\u7387 \u5e73\u5747\u901f\u5ea6 \u8fd0\u884c\u65f6\u957f \u7535\u5546\u4ea7\u54c1\u4fe1\u606f\u91c7\u96c6 10,000 8,500 85.0% 95.2% 120\u6761/\u5206\u949f 2h 0m \u65b0\u95fb\u8d44\u8baf\u722c\u53d6 5,000 5,000 100.0% 98.8% 200\u6761/\u5206\u949f 1h 30m \u7528\u6237\u8bc4\u8bba\u6570\u636e 20,000 12,000 60.0% 92.1% 80\u6761/\u5206\u949f 3h 0m 4. \u26a1 \u6027\u80fd\u5206\u6790 <p>**\u722c\u866b\u6027\u80fd\u5206\u6790\uff1a**</p> <p>\ud83d\udcca **\u6574\u4f53\u8868\u73b0**</p> <p>\u2022 \u5e73\u5747\u6210\u529f\u7387: 95.4%</p> <p>\u2022 \u6700\u5feb\u4efb\u52a1: \u65b0\u95fb\u8d44\u8baf\u722c\u53d6 (200\u6761/\u5206\u949f)</p> <p>\u2022 \u6700\u6162\u4efb\u52a1: \u7528\u6237\u8bc4\u8bba\u6570\u636e (80\u6761/\u5206\u949f)</p> <p>\ud83d\udca1 **\u4f18\u5316\u5efa\u8bae**</p> <p>\u2022 \u6210\u529f\u7387\u4f4e\u4e8e90%\u7684\u4efb\u52a1\u9700\u8981\u68c0\u67e5\u53cd\u722c\u7b56\u7565</p> <p>\u2022 \u8003\u8651\u8c03\u6574\u5e76\u53d1\u6570\u4ee5\u63d0\u9ad8\u91c7\u96c6\u901f\u5ea6</p> <p>\u2022 \u76d1\u63a7\u76ee\u6807\u7f51\u7ad9\u7684\u54cd\u5e94\u65f6\u95f4\u53d8\u5316</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u76d1\u63a7\u7279\u70b9\uff1a - \u5b9e\u65f6\u4efb\u52a1\u8fdb\u5ea6\u8ddf\u8e2a - \u6210\u529f\u7387\u548c\u901f\u5ea6\u76d1\u63a7 - \u591a\u4efb\u52a1\u72b6\u6001\u805a\u5408 - \u6027\u80fd\u5206\u6790\u548c\u4f18\u5316\u5efa\u8bae</p>"},{"location":"zh/examples/spider-reports/#_4","title":"\u6570\u636e\u8d28\u91cf\u62a5\u544a","text":""},{"location":"zh/examples/spider-reports/#_5","title":"\u91c7\u96c6\u6570\u636e\u8d28\u91cf\u68c0\u67e5 \ud83d\udce6 \u603b\u8bb0\u5f55\u6570                  \u2705 \u6709\u6548\u8bb0\u5f55                  \ud83c\udfaf \u6570\u636e\u8d28\u91cf\u7387                  \ud83d\udd04 \u91cd\u590d\u7387","text":"Python<pre><code>import pandas as pd\nfrom email_widget import Email, TableWidget, AlertWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, AlertType, ProgressTheme\n\n# \u6a21\u62df\u91c7\u96c6\u7684\u6570\u636e\u8d28\u91cf\u7edf\u8ba1\ndata_quality_stats = {\n    'total_records': 50000,\n    'valid_records': 47500,\n    'duplicate_records': 1200,\n    'incomplete_records': 800,\n    'invalid_format': 500,\n    'fields_quality': {\n        '\u6807\u9898': {'completeness': 98.5, 'validity': 99.2},\n        '\u4ef7\u683c': {'completeness': 95.2, 'validity': 92.8},\n        '\u56fe\u7247URL': {'completeness': 89.3, 'validity': 88.1},\n        '\u5546\u54c1\u63cf\u8ff0': {'completeness': 78.6, 'validity': 95.4},\n        '\u8bc4\u5206': {'completeness': 92.1, 'validity': 98.7}\n    }\n}\n\n# \u521b\u5efa\u6570\u636e\u8d28\u91cf\u62a5\u544a\nemail = Email(\"\u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udd0d \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u6570\u636e\u68c0\u67e5\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n# \u6570\u636e\u8d28\u91cf\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u6570\u636e\u8d28\u91cf\u6982\u89c8\", TextType.SECTION_H2)\n\ntotal = data_quality_stats['total_records']\nvalid = data_quality_stats['valid_records']\nduplicate = data_quality_stats['duplicate_records']\nincomplete = data_quality_stats['incomplete_records']\ninvalid = data_quality_stats['invalid_format']\n\nquality_rate = (valid / total) * 100\nduplicate_rate = (duplicate / total) * 100\n\nquality_overview = [\n    (\"\u603b\u8bb0\u5f55\u6570\", f\"{total:,}\", \"\ud83d\udce6\"),\n    (\"\u6709\u6548\u8bb0\u5f55\", f\"{valid:,}\", \"\u2705\"),\n    (\"\u6570\u636e\u8d28\u91cf\u7387\", f\"{quality_rate:.1f}%\", \"\ud83c\udfaf\"),\n    (\"\u91cd\u590d\u7387\", f\"{duplicate_rate:.1f}%\", \"\ud83d\udd04\")\n]\n\nfor title, value, icon in quality_overview:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u6570\u636e\u8d28\u91cf\u8be6\u7ec6\u5206\u6790\nemail.add_title(\"\ud83d\udcc8 \u8d28\u91cf\u6307\u6807\u5206\u6790\", TextType.SECTION_H2)\n\n# \u6574\u4f53\u8d28\u91cf\u8bc4\u5206\noverall_quality = (valid / total) * 100\nquality_theme = ProgressTheme.SUCCESS if overall_quality &gt; 95 else \\\n               ProgressTheme.WARNING if overall_quality &gt; 90 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u6574\u4f53\u6570\u636e\u8d28\u91cf\")\nemail.add_progress(overall_quality, f\"\u8d28\u91cf\u7387: {overall_quality:.1f}%\", theme=quality_theme)\n\n# \u91cd\u590d\u6570\u636e\u7387\ndup_theme = ProgressTheme.SUCCESS if duplicate_rate &lt; 2 else \\\n           ProgressTheme.WARNING if duplicate_rate &lt; 5 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u91cd\u590d\u6570\u636e\u6bd4\u4f8b\")\nemail.add_progress(duplicate_rate, f\"\u91cd\u590d\u7387: {duplicate_rate:.1f}%\", theme=dup_theme)\n\n# \u5b57\u6bb5\u8d28\u91cf\u8be6\u60c5\nemail.add_title(\"\ud83d\udd0d \u5b57\u6bb5\u8d28\u91cf\u8be6\u60c5\", TextType.SECTION_H2)\n\nfield_table = TableWidget()\nfield_table.set_headers([\"\u5b57\u6bb5\u540d\u79f0\", \"\u5b8c\u6574\u6027\", \"\u6709\u6548\u6027\", \"\u8d28\u91cf\u8bc4\u7ea7\"])\n\nfor field_name, quality in data_quality_stats['fields_quality'].items():\n    completeness = quality['completeness']\n    validity = quality['validity']\n    avg_quality = (completeness + validity) / 2\n\n    # \u8d28\u91cf\u8bc4\u7ea7\n    if avg_quality &gt;= 95:\n        grade = \"\ud83d\udfe2 \u4f18\u79c0\"\n    elif avg_quality &gt;= 90:\n        grade = \"\ud83d\udfe1 \u826f\u597d\"\n    elif avg_quality &gt;= 80:\n        grade = \"\ud83d\udfe0 \u4e00\u822c\"\n    else:\n        grade = \"\ud83d\udd34 \u8f83\u5dee\"\n\n    field_table.add_row([\n        field_name,\n        f\"{completeness:.1f}%\",\n        f\"{validity:.1f}%\",\n        grade\n    ])\n\nfield_table.set_striped(True)\nemail.add_widget(field_table)\n\n# \u6570\u636e\u95ee\u9898\u7edf\u8ba1\nemail.add_title(\"\u26a0\ufe0f \u6570\u636e\u95ee\u9898\u7edf\u8ba1\", TextType.SECTION_H2)\n\nproblem_table = TableWidget()\nproblem_table.set_headers([\"\u95ee\u9898\u7c7b\u578b\", \"\u8bb0\u5f55\u6570\", \"\u5360\u6bd4\", \"\u5f71\u54cd\u7b49\u7ea7\"])\n\nproblems = [\n    (\"\u91cd\u590d\u8bb0\u5f55\", duplicate, (duplicate/total)*100, \"\u4e2d\u7b49\"),\n    (\"\u4e0d\u5b8c\u6574\u8bb0\u5f55\", incomplete, (incomplete/total)*100, \"\u9ad8\"),\n    (\"\u683c\u5f0f\u9519\u8bef\", invalid, (invalid/total)*100, \"\u9ad8\"),\n]\n\nfor problem_type, count, percentage, impact in problems:\n    impact_emoji = \"\ud83d\udfe2\" if impact == \"\u4f4e\" else \"\ud83d\udfe1\" if impact == \"\u4e2d\u7b49\" else \"\ud83d\udd34\"\n    problem_table.add_row([\n        problem_type,\n        f\"{count:,}\",\n        f\"{percentage:.1f}%\",\n        f\"{impact_emoji} {impact}\"\n    ])\n\nproblem_table.set_striped(True)\nemail.add_widget(problem_table)\n\n# \u8d28\u91cf\u6539\u8fdb\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u8d28\u91cf\u6539\u8fdb\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u6839\u636e\u6570\u636e\u8d28\u91cf\u60c5\u51b5\u751f\u6210\u5efa\u8bae\nif overall_quality &lt; 90:\n    email.add_alert(\n        \"\u6570\u636e\u8d28\u91cf\u4f4e\u4e8e90%\uff0c\u5efa\u8bae\u7acb\u5373\u4f18\u5316\u722c\u866b\u903b\u8f91\u548c\u6570\u636e\u6e05\u6d17\u6d41\u7a0b\",\n        AlertType.CAUTION,\n        \"\ud83d\udea8 \u8d28\u91cf\u544a\u8b66\"\n    )\n\nif duplicate_rate &gt; 5:\n    email.add_alert(\n        f\"\u91cd\u590d\u6570\u636e\u7387\u8fbe\u5230{duplicate_rate:.1f}%\uff0c\u5efa\u8bae\u589e\u5f3a\u53bb\u91cd\u673a\u5236\",\n        AlertType.WARNING,\n        \"\u26a0\ufe0f \u91cd\u590d\u6570\u636e\u544a\u8b66\"\n    )\n\n# \u6539\u8fdb\u5efa\u8bae\nimprovement_suggestions = f\"\"\"\n**\u6570\u636e\u8d28\u91cf\u6539\u8fdb\u5efa\u8bae\uff1a**\n\n\ud83d\udd27 **\u6280\u672f\u6539\u8fdb**\n\u2022 \u52a0\u5f3a\u6570\u636e\u9a8c\u8bc1\u89c4\u5219\uff0c\u63d0\u9ad8\u5b57\u6bb5\u6709\u6548\u6027\n\u2022 \u4f18\u5316\u53bb\u91cd\u7b97\u6cd5\uff0c\u964d\u4f4e\u91cd\u590d\u6570\u636e\u7387\n\u2022 \u5b8c\u5584\u5f02\u5e38\u5904\u7406\uff0c\u51cf\u5c11\u4e0d\u5b8c\u6574\u8bb0\u5f55\n\n\ud83d\udcca **\u8d28\u91cf\u76d1\u63a7**\n\u2022 \u8bbe\u7f6e\u8d28\u91cf\u9608\u503c\u544a\u8b66 (\u5efa\u8bae: \u8d28\u91cf\u7387&gt;95%, \u91cd\u590d\u7387&lt;2%)\n\u2022 \u5b9e\u65f6\u76d1\u63a7\u5173\u952e\u5b57\u6bb5\u7684\u5b8c\u6574\u6027\n\u2022 \u5b9a\u671f\u8fdb\u884c\u6570\u636e\u8d28\u91cf\u8bc4\u4f30\n\n\u26a1 **\u6d41\u7a0b\u4f18\u5316**\n\u2022 \u5728\u6570\u636e\u5165\u5e93\u524d\u8fdb\u884c\u8d28\u91cf\u68c0\u67e5\n\u2022 \u5efa\u7acb\u6570\u636e\u8d28\u91cf\u8bc4\u5206\u4f53\u7cfb\n\u2022 \u81ea\u52a8\u5316\u6570\u636e\u6e05\u6d17\u548c\u4fee\u590d\u6d41\u7a0b\n\"\"\"\n\nemail.add_text(improvement_suggestions.strip())\n\nemail.export_html(\"data_quality_report.html\")\nprint(\"\u2705 \u6570\u636e\u8d28\u91cf\u62a5\u544a\u5df2\u751f\u6210\uff1adata_quality_report.html\")\n</code></pre> \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:46:46 <p>\ud83d\udd0d \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a</p> <p>\u6570\u636e\u68c0\u67e5\u65f6\u95f4: 2025-07-07 23:46:46</p> 1. \ud83d\udcca \u6570\u636e\u8d28\u91cf\u6982\u89c8 50,000 47,500 95.0% 2.4% 2. \ud83d\udcc8 \u8d28\u91cf\u6307\u6807\u5206\u6790 <p>\ud83d\udd39 \u6574\u4f53\u6570\u636e\u8d28\u91cf</p> \u8d28\u91cf\u7387: 95.0% 95.0% <p>\ud83d\udd39 \u91cd\u590d\u6570\u636e\u6bd4\u4f8b</p> \u91cd\u590d\u7387: 2.4% 2.4% 3. \ud83d\udd0d \u5b57\u6bb5\u8d28\u91cf\u8be6\u60c5 \u5b57\u6bb5\u540d\u79f0 \u5b8c\u6574\u6027 \u6709\u6548\u6027 \u8d28\u91cf\u8bc4\u7ea7 \u6807\u9898 98.5% 99.2% \ud83d\udfe2 \u4f18\u79c0 \u4ef7\u683c 95.2% 92.8% \ud83d\udfe1 \u826f\u597d \u56fe\u7247URL 89.3% 88.1% \ud83d\udfe0 \u4e00\u822c \u5546\u54c1\u63cf\u8ff0 78.6% 95.4% \ud83d\udfe0 \u4e00\u822c \u8bc4\u5206 92.1% 98.7% \ud83d\udfe2 \u4f18\u79c0 4. \u26a0\ufe0f \u6570\u636e\u95ee\u9898\u7edf\u8ba1 \u95ee\u9898\u7c7b\u578b \u8bb0\u5f55\u6570 \u5360\u6bd4 \u5f71\u54cd\u7b49\u7ea7 \u91cd\u590d\u8bb0\u5f55 1,200 2.4% \ud83d\udfe1 \u4e2d\u7b49 \u4e0d\u5b8c\u6574\u8bb0\u5f55 800 1.6% \ud83d\udd34 \u9ad8 \u683c\u5f0f\u9519\u8bef 500 1.0% \ud83d\udd34 \u9ad8 5. \ud83d\udca1 \u8d28\u91cf\u6539\u8fdb\u5efa\u8bae <p>**\u6570\u636e\u8d28\u91cf\u6539\u8fdb\u5efa\u8bae\uff1a**</p> <p>\ud83d\udd27 **\u6280\u672f\u6539\u8fdb**</p> <p>\u2022 \u52a0\u5f3a\u6570\u636e\u9a8c\u8bc1\u89c4\u5219\uff0c\u63d0\u9ad8\u5b57\u6bb5\u6709\u6548\u6027</p> <p>\u2022 \u4f18\u5316\u53bb\u91cd\u7b97\u6cd5\uff0c\u964d\u4f4e\u91cd\u590d\u6570\u636e\u7387</p> <p>\u2022 \u5b8c\u5584\u5f02\u5e38\u5904\u7406\uff0c\u51cf\u5c11\u4e0d\u5b8c\u6574\u8bb0\u5f55</p> <p>\ud83d\udcca **\u8d28\u91cf\u76d1\u63a7**</p> <p>\u2022 \u8bbe\u7f6e\u8d28\u91cf\u9608\u503c\u544a\u8b66 (\u5efa\u8bae: \u8d28\u91cf\u7387&gt;95%, \u91cd\u590d\u7387&lt;2%)</p> <p>\u2022 \u5b9e\u65f6\u76d1\u63a7\u5173\u952e\u5b57\u6bb5\u7684\u5b8c\u6574\u6027</p> <p>\u2022 \u5b9a\u671f\u8fdb\u884c\u6570\u636e\u8d28\u91cf\u8bc4\u4f30</p> <p>\u26a1 **\u6d41\u7a0b\u4f18\u5316**</p> <p>\u2022 \u5728\u6570\u636e\u5165\u5e93\u524d\u8fdb\u884c\u8d28\u91cf\u68c0\u67e5</p> <p>\u2022 \u5efa\u7acb\u6570\u636e\u8d28\u91cf\u8bc4\u5206\u4f53\u7cfb</p> <p>\u2022 \u81ea\u52a8\u5316\u6570\u636e\u6e05\u6d17\u548c\u4fee\u590d\u6d41\u7a0b</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u8d28\u91cf\u68c0\u67e5\u7279\u8272\uff1a - \u591a\u7ef4\u5ea6\u8d28\u91cf\u8bc4\u4f30 - \u5b57\u6bb5\u7ea7\u522b\u8d28\u91cf\u5206\u6790 - \u81ea\u52a8\u5316\u95ee\u9898\u8bc6\u522b - \u6539\u8fdb\u5efa\u8bae\u751f\u6210</p>"},{"location":"zh/examples/spider-reports/#_6","title":"\u5f02\u5e38\u76d1\u63a7\u62a5\u544a","text":""},{"location":"zh/examples/spider-reports/#_7","title":"\u722c\u866b\u5f02\u5e38\u548c\u9519\u8bef\u5206\u6790 \ud83d\udea8 \u5f02\u5e38\u603b\u6570                  \ud83d\udd0d \u5f02\u5e38\u7c7b\u578b                  \u26a0\ufe0f \u6700\u591a\u5f02\u5e38                  \u23f0 \u65f6\u95f4\u8303\u56f4                 \u5f02\u5e38\u7c7b\u578b\u5206\u5e03\u56fe","text":"Python<pre><code>from collections import Counter\nfrom email_widget import Email, ChartWidget, TableWidget, AlertWidget\nfrom email_widget.core.enums import TextType, AlertType\nimport matplotlib.pyplot as plt\n\n# \u6a21\u62df\u722c\u866b\u5f02\u5e38\u6570\u636e\nspider_errors = [\n    {'timestamp': '2024-01-20 10:15', 'error_type': 'HTTP_TIMEOUT', 'url': 'example1.com', 'message': '\u8bf7\u6c42\u8d85\u65f6'},\n    {'timestamp': '2024-01-20 10:16', 'error_type': 'PARSING_ERROR', 'url': 'example2.com', 'message': '\u89e3\u6790\u5931\u8d25'},\n    {'timestamp': '2024-01-20 10:17', 'error_type': 'HTTP_404', 'url': 'example3.com', 'message': '\u9875\u9762\u4e0d\u5b58\u5728'},\n    {'timestamp': '2024-01-20 10:18', 'error_type': 'RATE_LIMITED', 'url': 'example4.com', 'message': '\u8bf7\u6c42\u88ab\u9650\u5236'},\n    {'timestamp': '2024-01-20 10:19', 'error_type': 'HTTP_TIMEOUT', 'url': 'example5.com', 'message': '\u8fde\u63a5\u8d85\u65f6'},\n    {'timestamp': '2024-01-20 10:20', 'error_type': 'CAPTCHA_DETECTED', 'url': 'example6.com', 'message': '\u68c0\u6d4b\u5230\u9a8c\u8bc1\u7801'},\n    {'timestamp': '2024-01-20 10:21', 'error_type': 'PARSING_ERROR', 'url': 'example7.com', 'message': '\u6570\u636e\u7ed3\u6784\u53d8\u5316'},\n    {'timestamp': '2024-01-20 10:22', 'error_type': 'HTTP_403', 'url': 'example8.com', 'message': '\u8bbf\u95ee\u88ab\u7981\u6b62'},\n]\n\n# \u521b\u5efa\u5f02\u5e38\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udea8 \u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u5f02\u5e38\u7edf\u8ba1\u65f6\u95f4: \u6700\u8fd11\u5c0f\u65f6\")\n\n# \u5f02\u5e38\u7edf\u8ba1\u6982\u89c8\nerror_counts = Counter(error['error_type'] for error in spider_errors)\ntotal_errors = len(spider_errors)\n\nemail.add_title(\"\ud83d\udcca \u5f02\u5e38\u7edf\u8ba1\u6982\u89c8\", TextType.SECTION_H2)\n\nerror_overview = [\n    (\"\u5f02\u5e38\u603b\u6570\", f\"{total_errors}\", \"\ud83d\udea8\"),\n    (\"\u5f02\u5e38\u7c7b\u578b\", f\"{len(error_counts)}\", \"\ud83d\udd0d\"),\n    (\"\u6700\u591a\u5f02\u5e38\", f\"{error_counts.most_common(1)[0][0]}\", \"\u26a0\ufe0f\"),\n    (\"\u65f6\u95f4\u8303\u56f4\", \"\u6700\u8fd11\u5c0f\u65f6\", \"\u23f0\")\n]\n\nfor title, value, icon in error_overview:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u5f02\u5e38\u7c7b\u578b\u5206\u5e03\nemail.add_title(\"\ud83d\udcc8 \u5f02\u5e38\u7c7b\u578b\u5206\u5e03\", TextType.SECTION_H2)\n\n# \u521b\u5efa\u5f02\u5e38\u5206\u5e03\u56fe\u8868\nplt.figure(figsize=(10, 6))\nerror_types = list(error_counts.keys())\nerror_values = list(error_counts.values())\n\nbars = plt.bar(error_types, error_values, color=['#e74c3c', '#f39c12', '#3498db', '#9b59b6', '#1abc9c', '#95a5a6'])\nplt.title('\u5f02\u5e38\u7c7b\u578b\u5206\u5e03', fontsize=14)\nplt.xlabel('\u5f02\u5e38\u7c7b\u578b')\nplt.ylabel('\u53d1\u751f\u6b21\u6570')\nplt.xticks(rotation=45)\n\n# \u6dfb\u52a0\u6570\u503c\u6807\u7b7e\nfor bar, value in zip(bars, error_values):\n    plt.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 0.1, \n             str(value), ha='center', va='bottom')\n\nplt.tight_layout()\nerror_chart_path = \"spider_errors_distribution.png\"\nplt.savefig(error_chart_path, dpi=150, bbox_inches='tight')\nplt.close()\n\nchart = ChartWidget()\nchart.set_chart_path(error_chart_path) \\\n     .set_title(\"\u5f02\u5e38\u7c7b\u578b\u5206\u5e03\u56fe\") \\\n     .set_description(\"\u663e\u793a\u5404\u7c7b\u5f02\u5e38\u7684\u53d1\u751f\u9891\u7387\")\nemail.add_widget(chart)\n\n# \u5f02\u5e38\u8be6\u60c5\u8868\u683c\nemail.add_title(\"\ud83d\udccb \u5f02\u5e38\u8be6\u60c5\u5217\u8868\", TextType.SECTION_H2)\n\nerror_table = TableWidget()\nerror_table.set_headers([\"\u65f6\u95f4\", \"\u5f02\u5e38\u7c7b\u578b\", \"\u76ee\u6807URL\", \"\u9519\u8bef\u4fe1\u606f\"])\n\nfor error in spider_errors[-10:]:  # \u663e\u793a\u6700\u8fd110\u6761\u5f02\u5e38\n    error_table.add_row([\n        error['timestamp'],\n        error['error_type'],\n        error['url'][:30] + \"...\" if len(error['url']) &gt; 30 else error['url'],\n        error['message']\n    ])\n\nerror_table.set_striped(True)\nemail.add_widget(error_table)\n\n# \u5f02\u5e38\u5206\u6790\u548c\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u5f02\u5e38\u5206\u6790\u4e0e\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u57fa\u4e8e\u5f02\u5e38\u7c7b\u578b\u751f\u6210\u544a\u8b66\u548c\u5efa\u8bae\ncritical_errors = ['RATE_LIMITED', 'CAPTCHA_DETECTED', 'HTTP_403']\ntimeout_errors = ['HTTP_TIMEOUT']\nparsing_errors = ['PARSING_ERROR']\n\nfor error_type, count in error_counts.items():\n    if error_type in critical_errors:\n        email.add_alert(\n            f\"{error_type} \u53d1\u751f {count} \u6b21\uff0c\u53ef\u80fd\u89e6\u53d1\u53cd\u722c\u866b\u673a\u5236\",\n            AlertType.CAUTION,\n            f\"\ud83d\udea8 {error_type} \u544a\u8b66\"\n        )\n    elif error_type in timeout_errors and count &gt; 3:\n        email.add_alert(\n            f\"\u8d85\u65f6\u9519\u8bef\u9891\u53d1 ({count} \u6b21)\uff0c\u5efa\u8bae\u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\u548c\u8d85\u65f6\u8bbe\u7f6e\",\n            AlertType.WARNING,\n            \"\u26a0\ufe0f \u8d85\u65f6\u544a\u8b66\"\n        )\n\nanalysis_text = f\"\"\"\n**\u5f02\u5e38\u5206\u6790\u7ed3\u679c\uff1a**\n\n\ud83d\udd0d **\u4e3b\u8981\u95ee\u9898**\n\u2022 {error_counts.most_common(1)[0][0]} \u662f\u6700\u9891\u7e41\u7684\u5f02\u5e38\u7c7b\u578b ({error_counts.most_common(1)[0][1]} \u6b21)\n\u2022 \u603b\u5f02\u5e38\u7387\u9700\u8981\u5173\u6ce8\uff0c\u5efa\u8bae\u4f18\u5316\u722c\u866b\u7b56\u7565\n\n\ud83d\udee0\ufe0f **\u89e3\u51b3\u5efa\u8bae**\n\"\"\"\n\n# \u9488\u5bf9\u4e0d\u540c\u5f02\u5e38\u7c7b\u578b\u7ed9\u51fa\u5efa\u8bae\nif 'HTTP_TIMEOUT' in error_counts:\n    analysis_text += f\"\\n\u2022 \u8d85\u65f6\u5f02\u5e38 ({error_counts['HTTP_TIMEOUT']} \u6b21): \u589e\u52a0\u8d85\u65f6\u65f6\u95f4\uff0c\u4f18\u5316\u7f51\u7edc\u8fde\u63a5\"\n\nif 'RATE_LIMITED' in error_counts:\n    analysis_text += f\"\\n\u2022 \u9650\u6d41\u5f02\u5e38 ({error_counts['RATE_LIMITED']} \u6b21): \u964d\u4f4e\u8bf7\u6c42\u9891\u7387\uff0c\u589e\u52a0\u4ee3\u7406\u6c60\"\n\nif 'CAPTCHA_DETECTED' in error_counts:\n    analysis_text += f\"\\n\u2022 \u9a8c\u8bc1\u7801\u5f02\u5e38 ({error_counts['CAPTCHA_DETECTED']} \u6b21): \u96c6\u6210\u9a8c\u8bc1\u7801\u8bc6\u522b\u670d\u52a1\"\n\nif 'PARSING_ERROR' in error_counts:\n    analysis_text += f\"\\n\u2022 \u89e3\u6790\u5f02\u5e38 ({error_counts['PARSING_ERROR']} \u6b21): \u66f4\u65b0\u89e3\u6790\u89c4\u5219\uff0c\u589e\u5f3a\u5bb9\u9519\u6027\"\n\nanalysis_text += f\"\"\"\n\n\u26a1 **\u4f18\u5316\u63aa\u65bd**\n\u2022 \u5b9e\u65bd\u667a\u80fd\u91cd\u8bd5\u673a\u5236\n\u2022 \u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91\n\u2022 \u76d1\u63a7\u76ee\u6807\u7f51\u7ad9\u53d8\u5316\n\u2022 \u5b9a\u671f\u66f4\u65b0\u722c\u866b\u7b56\u7565\n\"\"\"\n\nemail.add_text(analysis_text.strip())\n\nemail.export_html(\"spider_error_analysis.html\")\nprint(\"\u2705 \u722c\u866b\u5f02\u5e38\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1aspider_error_analysis.html\")\n</code></pre> \u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a \u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:47:35 <p>\ud83d\udea8 \u722c\u866b\u5f02\u5e38\u76d1\u63a7\u62a5\u544a</p> <p>\u5f02\u5e38\u7edf\u8ba1\u65f6\u95f4: \u6700\u8fd11\u5c0f\u65f6</p> 1. \ud83d\udcca \u5f02\u5e38\u7edf\u8ba1\u6982\u89c8 8 6 HTTP_TIMEOUT \u6700\u8fd11\u5c0f\u65f6 2. \ud83d\udcc8 \u5f02\u5e38\u7c7b\u578b\u5206\u5e03 <p>\u663e\u793a\u5404\u7c7b\u5f02\u5e38\u7684\u53d1\u751f\u9891\u7387</p> 3. \ud83d\udccb \u5f02\u5e38\u8be6\u60c5\u5217\u8868 \u65f6\u95f4 \u5f02\u5e38\u7c7b\u578b \u76ee\u6807URL \u9519\u8bef\u4fe1\u606f 2024-01-20 10:15 HTTP_TIMEOUT example1.com \u8bf7\u6c42\u8d85\u65f6 2024-01-20 10:16 PARSING_ERROR example2.com \u89e3\u6790\u5931\u8d25 2024-01-20 10:17 HTTP_404 example3.com \u9875\u9762\u4e0d\u5b58\u5728 2024-01-20 10:18 RATE_LIMITED example4.com \u8bf7\u6c42\u88ab\u9650\u5236 2024-01-20 10:19 HTTP_TIMEOUT example5.com \u8fde\u63a5\u8d85\u65f6 2024-01-20 10:20 CAPTCHA_DETECTED example6.com \u68c0\u6d4b\u5230\u9a8c\u8bc1\u7801 2024-01-20 10:21 PARSING_ERROR example7.com \u6570\u636e\u7ed3\u6784\u53d8\u5316 2024-01-20 10:22 HTTP_403 example8.com \u8bbf\u95ee\u88ab\u7981\u6b62 4. \ud83d\udca1 \u5f02\u5e38\u5206\u6790\u4e0e\u5efa\u8bae \ud83d\udea8 \ud83d\udea8 RATE_LIMITED \u544a\u8b66 RATE_LIMITED \u53d1\u751f 1 \u6b21\uff0c\u53ef\u80fd\u89e6\u53d1\u53cd\u722c\u866b\u673a\u5236 \ud83d\udea8 \ud83d\udea8 CAPTCHA_DETECTED \u544a\u8b66 CAPTCHA_DETECTED \u53d1\u751f 1 \u6b21\uff0c\u53ef\u80fd\u89e6\u53d1\u53cd\u722c\u866b\u673a\u5236 \ud83d\udea8 \ud83d\udea8 HTTP_403 \u544a\u8b66 HTTP_403 \u53d1\u751f 1 \u6b21\uff0c\u53ef\u80fd\u89e6\u53d1\u53cd\u722c\u866b\u673a\u5236 <p>**\u5f02\u5e38\u5206\u6790\u7ed3\u679c\uff1a**</p> <p>\ud83d\udd0d **\u4e3b\u8981\u95ee\u9898**</p> <p>\u2022 HTTP_TIMEOUT \u662f\u6700\u9891\u7e41\u7684\u5f02\u5e38\u7c7b\u578b (2 \u6b21)</p> <p>\u2022 \u603b\u5f02\u5e38\u7387\u9700\u8981\u5173\u6ce8\uff0c\u5efa\u8bae\u4f18\u5316\u722c\u866b\u7b56\u7565</p> <p>\ud83d\udee0\ufe0f **\u89e3\u51b3\u5efa\u8bae**</p> <p>\u2022 \u8d85\u65f6\u5f02\u5e38 (2 \u6b21): \u589e\u52a0\u8d85\u65f6\u65f6\u95f4\uff0c\u4f18\u5316\u7f51\u7edc\u8fde\u63a5</p> <p>\u2022 \u9650\u6d41\u5f02\u5e38 (1 \u6b21): \u964d\u4f4e\u8bf7\u6c42\u9891\u7387\uff0c\u589e\u52a0\u4ee3\u7406\u6c60</p> <p>\u2022 \u9a8c\u8bc1\u7801\u5f02\u5e38 (1 \u6b21): \u96c6\u6210\u9a8c\u8bc1\u7801\u8bc6\u522b\u670d\u52a1</p> <p>\u2022 \u89e3\u6790\u5f02\u5e38 (2 \u6b21): \u66f4\u65b0\u89e3\u6790\u89c4\u5219\uff0c\u589e\u5f3a\u5bb9\u9519\u6027</p> <p>\u26a1 **\u4f18\u5316\u63aa\u65bd**</p> <p>\u2022 \u5b9e\u65bd\u667a\u80fd\u91cd\u8bd5\u673a\u5236</p> <p>\u2022 \u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91</p> <p>\u2022 \u76d1\u63a7\u76ee\u6807\u7f51\u7ad9\u53d8\u5316</p> <p>\u2022 \u5b9a\u671f\u66f4\u65b0\u722c\u866b\u7b56\u7565</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u5f02\u5e38\u76d1\u63a7\u4eae\u70b9\uff1a - \u5f02\u5e38\u7c7b\u578b\u7edf\u8ba1\u5206\u6790 - \u53ef\u89c6\u5316\u5f02\u5e38\u5206\u5e03 - \u667a\u80fd\u544a\u8b66\u673a\u5236 - \u9488\u5bf9\u6027\u89e3\u51b3\u5efa\u8bae</p>"},{"location":"zh/examples/spider-reports/#_8","title":"\u91c7\u96c6\u6548\u7387\u4f18\u5316","text":""},{"location":"zh/examples/spider-reports/#_9","title":"\u722c\u866b\u6027\u80fd\u5206\u6790\u62a5\u544a","text":"Python<pre><code>from email_widget import Email, ProgressWidget, TableWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u722c\u866b\u6027\u80fd\u6570\u636e\nperformance_data = {\n    'spider_configs': [\n        {'name': '\u5355\u7ebf\u7a0b\u6a21\u5f0f', 'threads': 1, 'success_rate': 98.5, 'speed': 50, 'cpu_usage': 15, 'memory_mb': 128},\n        {'name': '\u591a\u7ebf\u7a0b\u6a21\u5f0f', 'threads': 5, 'success_rate': 95.2, 'speed': 200, 'cpu_usage': 45, 'memory_mb': 512},\n        {'name': '\u5f02\u6b65\u6a21\u5f0f', 'threads': 10, 'success_rate': 92.8, 'speed': 450, 'cpu_usage': 35, 'memory_mb': 256},\n        {'name': '\u5206\u5e03\u5f0f\u6a21\u5f0f', 'threads': 20, 'success_rate': 89.1, 'speed': 800, 'cpu_usage': 25, 'memory_mb': 1024}\n    ]\n}\n\n# \u521b\u5efa\u6027\u80fd\u5206\u6790\u62a5\u544a\nemail = Email(\"\u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790\")\n\nemail.add_title(\"\u26a1 \u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790\", TextType.TITLE_LARGE)\n\n# \u6027\u80fd\u5bf9\u6bd4\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u6027\u80fd\u914d\u7f6e\u5bf9\u6bd4\", TextType.SECTION_H2)\n\nperf_table = TableWidget()\nperf_table.set_headers([\"\u914d\u7f6e\u6a21\u5f0f\", \"\u7ebf\u7a0b\u6570\", \"\u6210\u529f\u7387\", \"\u91c7\u96c6\u901f\u5ea6\", \"CPU\u4f7f\u7528\", \"\u5185\u5b58\u4f7f\u7528\"])\n\nfor config in performance_data['spider_configs']:\n    perf_table.add_row([\n        config['name'],\n        str(config['threads']),\n        f\"{config['success_rate']:.1f}%\",\n        f\"{config['speed']} \u6761/\u5206\u949f\",\n        f\"{config['cpu_usage']}%\",\n        f\"{config['memory_mb']} MB\"\n    ])\n\nperf_table.set_striped(True)\nemail.add_widget(perf_table)\n\n# \u5404\u914d\u7f6e\u8be6\u7ec6\u5206\u6790\nemail.add_title(\"\ud83d\udd0d \u914d\u7f6e\u8be6\u7ec6\u5206\u6790\", TextType.SECTION_H2)\n\nfor config in performance_data['spider_configs']:\n    email.add_text(f\"\ud83d\udccb {config['name']}\")\n\n    # \u6210\u529f\u7387\u8fdb\u5ea6\u6761\n    success_theme = ProgressTheme.SUCCESS if config['success_rate'] &gt; 95 else \\\n                   ProgressTheme.WARNING if config['success_rate'] &gt; 90 else ProgressTheme.ERROR\n\n    # \u6548\u7387\u8bc4\u5206 (\u7efc\u5408\u8003\u8651\u901f\u5ea6\u548c\u6210\u529f\u7387)\n    efficiency_score = (config['speed'] / 10) * (config['success_rate'] / 100)\n    efficiency_percent = min(efficiency_score, 100)\n\n    email.add_progress(config['success_rate'], f\"\u6210\u529f\u7387: {config['success_rate']:.1f}%\", theme=success_theme)\n    email.add_progress(efficiency_percent, f\"\u6548\u7387\u8bc4\u5206: {efficiency_score:.1f}\", theme=ProgressTheme.INFO)\n\n# \u4f18\u5316\u5efa\u8bae\nemail.add_title(\"\ud83d\udca1 \u6027\u80fd\u4f18\u5316\u5efa\u8bae\", TextType.SECTION_H2)\n\n# \u627e\u51fa\u6700\u4f73\u914d\u7f6e\nbest_config = max(performance_data['spider_configs'], \n                 key=lambda x: (x['speed'] / 10) * (x['success_rate'] / 100))\n\noptimization_text = f\"\"\"\n**\u6027\u80fd\u4f18\u5316\u5206\u6790\u7ed3\u679c\uff1a**\n\n\ud83c\udfc6 **\u63a8\u8350\u914d\u7f6e**\n\u2022 \u6700\u4f73\u7efc\u5408\u6027\u80fd: {best_config['name']}\n\u2022 \u91c7\u96c6\u901f\u5ea6: {best_config['speed']} \u6761/\u5206\u949f\n\u2022 \u6210\u529f\u7387: {best_config['success_rate']:.1f}%\n\u2022 \u8d44\u6e90\u6d88\u8017: CPU {best_config['cpu_usage']}%, \u5185\u5b58 {best_config['memory_mb']}MB\n\n\u2696\ufe0f **\u914d\u7f6e\u6743\u8861**\n\u2022 \u5355\u7ebf\u7a0b\u6a21\u5f0f: \u9ad8\u6210\u529f\u7387\uff0c\u4f4e\u8d44\u6e90\u6d88\u8017\uff0c\u9002\u5408\u5c0f\u89c4\u6a21\u91c7\u96c6\n\u2022 \u591a\u7ebf\u7a0b\u6a21\u5f0f: \u5e73\u8861\u6027\u80fd\uff0c\u9002\u5408\u4e2d\u7b49\u89c4\u6a21\u9879\u76ee\n\u2022 \u5f02\u6b65\u6a21\u5f0f: \u9ad8\u6548\u7387\u4f4e\u8d44\u6e90\uff0c\u9002\u5408\u5927\u89c4\u6a21\u5feb\u901f\u91c7\u96c6\n\u2022 \u5206\u5e03\u5f0f\u6a21\u5f0f: \u8d85\u9ad8\u901f\u5ea6\uff0c\u9002\u5408\u8d85\u5927\u89c4\u6a21\u9879\u76ee\n\n\ud83c\udfaf **\u4f18\u5316\u5efa\u8bae**\n\u2022 \u6839\u636e\u76ee\u6807\u7f51\u7ad9\u7279\u6027\u9009\u62e9\u5408\u9002\u7684\u5e76\u53d1\u6a21\u5f0f\n\u2022 \u76d1\u63a7\u6210\u529f\u7387\u53d8\u5316\uff0c\u53ca\u65f6\u8c03\u6574\u5e76\u53d1\u6570\n\u2022 \u5728\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\u4e4b\u95f4\u627e\u5230\u6700\u4f73\u5e73\u8861\u70b9\n\u2022 \u8003\u8651\u7f51\u7ad9\u53cd\u722c\u7b56\u7565\uff0c\u907f\u514d\u8fc7\u5ea6\u6fc0\u8fdb\u7684\u914d\u7f6e\n\"\"\"\n\nemail.add_text(optimization_text.strip())\n\nemail.export_html(\"spider_performance_analysis.html\")\nprint(\"\u2705 \u722c\u866b\u6027\u80fd\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1aspider_performance_analysis.html\")\n</code></pre> \u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790 \u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:48:08 <p>\u26a1 \u722c\u866b\u6027\u80fd\u4f18\u5316\u5206\u6790</p> 1. \ud83d\udcca \u6027\u80fd\u914d\u7f6e\u5bf9\u6bd4 \u914d\u7f6e\u6a21\u5f0f \u7ebf\u7a0b\u6570 \u6210\u529f\u7387 \u91c7\u96c6\u901f\u5ea6 CPU\u4f7f\u7528 \u5185\u5b58\u4f7f\u7528 \u5355\u7ebf\u7a0b\u6a21\u5f0f 1 98.5% 50 \u6761/\u5206\u949f 15% 128 MB \u591a\u7ebf\u7a0b\u6a21\u5f0f 5 95.2% 200 \u6761/\u5206\u949f 45% 512 MB \u5f02\u6b65\u6a21\u5f0f 10 92.8% 450 \u6761/\u5206\u949f 35% 256 MB \u5206\u5e03\u5f0f\u6a21\u5f0f 20 89.1% 800 \u6761/\u5206\u949f 25% 1024 MB 2. \ud83d\udd0d \u914d\u7f6e\u8be6\u7ec6\u5206\u6790 <p>\ud83d\udccb \u5355\u7ebf\u7a0b\u6a21\u5f0f</p> \u6210\u529f\u7387: 98.5% 98.5% \u6548\u7387\u8bc4\u5206: 4.9 4.9% <p>\ud83d\udccb \u591a\u7ebf\u7a0b\u6a21\u5f0f</p> \u6210\u529f\u7387: 95.2% 95.2% \u6548\u7387\u8bc4\u5206: 19.0 19.0% <p>\ud83d\udccb \u5f02\u6b65\u6a21\u5f0f</p> \u6210\u529f\u7387: 92.8% 92.8% \u6548\u7387\u8bc4\u5206: 41.8 41.8% <p>\ud83d\udccb \u5206\u5e03\u5f0f\u6a21\u5f0f</p> \u6210\u529f\u7387: 89.1% 89.1% \u6548\u7387\u8bc4\u5206: 71.3 71.3% 3. \ud83d\udca1 \u6027\u80fd\u4f18\u5316\u5efa\u8bae <p>**\u6027\u80fd\u4f18\u5316\u5206\u6790\u7ed3\u679c\uff1a**</p> <p>\ud83c\udfc6 **\u63a8\u8350\u914d\u7f6e**</p> <p>\u2022 \u6700\u4f73\u7efc\u5408\u6027\u80fd: \u5206\u5e03\u5f0f\u6a21\u5f0f</p> <p>\u2022 \u91c7\u96c6\u901f\u5ea6: 800 \u6761/\u5206\u949f</p> <p>\u2022 \u6210\u529f\u7387: 89.1%</p> <p>\u2022 \u8d44\u6e90\u6d88\u8017: CPU 25%, \u5185\u5b58 1024MB</p> <p>\u2696\ufe0f **\u914d\u7f6e\u6743\u8861**</p> <p>\u2022 \u5355\u7ebf\u7a0b\u6a21\u5f0f: \u9ad8\u6210\u529f\u7387\uff0c\u4f4e\u8d44\u6e90\u6d88\u8017\uff0c\u9002\u5408\u5c0f\u89c4\u6a21\u91c7\u96c6</p> <p>\u2022 \u591a\u7ebf\u7a0b\u6a21\u5f0f: \u5e73\u8861\u6027\u80fd\uff0c\u9002\u5408\u4e2d\u7b49\u89c4\u6a21\u9879\u76ee</p> <p>\u2022 \u5f02\u6b65\u6a21\u5f0f: \u9ad8\u6548\u7387\u4f4e\u8d44\u6e90\uff0c\u9002\u5408\u5927\u89c4\u6a21\u5feb\u901f\u91c7\u96c6</p> <p>\u2022 \u5206\u5e03\u5f0f\u6a21\u5f0f: \u8d85\u9ad8\u901f\u5ea6\uff0c\u9002\u5408\u8d85\u5927\u89c4\u6a21\u9879\u76ee</p> <p>\ud83c\udfaf **\u4f18\u5316\u5efa\u8bae**</p> <p>\u2022 \u6839\u636e\u76ee\u6807\u7f51\u7ad9\u7279\u6027\u9009\u62e9\u5408\u9002\u7684\u5e76\u53d1\u6a21\u5f0f</p> <p>\u2022 \u76d1\u63a7\u6210\u529f\u7387\u53d8\u5316\uff0c\u53ca\u65f6\u8c03\u6574\u5e76\u53d1\u6570</p> <p>\u2022 \u5728\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\u4e4b\u95f4\u627e\u5230\u6700\u4f73\u5e73\u8861\u70b9</p> <p>\u2022 \u8003\u8651\u7f51\u7ad9\u53cd\u722c\u7b56\u7565\uff0c\u907f\u514d\u8fc7\u5ea6\u6fc0\u8fdb\u7684\u914d\u7f6e</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u6027\u80fd\u5206\u6790\u7279\u8272\uff1a - \u591a\u7ef4\u5ea6\u6027\u80fd\u5bf9\u6bd4 - \u7efc\u5408\u6548\u7387\u8bc4\u5206 - \u8d44\u6e90\u6d88\u8017\u5206\u6790 - \u914d\u7f6e\u4f18\u5316\u5efa\u8bae</p>"},{"location":"zh/examples/spider-reports/#_10","title":"\u6570\u636e\u91c7\u96c6\u603b\u7ed3","text":""},{"location":"zh/examples/spider-reports/#_11","title":"\u5b8c\u6574\u7684\u722c\u866b\u9879\u76ee\u62a5\u544a \ud83c\udf10 \u76ee\u6807\u7f51\u7ad9                  \ud83d\udce6 \u603b\u91c7\u96c6\u91cf                  \u2705 \u5e73\u5747\u6210\u529f\u7387                  \ud83c\udfaf \u6570\u636e\u8d28\u91cf\u7387","text":"Python<pre><code>from email_widget import Email, ColumnWidget, StatusWidget, CardWidget\nfrom email_widget.core.enums import TextType, StatusType\n\n# \u521b\u5efa\u7efc\u5408\u722c\u866b\u9879\u76ee\u62a5\u544a\nemail = Email(\"\u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udd77\ufe0f \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u9879\u76ee\u5468\u671f: 2024\u5e741\u670815\u65e5 - 2024\u5e741\u670821\u65e5\")\n\n# \u9879\u76ee\u6574\u4f53\u6982\u51b5\nemail.add_title(\"\ud83d\udcca \u9879\u76ee\u6574\u4f53\u6982\u51b5\", TextType.SECTION_H2)\n\nproject_summary = [\n    (\"\u76ee\u6807\u7f51\u7ad9\", \"15\u4e2a\", \"\ud83c\udf10\"),\n    (\"\u603b\u91c7\u96c6\u91cf\", \"125,000\u6761\", \"\ud83d\udce6\"),\n    (\"\u5e73\u5747\u6210\u529f\u7387\", \"94.3%\", \"\u2705\"),\n    (\"\u6570\u636e\u8d28\u91cf\u7387\", \"92.8%\", \"\ud83c\udfaf\")\n]\n\nfor title, value, icon in project_summary:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u5173\u952e\u6210\u679c\u5c55\u793a\nemail.add_title(\"\ud83c\udfc6 \u5173\u952e\u6210\u679c\", TextType.SECTION_H2)\n\nachievements = f\"\"\"\n**\u9879\u76ee\u4e3b\u8981\u6210\u679c\uff1a**\n\n\u2705 **\u91c7\u96c6\u6210\u679c**\n\u2022 \u6210\u529f\u5b8c\u621015\u4e2a\u76ee\u6807\u7f51\u7ad9\u7684\u6570\u636e\u91c7\u96c6\n\u2022 \u7d2f\u8ba1\u83b7\u53d6\u6709\u6548\u6570\u636e125,000\u6761\n\u2022 \u6570\u636e\u8986\u76d6\u7387\u8fbe\u5230\u9884\u671f\u76ee\u6807\u7684105%\n\n\ud83c\udfaf **\u8d28\u91cf\u4fdd\u8bc1**\n\u2022 \u6570\u636e\u8d28\u91cf\u738792.8%\uff0c\u8d85\u8fc7\u9884\u671f90%\n\u2022 \u91cd\u590d\u6570\u636e\u7387\u63a7\u5236\u57282.1%\u4ee5\u5185\n\u2022 \u5173\u952e\u5b57\u6bb5\u5b8c\u6574\u6027\u8fbe\u523095%\u4ee5\u4e0a\n\n\u26a1 **\u6280\u672f\u7a81\u7834**\n\u2022 \u6210\u529f\u5e94\u5bf95\u79cd\u4e0d\u540c\u7684\u53cd\u722c\u673a\u5236\n\u2022 \u5f00\u53d1\u4e86\u667a\u80fd\u91cd\u8bd5\u548c\u964d\u7ea7\u7b56\u7565\n\u2022 \u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u91c7\u96c6\u67b6\u6784\n\n\ud83d\udcc8 **\u6548\u7387\u63d0\u5347**\n\u2022 \u76f8\u6bd4\u4f20\u7edf\u65b9\u5f0f\uff0c\u6548\u7387\u63d0\u5347300%\n\u2022 \u5f02\u5e38\u5904\u7406\u673a\u5236\u51cf\u5c11\u4eba\u5de5\u5e72\u988480%\n\u2022 \u81ea\u52a8\u5316\u7a0b\u5ea6\u8fbe\u523095%\n\"\"\"\n\nemail.add_text(achievements.strip())\n\n# \u7ecf\u9a8c\u603b\u7ed3\nemail.add_title(\"\ud83d\udca1 \u7ecf\u9a8c\u603b\u7ed3\", TextType.SECTION_H2)\n\nlessons_learned = f\"\"\"\n**\u9879\u76ee\u7ecf\u9a8c\u4e0e\u6559\u8bad\uff1a**\n\n\ud83c\udf93 **\u6210\u529f\u7ecf\u9a8c**\n\u2022 \u5145\u5206\u7684\u524d\u671f\u8c03\u7814\u548c\u6280\u672f\u9009\u578b\n\u2022 \u5b8c\u5584\u7684\u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236\n\u2022 \u7075\u6d3b\u7684\u7b56\u7565\u8c03\u6574\u548c\u4f18\u5316\n\n\ud83d\udea7 **\u9047\u5230\u7684\u6311\u6218**\n\u2022 \u76ee\u6807\u7f51\u7ad9\u9891\u7e41\u66f4\u65b0\u53cd\u722c\u7b56\u7565\n\u2022 \u6570\u636e\u7ed3\u6784\u53d8\u5316\u9700\u8981\u53ca\u65f6\u9002\u914d\n\u2022 \u9ad8\u5e76\u53d1\u4e0b\u7684\u8d44\u6e90\u7ba1\u7406\u4f18\u5316\n\n\ud83d\udd04 **\u6301\u7eed\u6539\u8fdb**\n\u2022 \u5efa\u7acb\u7f51\u7ad9\u53d8\u5316\u76d1\u63a7\u673a\u5236\n\u2022 \u5b8c\u5584\u81ea\u52a8\u5316\u6d4b\u8bd5\u6d41\u7a0b\n\u2022 \u4f18\u5316\u6570\u636e\u8d28\u91cf\u68c0\u67e5\u89c4\u5219\n\"\"\"\n\nemail.add_text(lessons_learned.strip())\n\nemail.export_html(\"spider_project_summary.html\")\nprint(\"\u2705 \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a\u5df2\u751f\u6210\uff1aspider_project_summary.html\")\n</code></pre> \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:49:25 <p>\ud83d\udd77\ufe0f \u722c\u866b\u9879\u76ee\u7efc\u5408\u62a5\u544a</p> <p>\u9879\u76ee\u5468\u671f: 2024\u5e741\u670815\u65e5 - 2024\u5e741\u670821\u65e5</p> 1. \ud83d\udcca \u9879\u76ee\u6574\u4f53\u6982\u51b5 15\u4e2a 125,000\u6761 94.3% 92.8% 2. \ud83c\udfc6 \u5173\u952e\u6210\u679c <p>**\u9879\u76ee\u4e3b\u8981\u6210\u679c\uff1a**</p> <p>\u2705 **\u91c7\u96c6\u6210\u679c**</p> <p>\u2022 \u6210\u529f\u5b8c\u621015\u4e2a\u76ee\u6807\u7f51\u7ad9\u7684\u6570\u636e\u91c7\u96c6</p> <p>\u2022 \u7d2f\u8ba1\u83b7\u53d6\u6709\u6548\u6570\u636e125,000\u6761</p> <p>\u2022 \u6570\u636e\u8986\u76d6\u7387\u8fbe\u5230\u9884\u671f\u76ee\u6807\u7684105%</p> <p>\ud83c\udfaf **\u8d28\u91cf\u4fdd\u8bc1**</p> <p>\u2022 \u6570\u636e\u8d28\u91cf\u738792.8%\uff0c\u8d85\u8fc7\u9884\u671f90%</p> <p>\u2022 \u91cd\u590d\u6570\u636e\u7387\u63a7\u5236\u57282.1%\u4ee5\u5185</p> <p>\u2022 \u5173\u952e\u5b57\u6bb5\u5b8c\u6574\u6027\u8fbe\u523095%\u4ee5\u4e0a</p> <p>\u26a1 **\u6280\u672f\u7a81\u7834**</p> <p>\u2022 \u6210\u529f\u5e94\u5bf95\u79cd\u4e0d\u540c\u7684\u53cd\u722c\u673a\u5236</p> <p>\u2022 \u5f00\u53d1\u4e86\u667a\u80fd\u91cd\u8bd5\u548c\u964d\u7ea7\u7b56\u7565</p> <p>\u2022 \u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u91c7\u96c6\u67b6\u6784</p> <p>\ud83d\udcc8 **\u6548\u7387\u63d0\u5347**</p> <p>\u2022 \u76f8\u6bd4\u4f20\u7edf\u65b9\u5f0f\uff0c\u6548\u7387\u63d0\u5347300%</p> <p>\u2022 \u5f02\u5e38\u5904\u7406\u673a\u5236\u51cf\u5c11\u4eba\u5de5\u5e72\u988480%</p> <p>\u2022 \u81ea\u52a8\u5316\u7a0b\u5ea6\u8fbe\u523095%</p> 3. \ud83d\udca1 \u7ecf\u9a8c\u603b\u7ed3 <p>**\u9879\u76ee\u7ecf\u9a8c\u4e0e\u6559\u8bad\uff1a**</p> <p>\ud83c\udf93 **\u6210\u529f\u7ecf\u9a8c**</p> <p>\u2022 \u5145\u5206\u7684\u524d\u671f\u8c03\u7814\u548c\u6280\u672f\u9009\u578b</p> <p>\u2022 \u5b8c\u5584\u7684\u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236</p> <p>\u2022 \u7075\u6d3b\u7684\u7b56\u7565\u8c03\u6574\u548c\u4f18\u5316</p> <p>\ud83d\udea7 **\u9047\u5230\u7684\u6311\u6218**</p> <p>\u2022 \u76ee\u6807\u7f51\u7ad9\u9891\u7e41\u66f4\u65b0\u53cd\u722c\u7b56\u7565</p> <p>\u2022 \u6570\u636e\u7ed3\u6784\u53d8\u5316\u9700\u8981\u53ca\u65f6\u9002\u914d</p> <p>\u2022 \u9ad8\u5e76\u53d1\u4e0b\u7684\u8d44\u6e90\u7ba1\u7406\u4f18\u5316</p> <p>\ud83d\udd04 **\u6301\u7eed\u6539\u8fdb**</p> <p>\u2022 \u5efa\u7acb\u7f51\u7ad9\u53d8\u5316\u76d1\u63a7\u673a\u5236</p> <p>\u2022 \u5b8c\u5584\u81ea\u52a8\u5316\u6d4b\u8bd5\u6d41\u7a0b</p> <p>\u2022 \u4f18\u5316\u6570\u636e\u8d28\u91cf\u68c0\u67e5\u89c4\u5219</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u7efc\u5408\u62a5\u544a\u4ef7\u503c\uff1a - \u9879\u76ee\u5168\u8c8c\u5c55\u793a - \u6210\u679c\u91cf\u5316\u7edf\u8ba1 - \u7ecf\u9a8c\u603b\u7ed3\u5f52\u7eb3 - \u51b3\u7b56\u652f\u6301\u4fe1\u606f</p>"},{"location":"zh/examples/spider-reports/#_12","title":"\u5b66\u4e60\u603b\u7ed3","text":"<p>\u901a\u8fc7\u722c\u866b\u62a5\u544a\u793a\u4f8b\uff0c\u60a8\u5df2\u7ecf\u638c\u63e1\u4e86\uff1a</p>"},{"location":"zh/examples/spider-reports/#_13","title":"\ud83c\udfaf \u4e13\u4e1a\u6280\u80fd","text":"<ul> <li>\u4efb\u52a1\u76d1\u63a7 - \u5b9e\u65f6\u8fdb\u5ea6\u8ddf\u8e2a\u548c\u72b6\u6001\u7ba1\u7406</li> <li>\u8d28\u91cf\u68c0\u67e5 - \u591a\u7ef4\u5ea6\u6570\u636e\u8d28\u91cf\u8bc4\u4f30</li> <li>\u5f02\u5e38\u5206\u6790 - \u667a\u80fd\u5f02\u5e38\u8bc6\u522b\u548c\u5904\u7406\u5efa\u8bae</li> <li>\u6027\u80fd\u4f18\u5316 - \u914d\u7f6e\u5bf9\u6bd4\u548c\u6548\u7387\u5206\u6790</li> </ul>"},{"location":"zh/examples/spider-reports/#_14","title":"\ud83d\udcca \u62a5\u544a\u7c7b\u578b","text":"<ul> <li>\u722c\u866b\u4efb\u52a1\u8fdb\u5ea6\u62a5\u544a</li> <li>\u6570\u636e\u8d28\u91cf\u68c0\u67e5\u62a5\u544a</li> <li>\u5f02\u5e38\u76d1\u63a7\u5206\u6790\u62a5\u544a</li> <li>\u6027\u80fd\u4f18\u5316\u5206\u6790\u62a5\u544a</li> </ul>"},{"location":"zh/examples/spider-reports/#_15","title":"\ud83d\udca1 \u6700\u4f73\u5b9e\u8df5","text":"<ul> <li>\u5b9e\u65f6\u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236</li> <li>\u6570\u636e\u9a71\u52a8\u7684\u4f18\u5316\u51b3\u7b56</li> <li>\u81ea\u52a8\u5316\u5f02\u5e38\u68c0\u6d4b\u548c\u5904\u7406</li> <li>\u53ef\u89c6\u5316\u5c55\u793a\u590d\u6742\u6570\u636e\u5173\u7cfb</li> </ul>"},{"location":"zh/examples/spider-reports/#_16","title":"\ud83d\ude80 \u5e94\u7528\u4ef7\u503c","text":"<ul> <li>\u63d0\u9ad8\u722c\u866b\u9879\u76ee\u7ba1\u7406\u6548\u7387</li> <li>\u786e\u4fdd\u6570\u636e\u91c7\u96c6\u8d28\u91cf</li> <li>\u53ca\u65f6\u53d1\u73b0\u548c\u89e3\u51b3\u95ee\u9898</li> <li>\u4e3a\u6280\u672f\u4f18\u5316\u63d0\u4f9b\u4f9d\u636e</li> </ul> <p>\u7ee7\u7eed\u5b66\u4e60 \u5b9e\u9645\u5e94\u7528\uff0c\u63a2\u7d22\u66f4\u591a\u4e13\u4e1a\u5e94\u7528\u573a\u666f\uff01 </p>"},{"location":"zh/examples/system-monitoring/","title":"\u7cfb\u7edf\u76d1\u63a7\u793a\u4f8b","text":"<p>\u672c\u9875\u9762\u5c55\u793a\u5982\u4f55\u4f7f\u7528 EmailWidget \u521b\u5efa\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\uff0c\u5b9e\u73b0\u670d\u52a1\u72b6\u6001\u68c0\u67e5\u3001\u8d44\u6e90\u76d1\u63a7\u548c\u544a\u8b66\u901a\u77e5\u3002</p>"},{"location":"zh/examples/system-monitoring/#_2","title":"\u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7","text":""},{"location":"zh/examples/system-monitoring/#_3","title":"\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u62a5\u544a \ud83d\udcbb \u670d\u52a1\u5668\u72b6\u6001                  \u23f0 \u8fd0\u884c\u65f6\u95f4                  \u2699\ufe0f CPU\u6838\u5fc3\u6570                  \ud83d\udcbe \u5185\u5b58\u603b\u91cf","text":"Python<pre><code>import psutil\nfrom datetime import datetime\nfrom email_widget import Email, ProgressWidget, StatusWidget, AlertWidget\nfrom email_widget.core.enums import TextType, ProgressTheme, StatusType, AlertType\n\n# \u83b7\u53d6\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\ndef get_system_info():\n    \"\"\"\u83b7\u53d6\u7cfb\u7edf\u57fa\u672c\u4fe1\u606f\"\"\"\n    return {\n        'cpu_percent': psutil.cpu_percent(interval=1),\n        'memory': psutil.virtual_memory(),\n        'disk': psutil.disk_usage('/'),\n        'network': psutil.net_io_counters(),\n        'boot_time': datetime.fromtimestamp(psutil.boot_time())\n    }\n\n# \u521b\u5efa\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udda5\ufe0f \u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u76d1\u63a7\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\", \n               color=\"#666666\")\n\n# \u83b7\u53d6\u7cfb\u7edf\u4fe1\u606f\nsys_info = get_system_info()\n\n# \u7cfb\u7edf\u6982\u51b5\nemail.add_title(\"\ud83d\udcca \u7cfb\u7edf\u6982\u51b5\", TextType.SECTION_H2)\n\nuptime = datetime.now() - sys_info['boot_time']\noverview_info = [\n    (\"\u670d\u52a1\u5668\u72b6\u6001\", \"\ud83d\udfe2 \u6b63\u5e38\u8fd0\u884c\", \"\ud83d\udcbb\"),\n    (\"\u8fd0\u884c\u65f6\u95f4\", f\"{uptime.days}\u5929 {uptime.seconds//3600}\u5c0f\u65f6\", \"\u23f0\"),\n    (\"CPU\u6838\u5fc3\u6570\", f\"{psutil.cpu_count()}\u6838\", \"\u2699\ufe0f\"),\n    (\"\u5185\u5b58\u603b\u91cf\", f\"{sys_info['memory'].total / (1024**3):.1f} GB\", \"\ud83d\udcbe\")\n]\n\nfor title, value, icon in overview_info:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u8d44\u6e90\u4f7f\u7528\u8be6\u60c5\nemail.add_title(\"\ud83d\udcc8 \u8d44\u6e90\u4f7f\u7528\u8be6\u60c5\", TextType.SECTION_H2)\n\n# CPU\u4f7f\u7528\u7387\ncpu_usage = sys_info['cpu_percent']\ncpu_theme = ProgressTheme.SUCCESS if cpu_usage &lt; 50 else \\\n            ProgressTheme.WARNING if cpu_usage &lt; 80 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 CPU\u4f7f\u7528\u7387\")\nemail.add_progress(cpu_usage, f\"CPU: {cpu_usage:.1f}%\", theme=cpu_theme)\n\n# \u5185\u5b58\u4f7f\u7528\u7387\nmemory = sys_info['memory']\nmemory_usage = memory.percent\nmemory_theme = ProgressTheme.SUCCESS if memory_usage &lt; 60 else \\\n               ProgressTheme.WARNING if memory_usage &lt; 85 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u5185\u5b58\u4f7f\u7528\u7387\")\nemail.add_progress(memory_usage, f\"\u5185\u5b58: {memory_usage:.1f}%\", theme=memory_theme)\n\n# \u78c1\u76d8\u4f7f\u7528\u7387\ndisk = sys_info['disk']\ndisk_usage = (disk.used / disk.total) * 100\ndisk_theme = ProgressTheme.SUCCESS if disk_usage &lt; 70 else \\\n             ProgressTheme.WARNING if disk_usage &lt; 90 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u78c1\u76d8\u4f7f\u7528\u7387\")\nemail.add_progress(disk_usage, f\"\u78c1\u76d8: {disk_usage:.1f}%\", theme=disk_theme)\n\n# \u544a\u8b66\u68c0\u67e5\nemail.add_title(\"\u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66\", TextType.SECTION_H2)\n\n# \u68c0\u67e5\u5404\u9879\u6307\u6807\u662f\u5426\u9700\u8981\u544a\u8b66\nalerts = []\nif cpu_usage &gt; 80:\n    alerts.append((\"CPU\u4f7f\u7528\u7387\u8fc7\u9ad8\", f\"\u5f53\u524dCPU\u4f7f\u7528\u7387{cpu_usage:.1f}%\uff0c\u5efa\u8bae\u68c0\u67e5\u9ad8CPU\u8fdb\u7a0b\", AlertType.CAUTION))\nif memory_usage &gt; 85:\n    alerts.append((\"\u5185\u5b58\u4e0d\u8db3\", f\"\u5185\u5b58\u4f7f\u7528\u7387{memory_usage:.1f}%\uff0c\u53ef\u80fd\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\", AlertType.WARNING))\nif disk_usage &gt; 90:\n    alerts.append((\"\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\", f\"\u78c1\u76d8\u4f7f\u7528\u7387{disk_usage:.1f}%\uff0c\u5efa\u8bae\u6e05\u7406\u65e0\u7528\u6587\u4ef6\", AlertType.CAUTION))\n\nif alerts:\n    for title, content, alert_type in alerts:\n        email.add_alert(content, alert_type, title)\nelse:\n    email.add_alert(\"\u7cfb\u7edf\u8fd0\u884c\u6b63\u5e38\uff0c\u6240\u6709\u6307\u6807\u5747\u5728\u6b63\u5e38\u8303\u56f4\u5185\", AlertType.TIP, \"\u2705 \u7cfb\u7edf\u72b6\u6001\u826f\u597d\")\n\nemail.export_html(\"system_monitor.html\")\nprint(\"\u2705 \u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1asystem_monitor.html\")\n</code></pre> \u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a \u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:36:48 <p>\ud83d\udda5\ufe0f \u670d\u52a1\u5668\u8d44\u6e90\u76d1\u63a7\u62a5\u544a</p> <p>\u76d1\u63a7\u65f6\u95f4: 2025-07-07 23:36:48</p> 1. \ud83d\udcca \u7cfb\u7edf\u6982\u51b5 \ud83d\udfe2 \u6b63\u5e38\u8fd0\u884c 5\u5929 0\u5c0f\u65f6 8\u6838 16.0 GB 2. \ud83d\udcc8 \u8d44\u6e90\u4f7f\u7528\u8be6\u60c5 <p>\ud83d\udd39 CPU\u4f7f\u7528\u7387</p> CPU: 45.0% 45.0% <p>\ud83d\udd39 \u5185\u5b58\u4f7f\u7528\u7387</p> \u5185\u5b58: 65.5% 65.5% <p>\ud83d\udd39 \u78c1\u76d8\u4f7f\u7528\u7387</p> \u78c1\u76d8: 50.0% 50.0% 3. \u26a0\ufe0f \u7cfb\u7edf\u544a\u8b66 \ud83d\udca1 \u2705 \u7cfb\u7edf\u72b6\u6001\u826f\u597d \u7cfb\u7edf\u8fd0\u884c\u6b63\u5e38\uff0c\u6240\u6709\u6307\u6807\u5747\u5728\u6b63\u5e38\u8303\u56f4\u5185 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u76d1\u63a7\u7279\u70b9\uff1a - \u5b9e\u65f6\u83b7\u53d6\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5 - \u667a\u80fd\u544a\u8b66\u9608\u503c\u8bbe\u7f6e - \u76f4\u89c2\u7684\u8fdb\u5ea6\u6761\u663e\u793a - \u81ea\u52a8\u5316\u72b6\u6001\u8bc4\u4f30</p>"},{"location":"zh/examples/system-monitoring/#_4","title":"\u5e94\u7528\u670d\u52a1\u76d1\u63a7","text":""},{"location":"zh/examples/system-monitoring/#_5","title":"\u591a\u670d\u52a1\u5065\u5eb7\u68c0\u67e5 \ud83d\udee0\ufe0f \u670d\u52a1\u603b\u6570                  \u2705 \u6b63\u5e38\u670d\u52a1                  \u274c \u5f02\u5e38\u670d\u52a1                  \ud83d\udc9a \u5065\u5eb7\u7387","text":"Python<pre><code>import requests\nfrom datetime import datetime\nfrom email_widget import Email, StatusWidget, TableWidget, AlertWidget\nfrom email_widget.core.enums import TextType, StatusType, AlertType\n\n# \u5b9a\u4e49\u8981\u76d1\u63a7\u7684\u670d\u52a1\nservices = [\n    {\"name\": \"Web\u670d\u52a1\", \"url\": \"http://localhost:8080/health\", \"timeout\": 5},\n    {\"name\": \"API\u670d\u52a1\", \"url\": \"http://localhost:3000/api/health\", \"timeout\": 5},\n    {\"name\": \"\u6570\u636e\u5e93\", \"url\": \"http://localhost:5432/health\", \"timeout\": 3},\n    {\"name\": \"Redis\u7f13\u5b58\", \"url\": \"http://localhost:6379/ping\", \"timeout\": 3},\n    {\"name\": \"\u6d88\u606f\u961f\u5217\", \"url\": \"http://localhost:5672/health\", \"timeout\": 5}\n]\n\ndef check_service_health(service):\n    \"\"\"\u68c0\u67e5\u5355\u4e2a\u670d\u52a1\u5065\u5eb7\u72b6\u6001\"\"\"\n    try:\n        start_time = datetime.now()\n        response = requests.get(service[\"url\"], timeout=service[\"timeout\"])\n        response_time = (datetime.now() - start_time).total_seconds() * 1000\n\n        if response.status_code == 200:\n            return {\n                \"status\": \"\u6b63\u5e38\",\n                \"response_time\": response_time,\n                \"status_type\": StatusType.SUCCESS,\n                \"error\": None\n            }\n        else:\n            return {\n                \"status\": \"\u5f02\u5e38\",\n                \"response_time\": response_time,\n                \"status_type\": StatusType.ERROR,\n                \"error\": f\"HTTP {response.status_code}\"\n            }\n    except requests.exceptions.Timeout:\n        return {\n            \"status\": \"\u8d85\u65f6\",\n            \"response_time\": service[\"timeout\"] * 1000,\n            \"status_type\": StatusType.WARNING,\n            \"error\": \"\u8bf7\u6c42\u8d85\u65f6\"\n        }\n    except Exception as e:\n        return {\n            \"status\": \"\u4e0d\u53ef\u8fbe\",\n            \"response_time\": 0,\n            \"status_type\": StatusType.ERROR,\n            \"error\": str(e)\n        }\n\n# \u521b\u5efa\u670d\u52a1\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udee0\ufe0f \u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u68c0\u67e5\u65f6\u95f4: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n# \u6267\u884c\u5065\u5eb7\u68c0\u67e5\nservice_results = []\nfor service in services:\n    result = check_service_health(service)\n    service_results.append({\n        \"name\": service[\"name\"],\n        \"url\": service[\"url\"],\n        **result\n    })\n\n# \u670d\u52a1\u72b6\u6001\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u670d\u52a1\u72b6\u6001\u6982\u89c8\", TextType.SECTION_H2)\n\nnormal_count = sum(1 for r in service_results if r[\"status\"] == \"\u6b63\u5e38\")\ntotal_count = len(service_results)\nhealth_rate = (normal_count / total_count) * 100\n\noverview_metrics = [\n    (\"\u670d\u52a1\u603b\u6570\", f\"{total_count}\", \"\ud83d\udee0\ufe0f\"),\n    (\"\u6b63\u5e38\u670d\u52a1\", f\"{normal_count}\", \"\u2705\"),\n    (\"\u5f02\u5e38\u670d\u52a1\", f\"{total_count - normal_count}\", \"\u274c\"),\n    (\"\u5065\u5eb7\u7387\", f\"{health_rate:.1f}%\", \"\ud83d\udc9a\")\n]\n\nfor title, value, icon in overview_metrics:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u670d\u52a1\u72b6\u6001\u8be6\u60c5\nemail.add_title(\"\ud83d\udd0d \u670d\u52a1\u72b6\u6001\u8be6\u60c5\", TextType.SECTION_H2)\n\nfor result in service_results:\n    status_widget = StatusWidget()\n    status_widget.set_title(result[\"name\"]) \\\n                 .set_status(result[\"status\"]) \\\n                 .set_status_type(result[\"status_type\"]) \\\n                 .set_description(f\"\u54cd\u5e94\u65f6\u95f4: {result['response_time']:.0f}ms\")\n    email.add_widget(status_widget)\n\n# \u8be6\u7ec6\u670d\u52a1\u8868\u683c\nemail.add_title(\"\ud83d\udccb \u8be6\u7ec6\u76d1\u63a7\u6570\u636e\", TextType.SECTION_H2)\n\ntable = TableWidget()\ntable.set_headers([\"\u670d\u52a1\u540d\u79f0\", \"\u72b6\u6001\", \"\u54cd\u5e94\u65f6\u95f4\", \"\u9519\u8bef\u4fe1\u606f\"])\n\nfor result in service_results:\n    status_emoji = \"\ud83d\udfe2\" if result[\"status\"] == \"\u6b63\u5e38\" else \\\n                  \"\ud83d\udfe1\" if result[\"status\"] == \"\u8d85\u65f6\" else \"\ud83d\udd34\"\n\n    table.add_row([\n        result[\"name\"],\n        f\"{status_emoji} {result['status']}\",\n        f\"{result['response_time']:.0f}ms\",\n        result[\"error\"] or \"\u65e0\"\n    ])\n\ntable.set_striped(True)\nemail.add_widget(table)\n\n# \u5f02\u5e38\u544a\u8b66\nemail.add_title(\"\ud83d\udea8 \u5f02\u5e38\u544a\u8b66\", TextType.SECTION_H2)\n\nerror_services = [r for r in service_results if r[\"status\"] != \"\u6b63\u5e38\"]\nif error_services:\n    for service in error_services:\n        alert_type = AlertType.WARNING if service[\"status\"] == \"\u8d85\u65f6\" else AlertType.CAUTION\n        email.add_alert(\n            f\"{service['name']} \u72b6\u6001\u5f02\u5e38: {service['error']}\",\n            alert_type,\n            f\"\u26a0\ufe0f {service['name']} \u5f02\u5e38\"\n        )\nelse:\n    email.add_alert(\"\u6240\u6709\u670d\u52a1\u8fd0\u884c\u6b63\u5e38\", AlertType.TIP, \"\u2705 \u7cfb\u7edf\u72b6\u6001\u826f\u597d\")\n\nemail.export_html(\"service_monitor.html\")\nprint(\"\u2705 \u670d\u52a1\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1aservice_monitor.html\")\n</code></pre> \u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a \u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:40:33 <p>\ud83d\udee0\ufe0f \u5e94\u7528\u670d\u52a1\u76d1\u63a7\u62a5\u544a</p> <p>\u68c0\u67e5\u65f6\u95f4: 2025-07-07 23:40:33</p> 1. \ud83d\udcca \u670d\u52a1\u72b6\u6001\u6982\u89c8 5 3 2 60.0% 2. \ud83d\udd0d \u670d\u52a1\u72b6\u6001\u8be6\u60c5 Web\u670d\u52a1 \u54cd\u5e94\u65f6\u95f4: 0ms API\u670d\u52a1 \u54cd\u5e94\u65f6\u95f4: 0ms \u6570\u636e\u5e93 \u54cd\u5e94\u65f6\u95f4: 3000ms Redis\u7f13\u5b58 \u54cd\u5e94\u65f6\u95f4: 0ms \u6d88\u606f\u961f\u5217 \u54cd\u5e94\u65f6\u95f4: 0ms 3. \ud83d\udccb \u8be6\u7ec6\u76d1\u63a7\u6570\u636e \u670d\u52a1\u540d\u79f0 \u72b6\u6001 \u54cd\u5e94\u65f6\u95f4 \u9519\u8bef\u4fe1\u606f Web\u670d\u52a1 \ud83d\udfe2 \u6b63\u5e38 0ms \u65e0 API\u670d\u52a1 \ud83d\udfe2 \u6b63\u5e38 0ms \u65e0 \u6570\u636e\u5e93 \ud83d\udfe1 \u8d85\u65f6 3000ms \u8bf7\u6c42\u8d85\u65f6 Redis\u7f13\u5b58 \ud83d\udfe2 \u6b63\u5e38 0ms \u65e0 \u6d88\u606f\u961f\u5217 \ud83d\udd34 \u5f02\u5e38 0ms HTTP 500 4. \ud83d\udea8 \u5f02\u5e38\u544a\u8b66 \u26a0\ufe0f \u26a0\ufe0f \u6570\u636e\u5e93 \u5f02\u5e38 \u6570\u636e\u5e93 \u72b6\u6001\u5f02\u5e38: \u8bf7\u6c42\u8d85\u65f6 \ud83d\udea8 \u26a0\ufe0f \u6d88\u606f\u961f\u5217 \u5f02\u5e38 \u6d88\u606f\u961f\u5217 \u72b6\u6001\u5f02\u5e38: HTTP 500 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u76d1\u63a7\u4eae\u70b9\uff1a - \u591a\u670d\u52a1\u5e76\u53d1\u68c0\u67e5 - \u54cd\u5e94\u65f6\u95f4\u7edf\u8ba1 - \u5f02\u5e38\u81ea\u52a8\u544a\u8b66 - \u5065\u5eb7\u7387\u8ba1\u7b97</p>"},{"location":"zh/examples/system-monitoring/#_6","title":"\u65e5\u5fd7\u5206\u6790\u76d1\u63a7","text":""},{"location":"zh/examples/system-monitoring/#_7","title":"\u7cfb\u7edf\u65e5\u5fd7\u7edf\u8ba1\u5206\u6790 \ud83d\udcc4 \u65e5\u5fd7\u603b\u6570                  \ud83d\udd34 \u9519\u8bef\u65e5\u5fd7                  \ud83d\udfe1 \u8b66\u544a\u65e5\u5fd7                  \ud83d\udfe2 \u4fe1\u606f\u65e5\u5fd7","text":"Python<pre><code>import re\nfrom datetime import datetime, timedelta\nfrom collections import Counter\nfrom email_widget import Email, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u6a21\u62df\u65e5\u5fd7\u6570\u636e\uff08\u5b9e\u9645\u5e94\u7528\u4e2d\u4ece\u65e5\u5fd7\u6587\u4ef6\u8bfb\u53d6\uff09\nsample_logs = [\n    \"2024-01-20 10:15:23 INFO User login successful: user123\",\n    \"2024-01-20 10:16:45 ERROR Database connection failed: timeout\",\n    \"2024-01-20 10:17:12 WARN High memory usage detected: 85%\",\n    \"2024-01-20 10:18:30 INFO User logout: user123\",\n    \"2024-01-20 10:19:55 ERROR API request failed: 500 Internal Server Error\",\n    \"2024-01-20 10:20:18 INFO New user registration: user456\",\n    \"2024-01-20 10:21:44 WARN Slow query detected: 3.2s\",\n    \"2024-01-20 10:22:17 ERROR File not found: config.xml\",\n    \"2024-01-20 10:23:35 INFO Backup completed successfully\",\n    \"2024-01-20 10:24:52 ERROR Network timeout: redis connection\",\n]\n\ndef analyze_logs(logs):\n    \"\"\"\u5206\u6790\u65e5\u5fd7\u6570\u636e\"\"\"\n    log_pattern = r'(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}) (\\w+) (.+)'\n\n    parsed_logs = []\n    for log in logs:\n        match = re.match(log_pattern, log)\n        if match:\n            timestamp, level, message = match.groups()\n            parsed_logs.append({\n                'timestamp': datetime.strptime(timestamp, '%Y-%m-%d %H:%M:%S'),\n                'level': level,\n                'message': message\n            })\n\n    # \u7edf\u8ba1\u5206\u6790\n    level_counts = Counter(log['level'] for log in parsed_logs)\n    error_messages = [log['message'] for log in parsed_logs if log['level'] == 'ERROR']\n\n    return {\n        'total_logs': len(parsed_logs),\n        'level_counts': level_counts,\n        'error_messages': error_messages,\n        'parsed_logs': parsed_logs\n    }\n\n# \u521b\u5efa\u65e5\u5fd7\u5206\u6790\u62a5\u544a\nemail = Email(\"\u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\udcdd \u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u5206\u6790\u65f6\u95f4\u8303\u56f4: \u6700\u8fd11\u5c0f\u65f6\")\n\n# \u5206\u6790\u65e5\u5fd7\nlog_analysis = analyze_logs(sample_logs)\n\n# \u65e5\u5fd7\u7edf\u8ba1\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u65e5\u5fd7\u7edf\u8ba1\u6982\u89c8\", TextType.SECTION_H2)\n\ntotal_logs = log_analysis['total_logs']\nerror_count = log_analysis['level_counts'].get('ERROR', 0)\nwarn_count = log_analysis['level_counts'].get('WARN', 0)\ninfo_count = log_analysis['level_counts'].get('INFO', 0)\n\nlog_stats = [\n    (\"\u65e5\u5fd7\u603b\u6570\", f\"{total_logs:,}\", \"\ud83d\udcc4\"),\n    (\"\u9519\u8bef\u65e5\u5fd7\", f\"{error_count}\", \"\ud83d\udd34\"),\n    (\"\u8b66\u544a\u65e5\u5fd7\", f\"{warn_count}\", \"\ud83d\udfe1\"),\n    (\"\u4fe1\u606f\u65e5\u5fd7\", f\"{info_count}\", \"\ud83d\udfe2\")\n]\n\nfor title, value, icon in log_stats:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u65e5\u5fd7\u7ea7\u522b\u5206\u5e03\nemail.add_title(\"\ud83d\udcc8 \u65e5\u5fd7\u7ea7\u522b\u5206\u5e03\", TextType.SECTION_H2)\n\nfor level, count in log_analysis['level_counts'].items():\n    percentage = (count / total_logs) * 100\n\n    # \u6839\u636e\u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e\u4e3b\u9898\u8272\n    if level == 'ERROR':\n        theme = ProgressTheme.ERROR\n    elif level == 'WARN':\n        theme = ProgressTheme.WARNING\n    elif level == 'INFO':\n        theme = ProgressTheme.SUCCESS\n    else:\n        theme = ProgressTheme.INFO\n\n    email.add_text(f\"\ud83d\udd39 {level} \u7ea7\u522b\")\n    email.add_progress(percentage, f\"{count} \u6761 ({percentage:.1f}%)\", theme=theme)\n\n# \u9519\u8bef\u65e5\u5fd7\u8be6\u60c5\nif error_count &gt; 0:\n    email.add_title(\"\ud83d\udea8 \u9519\u8bef\u65e5\u5fd7\u8be6\u60c5\", TextType.SECTION_H2)\n\n    error_table = TableWidget()\n    error_table.set_headers([\"\u5e8f\u53f7\", \"\u9519\u8bef\u4fe1\u606f\"])\n\n    for i, error_msg in enumerate(log_analysis['error_messages'], 1):\n        error_table.add_row([str(i), error_msg])\n\n    error_table.set_striped(True)\n    email.add_widget(error_table)\n\n# \u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30\nemail.add_title(\"\ud83d\udca1 \u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30\", TextType.SECTION_H2)\n\nerror_rate = (error_count / total_logs) * 100 if total_logs &gt; 0 else 0\nwarn_rate = (warn_count / total_logs) * 100 if total_logs &gt; 0 else 0\n\nhealth_assessment = f\"\"\"\n**\u57fa\u4e8e\u65e5\u5fd7\u5206\u6790\u7684\u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30\uff1a**\n\n\ud83d\udcca **\u5173\u952e\u6307\u6807**\n\u2022 \u9519\u8bef\u7387: {error_rate:.1f}% ({error_count}/{total_logs})\n\u2022 \u8b66\u544a\u7387: {warn_rate:.1f}% ({warn_count}/{total_logs})\n\u2022 \u7cfb\u7edf\u72b6\u6001: {'\ud83d\udd34 \u9700\u8981\u5173\u6ce8' if error_rate &gt; 10 else '\ud83d\udfe1 \u6709\u5f85\u6539\u5584' if error_rate &gt; 5 else '\ud83d\udfe2 \u8fd0\u884c\u826f\u597d'}\n\n\ud83d\udca1 **\u5efa\u8bae\u63aa\u65bd**\n\"\"\"\n\nif error_rate &gt; 10:\n    health_assessment += \"\"\"\n\u2022 \u7acb\u5373\u68c0\u67e5\u9519\u8bef\u65e5\u5fd7\uff0c\u4fee\u590d\u5173\u952e\u95ee\u9898\n\u2022 \u589e\u52a0\u76d1\u63a7\u9891\u7387\uff0c\u5b9e\u65f6\u8ddf\u8e2a\u7cfb\u7edf\u72b6\u6001\n\u2022 \u8003\u8651\u7cfb\u7edf\u7ef4\u62a4\u548c\u4f18\u5316\n\"\"\"\nelif error_rate &gt; 5:\n    health_assessment += \"\"\"\n\u2022 \u5b9a\u671f\u68c0\u67e5\u9519\u8bef\u65e5\u5fd7\uff0c\u9884\u9632\u95ee\u9898\u6269\u5927\n\u2022 \u4f18\u5316\u7cfb\u7edf\u914d\u7f6e\uff0c\u51cf\u5c11\u9519\u8bef\u53d1\u751f\n\u2022 \u5efa\u7acb\u66f4\u5b8c\u5584\u7684\u76d1\u63a7\u673a\u5236\n\"\"\"\nelse:\n    health_assessment += \"\"\"\n\u2022 \u4fdd\u6301\u5f53\u524d\u8fd0\u7ef4\u6c34\u5e73\n\u2022 \u7ee7\u7eed\u5b9a\u671f\u76d1\u63a7\u548c\u5206\u6790\n\u2022 \u4f18\u5316\u7cfb\u7edf\u6027\u80fd\u548c\u7a33\u5b9a\u6027\n\"\"\"\n\nemail.add_text(health_assessment.strip())\n\nemail.export_html(\"log_analysis.html\")\nprint(\"\u2705 \u65e5\u5fd7\u5206\u6790\u62a5\u544a\u5df2\u751f\u6210\uff1alog_analysis.html\")\n</code></pre> \u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a \u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:41:37 <p>\ud83d\udcdd \u7cfb\u7edf\u65e5\u5fd7\u5206\u6790\u62a5\u544a</p> <p>\u5206\u6790\u65f6\u95f4\u8303\u56f4: \u6700\u8fd11\u5c0f\u65f6</p> 1. \ud83d\udcca \u65e5\u5fd7\u7edf\u8ba1\u6982\u89c8 10 4 2 4 2. \ud83d\udcc8 \u65e5\u5fd7\u7ea7\u522b\u5206\u5e03 <p>\ud83d\udd39 INFO \u7ea7\u522b</p> 4 \u6761 (40.0%) 40.0% <p>\ud83d\udd39 ERROR \u7ea7\u522b</p> 4 \u6761 (40.0%) 40.0% <p>\ud83d\udd39 WARN \u7ea7\u522b</p> 2 \u6761 (20.0%) 20.0% 3. \ud83d\udea8 \u9519\u8bef\u65e5\u5fd7\u8be6\u60c5 \u5e8f\u53f7 \u9519\u8bef\u4fe1\u606f 1 Database connection failed: timeout 2 API request failed: 500 Internal Server Error 3 File not found: config.xml 4 Network timeout: redis connection 4. \ud83d\udca1 \u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30 <p>**\u57fa\u4e8e\u65e5\u5fd7\u5206\u6790\u7684\u7cfb\u7edf\u5065\u5eb7\u8bc4\u4f30\uff1a**</p> <p>\ud83d\udcca **\u5173\u952e\u6307\u6807**</p> <p>\u2022 \u9519\u8bef\u7387: 40.0% (4/10)</p> <p>\u2022 \u8b66\u544a\u7387: 20.0% (2/10)</p> <p>\u2022 \u7cfb\u7edf\u72b6\u6001: \ud83d\udd34 \u9700\u8981\u5173\u6ce8</p> <p>\ud83d\udca1 **\u5efa\u8bae\u63aa\u65bd**</p> <p>\u2022 \u7acb\u5373\u68c0\u67e5\u9519\u8bef\u65e5\u5fd7\uff0c\u4fee\u590d\u5173\u952e\u95ee\u9898</p> <p>\u2022 \u589e\u52a0\u76d1\u63a7\u9891\u7387\uff0c\u5b9e\u65f6\u8ddf\u8e2a\u7cfb\u7edf\u72b6\u6001</p> <p>\u2022 \u8003\u8651\u7cfb\u7edf\u7ef4\u62a4\u548c\u4f18\u5316</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u5206\u6790\u4ef7\u503c\uff1a - \u81ea\u52a8\u5316\u65e5\u5fd7\u89e3\u6790\u548c\u7edf\u8ba1 - \u9519\u8bef\u7387\u548c\u8b66\u544a\u7387\u8ba1\u7b97 - \u667a\u80fd\u5065\u5eb7\u8bc4\u4f30 - \u95ee\u9898\u5b9a\u4f4d\u548c\u5efa\u8bae</p>"},{"location":"zh/examples/system-monitoring/#_8","title":"\u6570\u636e\u5e93\u76d1\u63a7","text":""},{"location":"zh/examples/system-monitoring/#_9","title":"\u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7 \ud83d\udcbe \u6570\u636e\u5e93\u72b6\u6001                  \ud83d\udd17 \u6d3b\u8dc3\u8fde\u63a5                  \ud83d\udcca \u8fde\u63a5\u4f7f\u7528\u7387                  \ud83d\udcbf \u6570\u636e\u5e93\u5927\u5c0f","text":"Python<pre><code># \u6a21\u62df\u6570\u636e\u5e93\u76d1\u63a7\u6570\u636e\ndatabase_metrics = {\n    'connections': {'active': 45, 'max': 100, 'idle': 15},\n    'queries': {'slow_queries': 12, 'total_queries': 8547, 'avg_response_time': 0.8},\n    'storage': {'size': 2.4, 'growth_rate': 0.15, 'fragmentation': 8.2},\n    'performance': {'cpu_usage': 35.2, 'memory_usage': 72.1, 'io_wait': 5.8}\n}\n\nfrom email_widget import Email, ProgressWidget, TableWidget, StatusWidget\nfrom email_widget.core.enums import TextType, ProgressTheme, StatusType\n\n# \u521b\u5efa\u6570\u636e\u5e93\u76d1\u63a7\u62a5\u544a\nemail = Email(\"\u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a\")\n\nemail.add_title(\"\ud83d\uddc4\ufe0f \u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u6570\u636e\u5e93\u72b6\u6001\u6982\u89c8\nemail.add_title(\"\ud83d\udcca \u6570\u636e\u5e93\u72b6\u6001\u6982\u89c8\", TextType.SECTION_H2)\n\n# \u8fde\u63a5\u6c60\u72b6\u6001\nconnections = database_metrics['connections']\nconn_usage = (connections['active'] / connections['max']) * 100\n\ndb_overview = [\n    (\"\u6570\u636e\u5e93\u72b6\u6001\", \"\ud83d\udfe2 \u6b63\u5e38\u8fd0\u884c\", \"\ud83d\udcbe\"),\n    (\"\u6d3b\u8dc3\u8fde\u63a5\", f\"{connections['active']}/{connections['max']}\", \"\ud83d\udd17\"),\n    (\"\u8fde\u63a5\u4f7f\u7528\u7387\", f\"{conn_usage:.1f}%\", \"\ud83d\udcca\"),\n    (\"\u6570\u636e\u5e93\u5927\u5c0f\", f\"{database_metrics['storage']['size']:.1f} GB\", \"\ud83d\udcbf\")\n]\n\nfor title, value, icon in db_overview:\n    email.add_card(title=title, content=value, icon=icon)\n\n# \u6027\u80fd\u6307\u6807\u76d1\u63a7\nemail.add_title(\"\u26a1 \u6027\u80fd\u6307\u6807\", TextType.SECTION_H2)\n\nperformance = database_metrics['performance']\n\n# CPU\u4f7f\u7528\u7387\ncpu_theme = ProgressTheme.SUCCESS if performance['cpu_usage'] &lt; 50 else \\\n           ProgressTheme.WARNING if performance['cpu_usage'] &lt; 80 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u6570\u636e\u5e93CPU\u4f7f\u7528\u7387\")\nemail.add_progress(performance['cpu_usage'], f\"CPU: {performance['cpu_usage']:.1f}%\", theme=cpu_theme)\n\n# \u5185\u5b58\u4f7f\u7528\u7387\nmemory_theme = ProgressTheme.SUCCESS if performance['memory_usage'] &lt; 70 else \\\n              ProgressTheme.WARNING if performance['memory_usage'] &lt; 90 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u6570\u636e\u5e93\u5185\u5b58\u4f7f\u7528\u7387\")\nemail.add_progress(performance['memory_usage'], f\"\u5185\u5b58: {performance['memory_usage']:.1f}%\", theme=memory_theme)\n\n# \u8fde\u63a5\u6c60\u4f7f\u7528\u7387\nconn_theme = ProgressTheme.SUCCESS if conn_usage &lt; 60 else \\\n            ProgressTheme.WARNING if conn_usage &lt; 85 else ProgressTheme.ERROR\n\nemail.add_text(\"\ud83d\udd39 \u8fde\u63a5\u6c60\u4f7f\u7528\u7387\")\nemail.add_progress(conn_usage, f\"\u8fde\u63a5\u6c60: {conn_usage:.1f}%\", theme=conn_theme)\n\n# \u67e5\u8be2\u6027\u80fd\u5206\u6790\nemail.add_title(\"\ud83d\udd0d \u67e5\u8be2\u6027\u80fd\u5206\u6790\", TextType.SECTION_H2)\n\nqueries = database_metrics['queries']\nslow_query_rate = (queries['slow_queries'] / queries['total_queries']) * 100\n\nquery_table = TableWidget()\nquery_table.set_headers([\"\u6307\u6807\", \"\u6570\u503c\", \"\u72b6\u6001\"])\n\nquery_metrics = [\n    (\"\u603b\u67e5\u8be2\u6570\", f\"{queries['total_queries']:,}\", \"\u6b63\u5e38\"),\n    (\"\u6162\u67e5\u8be2\u6570\", f\"{queries['slow_queries']}\", \"\u9700\u5173\u6ce8\" if queries['slow_queries'] &gt; 10 else \"\u6b63\u5e38\"),\n    (\"\u6162\u67e5\u8be2\u7387\", f\"{slow_query_rate:.2f}%\", \"\u8b66\u544a\" if slow_query_rate &gt; 1 else \"\u6b63\u5e38\"),\n    (\"\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\", f\"{queries['avg_response_time']:.1f}ms\", \"\u4f18\u79c0\" if queries['avg_response_time'] &lt; 1 else \"\u6b63\u5e38\")\n]\n\nfor metric, value, status in query_metrics:\n    status_emoji = \"\ud83d\udfe2\" if status == \"\u6b63\u5e38\" or status == \"\u4f18\u79c0\" else \\\n                  \"\ud83d\udfe1\" if status == \"\u9700\u5173\u6ce8\" else \"\ud83d\udd34\"\n    query_table.add_row([metric, value, f\"{status_emoji} {status}\"])\n\nquery_table.set_striped(True)\nemail.add_widget(query_table)\n\nemail.export_html(\"database_monitor.html\")\nprint(\"\u2705 \u6570\u636e\u5e93\u76d1\u63a7\u62a5\u544a\u5df2\u751f\u6210\uff1adatabase_monitor.html\")\n</code></pre> \u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a \u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:42:34 <p>\ud83d\uddc4\ufe0f \u6570\u636e\u5e93\u6027\u80fd\u76d1\u63a7\u62a5\u544a</p> 1. \ud83d\udcca \u6570\u636e\u5e93\u72b6\u6001\u6982\u89c8 \ud83d\udfe2 \u6b63\u5e38\u8fd0\u884c 45/100 45.0% 2.4 GB 2. \u26a1 \u6027\u80fd\u6307\u6807 <p>\ud83d\udd39 \u6570\u636e\u5e93CPU\u4f7f\u7528\u7387</p> CPU: 35.2% 35.2% <p>\ud83d\udd39 \u6570\u636e\u5e93\u5185\u5b58\u4f7f\u7528\u7387</p> \u5185\u5b58: 72.1% 72.1% <p>\ud83d\udd39 \u8fde\u63a5\u6c60\u4f7f\u7528\u7387</p> \u8fde\u63a5\u6c60: 45.0% 45.0% 3. \ud83d\udd0d \u67e5\u8be2\u6027\u80fd\u5206\u6790 \u6307\u6807 \u6570\u503c \u72b6\u6001 \u603b\u67e5\u8be2\u6570 8,547 \ud83d\udfe2 \u6b63\u5e38 \u6162\u67e5\u8be2\u6570 12 \ud83d\udfe1 \u9700\u5173\u6ce8 \u6162\u67e5\u8be2\u7387 0.14% \ud83d\udfe2 \u6b63\u5e38 \u5e73\u5747\u54cd\u5e94\u65f6\u95f4 0.8ms \ud83d\udfe2 \u4f18\u79c0 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u76d1\u63a7\u91cd\u70b9\uff1a - \u8fde\u63a5\u6c60\u4f7f\u7528\u60c5\u51b5 - \u67e5\u8be2\u6027\u80fd\u5206\u6790 - \u8d44\u6e90\u4f7f\u7528\u76d1\u63a7 - \u5b58\u50a8\u589e\u957f\u8d8b\u52bf</p>"},{"location":"zh/examples/system-monitoring/#_10","title":"\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f","text":""},{"location":"zh/examples/system-monitoring/#_11","title":"\u5b8c\u6574\u7684\u7cfb\u7edf\u76d1\u63a7\u6982\u89c8Web\u670d\u52a1\u6570\u636e\u5e93CPU\u4f7f\u7528\u7387\u5185\u5b58\u4f7f\u7528","text":"Python<pre><code>from email_widget import Email, ColumnWidget, StatusWidget\nfrom email_widget.core.enums import TextType, StatusType\n\n# \u521b\u5efa\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f\nemail = Email(\"\u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f\")\n\nemail.add_title(\"\ud83c\udf9b\ufe0f \u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f\", TextType.TITLE_LARGE)\nemail.add_text(f\"\u6700\u540e\u66f4\u65b0: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n\n# \u4f7f\u7528\u5217\u5e03\u5c40\u5c55\u793a\u591a\u4e2a\u76d1\u63a7\u6a21\u5757\ncolumn_layout = ColumnWidget()\n\n# \u5de6\u5217\uff1a\u7cfb\u7edf\u72b6\u6001\nleft_column = ColumnWidget()\nleft_column.add_widget(StatusWidget()\n                      .set_title(\"Web\u670d\u52a1\")\n                      .set_status(\"\u6b63\u5e38\")\n                      .set_status_type(StatusType.SUCCESS)\n                      .set_description(\"\u54cd\u5e94\u65f6\u95f4: 120ms\"))\n\nleft_column.add_widget(StatusWidget()\n                      .set_title(\"\u6570\u636e\u5e93\")\n                      .set_status(\"\u6b63\u5e38\")\n                      .set_status_type(StatusType.SUCCESS)\n                      .set_description(\"\u8fde\u63a5\u6570: 45/100\"))\n\n# \u53f3\u5217\uff1a\u8d44\u6e90\u76d1\u63a7\nright_column = ColumnWidget()\nright_column.add_widget(StatusWidget()\n                       .set_title(\"CPU\u4f7f\u7528\u7387\")\n                       .set_status(\"45%\")\n                       .set_status_type(StatusType.SUCCESS)\n                       .set_description(\"\u8d1f\u8f7d\u9002\u4e2d\"))\n\nright_column.add_widget(StatusWidget()\n                       .set_title(\"\u5185\u5b58\u4f7f\u7528\")\n                       .set_status(\"72%\")\n                       .set_status_type(StatusType.WARNING)\n                       .set_description(\"\u4f7f\u7528\u7387\u504f\u9ad8\"))\n\n# \u7ec4\u5408\u5217\u5e03\u5c40\ncolumn_layout.add_column(left_column)\ncolumn_layout.add_column(right_column)\nemail.add_widget(column_layout)\n\n# \u5f53\u524d\u544a\u8b66\u6c47\u603b\nemail.add_title(\"\ud83d\udea8 \u5f53\u524d\u544a\u8b66\", TextType.SECTION_H2)\nemail.add_alert(\"\u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523072%\uff0c\u5efa\u8bae\u76d1\u63a7\", AlertType.WARNING, \"\u5185\u5b58\u544a\u8b66\")\n\nemail.export_html(\"monitoring_dashboard.html\")\nprint(\"\u2705 \u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f\u5df2\u751f\u6210\uff1amonitoring_dashboard.html\")\n</code></pre> \u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f \u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670807\u65e5 23:44:39 <p>\ud83c\udf9b\ufe0f \u7cfb\u7edf\u7efc\u5408\u76d1\u63a7\u4eea\u8868\u677f</p> <p>\u6700\u540e\u66f4\u65b0: 2025-07-07 23:44:39</p> Web\u670d\u52a1 \u6b63\u5e38 \u54cd\u5e94\u65f6\u95f4 120ms \u6570\u636e\u5e93 \u6b63\u5e38 \u8fde\u63a5\u6570 45/100 CPU\u4f7f\u7528\u7387 45% \u8d1f\u8f7d \u9002\u4e2d \u5185\u5b58\u4f7f\u7528 72% \u4f7f\u7528\u7387 \u504f\u9ad8 1. \ud83d\udea8 \u5f53\u524d\u544a\u8b66 \u26a0\ufe0f \u5185\u5b58\u544a\u8b66 \u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523072%\uff0c\u5efa\u8bae\u76d1\u63a7 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p> <p>\u4eea\u8868\u677f\u7279\u8272\uff1a - \u6a21\u5757\u5316\u8bbe\u8ba1 - \u5b9e\u65f6\u72b6\u6001\u5c55\u793a - \u591a\u7ef4\u5ea6\u76d1\u63a7 - \u54cd\u5e94\u5f0f\u5e03\u5c40</p>"},{"location":"zh/examples/system-monitoring/#_12","title":"\u5b66\u4e60\u603b\u7ed3","text":"<p>\u901a\u8fc7\u7cfb\u7edf\u76d1\u63a7\u793a\u4f8b\uff0c\u60a8\u5df2\u7ecf\u638c\u63e1\u4e86\uff1a</p>"},{"location":"zh/examples/system-monitoring/#_13","title":"\ud83c\udfaf \u76d1\u63a7\u6280\u80fd","text":"<ul> <li>\u8d44\u6e90\u76d1\u63a7 - CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u4f7f\u7528\u7387</li> <li>\u670d\u52a1\u76d1\u63a7 - \u5065\u5eb7\u68c0\u67e5\u548c\u72b6\u6001\u7ba1\u7406</li> <li>\u65e5\u5fd7\u5206\u6790 - \u81ea\u52a8\u5316\u65e5\u5fd7\u89e3\u6790\u548c\u7edf\u8ba1</li> <li>\u6027\u80fd\u76d1\u63a7 - \u6570\u636e\u5e93\u548c\u5e94\u7528\u6027\u80fd</li> </ul>"},{"location":"zh/examples/system-monitoring/#_14","title":"\ud83d\udee0\ufe0f \u6280\u672f\u8981\u70b9","text":"<ul> <li>\u5b9e\u65f6\u6570\u636e\u83b7\u53d6\u548c\u5c55\u793a</li> <li>\u667a\u80fd\u544a\u8b66\u9608\u503c\u8bbe\u7f6e</li> <li>\u591a\u670d\u52a1\u72b6\u6001\u805a\u5408</li> <li>\u53ef\u89c6\u5316\u76d1\u63a7\u4eea\u8868\u677f</li> </ul>"},{"location":"zh/examples/system-monitoring/#_15","title":"\ud83d\udca1 \u6700\u4f73\u5b9e\u8df5","text":"<ul> <li>\u5206\u5c42\u76d1\u63a7\u67b6\u6784</li> <li>\u81ea\u52a8\u5316\u5f02\u5e38\u68c0\u6d4b</li> <li>\u76f4\u89c2\u7684\u72b6\u6001\u5c55\u793a</li> <li>\u53ca\u65f6\u7684\u544a\u8b66\u901a\u77e5</li> </ul>"},{"location":"zh/examples/system-monitoring/#_16","title":"\ud83d\ude80 \u5e94\u7528\u573a\u666f","text":"<ul> <li>DevOps\u8fd0\u7ef4\u76d1\u63a7</li> <li>\u670d\u52a1\u5668\u8d44\u6e90\u7ba1\u7406</li> <li>\u5e94\u7528\u6027\u80fd\u76d1\u63a7</li> <li>\u7cfb\u7edf\u5065\u5eb7\u68c0\u67e5</li> </ul> <p>\u7ee7\u7eed\u5b66\u4e60 \u722c\u866b\u62a5\u544a \u548c \u5b9e\u9645\u5e94\u7528\uff0c\u63a2\u7d22\u66f4\u591a\u4e13\u4e1a\u5e94\u7528\uff01</p>"},{"location":"zh/getting-started/","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":"<p>\u6b22\u8fce\u4f7f\u7528 EmailWidget\uff01\u8fd9\u4e2a\u90e8\u5206\u5c06\u5e2e\u52a9\u4f60\u5728\u51e0\u5206\u949f\u5185\u4e0a\u624b\u4f7f\u7528EmailWidget\u521b\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u4e13\u4e1a\u90ae\u4ef6\u62a5\u544a\u3002</p>"},{"location":"zh/getting-started/#30","title":"\u26a1 30\u79d2\u4f53\u9a8c","text":"<p>\u5982\u679c\u4f60\u60f3\u7acb\u5373\u4f53\u9a8cEmailWidget\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a</p> Python<pre><code>from email_widget import Email, TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u6211\u7684\u7b2c\u4e00\u4efd\u62a5\u544a\")\n\n# \u6dfb\u52a0\u6807\u9898\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u6b22\u8fce\u4f7f\u7528 EmailWidget! \ud83c\udf89\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nfile_path = email.export_html(\"my_first_report.html\")\nprint(f\"\u62a5\u544a\u5df2\u751f\u6210: {file_path}\")\n</code></pre> <p>\u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801\uff0c\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u7f8e\u89c2\u7684HTML\u90ae\u4ef6\u6587\u4ef6\uff01</p> \u6211\u7684\u7b2c\u4e00\u4efd\u62a5\u544a \u6211\u7684\u7b2c\u4e00\u4efd\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670804\u65e5 10:00:48 <p>\u6b22\u8fce\u4f7f\u7528 EmailWidget! \ud83c\udf89</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/getting-started/#_2","title":"\ud83d\udcd6 \u76f8\u5173\u8d44\u6e90","text":"<p>\u9664\u4e86\u5feb\u901f\u5f00\u59cb\uff0c\u4f60\u53ef\u80fd\u8fd8\u5bf9\u8fd9\u4e9b\u5185\u5bb9\u611f\u5174\u8da3\uff1a</p>"},{"location":"zh/getting-started/#_3","title":"\ud83d\udcda \u6df1\u5165\u5b66\u4e60","text":"<ul> <li>\u7528\u6237\u6307\u5357 - \u8be6\u7ec6\u7684\u7ec4\u4ef6\u4f7f\u7528\u6559\u7a0b</li> <li>API\u53c2\u8003 - \u5b8c\u6574\u7684API\u6587\u6863</li> <li>\u793a\u4f8b\u4ee3\u7801 - \u5b9e\u9645\u5e94\u7528\u573a\u666f</li> </ul>"},{"location":"zh/getting-started/#_4","title":"\ud83e\udd1d \u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>GitHub Issues - \u95ee\u9898\u53cd\u9988</li> <li>GitHub Discussions - \u793e\u533a\u8ba8\u8bba</li> <li>Bilibili\u89c6\u9891 - \u89c6\u9891\u6559\u7a0b</li> </ul>"},{"location":"zh/getting-started/#_5","title":"\ud83d\udd27 \u5f00\u53d1\u76f8\u5173","text":"<ul> <li>\u5f00\u53d1\u6307\u5357 - \u53c2\u4e0e\u9879\u76ee\u5f00\u53d1</li> <li>\u8d21\u732e\u4ee3\u7801 - \u8d21\u732e\u4ee3\u7801\u6307\u5357</li> </ul>"},{"location":"zh/getting-started/concepts/","title":"\ud83d\udcda \u57fa\u672c\u6982\u5ff5","text":"<p>\u5728\u6df1\u5165\u4f7f\u7528EmailWidget\u4e4b\u524d\uff0c\u7406\u89e3\u5176\u6838\u5fc3\u6982\u5ff5\u5c06\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u6784\u5efa\u90ae\u4ef6\u62a5\u544a\u3002\u672c\u7ae0\u5c06\u4ecb\u7ecdEmailWidget\u7684\u8bbe\u8ba1\u7406\u5ff5\u548c\u5173\u952e\u6982\u5ff5\u3002</p>"},{"location":"zh/getting-started/concepts/#email","title":"\ud83d\udce7 Email\u7c7b\u8be6\u89e3","text":""},{"location":"zh/getting-started/concepts/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":"<p><code>Email</code>\u7c7b\u662fEmailWidget\u7684\u6838\u5fc3\uff0c\u5b83\u5145\u5f53\u6240\u6709Widget\u7684\u5bb9\u5668\u548c\u7ba1\u7406\u5668\uff1a</p> Python<pre><code>from email_widget import Email, TextWidget\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\nemail = Email(title=\"\u62a5\u544a\u6807\u9898\")\n\n# \u8bbe\u7f6e\u5143\u4fe1\u606f\nemail.set_subtitle(\"\u526f\u6807\u9898\")\nemail.set_footer(\"\u811a\u6ce8\u4fe1\u606f\")\n\n# \u7ba1\u7406Widget\nemail.add_widget(TextWidget('Hello, World!'))\nemail.remove_widget(\"Hello, World!\")\nemail.clear_widgets()\n\n# \u5bfc\u51fa\u7ed3\u679c\nhtml_content = email.export_str()\nfile_path = email.export_html(\"report.html\")\n</code></pre>"},{"location":"zh/getting-started/concepts/#_3","title":"\u751f\u547d\u5468\u671f","text":"<p>Email\u5bf9\u8c61\u7684\u5178\u578b\u751f\u547d\u5468\u671f\uff1a</p> <ol> <li>\u521b\u5efa - \u521d\u59cb\u5316\u90ae\u4ef6\u5bf9\u8c61</li> <li>\u914d\u7f6e - \u8bbe\u7f6e\u6807\u9898\u3001\u526f\u6807\u9898\u3001\u811a\u6ce8\u7b49</li> <li>\u6dfb\u52a0\u5185\u5bb9 - \u6dfb\u52a0\u5404\u79cdWidget\u7ec4\u4ef6</li> <li>\u6e32\u67d3 - \u751f\u6210HTML\u5185\u5bb9</li> <li>\u5bfc\u51fa - \u4fdd\u5b58\u4e3a\u6587\u4ef6\u6216\u83b7\u53d6\u5b57\u7b26\u4e32</li> </ol>"},{"location":"zh/getting-started/concepts/#_4","title":"\u7279\u6027\u529f\u80fd","text":"\u4fbf\u6377\u65b9\u6cd5Widget\u7ba1\u7406\u94fe\u5f0f\u8c03\u7528 Python<pre><code># \u76f4\u63a5\u6dfb\u52a0\u5e38\u7528\u5185\u5bb9\nemail.add_text(\"\u6807\u9898\", text_type=\"title_large\")\nemail.add_table_from_data(data, headers)\nemail.add_progress(75, \"\u5b8c\u6210\u5ea6\")\nemail.add_chart_from_plt(title=\"\u56fe\u8868\")\n</code></pre> Python<pre><code># \u83b7\u53d6Widget\nwidget = email.get_widget(\"my_widget_id\")\n\n# \u79fb\u9664Widget\nemail.remove_widget(\"widget_id\")\n\n# \u6e05\u7a7a\u6240\u6709Widget\nemail.clear_widgets()\n\n# \u83b7\u53d6Widget\u6570\u91cf\ncount = email.get_widget_count()\n</code></pre> Python<pre><code># \u6d41\u7545\u7684API\u8bbe\u8ba1\nemail = (Email(\"\u6807\u9898\")\n         .set_subtitle(\"\u526f\u6807\u9898\")\n         .set_footer(\"\u811a\u6ce8\")\n         .add_widget(widget1)\n         .add_widget(widget2))\n</code></pre>"},{"location":"zh/getting-started/concepts/#widget","title":"\ud83e\udde9 Widget\u7ec4\u4ef6\u7cfb\u7edf","text":""},{"location":"zh/getting-started/concepts/#_5","title":"\u8bbe\u8ba1\u7406\u5ff5","text":"<p>\u6240\u6709Widget\u7ec4\u4ef6\u90fd\u7ee7\u627f\u81ea<code>BaseWidget</code>\uff0c\u786e\u4fddAPI\u7684\u4e00\u81f4\u6027\uff1a</p> Python<pre><code>from email_widget.core.base import BaseWidget\n\nclass MyCustomWidget(BaseWidget):\n    def __init__(self):\n        super().__init__()\n        self.widget_type = \"custom\"\n\n    def render(self) -&gt; str:\n        # \u6e32\u67d3\u903b\u8f91\n        return self._render_template(\"custom.html\", context)\n</code></pre>"},{"location":"zh/getting-started/concepts/#_6","title":"\u516c\u5171\u7279\u6027","text":"<p>\u6240\u6709Widget\u90fd\u5177\u6709\u4ee5\u4e0b\u5171\u540c\u7279\u6027\uff1a</p> \u6807\u8bc6\u7ba1\u7406\u6a21\u677f\u6e32\u67d3 Python<pre><code># \u8bbe\u7f6e\u552f\u4e00ID\nwidget.set_widget_id(\"my_unique_id\")\n\n# \u83b7\u53d6ID\nwidget_id = widget.widget_id\n\n# \u83b7\u53d6\u7c7b\u578b\nwidget_type = widget.widget_type\n</code></pre> Python<pre><code># \u83b7\u53d6\u6e32\u67d3\u4e0a\u4e0b\u6587\ncontext = widget.get_template_context()\n\n# \u6e32\u67d3\u4e3aHTML\nhtml = widget.render_html()\n</code></pre>"},{"location":"zh/getting-started/concepts/#widget_1","title":"Widget\u5206\u7c7b","text":"<p>EmailWidget\u63d0\u4f9b12\u79cd\u4e13\u4e1a\u7ec4\u4ef6\uff0c\u6309\u529f\u80fd\u5206\u7c7b\uff1a</p>"},{"location":"zh/getting-started/concepts/#_7","title":"\ud83d\udcdd \u5185\u5bb9\u7ec4\u4ef6","text":"<ul> <li>TextWidget - \u6587\u672c\u5185\u5bb9\uff0c8\u79cd\u6837\u5f0f</li> <li>ImageWidget - \u56fe\u7247\u5c55\u793a\uff0c\u591a\u6e90\u652f\u6301</li> <li>QuoteWidget - \u5f15\u7528\u6837\u5f0f\uff0c\u4f5c\u8005\u4fe1\u606f</li> </ul>"},{"location":"zh/getting-started/concepts/#_8","title":"\ud83d\udcca \u6570\u636e\u7ec4\u4ef6","text":"<ul> <li>TableWidget - \u6570\u636e\u8868\u683c\uff0cDataFrame\u96c6\u6210</li> <li>ChartWidget - \u56fe\u8868\u5c55\u793a\uff0cmatplotlib\u652f\u6301</li> <li>LogWidget - \u65e5\u5fd7\u663e\u793a\uff0c\u7ea7\u522b\u5206\u7c7b</li> </ul>"},{"location":"zh/getting-started/concepts/#_9","title":"\ud83d\udcc8 \u6307\u6807\u7ec4\u4ef6","text":"<ul> <li>ProgressWidget - \u7ebf\u6027\u8fdb\u5ea6\u6761\uff0c5\u79cd\u4e3b\u9898</li> <li>CircularProgressWidget - \u5706\u5f62\u8fdb\u5ea6\uff0c\u591a\u79cd\u5c3a\u5bf8</li> <li>StatusWidget - \u72b6\u6001\u7ba1\u7406\uff0c\u52a8\u6001\u66f4\u65b0</li> </ul>"},{"location":"zh/getting-started/concepts/#_10","title":"\ud83c\udfa8 \u754c\u9762\u7ec4\u4ef6","text":"<ul> <li>AlertWidget - \u8b66\u544a\u63d0\u9192\uff0c5\u79cd\u7c7b\u578b</li> <li>CardWidget - \u4fe1\u606f\u5361\u7247\uff0c\u56fe\u6807\u652f\u6301</li> <li>ColumnWidget - \u5e03\u5c40\u5bb9\u5668\uff0c\u54cd\u5e94\u5f0f\u8bbe\u8ba1</li> </ul>"},{"location":"zh/getting-started/concepts/#_11","title":"\ud83c\udfaf \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/getting-started/concepts/#_12","title":"\u4ee3\u7801\u7ec4\u7ec7","text":"<p>\u5efa\u8bae\u7684\u4ee3\u7801\u7ec4\u7ec7\u65b9\u5f0f\uff1a</p> Python<pre><code># 1. \u5bfc\u5165\u5fc5\u8981\u7684\u5e93\nfrom email_widget import Email, TextWidget, TableWidget, EmailConfig\nfrom email_widget.core.enums import TextType\n\n\n# 2. \u6570\u636e\u51c6\u5907\ndef prepare_data():\n    return {\"sales\": [100, 200, 300]}\n\n\n# 3. \u90ae\u4ef6\u6784\u5efa\ndef build_email(data):\n    email = Email(\"\u9500\u552e\u62a5\u544a\")\n    # \u6dfb\u52a0\u5185\u5bb9\n    email.add_widget(\n        TextWidget().set_content(\"\u9500\u552e\u6570\u636e\u5206\u6790\").set_type(TextType.TITLE_LARGE)\n    )\n\n    return email\n\n\n# 4. \u4e3b\u51fd\u6570\ndef main():\n    data = prepare_data()\n    email = build_email(data)\n    email.export_html(\"report.html\")\n</code></pre>"},{"location":"zh/getting-started/concepts/#_13","title":"\ud83d\ude80 \u4e0b\u4e00\u6b65","text":"<p>\u73b0\u5728\u4f60\u5df2\u7ecf\u7406\u89e3\u4e86EmailWidget\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u53ef\u4ee5\uff1a</p> <ul> <li>\u67e5\u770b \u7528\u6237\u6307\u5357 \u5b66\u4e60\u5404\u7ec4\u4ef6\u8be6\u7ec6\u7528\u6cd5</li> <li>\u6d4f\u89c8 API\u53c2\u8003 \u4e86\u89e3\u5b8c\u6574API</li> <li>\u7814\u7a76 \u793a\u4f8b\u4ee3\u7801 \u5b66\u4e60\u5b9e\u9645\u5e94\u7528</li> <li>\u9605\u8bfb \u5f00\u53d1\u6307\u5357 \u53c2\u4e0e\u9879\u76ee\u5f00\u53d1</li> </ul>"},{"location":"zh/getting-started/faq/","title":"\u2753 \u5e38\u89c1\u95ee\u9898","text":"<p>\u8fd9\u91cc\u6536\u96c6\u4e86EmailWidget\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679c\u4f60\u9047\u5230\u7684\u95ee\u9898\u4e0d\u5728\u6b64\u5217\u8868\u4e2d\uff0c\u6b22\u8fce\u5728GitHub Issues\u4e2d\u63d0\u95ee\u3002</p>"},{"location":"zh/getting-started/faq/#_2","title":"\ud83d\ude80 \u5b89\u88c5\u76f8\u5173","text":""},{"location":"zh/getting-started/faq/#_3","title":"\u2753 \u5b89\u88c5\u5931\u8d25\uff1a\u6743\u9650\u4e0d\u8db3","text":"<p>\u95ee\u9898\uff1a\u5728Windows\u6216MacOS\u4e0a\u5b89\u88c5\u65f6\u63d0\u793a\u6743\u9650\u4e0d\u8db3</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> WindowsMacOS/Linux Batchfile<pre><code># \u65b9\u68481\uff1a\u4f7f\u7528\u7528\u6237\u5b89\u88c5\npip install --user EmailWidget\n\n# \u65b9\u68482\uff1a\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\u547d\u4ee4\u63d0\u793a\u7b26\n# \u53f3\u952e\u9009\u62e9\"\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\"\npip install EmailWidget\n\n# \u65b9\u68483\uff1a\u4f7f\u7528\u865a\u62df\u73af\u5883\npython -m venv email_env\nemail_env\\Scripts\\activate\npip install EmailWidget\n</code></pre> Bash<pre><code># \u65b9\u68481\uff1a\u4f7f\u7528\u7528\u6237\u5b89\u88c5\npip install --user EmailWidget\n\n# \u65b9\u68482\uff1a\u4f7f\u7528sudo\uff08\u4e0d\u63a8\u8350\uff09\nsudo pip install EmailWidget\n\n# \u65b9\u68483\uff1a\u4f7f\u7528\u865a\u62df\u73af\u5883\uff08\u63a8\u8350\uff09\npython3 -m venv email_env\nsource email_env/bin/activate\npip install EmailWidget\n</code></pre>"},{"location":"zh/getting-started/faq/#_4","title":"\u2753 \u5b89\u88c5\u6162\u6216\u5931\u8d25\uff1a\u7f51\u7edc\u95ee\u9898","text":"<p>\u95ee\u9898\uff1a\u4e0b\u8f7d\u901f\u5ea6\u6162\u6216\u8fde\u63a5\u8d85\u65f6</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> Bash<pre><code># \u4f7f\u7528\u56fd\u5185\u955c\u50cf\u6e90\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple EmailWidget\n\n# \u6216\u8005\u8bbe\u7f6e\u9ed8\u8ba4\u955c\u50cf\u6e90\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\npip install EmailWidget\n\n# \u5176\u4ed6\u955c\u50cf\u6e90\u9009\u62e9\n# \u963f\u91cc\u4e91\uff1ahttps://mirrors.aliyun.com/pypi/simple/\n# \u4e2d\u79d1\u5927\uff1ahttps://pypi.mirrors.ustc.edu.cn/simple/\n# \u534e\u4e3a\u4e91\uff1ahttps://repo.huaweicloud.com/repository/pypi/simple/\n</code></pre>"},{"location":"zh/getting-started/faq/#python","title":"\u2753 Python\u7248\u672c\u4e0d\u517c\u5bb9","text":"<p>\u95ee\u9898\uff1a\u63d0\u793aPython\u7248\u672c\u8fc7\u4f4e</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> Bash<pre><code># \u68c0\u67e5\u5f53\u524dPython\u7248\u672c\npython --version\n\n# EmailWidget\u9700\u8981Python 3.10+\n# \u5982\u679c\u7248\u672c\u8fc7\u4f4e\uff0c\u8bf7\u5347\u7ea7Python\u6216\u4f7f\u7528\u865a\u62df\u73af\u5883\n\n# \u4f7f\u7528\u7279\u5b9aPython\u7248\u672c\u521b\u5efa\u865a\u62df\u73af\u5883\npython3.10 -m venv email_env\nsource email_env/bin/activate  # Linux/MacOS\n# \u6216 email_env\\Scripts\\activate  # Windows\n\npip install EmailWidget\n</code></pre>"},{"location":"zh/getting-started/faq/#_5","title":"\ud83d\udcca \u56fe\u8868\u76f8\u5173","text":""},{"location":"zh/getting-started/faq/#_6","title":"\u2753 \u56fe\u8868\u4e2d\u6587\u5b57\u4f53\u663e\u793a\u4e3a\u65b9\u5757","text":"<p>\u95ee\u9898\uff1amatplotlib\u56fe\u8868\u4e2d\u7684\u4e2d\u6587\u663e\u793a\u4e3a\u65b9\u5757\u6216\u4e71\u7801</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <p>EmailWidget\u4f1a\u81ea\u52a8\u5904\u7406\u4e2d\u6587\u5b57\u4f53\uff0c\u4f46\u5982\u679c\u4ecd\u6709\u95ee\u9898\uff1a</p> Python<pre><code>import matplotlib.pyplot as plt\nfrom matplotlib import font_manager\n\n# \u65b9\u68481\uff1a\u8bbe\u7f6e\u7cfb\u7edf\u5b57\u4f53\nplt.rcParams['font.sans-serif'] = ['SimHei', 'Microsoft YaHei', 'DejaVu Sans']\nplt.rcParams['axes.unicode_minus'] = False\n\n# \u65b9\u68482\uff1a\u68c0\u67e5\u53ef\u7528\u5b57\u4f53\navailable_fonts = [f.name for f in font_manager.fontManager.ttflist]\nchinese_fonts = [f for f in available_fonts if '\u5fae\u8f6f\u96c5\u9ed1' in f or 'SimHei' in f]\nprint(\"\u53ef\u7528\u4e2d\u6587\u5b57\u4f53\uff1a\", chinese_fonts)\n\n# \u65b9\u68483\uff1a\u4f7f\u7528EmailWidget\u7684\u5b57\u4f53\u8bbe\u7f6e\nfrom email_widget import Email\nemail = Email(\"\u6d4b\u8bd5\")\nemail.config.set_font_family(\"Microsoft YaHei\")  # \u8fd9\u4f1a\u5f71\u54cd\u6574\u4e2a\u90ae\u4ef6\n</code></pre>"},{"location":"zh/getting-started/faq/#_7","title":"\ud83d\udc1b \u8c03\u8bd5\u76f8\u5173","text":""},{"location":"zh/getting-started/faq/#_8","title":"\u2753 \u5982\u4f55\u8c03\u8bd5\u6a21\u677f\u6e32\u67d3\u95ee\u9898","text":"<p>\u95ee\u9898\uff1a\u81ea\u5b9a\u4e49\u6a21\u677f\u4e0d\u80fd\u6b63\u786e\u6e32\u67d3</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> Python<pre><code># 1. \u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n\nfrom email_widget.core.logger import logger\nlogger.set_level(\"DEBUG\")\n\n# 2. \u68c0\u67e5\u6a21\u677f\u53d8\u91cf\nwidget = TextWidget()\ncontext = widget.get_template_context()\nprint(\"\u6a21\u677f\u4e0a\u4e0b\u6587\uff1a\", context)\n\n# 3. \u624b\u52a8\u6e32\u67d3\u6a21\u677f\nfrom email_widget.core.template_engine import TemplateEngine\nengine = TemplateEngine()\ntemplate = engine.get_template(\"text_widget.html\")\nhtml = template.render(**context)\nprint(\"\u6e32\u67d3\u7ed3\u679c\uff1a\", html)\n\n# 4. \u9a8c\u8bc1\u6a21\u677f\u8bed\u6cd5\ntry:\n    email.export_html(\"test.html\")\nexcept Exception as e:\n    print(f\"\u6e32\u67d3\u9519\u8bef\uff1a{e}\")\n    import traceback\n    traceback.print_exc()\n</code></pre>"},{"location":"zh/getting-started/faq/#_9","title":"\ud83d\udd17 \u96c6\u6210\u76f8\u5173","text":""},{"location":"zh/getting-started/faq/#jupyter-notebook","title":"\u2753 \u4e0eJupyter Notebook\u96c6\u6210","text":"<p>\u95ee\u9898\uff1a\u5728Jupyter\u4e2d\u4f7f\u7528EmailWidget\u7684\u6700\u4f73\u5b9e\u8df5</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> Python<pre><code># 1. \u5728Jupyter\u4e2d\u9884\u89c8HTML\nfrom IPython.display import HTML, display\n\nemail = Email(\"Jupyter\u6d4b\u8bd5\")\n# ... \u6dfb\u52a0\u5185\u5bb9\nhtml_content = email.export_str()\ndisplay(HTML(html_content))\n</code></pre>"},{"location":"zh/getting-started/faq/#pandas","title":"\u2753 \u4e0ePandas\u96c6\u6210","text":"<p>\u95ee\u9898\uff1a\u5982\u4f55\u66f4\u597d\u5730\u5904\u7406Pandas\u6570\u636e</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> Python<pre><code>import pandas as pd\nfrom email_widget.widgets import TableWidget\n\n# 1. \u76f4\u63a5\u4eceDataFrame\u521b\u5efa\u8868\u683c\ndf = pd.read_csv('data.csv')\ntable = TableWidget()\ntable.set_data_from_dataframe(df)\n\n# 3. \u6570\u636e\u9884\u5904\u7406\ndf_clean = df.dropna()  # \u5220\u9664\u7a7a\u503c\ndf_formatted = df_clean.round(2)  # \u683c\u5f0f\u5316\u6570\u5b57\ntable.set_data_from_dataframe(df_formatted)\n\n# 4. \u6dfb\u52a0\u6570\u636e\u6458\u8981\nsummary = df.describe()\nsummary_table = TableWidget()\nsummary_table.set_title(\"\u6570\u636e\u6458\u8981\")\nsummary_table.set_data_from_dataframe(summary)\n</code></pre>"},{"location":"zh/getting-started/faq/#_10","title":"\ud83c\udd98 \u83b7\u53d6\u66f4\u591a\u5e2e\u52a9","text":"<p>\u5982\u679c\u4ee5\u4e0aFAQ\u6ca1\u6709\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u83b7\u53d6\u5e2e\u52a9\uff1a</p>"},{"location":"zh/getting-started/faq/#_11","title":"\ud83d\udcd6 \u6587\u6863\u8d44\u6e90","text":"<ul> <li>\u7528\u6237\u6307\u5357 - \u8be6\u7ec6\u4f7f\u7528\u6559\u7a0b</li> <li>API\u53c2\u8003 - \u5b8c\u6574API\u6587\u6863</li> <li>\u793a\u4f8b\u4ee3\u7801 - \u5b9e\u9645\u5e94\u7528\u6848\u4f8b</li> </ul>"},{"location":"zh/getting-started/faq/#_12","title":"\ud83e\udd1d \u793e\u533a\u652f\u6301","text":"<ul> <li>GitHub Issues - \u95ee\u9898\u62a5\u544a\u548c\u529f\u80fd\u8bf7\u6c42</li> <li>GitHub Discussions - \u793e\u533a\u8ba8\u8bba</li> <li>Bilibili\u89c6\u9891 - \u89c6\u9891\u6559\u7a0b</li> </ul>"},{"location":"zh/getting-started/faq/#_13","title":"\ud83d\udca1 \u95ee\u9898\u53cd\u9988\u6a21\u677f","text":"<p>\u5728\u63d0\u4ea4\u95ee\u9898\u65f6\uff0c\u8bf7\u63d0\u4f9b\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> Markdown<pre><code>**\u73af\u5883\u4fe1\u606f**\n- EmailWidget\u7248\u672c\uff1a\n- Python\u7248\u672c\uff1a\n- \u64cd\u4f5c\u7cfb\u7edf\uff1a\n- \u76f8\u5173\u4f9d\u8d56\u7248\u672c\uff1a\n\n**\u95ee\u9898\u63cf\u8ff0**\n[\u8be6\u7ec6\u63cf\u8ff0\u9047\u5230\u7684\u95ee\u9898]\n\n**\u590d\u73b0\u6b65\u9aa4**\n1. \u7b2c\u4e00\u6b65\n2. \u7b2c\u4e8c\u6b65\n3. ...\n\n**\u671f\u671b\u884c\u4e3a**\n[\u63cf\u8ff0\u671f\u671b\u7684\u6b63\u786e\u884c\u4e3a]\n\n**\u5b9e\u9645\u884c\u4e3a**\n[\u63cf\u8ff0\u5b9e\u9645\u53d1\u751f\u7684\u60c5\u51b5]\n\n**\u4ee3\u7801\u793a\u4f8b**\n```python\n# \u6700\u5c0f\u590d\u73b0\u4ee3\u7801\n</code></pre> <p>\u9519\u8bef\u4fe1\u606f Text Only<pre><code>[\u7c98\u8d34\u5b8c\u6574\u7684\u9519\u8bef\u5806\u6808]\n</code></pre></p> <p>\u9644\u52a0\u4fe1\u606f [\u4efb\u4f55\u5176\u4ed6\u76f8\u5173\u4fe1\u606f] ```</p>"},{"location":"zh/getting-started/first-email/","title":"\ud83d\udce7 \u521b\u5efa\u7b2c\u4e00\u4e2a\u90ae\u4ef6","text":"<p>\u8fd9\u4e2a\u6559\u7a0b\u5c06\u6307\u5bfc\u4f60\u521b\u5efa\u7b2c\u4e00\u4e2aEmailWidget\u90ae\u4ef6\u62a5\u544a\u3002\u6211\u4eec\u5c06\u4ece\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u5f00\u59cb\uff0c\u9010\u6b65\u6dfb\u52a0\u66f4\u591a\u529f\u80fd\u3002</p>"},{"location":"zh/getting-started/first-email/#_2","title":"\ud83c\udfaf \u672c\u7ae0\u76ee\u6807","text":"<ul> <li>\u521b\u5efa\u57fa\u7840\u90ae\u4ef6\u5bf9\u8c61</li> <li>\u6dfb\u52a0\u6587\u672c\u3001\u8868\u683c\u3001\u56fe\u8868\u7b49\u7ec4\u4ef6</li> <li>\u5bfc\u51faHTML\u6587\u4ef6</li> <li>\u5c06\u90ae\u4ef6\u53d1\u9001\u5230\u90ae\u7bb1</li> </ul>"},{"location":"zh/getting-started/first-email/#_3","title":"\ud83d\ude80 \u7b2c\u4e00\u6b65\uff1a\u6700\u7b80\u5355\u7684\u90ae\u4ef6","text":"<p>\u8ba9\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u5f00\u59cb\uff1a</p> Python<pre><code>from email_widget import Email, TextWidget, TextType\n\nemail = Email(\"\u6211\u7684\u7b2c\u4e00\u4efd\u62a5\u544a\")\n\n# \u6dfb\u52a0\u6b22\u8fce\u6587\u672c\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u6b22\u8fce\u4f7f\u7528 EmailWidget! \ud83c\udf89\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nfile_path = email.export_html(\"first_email.html\")\nprint(f\"\u90ae\u4ef6\u5df2\u751f\u6210: {file_path}\")\n</code></pre> <p>\u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801\uff0c\u4f60\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u770b\u5230\u4e00\u4e2a\u540d\u4e3a <code>first_email.html</code> \u7684\u6587\u4ef6\u3002\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u5b83\uff0c\u4f60\u5c06\u770b\u5230\u4e00\u4e2a\u7f8e\u89c2\u7684\u90ae\u4ef6\u9875\u9762\uff01</p> <p></p> <p>\ud83c\udf89 \u606d\u559c\uff01</p> <p>\u4f60\u5df2\u7ecf\u6210\u529f\u521b\u5efa\u4e86\u7b2c\u4e00\u4e2aEmailWidget\u90ae\u4ef6\uff01</p>"},{"location":"zh/getting-started/first-email/#_4","title":"\ud83d\udcdd \u7b2c\u4e8c\u6b65\uff1a\u6dfb\u52a0\u66f4\u591a\u5185\u5bb9","text":"<p>\u73b0\u5728\u8ba9\u6211\u4eec\u6dfb\u52a0\u66f4\u591a\u5185\u5bb9\uff0c\u521b\u5efa\u4e00\u4e2a\u66f4\u5b8c\u6574\u7684\u62a5\u544a\uff1a</p> Python<pre><code>from email_widget import Email, TextWidget, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u526f\u6807\u9898\u548c\u811a\u6ce8\nemail = Email(\"\ud83d\udcca \u9500\u552e\u6570\u636e\u5468\u62a5\")\nemail.set_subtitle(\"2024\u5e74\u7b2c3\u5468\u9500\u552e\u60c5\u51b5\u6c47\u603b\")\nemail.set_footer(\"\u672c\u62a5\u544a\u7531\u9500\u552e\u56e2\u961f\u81ea\u52a8\u751f\u6210\")\n\n# 1. \u6dfb\u52a0\u4e3b\u6807\u9898\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u9500\u552e\u4e1a\u7ee9\u6982\u89c8\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# 2. \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\n    .set_value(85)\n    .set_label(\"\u672c\u5468\u76ee\u6807\u5b8c\u6210\u7387\")\n    .set_theme(ProgressTheme.SUCCESS)\n)\n\n# 3. \u6dfb\u52a0\u6570\u636e\u8868\u683c\ntable = TableWidget()\ntable.set_title(\"\ud83c\udfc6 \u9500\u552e\u6392\u884c\u699c\")\ntable.set_headers([\"\u9500\u552e\u5458\", \"\u9500\u552e\u989d\", \"\u5b8c\u6210\u7387\", \"\u72b6\u6001\"])\ntable.add_row([\"\u5f20\u4e09\", \"\u00a5125,000\", \"125%\", \"success\"])\ntable.add_row([\"\u674e\u56db\", \"\u00a598,000\", \"98%\", \"warning\"])\ntable.add_row([\"\u738b\u4e94\", \"\u00a587,000\", \"87%\", \"info\"])\nemail.add_widget(table)\n\n# 4. \u6dfb\u52a0\u603b\u7ed3\u6587\u672c\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u672c\u5468\u9500\u552e\u4e1a\u7ee9\u6574\u4f53\u8868\u73b0\u826f\u597d\uff0c\u8d85\u989d\u5b8c\u6210\u65e2\u5b9a\u76ee\u6807\u3002\")\n    .set_type(TextType.BODY)\n)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nfile_path = email.export_html(\"sales_report.html\")\nprint(f\"\u9500\u552e\u62a5\u544a\u5df2\u751f\u6210: {file_path}\")\n</code></pre> <p></p>"},{"location":"zh/getting-started/first-email/#_5","title":"\u53d1\u9001\u5230\u90ae\u7bb1","text":""},{"location":"zh/getting-started/first-email/#emailsender","title":"\u4f7f\u7528\u5185\u7f6e\u7684 <code>EmailSender</code> \u53d1\u9001\u90ae\u4ef6(\u63a8\u8350)","text":"<p>\u6700\u65b9\u4fbf\u7684\u65b9\u5f0f\u5c31\u662f\u76f4\u63a5\u4f7f\u7528 <code>EmailWidget</code> \u81ea\u5e26\u7684 <code>EmailSender</code> \u53d1\u9001\u90ae\u4ef6\uff0c\u53ea\u9700\u8981\u9009\u62e9\u5408\u9002\u7684 <code>EmailSender</code>\uff0c\u6700\u540e\u8c03\u7528 <code>send</code> \u65b9\u6cd5\u4f20\u5165 <code>Email</code> \u5bf9\u8c61\u5373\u53ef\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b</p> Python<pre><code>from email_widget import Email, QQEmailSender\n\nemail = Email(\"\u6b22\u8fce\u4f7f\u7528EmailWidget\")\n\nemail.add_card(\"Python\u7248\u672c\", \"\u60a8\u9700\u8981Python3.10\u6216\u4ee5\u4e0a\u624d\u80fd\u4f7f\u7528EmailWidget\", metadata={\"Python\u7248\u672c\": \"3.10+\"})\n\nemail.add_quote(\"EmailWidget\u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u548c\u53d1\u9001HTML\u90ae\u4ef6\u7684Python\u5e93\u3002\", \"EmailWidget\")\n\n# \u4e00\u884c\u4ee3\u7801\u6210\u529f\u53d1\u9001\u90ae\u4ef6\nQQEmailSender(\"\u4f60\u7684QQ\u90ae\u7bb1\", \"\u4f60\u7684QQ\u90ae\u7bb1\u6388\u6743\u7801\").send(email)\n</code></pre> <p>\u4e0b\u9762\u662f\u53d1\u9001\u90ae\u4ef6\u540e\u7684\u5b9e\u9645\u6548\u679c\uff0c\u53ef\u4ee5\u770b\u5230\u90ae\u4ef6\u5df2\u7ecf\u6210\u529f\u53d1\u9001\uff0c\u5e76\u4e14\u6210\u529f\u6837\u5f0f\u6b63\u5e38</p> <p></p>"},{"location":"zh/getting-started/first-email/#smtplib","title":"\u4f7f\u7528 smtplib \u6807\u51c6\u5e93","text":"<p>\u8fd9\u91cc\u4f7f\u7528\u6807\u51c6\u5e93 smtplib \u53d1\u9001\u90ae\u4ef6\uff0c\u5b9e\u9645\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7684\u90ae\u4ef6\u53d1\u9001\u5e93\uff0c\u4f8b\u5982 redmail</p> <p>\u6ce8\u610f</p> <p>yagmail \u56e0\u4e3a\u81ea\u5e26\u4e00\u4e2a\u5904\u7406 HTML \u7684\u8fc7\u7a0b\uff0c\u4f1a\u5904\u7406\u6389 EmailWidget \u7684 CSS \u6837\u5f0f\uff0c\u76ee\u524d\u65e0\u6cd5\u517c\u5bb9\uff0c\u8bf7\u4f7f\u7528\u9664\u4e86 yagmail \u4ee5\u5916\u7684\u90ae\u4ef6\u53d1\u9001\u5e93\uff0c\u4f8b\u5982 redmail</p> Python<pre><code>from email_widget import Email, TextWidget, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u526f\u6807\u9898\u548c\u811a\u6ce8\nemail = Email(\"\ud83d\udcca \u9500\u552e\u6570\u636e\u5468\u62a5\")\nemail.set_subtitle(\"2024\u5e74\u7b2c3\u5468\u9500\u552e\u60c5\u51b5\u6c47\u603b\")\nemail.set_footer(\"\u672c\u62a5\u544a\u7531\u9500\u552e\u56e2\u961f\u81ea\u52a8\u751f\u6210\")\n\n# 1. \u6dfb\u52a0\u4e3b\u6807\u9898\nemail.add_widget(\n    TextWidget().set_content(\"\u9500\u552e\u4e1a\u7ee9\u6982\u89c8\").set_type(TextType.TITLE_LARGE)\n)\n\n# 2. \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\n    .set_value(85)\n    .set_label(\"\u672c\u5468\u76ee\u6807\u5b8c\u6210\u7387\")\n    .set_theme(ProgressTheme.SUCCESS)\n)\n\n# 3. \u6dfb\u52a0\u6570\u636e\u8868\u683c\ntable = TableWidget()\ntable.set_title(\"\ud83c\udfc6 \u9500\u552e\u6392\u884c\u699c\")\ntable.set_headers([\"\u9500\u552e\u5458\", \"\u9500\u552e\u989d\", \"\u5b8c\u6210\u7387\", \"\u72b6\u6001\"])\ntable.add_row([\"\u5f20\u4e09\", \"\u00a5125,000\", \"125%\", \"success\"])\ntable.add_row([\"\u674e\u56db\", \"\u00a598,000\", \"98%\", \"warning\"])\ntable.add_row([\"\u738b\u4e94\", \"\u00a587,000\", \"87%\", \"info\"])\nemail.add_widget(table)\n\n# 4. \u6dfb\u52a0\u603b\u7ed3\u6587\u672c\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u672c\u5468\u9500\u552e\u4e1a\u7ee9\u6574\u4f53\u8868\u73b0\u826f\u597d\uff0c\u8d85\u989d\u5b8c\u6210\u65e2\u5b9a\u76ee\u6807\u3002\")\n    .set_type(TextType.BODY)\n)\n\n# \u7f16\u5199HTML\u7c7b\u578b\u7684\u90ae\u4ef6\u6b63\u6587\n# \u8fd9\u91cc\u4e0d\u5bfc\u51fa\u4e3a\u6587\u4ef6\uff0c\u800c\u662f\u4f7f\u7528 export_str \u76f4\u63a5\u5bfc\u51fa\u4e3a\u5b57\u7b26\u4e32\nmsg = MIMEText(email.export_str(), \"html\", \"utf-8\")\nmsg[\"Subject\"] = Header(\"\u90ae\u4ef6\u6807\u9898\", \"utf-8\")\nmsg[\"From\"] = \"\u4f60\u7684\u90ae\u7bb1@qq.com\"  # \u6dfb\u52a0\u53d1\u4ef6\u4eba\nmsg[\"To\"] = \"\u4f60\u7684\u90ae\u7bb1@qq.com\"  # \u6dfb\u52a0\u6536\u4ef6\u4eba\n\n# \u8fde\u63a5\u53d1\u9001\u90ae\u4ef6(\u4f7f\u7528QQ\u90ae\u7bb1\u4e3a\u4f8b)\nsmtp = smtplib.SMTP_SSL(\"smtp.qq.com\", 465)\nsmtp.login(\"\u4f60\u7684\u90ae\u7bb1@qq.com\", \"jjhbkryjybwjbjbh\")\nsmtp.sendmail(\"\u4f60\u7684\u90ae\u7bb1@qq.com\", \"\u4f60\u7684\u90ae\u7bb1@qq.com\", msg.as_string())\nsmtp.quit()\n</code></pre> <p>\u8fd0\u884c\u5b8c\u6bd5\u4e4b\u540e\u67e5\u770b\u90ae\u7bb1\u5373\u53ef\u53d1\u73b0\u90ae\u4ef6\u5df2\u7ecf\u88ab\u6210\u529f\u53d1\u9001\u4e86</p> <p></p> <p>\u540c\u65f6\u5728\u624b\u673a\u7aef\u67e5\u770b\u4e5f\u80fd\u770b\u5230\u6f02\u4eae\u7684\u62a5\u544a</p> <p></p>"},{"location":"zh/getting-started/first-email/#redmail","title":"\u4f7f\u7528 redmail \u53d1\u9001\u90ae\u4ef6","text":"<p>\u4f7f\u7528 redmail \u53d1\u9001\u90ae\u4ef6\u76f8\u5bf9\u800c\u8a00\u66f4\u52a0\u7b80\u5355\uff0c\u4f46\u662f\u9700\u8981\u5b89\u88c5\u989d\u5916\u7684\u4f9d\u8d56</p> Bash<pre><code>pip install redmail\n</code></pre> Python<pre><code>from redmail import EmailSender\nimport os\nfrom smtplib import SMTP_SSL\nfrom email_widget import Email, TextWidget, TableWidget, ProgressWidget\nfrom email_widget.core.enums import TextType, ProgressTheme\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u526f\u6807\u9898\u548c\u811a\u6ce8\nemail = Email(\"\ud83d\udcca \u9500\u552e\u6570\u636e\u5468\u62a5\")\nemail.set_subtitle(\"2024\u5e74\u7b2c3\u5468\u9500\u552e\u60c5\u51b5\u6c47\u603b\")\nemail.set_footer(\"\u672c\u62a5\u544a\u7531\u9500\u552e\u56e2\u961f\u81ea\u52a8\u751f\u6210\")\n\n# 1. \u6dfb\u52a0\u4e3b\u6807\u9898\nemail.add_widget(\n    TextWidget().set_content(\"\u9500\u552e\u4e1a\u7ee9\u6982\u89c8\").set_type(TextType.TITLE_LARGE)\n)\n\n# 2. \u6dfb\u52a0\u8fdb\u5ea6\u6307\u6807\nemail.add_widget(\n    ProgressWidget()\n    .set_value(85)\n    .set_label(\"\u672c\u5468\u76ee\u6807\u5b8c\u6210\u7387\")\n    .set_theme(ProgressTheme.SUCCESS)\n)\n\n# 3. \u6dfb\u52a0\u6570\u636e\u8868\u683c\ntable = TableWidget()\ntable.set_title(\"\ud83c\udfc6 \u9500\u552e\u6392\u884c\u699c\")\ntable.set_headers([\"\u9500\u552e\u5458\", \"\u9500\u552e\u989d\", \"\u5b8c\u6210\u7387\", \"\u72b6\u6001\"])\ntable.add_row([\"\u5f20\u4e09\", \"\u00a5125,000\", \"125%\", \"success\"])\ntable.add_row([\"\u674e\u56db\", \"\u00a598,000\", \"98%\", \"warning\"])\ntable.add_row([\"\u738b\u4e94\", \"\u00a587,000\", \"87%\", \"info\"])\nemail.add_widget(table)\n\n# 4. \u6dfb\u52a0\u603b\u7ed3\u6587\u672c\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u672c\u5468\u9500\u552e\u4e1a\u7ee9\u6574\u4f53\u8868\u73b0\u826f\u597d\uff0c\u8d85\u989d\u5b8c\u6210\u65e2\u5b9a\u76ee\u6807\u3002\")\n    .set_type(TextType.BODY)\n)\n\n# \u914d\u7f6eQQ\u90ae\u7bb1\u53d1\u9001\u5668\nemail_sender = EmailSender(\n    host=\"smtp.qq.com\",\n    port=465,\n    username=\"\u4f60\u7684\u90ae\u7bb1@qq.com\",  # \u66ff\u6362\u4e3a\u4f60\u7684QQ\u90ae\u7bb1\n    password=\"\u6388\u6743\u7801\",  # SMTP\u6388\u6743\u7801\n    use_starttls=False,\n    cls_smtp=SMTP_SSL,\n)\n\n# \u53d1\u9001\u90ae\u4ef6\nemail_sender.send(\n    subject=\"HTML\u6d4b\u8bd5\u90ae\u4ef6\",\n    sender=\"\u4f60\u7684\u90ae\u7bb1@qq.com\",  # \u66ff\u6362\u4e3a\u4f60\u7684QQ\u90ae\u7bb1\n    receivers=[\"\u4f60\u7684\u90ae\u7bb1@qq.com\"],  # \u66ff\u6362\u4e3a\u63a5\u6536\u90ae\u4ef6\u7684\u90ae\u7bb1\n    html=email.export_str(),\n)\n\nprint(\"\u90ae\u4ef6\u53d1\u9001\u6210\u529f\uff01\")\n</code></pre>"},{"location":"zh/getting-started/first-email/#_6","title":"\ud83d\ude80 \u4e0b\u4e00\u6b65","text":"<p>\u73b0\u5728\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86\u57fa\u7840\u7528\u6cd5\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5b66\u4e60\uff1a</p> <ul> <li>\u57fa\u672c\u6982\u5ff5 - \u6df1\u5165\u7406\u89e3EmailWidget\u7684\u8bbe\u8ba1\u7406\u5ff5</li> <li>\u7528\u6237\u6307\u5357 - \u5b66\u4e60\u6240\u6709\u7ec4\u4ef6\u7684\u8be6\u7ec6\u7528\u6cd5</li> <li>\u793a\u4f8b\u4ee3\u7801 - \u67e5\u770b\u66f4\u591a\u5b9e\u9645\u5e94\u7528\u573a\u666f</li> </ul> <p>\u9047\u5230\u95ee\u9898\uff1f</p> <p>\u5982\u679c\u5728\u521b\u5efa\u7b2c\u4e00\u4e2a\u90ae\u4ef6\u65f6\u9047\u5230\u4efb\u4f55\u95ee\u9898\uff0c\u53ef\u4ee5\uff1a</p> <ul> <li>\u67e5\u770b \u5e38\u89c1\u95ee\u9898</li> <li>\u5728 GitHub Issues \u63d0\u95ee</li> <li>\u53c2\u8003 API\u6587\u6863 \u4e86\u89e3\u8be6\u7ec6\u7528\u6cd5 </li> </ul>"},{"location":"zh/getting-started/installation/","title":"\ud83d\udce6 \u5b89\u88c5\u6307\u5357","text":""},{"location":"zh/getting-started/installation/#_2","title":"\u7cfb\u7edf\u8981\u6c42","text":"<p>\u73af\u5883\u8981\u6c42</p> <ul> <li>Python: 3.10 \u6216\u66f4\u9ad8\u7248\u672c</li> <li>\u64cd\u4f5c\u7cfb\u7edf: Windows, macOS, Linux</li> <li>\u5185\u5b58: \u5efa\u8bae 512MB \u4ee5\u4e0a\u53ef\u7528\u5185\u5b58</li> </ul>"},{"location":"zh/getting-started/installation/#_3","title":"\u5b89\u88c5\u65b9\u5f0f","text":""},{"location":"zh/getting-started/installation/#pip","title":"\ud83d\ude80 \u4f7f\u7528 pip \u5b89\u88c5\uff08\u63a8\u8350\uff09","text":"\u6700\u65b0\u7a33\u5b9a\u7248\u6307\u5b9a\u7248\u672c\u5347\u7ea7\u5230\u6700\u65b0\u7248 Bash<pre><code>pip install EmailWidget\n</code></pre> Bash<pre><code>pip install EmailWidget==0.1.0\n</code></pre> Bash<pre><code>pip install EmailWidget -U\n</code></pre>"},{"location":"zh/getting-started/installation/#_4","title":"\ud83d\udd27 \u4ece\u6e90\u7801\u5b89\u88c5","text":"<p>\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u6700\u65b0\u7684\u5f00\u53d1\u7248\u672c\u6216\u53c2\u4e0e\u5f00\u53d1\uff1a</p> Bash<pre><code># \u514b\u9686\u4ed3\u5e93\ngit clone https://github.com/271374667/EmailWidget.git\ncd EmailWidget\n\n# \u5b89\u88c5\u5f00\u53d1\u4f9d\u8d56\npip install -e \".[dev]\"\n</code></pre>"},{"location":"zh/getting-started/installation/#_5","title":"\u9a8c\u8bc1\u5b89\u88c5","text":"<p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\uff1a</p>"},{"location":"zh/getting-started/installation/#1","title":"1. \u5bfc\u5165\u6d4b\u8bd5","text":"Python<pre><code>try:\n    from email_widget import Email\n    from email_widget.widgets import TextWidget\n    print(\"\u2705 EmailWidget \u5b89\u88c5\u6210\u529f\uff01\")\nexcept ImportError as e:\n    print(f\"\u274c \u5b89\u88c5\u5931\u8d25: {e}\")\n</code></pre>"},{"location":"zh/getting-started/installation/#2","title":"2. \u7248\u672c\u68c0\u67e5","text":"Python<pre><code>import email_widget\nprint(f\"EmailWidget \u7248\u672c: {email_widget.__version__}\")\n</code></pre>"},{"location":"zh/getting-started/installation/#3","title":"3. \u521b\u5efa\u6d4b\u8bd5\u90ae\u4ef6","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u6d4b\u8bd5\u90ae\u4ef6\nemail = Email(\"\u5b89\u88c5\u6d4b\u8bd5\")\nemail.add_widget(\n    TextWidget()\n    .set_content(\"EmailWidget \u5b89\u88c5\u6210\u529f\uff01\ud83c\udf89\")\n    .set_type(TextType.TITLE_LARGE)\n)\n\n# \u5bfc\u51fa\u6d4b\u8bd5\u6587\u4ef6\nfile_path = email.export_html(\"installation_test.html\")\nprint(f\"\u6d4b\u8bd5\u6587\u4ef6\u5df2\u751f\u6210: {file_path}\")\n</code></pre>"},{"location":"zh/getting-started/installation/#_6","title":"\u53ef\u9009\u4f9d\u8d56","text":"<p>EmailWidget \u7684\u4e00\u4e9b\u529f\u80fd\u9700\u8981\u989d\u5916\u7684\u4f9d\u8d56\u5305\uff1a</p>"},{"location":"zh/getting-started/installation/#_7","title":"\ud83d\udcca \u56fe\u8868\u529f\u80fd","text":"<p>\u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u56fe\u8868\u7ec4\u4ef6(\u8fd9\u4e00\u90e8\u5206\u7684\u5185\u5bb9\u6309\u9700\u5b89\u88c5\uff0c\u9ed8\u8ba4\u4e0d\u4f1a\u81ea\u5e26)\uff1a</p> Bash<pre><code>pip install matplotlib seaborn\n</code></pre>"},{"location":"zh/getting-started/installation/#_8","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/getting-started/installation/#_9","title":"\u2753 \u5b89\u88c5\u5931\u8d25\u600e\u4e48\u529e\uff1f","text":"\u6743\u9650\u95ee\u9898\u7f51\u7edc\u95ee\u9898Python \u7248\u672c\u95ee\u9898 Bash<pre><code># \u4f7f\u7528 --user \u53c2\u6570\npip install --user EmailWidget\n\n# \u6216\u8005\u4f7f\u7528\u865a\u62df\u73af\u5883\npython -m venv email_widget_env\nsource email_widget_env/bin/activate  # Linux/macOS\n# \u6216 email_widget_env\\Scripts\\activate  # Windows\npip install EmailWidget\n</code></pre> Bash<pre><code># \u4f7f\u7528\u56fd\u5185\u955c\u50cf\u6e90\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple EmailWidget\n</code></pre> Bash<pre><code># \u68c0\u67e5 Python \u7248\u672c\npython --version\n\n# \u5982\u679c\u7248\u672c\u8fc7\u4f4e\uff0c\u8bf7\u5347\u7ea7\u5230 Python 3.10+\n</code></pre>"},{"location":"zh/getting-started/installation/#_10","title":"\u2753 \u56fe\u8868\u4e0d\u80fd\u6b63\u5e38\u663e\u793a\u4e2d\u6587\uff1f","text":"<p>\u8fd9\u901a\u5e38\u662f\u5b57\u4f53\u914d\u7f6e\u95ee\u9898\uff1a</p> Python<pre><code># \u624b\u52a8\u914d\u7f6e\u4e2d\u6587\u5b57\u4f53\nimport matplotlib.pyplot as plt\nplt.rcParams['font.sans-serif'] = ['SimHei', 'Microsoft YaHei']\nplt.rcParams['axes.unicode_minus'] = False\n</code></pre> <p>EmailWidget \u4f1a\u81ea\u52a8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u5982\u679c\u4ecd\u6709\u95ee\u9898\uff0c\u8bf7\u68c0\u67e5\u7cfb\u7edf\u662f\u5426\u5b89\u88c5\u4e86\u4e2d\u6587\u5b57\u4f53\u3002</p>"},{"location":"zh/getting-started/installation/#jupyter-notebook","title":"\u2753 \u5728 Jupyter Notebook \u4e2d\u4f7f\u7528","text":"<p>EmailWidget \u5b8c\u5168\u517c\u5bb9 Jupyter Notebook\uff1a</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TextWidget\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"Jupyter \u6d4b\u8bd5\")\nemail.add_widget(TextWidget().set_content(\"\u5728 Jupyter \u4e2d\u4f7f\u7528 EmailWidget\"))\n\n# \u9884\u89c8 HTML\uff08\u5728 Jupyter \u4e2d\u76f4\u63a5\u663e\u793a\uff09\nfrom IPython.display import HTML\nHTML(email.export_str())\n</code></pre>"},{"location":"zh/getting-started/installation/#_11","title":"\u4e0b\u4e00\u6b65","text":"<p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f60\u53ef\u4ee5\uff1a</p> <ol> <li>\ud83d\udcda \u521b\u5efa\u7b2c\u4e00\u4e2a\u90ae\u4ef6 - 5\u5206\u949f\u5feb\u901f\u4e0a\u624b</li> <li>\ud83d\udcd6 \u4e86\u89e3\u57fa\u672c\u6982\u5ff5 - \u7406\u89e3\u6838\u5fc3\u6982\u5ff5</li> <li>\ud83d\udca1 \u67e5\u770b\u793a\u4f8b\u4ee3\u7801 - \u5b66\u4e60\u5b9e\u9645\u7528\u6cd5</li> </ol> <p>\u9700\u8981\u5e2e\u52a9\uff1f</p> <p>\u5982\u679c\u9047\u5230\u4efb\u4f55\u5b89\u88c5\u95ee\u9898\uff0c\u6b22\u8fce\u5728 GitHub Issues \u4e2d\u63d0\u95ee\uff01 </p>"},{"location":"zh/user-guide/","title":"\u7528\u6237\u6307\u5357","text":"<p>\u6b22\u8fce\u4f7f\u7528 EmailWidget \u7528\u6237\u6307\u5357\uff01\u8fd9\u4e2a\u5168\u9762\u7684\u6307\u5357\u5c06\u5e2e\u52a9\u60a8\u638c\u63e1 EmailWidget \u7684\u6240\u6709\u529f\u80fd\uff0c\u4ece\u57fa\u7840\u6982\u5ff5\u5230\u9ad8\u7ea7\u7528\u6cd5\u3002</p>"},{"location":"zh/user-guide/#_2","title":"\ud83d\udcda \u5b66\u4e60\u8def\u5f84","text":""},{"location":"zh/user-guide/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":"<p>\u5982\u679c\u60a8\u662f\u65b0\u7528\u6237\uff0c\u5efa\u8bae\u6309\u4ee5\u4e0b\u987a\u5e8f\u9605\u8bfb\uff1a</p> <ol> <li>\u6838\u5fc3\u7c7b - \u4e86\u89e3 EmailWidget \u7684\u57fa\u7840\u67b6\u6784</li> <li>\u7ec4\u4ef6\u6982\u89c8 - \u4e86\u89e3\u6240\u6709\u53ef\u7528\u7684\u7ec4\u4ef6\u7c7b\u578b</li> <li>\u6587\u672c\u7ec4\u4ef6 - \u4ece\u6700\u57fa\u7840\u7684\u6587\u672c\u7ec4\u4ef6\u5f00\u59cb</li> </ol>"},{"location":"zh/user-guide/#_4","title":"\ud83c\udfd7\ufe0f \u7cfb\u7edf\u67b6\u6784","text":"<p>EmailWidget \u91c7\u7528\u7ec4\u4ef6\u5316\u67b6\u6784\uff0c\u8ba9\u60a8\u53ef\u4ee5\u7075\u6d3b\u5730\u6784\u5efa\u5404\u79cd\u7c7b\u578b\u7684\u90ae\u4ef6\u5185\u5bb9\uff1a</p> Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TextWidget, TableWidget, ChartWidget, ButtonWidget\n\n# \u521b\u5efa\u90ae\u4ef6\u5bb9\u5668\nemail = Email(\"\u6570\u636e\u62a5\u544a\")\n\n# \u6dfb\u52a0\u7ec4\u4ef6\nemail.add_widget(TextWidget().set_content(\"\u672c\u5468\u6570\u636e\u6982\u89c8\"))\nemail.add_widget(TableWidget().set_headers([\"\u9879\u76ee\", \"\u6570\u503c\"]))\nemail.add_widget(ChartWidget().set_image_url(\"chart.png\"))\nemail.add_button(\"\u67e5\u770b\u5b8c\u6574\u62a5\u544a\", \"https://dashboard.example.com\")\n\n# \u751f\u6210HTML\nhtml = email.render_html()\n</code></pre>"},{"location":"zh/user-guide/#_5","title":"\ud83d\udcca \u7ec4\u4ef6\u7c7b\u578b\u4e00\u89c8","text":"\u7ec4\u4ef6\u7c7b\u578b \u7528\u9014 \u793a\u4f8b\u573a\u666f \u6587\u672c\u7ec4\u4ef6 \u663e\u793a\u6587\u672c\u5185\u5bb9 \u6807\u9898\u3001\u8bf4\u660e\u3001\u5907\u6ce8 \u8868\u683c\u7ec4\u4ef6 \u5c55\u793a\u7ed3\u6784\u5316\u6570\u636e \u6570\u636e\u62a5\u544a\u3001\u7edf\u8ba1\u8868\u683c \u56fe\u8868\u7ec4\u4ef6 \u53ef\u89c6\u5316\u6570\u636e \u8d8b\u52bf\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u997c\u56fe \u8fdb\u5ea6\u7ec4\u4ef6 \u663e\u793a\u8fdb\u5ea6\u72b6\u6001 \u4efb\u52a1\u5b8c\u6210\u5ea6\u3001\u7cfb\u7edf\u8d1f\u8f7d \u72b6\u6001\u7ec4\u4ef6 \u5c55\u793a\u72b6\u6001\u4fe1\u606f \u7cfb\u7edf\u76d1\u63a7\u3001\u5065\u5eb7\u68c0\u67e5 \u5e03\u5c40\u7ec4\u4ef6 \u7ec4\u7ec7\u9875\u9762\u5e03\u5c40 \u591a\u5217\u5e03\u5c40\u3001\u5206\u7ec4\u663e\u793a \u6309\u94ae\u7ec4\u4ef6 \u7528\u6237\u4ea4\u4e92\u64cd\u4f5c \u94fe\u63a5\u8df3\u8f6c\u3001\u884c\u52a8\u6309\u94ae \u5176\u4ed6\u7ec4\u4ef6 \u7279\u6b8a\u529f\u80fd \u5f15\u7528\u3001\u8b66\u544a\u3001\u5361\u7247"},{"location":"zh/user-guide/#_6","title":"\ud83c\udfa8 \u8bbe\u8ba1\u7406\u5ff5","text":"<p>EmailWidget \u9075\u5faa\u4ee5\u4e0b\u8bbe\u8ba1\u539f\u5219\uff1a</p>"},{"location":"zh/user-guide/#_7","title":"\ud83d\udcf1 \u90ae\u4ef6\u517c\u5bb9\u6027\u4f18\u5148","text":"<ul> <li>\u4f7f\u7528\u8868\u683c\u5e03\u5c40\u786e\u4fdd\u5728\u5404\u79cd\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u6b63\u786e\u663e\u793a</li> <li>\u907f\u514d\u73b0\u4ee3CSS\u7279\u6027\uff0c\u786e\u4fdd\u5e7f\u6cdb\u517c\u5bb9\u6027</li> <li>\u5185\u8054\u6837\u5f0f\u4fdd\u8bc1\u6e32\u67d3\u4e00\u81f4\u6027</li> </ul>"},{"location":"zh/user-guide/#_8","title":"\ud83d\udd27 \u7b80\u5355\u6613\u7528","text":"<ul> <li>\u94fe\u5f0fAPI\u8bbe\u8ba1\uff0c\u4ee3\u7801\u7b80\u6d01\u76f4\u89c2</li> <li>\u5408\u7406\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5f00\u7bb1\u5373\u7528</li> <li>\u4e30\u5bcc\u7684\u914d\u7f6e\u9009\u9879\uff0c\u6ee1\u8db3\u5b9a\u5236\u9700\u6c42</li> </ul>"},{"location":"zh/user-guide/#_9","title":"\ud83d\udee1\ufe0f \u5b89\u5168\u53ef\u9760","text":"<ul> <li>\u8f93\u5165\u9a8c\u8bc1\u786e\u4fdd\u6570\u636e\u5b89\u5168</li> <li>\u9519\u8bef\u5904\u7406\u4fdd\u8bc1\u7cfb\u7edf\u7a33\u5b9a</li> <li>\u65e5\u5fd7\u8bb0\u5f55\u4fbf\u4e8e\u95ee\u9898\u6392\u67e5</li> </ul>"},{"location":"zh/user-guide/#_10","title":"\ud83d\udd27 \u6838\u5fc3\u7279\u6027","text":""},{"location":"zh/user-guide/#_11","title":"\u2728 \u6a21\u677f\u5f15\u64ce","text":"<ul> <li>\u57fa\u4e8e Jinja2 \u7684\u5f3a\u5927\u6a21\u677f\u7cfb\u7edf</li> <li>\u652f\u6301\u6761\u4ef6\u6e32\u67d3\u548c\u5faa\u73af</li> <li>\u6a21\u677f\u7f13\u5b58\u63d0\u5347\u6027\u80fd</li> </ul>"},{"location":"zh/user-guide/#_12","title":"\ud83d\uddbc\ufe0f \u56fe\u7247\u5904\u7406","text":"<ul> <li>\u667a\u80fd\u56fe\u7247\u7f13\u5b58\u673a\u5236</li> <li>\u591a\u79cd\u56fe\u7247\u683c\u5f0f\u652f\u6301</li> <li>\u81ea\u52a8\u4f18\u5316\u56fe\u7247\u5927\u5c0f</li> </ul>"},{"location":"zh/user-guide/#_13","title":"\ud83d\udcdd \u65e5\u5fd7\u7cfb\u7edf","text":"<ul> <li>\u5206\u7ea7\u65e5\u5fd7\u8bb0\u5f55</li> <li>\u73af\u5883\u53d8\u91cf\u63a7\u5236</li> <li>\u4fbf\u4e8e\u8c03\u8bd5\u548c\u76d1\u63a7</li> </ul>"},{"location":"zh/user-guide/#_14","title":"\u26a1 \u6027\u80fd\u4f18\u5316","text":"<ul> <li>LRU\u7f13\u5b58\u7b56\u7565</li> <li>\u6a21\u677f\u9884\u7f16\u8bd1</li> <li>\u5185\u5b58\u4f7f\u7528\u4f18\u5316</li> </ul>"},{"location":"zh/user-guide/#_15","title":"\ud83c\udfaf \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/#_16","title":"\ud83d\udcdd \u5185\u5bb9\u7ec4\u7ec7","text":"<ol> <li>\u903b\u8f91\u5206\u5c42: \u6309\u91cd\u8981\u6027\u7ec4\u7ec7\u5185\u5bb9</li> <li>\u9002\u5ea6\u5206\u6bb5: \u907f\u514d\u5355\u4e00\u7ec4\u4ef6\u5185\u5bb9\u8fc7\u591a</li> <li>\u6e05\u6670\u6807\u9898: \u4f7f\u7528\u5c42\u6b21\u5316\u7684\u6807\u9898\u7ed3\u6784</li> </ol>"},{"location":"zh/user-guide/#_17","title":"\ud83c\udfa8 \u89c6\u89c9\u8bbe\u8ba1","text":"<ol> <li>\u4fdd\u6301\u4e00\u81f4: \u7edf\u4e00\u7684\u5b57\u4f53\u548c\u989c\u8272\u65b9\u6848</li> <li>\u5408\u7406\u7559\u767d: \u9002\u5f53\u7684\u95f4\u8ddd\u63d0\u5347\u9605\u8bfb\u4f53\u9a8c</li> <li>\u7a81\u51fa\u91cd\u70b9: \u4f7f\u7528\u989c\u8272\u548c\u5b57\u91cd\u5f3a\u8c03\u5173\u952e\u4fe1\u606f</li> </ol>"},{"location":"zh/user-guide/#_18","title":"\ud83d\udd27 \u4ee3\u7801\u8d28\u91cf","text":"<ol> <li>\u53c2\u6570\u9a8c\u8bc1: \u4f7f\u7528\u5185\u7f6e\u9a8c\u8bc1\u5668\u786e\u4fdd\u6570\u636e\u6709\u6548\u6027</li> <li>\u9519\u8bef\u5904\u7406: \u59a5\u5584\u5904\u7406\u5f02\u5e38\u60c5\u51b5</li> <li>\u6027\u80fd\u8003\u8651: \u907f\u514d\u5728\u5faa\u73af\u4e2d\u521b\u5efa\u5927\u91cf\u5bf9\u8c61</li> </ol>"},{"location":"zh/user-guide/#_19","title":"\ud83c\udd98 \u83b7\u53d6\u5e2e\u52a9","text":"<p>\u5982\u679c\u60a8\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff1a</p> <ol> <li>\ud83d\udcd6 \u67e5\u770b \u5e38\u89c1\u95ee\u9898</li> <li>\ud83d\udd0d \u641c\u7d22 API \u53c2\u8003 \u83b7\u53d6\u8be6\u7ec6\u4fe1\u606f</li> <li>\ud83d\udca1 \u53c2\u8003 \u793a\u4f8b\u4ee3\u7801 \u5bfb\u627e\u7075\u611f</li> <li>\ud83d\udc1b \u5728 GitHub \u63d0\u4ea4\u95ee\u9898</li> </ol> <p>\u73b0\u5728\u5f00\u59cb\u60a8\u7684 EmailWidget \u5b66\u4e60\u4e4b\u65c5\u5427\uff01\u5efa\u8bae\u4ece \u6838\u5fc3\u7c7b \u5f00\u59cb\u3002 </p>"},{"location":"zh/user-guide/alert-widget/","title":"AlertWidget \u8b66\u544a\u7ec4\u4ef6","text":"<p>AlertWidget \u662f\u4e00\u4e2aGitHub\u98ce\u683c\u7684\u8b66\u544a\u6846\u7ec4\u4ef6\uff0c\u7528\u4e8e\u663e\u793a\u5404\u79cd\u7c7b\u578b\u7684\u63d0\u793a\u4fe1\u606f\u3002\u5b83\u652f\u6301\u591a\u79cd\u8b66\u544a\u7ea7\u522b\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u5bf9\u5e94\u7684\u989c\u8272\u4e3b\u9898\u548c\u56fe\u6807\uff0c\u80fd\u591f\u6709\u6548\u5730\u5438\u5f15\u7528\u6237\u6ce8\u610f\u529b\u5e76\u4f20\u8fbe\u91cd\u8981\u4fe1\u606f\u3002</p>"},{"location":"zh/user-guide/alert-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c82. \u8b66\u544a\u7ec4\u4ef6\u7c7b\u578b\u5c55\u793a","text":"\u8b66\u544a\u7ec4\u4ef6\u9884\u89c8 \u8b66\u544a\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:24:49 \ud83d\udca1 \u63d0\u793a \u8fd9\u662f\u63d0\u793a\u4fe1\u606f (TIP) \u2139\ufe0f \u6ce8\u610f \u8fd9\u662f\u6ce8\u610f\u4e8b\u9879 (NOTE) \u2757 \u91cd\u8981 \u8fd9\u662f\u91cd\u8981\u4fe1\u606f (IMPORTANT) \u26a0\ufe0f \u8b66\u544a \u8fd9\u662f\u8b66\u544a\u4fe1\u606f (WARNING) \ud83d\udea8 \u5371\u9669 \u8fd9\u662f\u6ce8\u610f\u4fe1\u606f (CAUTION) <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/alert-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83c\udfa8 \u591a\u79cd\u8b66\u544a\u7c7b\u578b: \u652f\u6301NOTE\u3001TIP\u3001IMPORTANT\u3001WARNING\u3001CAUTION\u4e94\u79cd\u7c7b\u578b</li> <li>\ud83c\udfaf GitHub\u98ce\u683c\u8bbe\u8ba1: \u7edf\u4e00\u7684\u89c6\u89c9\u98ce\u683c\u548c\u989c\u8272\u4e3b\u9898\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u4e13\u5c5e\u56fe\u6807</li> <li>\u2699\ufe0f \u7075\u6d3b\u914d\u7f6e: \u81ea\u5b9a\u4e49\u6807\u9898\u548c\u56fe\u6807\uff0c\u53ef\u63a7\u5236\u56fe\u6807\u663e\u793a/\u9690\u85cf</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> <li>\ud83d\udd17 \u94fe\u5f0f\u8c03\u7528: \u652f\u6301\u65b9\u6cd5\u94fe\u5f0f\u8c03\u7528\uff0c\u4ee3\u7801\u7b80\u6d01\u6613\u8bfb</li> </ul>"},{"location":"zh/user-guide/alert-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/alert-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import AlertWidget\nfrom email_widget.core.enums import AlertType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u8b66\u544a\u7ec4\u4ef6\u793a\u4f8b\")\n\n# \u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u8b66\u544a\u6846\nnote = AlertWidget().set_content(\"\u8bf7\u6ce8\u610f\u67e5\u6536\u90ae\u4ef6\u4e2d\u7684\u9644\u4ef6\").set_alert_type(AlertType.NOTE)\nemail.add_widget(note)\n\ntip = AlertWidget().set_content(\"\u4f7f\u7528\u5feb\u6377\u952e Ctrl+S \u53ef\u4ee5\u5feb\u901f\u4fdd\u5b58\").set_alert_type(AlertType.TIP)\nemail.add_widget(tip)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_alert(\"\u7cfb\u7edf\u5c06\u5728\u4eca\u665a22:00\u8fdb\u884c\u5347\u7ea7\u7ef4\u62a4\", AlertType.IMPORTANT)\n\n# \u5bfc\u51faHTML\nemail.export_html(\"alert_demo.html\")\n</code></pre>"},{"location":"zh/user-guide/alert-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u81ea\u5b9a\u4e49\u6807\u9898\u548c\u56fe\u6807\ncustom_alert = (AlertWidget()\n    .set_content(\"\u65b0\u7248\u672c\u5df2\u53d1\u5e03\uff0c\u5305\u542b\u91cd\u8981\u5b89\u5168\u66f4\u65b0\")\n    .set_alert_type(AlertType.IMPORTANT)\n    .set_title(\"\u7248\u672c\u66f4\u65b0\u901a\u77e5\")\n    .set_icon(\"\ud83d\ude80\"))\n\nemail.add_widget(custom_alert)\n\n# \u9690\u85cf\u56fe\u6807\ntext_only = (AlertWidget()\n    .set_content(\"\u7eaf\u6587\u672c\u8b66\u544a\u4fe1\u606f\")\n    .set_alert_type(AlertType.NOTE)\n    .show_icon(False))\n\nemail.add_widget(text_only)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: AlertWidget API</p>"},{"location":"zh/user-guide/alert-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/alert-widget/#_7","title":"\u8b66\u544a\u7c7b\u578b\u548c\u4e3b\u9898\u989c\u8272","text":"<ul> <li>NOTE (\u6ce8\u610f): \u84dd\u8272 (#3b82f6) - \u4e00\u822c\u63d0\u793a\u4fe1\u606f\u3001\u8bf4\u660e\u3001\u5907\u6ce8</li> <li>TIP (\u63d0\u793a): \u7eff\u8272 (#22c55e) - \u6709\u7528\u7684\u5efa\u8bae\u3001\u5c0f\u8d34\u58eb\u3001\u6280\u5de7  </li> <li>IMPORTANT (\u91cd\u8981): \u7d2b\u8272 (#8b5cf6) - \u91cd\u8981\u901a\u77e5\u3001\u5173\u952e\u4fe1\u606f</li> <li>WARNING (\u8b66\u544a): \u6a59\u8272 (#f97316) - \u8b66\u544a\u4fe1\u606f\u3001\u98ce\u9669\u63d0\u793a</li> <li>CAUTION (\u5371\u9669): \u7ea2\u8272 (#ef4444) - \u4e25\u91cd\u8b66\u544a\u3001\u5371\u9669\u64cd\u4f5c\u63d0\u793a</li> </ul>"},{"location":"zh/user-guide/alert-widget/#_8","title":"\u4f7f\u7528\u5efa\u8bae","text":"<ul> <li>NOTE: \u7528\u4e8e\u4e00\u822c\u6027\u8bf4\u660e\u548c\u53c2\u8003\u4fe1\u606f</li> <li>TIP: \u7528\u4e8e\u63d0\u4f9b\u6709\u7528\u7684\u5efa\u8bae\u548c\u4f18\u5316\u5efa\u8bae</li> <li>IMPORTANT: \u7528\u4e8e\u5f3a\u8c03\u91cd\u8981\u4fe1\u606f\u548c\u5fc5\u987b\u5173\u6ce8\u7684\u5185\u5bb9</li> <li>WARNING: \u7528\u4e8e\u8b66\u544a\u7528\u6237\u6ce8\u610f\u98ce\u9669\u548c\u6f5c\u5728\u95ee\u9898</li> <li>CAUTION: \u7528\u4e8e\u4e25\u91cd\u8b66\u544a\u548c\u5371\u9669\u64cd\u4f5c\u63d0\u793a</li> </ul>"},{"location":"zh/user-guide/alert-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/alert-widget/#1","title":"1. \u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import AlertWidget\nfrom email_widget.core.enums import AlertType\n\n# \u521b\u5efa\u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6\")\n\n# \u91cd\u8981\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\nemail.add_alert(\n    \"\u7cfb\u7edf\u5c06\u5728\u4eca\u665a22:00-24:00\u8fdb\u884c\u7ef4\u62a4\u5347\u7ea7\uff0c\u671f\u95f4\u670d\u52a1\u5c06\u6682\u505c\u4f7f\u7528\",\n    AlertType.IMPORTANT,\n    \"\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\"\n)\n\n# \u5907\u4efd\u63d0\u9192\nemail.add_alert(\n    \"\u5efa\u8bae\u5728\u7ef4\u62a4\u524d\u5907\u4efd\u60a8\u7684\u91cd\u8981\u6570\u636e\",\n    AlertType.TIP,\n    \"\u6570\u636e\u5907\u4efd\u5efa\u8bae\"\n)\n\n# \u7d27\u6025\u8054\u7cfb\u65b9\u5f0f\nemail.add_alert(\n    \"\u5982\u9047\u7d27\u6025\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb\u6280\u672f\u652f\u6301\uff1a400-123-4567\",\n    AlertType.WARNING,\n    \"\u7d27\u6025\u8054\u7cfb\u65b9\u5f0f\"\n)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"system_notification.html\")\n</code></pre> \u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6 \u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:18:47 \u2757 \u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5 \u7cfb\u7edf\u5c06\u5728\u4eca\u665a22:00-24:00\u8fdb\u884c\u7ef4\u62a4\u5347\u7ea7\uff0c\u671f\u95f4\u670d\u52a1\u5c06\u6682\u505c\u4f7f\u7528 \ud83d\udca1 \u6570\u636e\u5907\u4efd\u5efa\u8bae \u5efa\u8bae\u5728\u7ef4\u62a4\u524d\u5907\u4efd\u60a8\u7684\u91cd\u8981\u6570\u636e \u26a0\ufe0f \u7d27\u6025\u8054\u7cfb\u65b9\u5f0f \u5982\u9047\u7d27\u6025\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb\u6280\u672f\u652f\u6301\uff1a400-123-4567 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/alert-widget/#2","title":"2. \u4ea7\u54c1\u53d1\u5e03\u516c\u544a","text":"Python<pre><code># \u521b\u5efa\u4ea7\u54c1\u53d1\u5e03\u516c\u544a\u90ae\u4ef6\nemail = Email(\"\u4ea7\u54c1\u53d1\u5e03\u516c\u544a\")\n\n# \u65b0\u529f\u80fd\u53d1\u5e03\nemail.add_alert(\n    \"EmailWidget v2.0\u6b63\u5f0f\u53d1\u5e03\uff01\u65b0\u589e\u65f6\u95f4\u7ebf\u548c\u6307\u6807\u7ec4\u4ef6\uff0c\u63d0\u5347\u90ae\u4ef6\u5c55\u793a\u6548\u679c\",\n    AlertType.TIP,\n    \"\u65b0\u7248\u672c\u53d1\u5e03\"\n)\n\n# \u91cd\u8981\u53d8\u66f4\u63d0\u9192\nemail.add_alert(\n    \"\u672c\u6b21\u66f4\u65b0\u5305\u542b\u91cd\u8981\u7684\u5b89\u5168\u4fee\u590d\uff0c\u5efa\u8bae\u6240\u6709\u7528\u6237\u5c3d\u5feb\u5347\u7ea7\",\n    AlertType.IMPORTANT,\n    \"\u5b89\u5168\u66f4\u65b0\"\n)\n\n# \u517c\u5bb9\u6027\u8b66\u544a\nemail.add_alert(\n    \"\u65b0\u7248\u672c\u8981\u6c42Python 3.8+\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u8fd0\u884c\u73af\u5883\",\n    AlertType.WARNING,\n    \"\u517c\u5bb9\u6027\u8981\u6c42\"\n)\n\nemail.export_html(\"product_release_announcement.html\")\n</code></pre> \u4ea7\u54c1\u53d1\u5e03\u516c\u544a \u4ea7\u54c1\u53d1\u5e03\u516c\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:18:47 \ud83d\udca1 \u65b0\u7248\u672c\u53d1\u5e03 EmailWidget v2.0\u6b63\u5f0f\u53d1\u5e03\uff01\u65b0\u589e\u65f6\u95f4\u7ebf\u548c\u6307\u6807\u7ec4\u4ef6\uff0c\u63d0\u5347\u90ae\u4ef6\u5c55\u793a\u6548\u679c \u2757 \u5b89\u5168\u66f4\u65b0 \u672c\u6b21\u66f4\u65b0\u5305\u542b\u91cd\u8981\u7684\u5b89\u5168\u4fee\u590d\uff0c\u5efa\u8bae\u6240\u6709\u7528\u6237\u5c3d\u5feb\u5347\u7ea7 \u26a0\ufe0f \u517c\u5bb9\u6027\u8981\u6c42 \u65b0\u7248\u672c\u8981\u6c42Python 3.8+\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u8fd0\u884c\u73af\u5883 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/alert-widget/#3","title":"3. \u5b66\u4e60\u6307\u5357\u90ae\u4ef6","text":"Python<pre><code># \u521b\u5efa\u5b66\u4e60\u6307\u5357\u90ae\u4ef6\nemail = Email(\"EmailWidget\u5b66\u4e60\u6307\u5357\")\n\n# \u5b66\u4e60\u63d0\u793a\nemail.add_alert(\n    \"\u5efa\u8bae\u4ece\u57fa\u7840\u7ec4\u4ef6\u5f00\u59cb\u5b66\u4e60\uff0c\u9010\u6b65\u638c\u63e1\u9ad8\u7ea7\u529f\u80fd\",\n    AlertType.TIP,\n    \"\u5b66\u4e60\u5efa\u8bae\"\n)\n\n# \u6587\u6863\u94fe\u63a5\nemail.add_alert(\n    \"\u5b8c\u6574\u7684API\u6587\u6863\u548c\u793a\u4f8b\u4ee3\u7801\u53ef\u5728\u5b98\u7f51\u67e5\u770b\",\n    AlertType.NOTE,\n    \"\u6587\u6863\u8d44\u6e90\"\n)\n\n# \u6ce8\u610f\u4e8b\u9879\nemail.add_alert(\n    \"\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u524d\uff0c\u8bf7\u5145\u5206\u6d4b\u8bd5\u90ae\u4ef6\u5728\u4e0d\u540c\u5ba2\u6237\u7aef\u7684\u663e\u793a\u6548\u679c\",\n    AlertType.CAUTION,\n    \"\u4f7f\u7528\u6ce8\u610f\"\n)\n\nemail.export_html(\"learning_guide.html\")\n</code></pre> EmailWidget\u5b66\u4e60\u6307\u5357 EmailWidget\u5b66\u4e60\u6307\u5357 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:18:47 \ud83d\udca1 \u5b66\u4e60\u5efa\u8bae \u5efa\u8bae\u4ece\u57fa\u7840\u7ec4\u4ef6\u5f00\u59cb\u5b66\u4e60\uff0c\u9010\u6b65\u638c\u63e1\u9ad8\u7ea7\u529f\u80fd \u2139\ufe0f \u6587\u6863\u8d44\u6e90 \u5b8c\u6574\u7684API\u6587\u6863\u548c\u793a\u4f8b\u4ee3\u7801\u53ef\u5728\u5b98\u7f51\u67e5\u770b \ud83d\udea8 \u4f7f\u7528\u6ce8\u610f \u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u524d\uff0c\u8bf7\u5145\u5206\u6d4b\u8bd5\u90ae\u4ef6\u5728\u4e0d\u540c\u5ba2\u6237\u7aef\u7684\u663e\u793a\u6548\u679c <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/alert-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_alert</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_alert(\"\u63d0\u793a\u5185\u5bb9\", AlertType.NOTE)\n\n# \u5e26\u6807\u9898\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_alert(\"\u91cd\u8981\u901a\u77e5\u5185\u5bb9\", AlertType.IMPORTANT, \"\u901a\u77e5\u6807\u9898\")\n\n# \u6279\u91cf\u6dfb\u52a0\u8b66\u544a\nalerts = [\n    (\"\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\", AlertType.WARNING, \"\u7ef4\u62a4\u63d0\u9192\"),\n    (\"\u65b0\u529f\u80fd\u53d1\u5e03\", AlertType.TIP, \"\u529f\u80fd\u66f4\u65b0\"), \n    (\"\u5b89\u5168\u66f4\u65b0\", AlertType.IMPORTANT, \"\u5b89\u5168\u63d0\u9192\")\n]\n\nfor content, alert_type, title in alerts:\n    email.add_alert(content, alert_type, title)\n</code></pre>"},{"location":"zh/user-guide/alert-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/alert-widget/#q","title":"Q: \u8b66\u544a\u6846\u5728\u67d0\u4e9b\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u6837\u5f0f\u5f02\u5e38\uff1f","text":"<p>A: AlertWidget \u91c7\u7528\u4e86\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684CSS\u5b9e\u73b0\uff0c\u652f\u6301\u4e3b\u6d41\u90ae\u4ef6\u5ba2\u6237\u7aef\u3002\u5982\u9047\u95ee\u9898\uff0c\u8bf7\u68c0\u67e5\u662f\u5426\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49CSS\u8986\u76d6\u4e86\u7ec4\u4ef6\u6837\u5f0f\u3002</p>"},{"location":"zh/user-guide/alert-widget/#q_1","title":"Q: \u5982\u4f55\u81ea\u5b9a\u4e49\u8b66\u544a\u6846\u7684\u989c\u8272\uff1f","text":"<p>A: \u5efa\u8bae\u4f7f\u7528\u9884\u5b9a\u4e49\u7684AlertType\u7c7b\u578b\u4ee5\u786e\u4fdd\u4e00\u81f4\u6027\u3002\u5982\u9700\u81ea\u5b9a\u4e49\uff0c\u53ef\u4ee5\u901a\u8fc7CSS\u8986\u76d6\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002</p>"},{"location":"zh/user-guide/alert-widget/#q_2","title":"Q: \u80fd\u5426\u5728\u4e00\u4e2a\u8b66\u544a\u6846\u4e2d\u663e\u793a\u591a\u884c\u5185\u5bb9\uff1f","text":"<p>A: \u652f\u6301\u591a\u884c\u5185\u5bb9\uff0c\u5728content\u4e2d\u4f7f\u7528<code>\\n</code>\u6216HTML\u7684<code>&lt;br&gt;</code>\u6807\u7b7e\u8fdb\u884c\u6362\u884c\u3002</p>"},{"location":"zh/user-guide/alert-widget/#q_3","title":"Q: \u5982\u4f55\u9690\u85cf\u6216\u81ea\u5b9a\u4e49\u56fe\u6807\uff1f","text":"<p>A: \u4f7f\u7528 <code>show_icon(False)</code> \u9690\u85cf\u56fe\u6807\uff0c\u6216\u4f7f\u7528 <code>set_icon(\"\ud83c\udf89\")</code> \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u56fe\u6807\u3002</p>"},{"location":"zh/user-guide/alert-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>CardWidget - \u53ef\u4ee5\u5728\u5361\u7247\u4e2d\u4f7f\u7528\u8b66\u544a\u6846</li> <li>TextWidget - \u7528\u4e8e\u914d\u5408\u8b66\u544a\u6846\u7684\u6b63\u6587\u5185\u5bb9</li> <li>SeparatorWidget - \u7528\u4e8e\u5206\u9694\u4e0d\u540c\u7c7b\u578b\u7684\u8b66\u544a\u4fe1\u606f</li> <li>ButtonWidget - \u53ef\u4ee5\u5728\u8b66\u544a\u6846\u540e\u6dfb\u52a0\u64cd\u4f5c\u6309\u94ae</li> </ul>"},{"location":"zh/user-guide/button-widget/","title":"ButtonWidget \u6309\u94ae\u7ec4\u4ef6","text":"<p>ButtonWidget \u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u521b\u5efa\u53ef\u70b9\u51fb\u6309\u94ae\u7684\u7ec4\u4ef6\u3002\u5b83\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u5b9a\u5236\u529f\u80fd\uff0c\u652f\u6301\u591a\u79cd\u6837\u5f0f\u3001\u989c\u8272\u548c\u5bf9\u9f50\u65b9\u5f0f\uff0c\u5b8c\u5168\u517c\u5bb9\u5404\u5927\u90ae\u4ef6\u5ba2\u6237\u7aef\u3002</p>"},{"location":"zh/user-guide/button-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c81. \u6309\u94ae\u7ec4\u4ef6\u5c55\u793a","text":"\u6309\u94ae\u7ec4\u4ef6\u9884\u89c8 \u6309\u94ae\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:01:25 1.1. \u4e3b\u8981\u6309\u94ae \u7acb\u5373\u8d2d\u4e70 1.2. \u6210\u529f\u6309\u94ae \u786e\u8ba4\u8ba2\u5355 1.3. \u8b66\u544a\u6309\u94ae \u53d6\u6d88\u8ba2\u5355 1.4. \u81ea\u5b9a\u4e49\u6837\u5f0f\u6309\u94ae \u8054\u7cfb\u5ba2\u670d <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/button-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcf1 \u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9: \u4e13\u4e3a\u5404\u5927\u90ae\u4ef6\u5ba2\u6237\u7aef\uff08Outlook\u3001Gmail\u3001Apple Mail\u7b49\uff09\u4f18\u5316</li> <li>\ud83c\udfa8 \u6837\u5f0f\u5b9a\u5236: \u652f\u6301\u80cc\u666f\u989c\u8272\u3001\u6587\u5b57\u989c\u8272\u3001\u5bbd\u5ea6\u3001\u5bf9\u9f50\u65b9\u5f0f\u7b49\u591a\u79cd\u6837\u5f0f\u9009\u9879</li> <li>\ud83d\udd17 \u94fe\u63a5\u8df3\u8f6c: \u652f\u6301\u5404\u79cd\u94fe\u63a5\u7c7b\u578b\uff0c\u5305\u62ec\u7f51\u9875\u94fe\u63a5\u3001\u90ae\u4ef6\u94fe\u63a5\u7b49</li> <li>\ud83d\udcd0 \u7075\u6d3b\u5bf9\u9f50: \u652f\u6301\u5de6\u5bf9\u9f50\u3001\u5c45\u4e2d\u3001\u53f3\u5bf9\u9f50\u4e09\u79cd\u5bf9\u9f50\u65b9\u5f0f</li> <li>\ud83c\udfaf \u54cd\u5e94\u5f0f\u8bbe\u8ba1: \u81ea\u52a8\u9002\u914d\u4e0d\u540c\u8bbe\u5907\u548c\u90ae\u4ef6\u5ba2\u6237\u7aef\u7684\u663e\u793a\u6548\u679c</li> </ul>"},{"location":"zh/user-guide/button-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/button-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u6309\u94ae\u793a\u4f8b\")\n\n# \u521b\u5efa\u57fa\u7840\u6309\u94ae\nbutton = ButtonWidget().set_text(\"\u70b9\u51fb\u8bbf\u95ee\").set_href(\"https://example.com\")\nemail.add_widget(button)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_button(\"\u7acb\u5373\u8d2d\u4e70\", \"https://shop.example.com\")\n\n# \u5bfc\u51faHTML\nemail.export_html(\"button_demo.html\")\n</code></pre>"},{"location":"zh/user-guide/button-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u521b\u5efa\u5e26\u6837\u5f0f\u7684\u6309\u94ae\nstyled_button = (ButtonWidget()\n    .set_text(\"\u7acb\u5373\u5f00\u59cb\")\n    .set_href(\"https://app.example.com/start\")\n    .set_background_color(\"#22c55e\")  # \u7eff\u8272\u80cc\u666f\n    .set_text_color(\"#ffffff\")        # \u767d\u8272\u6587\u5b57\n    .set_width(\"200px\")               # \u56fa\u5b9a\u5bbd\u5ea6\n    .set_align(\"center\"))             # \u5c45\u4e2d\u5bf9\u9f50\n\nemail.add_widget(styled_button)\n\n# \u591a\u6837\u5f0f\u6309\u94ae\u7ec4\u5408\nprimary_button = (ButtonWidget()\n    .set_text(\"\u4e3b\u8981\u64cd\u4f5c\")\n    .set_href(\"https://example.com/primary\")\n    .set_background_color(\"#3b82f6\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"180px\"))\n\nsecondary_button = (ButtonWidget()\n    .set_text(\"\u6b21\u8981\u64cd\u4f5c\")\n    .set_href(\"https://example.com/secondary\")\n    .set_background_color(\"#6b7280\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"150px\"))\n\nemail.add_widget(primary_button)\nemail.add_widget(secondary_button)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: ButtonWidget API</p>"},{"location":"zh/user-guide/button-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/button-widget/#_7","title":"\u63a8\u8350\u989c\u8272\u642d\u914d","text":""},{"location":"zh/user-guide/button-widget/#primary","title":"\u4e3b\u8981\u6309\u94ae\uff08Primary\uff09","text":"<ul> <li>\u80cc\u666f\u8272: #3b82f6 (\u84dd\u8272)</li> <li>\u6587\u5b57\u8272: #ffffff (\u767d\u8272)</li> <li>\u7528\u9014: \u4e3b\u8981\u64cd\u4f5c\u3001\u91cd\u8981\u6309\u94ae</li> </ul>"},{"location":"zh/user-guide/button-widget/#success","title":"\u6210\u529f\u6309\u94ae\uff08Success\uff09","text":"<ul> <li>\u80cc\u666f\u8272: #22c55e (\u7eff\u8272)</li> <li>\u6587\u5b57\u8272: #ffffff (\u767d\u8272)</li> <li>\u7528\u9014: \u786e\u8ba4\u64cd\u4f5c\u3001\u8d2d\u4e70\u6309\u94ae</li> </ul>"},{"location":"zh/user-guide/button-widget/#warning","title":"\u8b66\u544a\u6309\u94ae\uff08Warning\uff09","text":"<ul> <li>\u80cc\u666f\u8272: #f59e0b (\u6a59\u8272)</li> <li>\u6587\u5b57\u8272: #ffffff (\u767d\u8272)</li> <li>\u7528\u9014: \u9700\u8981\u6ce8\u610f\u7684\u64cd\u4f5c</li> </ul>"},{"location":"zh/user-guide/button-widget/#danger","title":"\u5371\u9669\u6309\u94ae\uff08Danger\uff09","text":"<ul> <li>\u80cc\u666f\u8272: #ef4444 (\u7ea2\u8272)</li> <li>\u6587\u5b57\u8272: #ffffff (\u767d\u8272)</li> <li>\u7528\u9014: \u5220\u9664\u64cd\u4f5c\u3001\u53d6\u6d88\u8ba2\u9605</li> </ul>"},{"location":"zh/user-guide/button-widget/#secondary","title":"\u6b21\u8981\u6309\u94ae\uff08Secondary\uff09","text":"<ul> <li>\u80cc\u666f\u8272: #6b7280 (\u7070\u8272)</li> <li>\u6587\u5b57\u8272: #ffffff (\u767d\u8272)</li> <li>\u7528\u9014: \u8f85\u52a9\u64cd\u4f5c\u3001\u4e86\u89e3\u66f4\u591a</li> </ul>"},{"location":"zh/user-guide/button-widget/#_8","title":"\u5c3a\u5bf8\u5efa\u8bae","text":"<ul> <li>\u5c0f\u6309\u94ae: 120px - \u9002\u5408\u8f85\u52a9\u64cd\u4f5c</li> <li>\u4e2d\u7b49\u6309\u94ae: 180px - \u6807\u51c6\u6309\u94ae\u5c3a\u5bf8</li> <li>\u5927\u6309\u94ae: 250px - \u91cd\u8981\u64cd\u4f5c</li> <li>\u5168\u5bbd\u6309\u94ae: 100% - \u79fb\u52a8\u7aef\u53cb\u597d</li> </ul>"},{"location":"zh/user-guide/button-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/button-widget/#1","title":"1. \u7535\u5546\u8425\u9500\u90ae\u4ef6","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget\n\nemail = Email(\"\u9650\u65f6\u7279\u60e0\u6d3b\u52a8\")\n\n# \u4e3b\u8981\u8d2d\u4e70\u6309\u94ae\nbuy_button = (ButtonWidget()\n    .set_text(\"\u7acb\u5373\u62a2\u8d2d\")\n    .set_href(\"https://shop.example.com/sale\")\n    .set_background_color(\"#ef4444\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"100%\")\n    .set_align(\"center\"))\n\nemail.add_widget(buy_button)\n\n# \u6b21\u8981\u4e86\u89e3\u6309\u94ae\ninfo_button = (ButtonWidget()\n    .set_text(\"\u67e5\u770b\u8be6\u60c5\")\n    .set_href(\"https://shop.example.com/products\")\n    .set_background_color(\"#6b7280\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"150px\")\n    .set_align(\"center\"))\n\nemail.add_widget(info_button)\n</code></pre> \u65b0\u54c1\u53d1\u5e03\u4fc3\u9500 \u65b0\u54c1\u53d1\u5e03\u4fc3\u9500 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:31:21 <p>\ud83c\udf89 \u5168\u65b0 EmailWidget Pro \u9686\u91cd\u53d1\u5e03\uff01</p> <p>\u4e13\u4e3a Python \u5f00\u53d1\u8005\u8bbe\u8ba1\u7684\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u8ba9\u60a8\u7684\u90ae\u4ef6\u66f4\u4e13\u4e1a\u66f4\u7f8e\u89c2\u3002</p> \u7acb\u5373\u8d2d\u4e70 - \u9650\u65f68\u6298 \u4e86\u89e3\u66f4\u591a <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/button-widget/#2","title":"2. \u7cfb\u7edf\u901a\u77e5\u90ae\u4ef6","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget\n\nemail = Email(\"\u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5\")\n\nemail.add_text(\"\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a\u8fdb\u884c\u7ef4\u62a4\uff0c\u9884\u8ba1\u8017\u65f62\u5c0f\u65f6\u3002\")\n\n# \u67e5\u770b\u8be6\u60c5\u6309\u94ae\ndetail_button = (ButtonWidget()\n    .set_text(\"\u67e5\u770b\u7ef4\u62a4\u8be6\u60c5\")\n    .set_href(\"https://status.example.com/maintenance\")\n    .set_background_color(\"#3b82f6\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"180px\")\n    .set_align(\"center\"))\n\nemail.add_widget(detail_button)\n</code></pre> \u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5 \u7cfb\u7edf\u7ef4\u62a4\u901a\u77e5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:31:21 <p>\u26a0\ufe0f \u91cd\u8981\u901a\u77e5</p> <p>\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a 22:00-24:00 \u8fdb\u884c\u7ef4\u62a4\u5347\u7ea7\uff0c\u671f\u95f4\u670d\u52a1\u5c06\u6682\u65f6\u4e2d\u65ad\u3002</p> <p>\u7ef4\u62a4\u671f\u95f4\u53ef\u80fd\u4f1a\u5f71\u54cd\u4ee5\u4e0b\u670d\u52a1\uff1a</p> <p>\u2022 \u7528\u6237\u767b\u5f55\u548c\u6ce8\u518c</p> <p>\u2022 \u6570\u636e\u540c\u6b65\u529f\u80fd</p> <p>\u2022 \u90ae\u4ef6\u53d1\u9001\u670d\u52a1</p> \u67e5\u770b\u7ef4\u62a4\u8be6\u60c5 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/button-widget/#3","title":"3. \u4ea7\u54c1\u4ecb\u7ecd\u90ae\u4ef6","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget, ColumnWidget\n\nemail = Email(\"\u4ea7\u54c1\u529f\u80fd\u4ecb\u7ecd\")\n\n# \u4f7f\u7528\u5217\u5e03\u5c40\u5e76\u6392\u663e\u793a\u6309\u94ae\ncolumn = ColumnWidget().set_columns(2)\n\n# \u514d\u8d39\u8bd5\u7528\u6309\u94ae\ntrial_button = (ButtonWidget()\n    .set_text(\"\u514d\u8d39\u8bd5\u7528\")\n    .set_href(\"https://app.example.com/trial\")\n    .set_background_color(\"#22c55e\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"100%\"))\n\n# \u67e5\u770b\u5b9a\u4ef7\u6309\u94ae\npricing_button = (ButtonWidget()\n    .set_text(\"\u67e5\u770b\u5b9a\u4ef7\")\n    .set_href(\"https://example.com/pricing\")\n    .set_background_color(\"#3b82f6\")\n    .set_text_color(\"#ffffff\")\n    .set_width(\"100%\"))\n\ncolumn.add_widgets([trial_button, pricing_button])\nemail.add_widget(column)\n</code></pre> EmailWidget \u4ea7\u54c1\u4ecb\u7ecd EmailWidget \u4ea7\u54c1\u4ecb\u7ecd \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:31:21 <p>\ud83d\udce7 EmailWidget Pro</p> <p>Python \u90ae\u4ef6\u7ec4\u4ef6\u7684\u7ec8\u6781\u89e3\u51b3\u65b9\u6848</p> <p>\u2728 \u4e3b\u8981\u7279\u6027\uff1a</p> <p>\u2022 15+ \u7cbe\u7f8e\u7ec4\u4ef6\uff0c\u8986\u76d6\u6240\u6709\u90ae\u4ef6\u573a\u666f</p> <p>\u2022 \u5b8c\u7f8e\u9002\u914d\u5404\u5927\u90ae\u4ef6\u5ba2\u6237\u7aef</p> <p>\u2022 \u7b80\u5355\u6613\u7528\u7684 API \u8bbe\u8ba1</p> <p>\u2022 \u5b8c\u6574\u7684\u7c7b\u578b\u6ce8\u89e3\u548c\u6587\u6863</p> \u514d\u8d39\u8bd5\u7528 \u67e5\u770b\u5b9a\u4ef7 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/button-widget/#4","title":"4. \u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u6027\u4f18\u5316","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ButtonWidget\n\nemail = Email(\"\u517c\u5bb9\u6027\u4f18\u5316\u793a\u4f8b\")\n\n# \u63a8\u8350\u505a\u6cd5\ncompatible_button = (ButtonWidget()\n    .set_text(\"\u7acb\u5373\u8bbf\u95ee\")\n    .set_href(\"https://example.com\")\n    .set_background_color(\"#3b82f6\")  # \u4f7f\u7528\u5177\u4f53\u989c\u8272\u503c\n    .set_text_color(\"#ffffff\")        # \u786e\u4fdd\u9ad8\u5bf9\u6bd4\u5ea6\n    .set_width(\"180px\")               # \u8bbe\u7f6e\u660e\u786e\u5bbd\u5ea6\n    .set_align(\"center\"))\n\nemail.add_widget(compatible_button)\n</code></pre> \u5ba2\u6237\u7aef\u517c\u5bb9\u6027\u6d4b\u8bd5 \u5ba2\u6237\u7aef\u517c\u5bb9\u6027\u6d4b\u8bd5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:31:21 <p>\ud83d\udd27 \u5ba2\u6237\u7aef\u517c\u5bb9\u6027\u4f18\u5316</p> <p>\u4ee5\u4e0b\u6309\u94ae\u7ecf\u8fc7\u7279\u6b8a\u4f18\u5316\uff0c\u786e\u4fdd\u5728\u6240\u6709\u4e3b\u6d41\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u6b63\u786e\u663e\u793a\uff1a</p> \u517c\u5bb9\u6027\u4f18\u5316\u6309\u94ae <p>\u2705 \u652f\u6301\u7684\u90ae\u4ef6\u5ba2\u6237\u7aef\uff1a</p> <p>\u2022 Outlook (Windows/Mac/Web)</p> <p>\u2022 Gmail (Web/Mobile)</p> <p>\u2022 Apple Mail</p> <p>\u2022 Yahoo Mail</p> <p>\u2022 Thunderbird</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/button-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_button</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_button(\"\u6309\u94ae\u6587\u672c\", \"\u94fe\u63a5\u5730\u5740\")\n\n# \u5e26\u6837\u5f0f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_button(\n    \"\u7acb\u5373\u8d2d\u4e70\",\n    \"https://shop.example.com\",\n    background_color=\"#22c55e\",\n    text_color=\"#ffffff\", \n    width=\"200px\",\n    align=\"center\"\n)\n\n# \u4e0d\u540c\u7c7b\u578b\u7684\u94fe\u63a5\nemail.add_button(\"\u53d1\u9001\u90ae\u4ef6\", \"mailto:contact@example.com\")\nemail.add_button(\"\u62e8\u6253\u7535\u8bdd\", \"tel:+1234567890\")\nemail.add_button(\"\u8bbf\u95ee\u7f51\u7ad9\", \"https://example.com\")\n</code></pre>"},{"location":"zh/user-guide/button-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/button-widget/#q","title":"Q: \u6309\u94ae\u5728\u67d0\u4e9b\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u663e\u793a\u5f02\u5e38\uff1f","text":"<p>A: \u786e\u4fdd\u4f7f\u7528\u63a8\u8350\u7684\u6837\u5f0f\u8bbe\u7f6e\uff0c\u907f\u514d\u4f7f\u7528\u590d\u6742\u7684 CSS \u5c5e\u6027\uff1a Python<pre><code># \u63a8\u8350\u505a\u6cd5\nbutton.set_background_color(\"#3b82f6\")  # \u5177\u4f53\u989c\u8272\u503c\nbutton.set_width(\"180px\")               # \u660e\u786e\u5bbd\u5ea6\n</code></pre></p>"},{"location":"zh/user-guide/button-widget/#q_1","title":"Q: \u5982\u4f55\u786e\u4fdd\u6309\u94ae\u6587\u5b57\u6e05\u6670\u53ef\u8bfb\uff1f","text":"<p>A: \u786e\u4fdd\u6587\u5b57\u548c\u80cc\u666f\u6709\u8db3\u591f\u7684\u5bf9\u6bd4\u5ea6\uff1a Python<pre><code># \u9ad8\u5bf9\u6bd4\u5ea6\u7ec4\u5408\nbutton.set_background_color(\"#1f2937\").set_text_color(\"#ffffff\")  # \u2705\n# \u907f\u514d\u4f4e\u5bf9\u6bd4\u5ea6\n# button.set_background_color(\"#e5e7eb\").set_text_color(\"#f3f4f6\")  # \u274c\n</code></pre></p>"},{"location":"zh/user-guide/button-widget/#q_2","title":"Q: \u53ef\u4ee5\u5728\u6309\u94ae\u4e2d\u6dfb\u52a0\u56fe\u6807\u5417\uff1f","text":"<p>A: \u53ef\u4ee5\u4f7f\u7528 Unicode \u56fe\u6807\u5b57\u7b26\uff1a Python<pre><code>button.set_text(\"\ud83d\udce7 \u53d1\u9001\u90ae\u4ef6\")\nbutton.set_text(\"\ud83d\uded2 \u7acb\u5373\u8d2d\u4e70\")\nbutton.set_text(\"\ud83d\udcde \u8054\u7cfb\u6211\u4eec\")\n</code></pre></p>"},{"location":"zh/user-guide/button-widget/#q_3","title":"Q: \u5982\u4f55\u8bbe\u8ba1\u9002\u5408\u79fb\u52a8\u7aef\u7684\u6309\u94ae\uff1f","text":"<p>A: \u4f7f\u7528\u5408\u9002\u7684\u5c3a\u5bf8\u548c\u5168\u5bbd\u8bbe\u8ba1\uff1a Python<pre><code>mobile_button = (ButtonWidget()\n    .set_text(\"\u79fb\u52a8\u7aef\u6309\u94ae\")\n    .set_width(\"100%\")          # \u5168\u5bbd\u9002\u914d\n    .set_align(\"center\"))       # \u5c45\u4e2d\u5bf9\u9f50\n</code></pre></p>"},{"location":"zh/user-guide/button-widget/#q_4","title":"Q: \u6309\u94ae\u94fe\u63a5\u5b89\u5168\u6ce8\u610f\u4e8b\u9879\uff1f","text":"<p>A: \u59cb\u7ec8\u4f7f\u7528 HTTPS \u94fe\u63a5\uff0c\u786e\u4fdd\u94fe\u63a5\u5b89\u5168\uff1a Python<pre><code>button.set_href(\"https://example.com\")  # \u2705 \u5b89\u5168\n# button.set_href(\"http://example.com\")   # \u274c \u4e0d\u5b89\u5168\n</code></pre></p>"},{"location":"zh/user-guide/button-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>TextWidget - \u7528\u4e8e\u6309\u94ae\u5468\u56f4\u7684\u8bf4\u660e\u6587\u5b57</li> <li>ColumnWidget - \u7528\u4e8e\u591a\u6309\u94ae\u7684\u5e03\u5c40\u7ba1\u7406</li> <li>CardWidget - \u53ef\u4ee5\u5305\u542b\u6309\u94ae\u7684\u5361\u7247\u5bb9\u5668</li> <li>AlertWidget - \u53ef\u4e0e\u6309\u94ae\u7ec4\u5408\u4f7f\u7528\u7684\u63d0\u793a\u4fe1\u606f</li> </ul>"},{"location":"zh/user-guide/card-widget/","title":"CardWidget \u5361\u7247\u7ec4\u4ef6","text":"<p>CardWidget \u662f\u4e00\u4e2a\u901a\u7528\u7684\u5361\u7247\u5bb9\u5668\u7ec4\u4ef6\uff0c\u7528\u4e8e\u5c55\u793a\u7ed3\u6784\u5316\u7684\u5185\u5bb9\u4fe1\u606f\u3002\u5b83\u652f\u6301\u6807\u9898\u3001\u5185\u5bb9\u3001\u56fe\u6807\u548c\u5143\u6570\u636e\u7684\u7ec4\u5408\u5c55\u793a\uff0c\u662f\u6784\u5efa\u4fe1\u606f\u9762\u677f\u3001\u4ea7\u54c1\u5c55\u793a\u548c\u5185\u5bb9\u6458\u8981\u7684\u7406\u60f3\u9009\u62e9\u3002</p>"},{"location":"zh/user-guide/card-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c85. \u5361\u7247\u7ec4\u4ef6\u5c55\u793a","text":"\u5361\u7247\u7ec4\u4ef6\u9884\u89c8 \u5361\u7247\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:24:49  \u2139\ufe0f \u9879\u76ee\u72b6\u6001                  \u5f53\u524d\u9879\u76ee\u8fdb\u5c55\u826f\u597d\uff0c\u9884\u8ba1\u4e0b\u5468\u5b8c\u6210\u4e3b\u8981\u529f\u80fd\u5f00\u53d1\u3002 \u8d1f\u8d23\u4eba: \u5f00\u53d1\u56e2\u961f                          \u622a\u6b62\u65e5\u671f: 2024-07-20                           \u2139\ufe0f \u7cfb\u7edf\u76d1\u63a7                  \u670d\u52a1\u5668\u8fd0\u884c\u7a33\u5b9a\uff0cCPU\u4f7f\u7528\u738765%\uff0c\u5185\u5b58\u4f7f\u7528\u738772%\u3002 \u76d1\u63a7\u65f6\u95f4: 2024-07-11 23:15                          \u72b6\u6001: \u6b63\u5e38                          <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/card-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udccb \u5185\u5bb9\u5c55\u793a: \u652f\u6301\u6807\u9898\u3001\u5185\u5bb9\u3001\u56fe\u6807\u7684\u7ec4\u5408\u5c55\u793a</li> <li>\ud83c\udff7\ufe0f \u5143\u6570\u636e\u7ba1\u7406: \u652f\u6301\u952e\u503c\u5bf9\u5f62\u5f0f\u7684\u5143\u6570\u636e\u4fe1\u606f\u5c55\u793a</li> <li>\ud83c\udfa8 \u6837\u5f0f\u5b9a\u5236: \u53ef\u9009\u7684\u5361\u7247\u9634\u5f71\u3001\u8fb9\u6846\u5706\u89d2\u3001\u5185\u8fb9\u8ddd\u8c03\u6574</li> <li>\ud83d\udcf1 \u72b6\u6001\u6307\u793a: \u652f\u6301\u4e0d\u540c\u72b6\u6001\u7684\u89c6\u89c9\u53cd\u9988\u548c\u72b6\u6001\u663e\u793a</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/card-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/card-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CardWidget\nfrom email_widget.core.enums import StatusType, IconType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u5361\u7247\u7ec4\u4ef6\u793a\u4f8b\")\n\n# \u521b\u5efa\u57fa\u7840\u5361\u7247\ncard = CardWidget()\ncard.set_title(\"\u4ea7\u54c1\u4ecb\u7ecd\")\ncard.set_content(\"\u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684UI\u7ec4\u4ef6\u3002\")\ncard.set_icon(IconType.INFO)\n\nemail.add_widget(card)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\"\u5feb\u6377\u5361\u7247\", \"\u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\u521b\u5efa\u7684\u5361\u7247\u7ec4\u4ef6\")\n\n# \u5bfc\u51faHTML\nemail.export_html(\"card_demo.html\")\n</code></pre>"},{"location":"zh/user-guide/card-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u521b\u5efa\u5e26\u5143\u6570\u636e\u7684\u8be6\u7ec6\u5361\u7247\nproduct_card = CardWidget()\nproduct_card.set_title(\"EmailWidget Pro\")\nproduct_card.set_content(\"\u4e13\u4e1a\u7684Python\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684UI\u7ec4\u4ef6\u548c\u5f3a\u5927\u7684\u90ae\u4ef6\u6e32\u67d3\u80fd\u529b\u3002\")\nproduct_card.set_icon(IconType.SUCCESS)\nproduct_card.set_status(StatusType.SUCCESS)\n\n# \u6dfb\u52a0\u5143\u6570\u636e\u4fe1\u606f\nproduct_card.add_metadata(\"\u7248\u672c\", \"v2.1.0\")\nproduct_card.add_metadata(\"\u8bb8\u53ef\u8bc1\", \"MIT\")\nproduct_card.add_metadata(\"\u652f\u6301Python\", \"3.8+\")\nproduct_card.add_metadata(\"\u6700\u540e\u66f4\u65b0\", \"2024-01-15\")\n\nemail.add_widget(product_card)\n\n# \u6279\u91cf\u8bbe\u7f6e\u5143\u6570\u636e\nmetadata = {\n    \"\u4f5c\u8005\": \"Python\u5f00\u53d1\u56e2\u961f\",\n    \"\u5927\u5c0f\": \"2.5MB\",\n    \"\u4e0b\u8f7d\u91cf\": \"10K+\"\n}\nproduct_card.set_metadata(metadata)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: CardWidget API</p>"},{"location":"zh/user-guide/card-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/card-widget/#_7","title":"\u72b6\u6001\u7c7b\u578b\u548c\u989c\u8272","text":"<ul> <li>SUCCESS: \u7eff\u8272 (#107c10) - \u6210\u529f\u72b6\u6001\u3001\u6b63\u5e38\u8fd0\u884c\u3001\u5b8c\u6210\u72b6\u6001</li> <li>WARNING: \u6a59\u8272 (#ff8c00) - \u8b66\u544a\u72b6\u6001\u3001\u9700\u8981\u6ce8\u610f\u3001\u5f85\u5904\u7406</li> <li>ERROR: \u7ea2\u8272 (#d13438) - \u9519\u8bef\u72b6\u6001\u3001\u5931\u8d25\u72b6\u6001\u3001\u5f02\u5e38\u60c5\u51b5</li> <li>INFO: \u84dd\u8272 (#0078d4) - \u4fe1\u606f\u72b6\u6001\u3001\u5e38\u89c4\u4fe1\u606f\u3001\u63d0\u793a\u4fe1\u606f</li> <li>PRIMARY: \u84dd\u8272 (#0078d4) - \u4e3b\u8981\u5185\u5bb9\u3001\u91cd\u8981\u4fe1\u606f\u3001\u6838\u5fc3\u529f\u80fd</li> </ul>"},{"location":"zh/user-guide/card-widget/#_8","title":"\u56fe\u6807\u4f7f\u7528\u5efa\u8bae","text":"<ul> <li>IconType.INFO: \ud83d\udcc4 \u7528\u4e8e\u4fe1\u606f\u5c55\u793a\u3001\u6587\u6863\u8bf4\u660e</li> <li>IconType.SUCCESS: \u2705 \u7528\u4e8e\u6210\u529f\u72b6\u6001\u3001\u5b8c\u6210\u4efb\u52a1</li> <li>IconType.WARNING: \u26a0\ufe0f \u7528\u4e8e\u8b66\u544a\u4fe1\u606f\u3001\u6ce8\u610f\u4e8b\u9879</li> <li>IconType.ERROR: \u274c \u7528\u4e8e\u9519\u8bef\u4fe1\u606f\u3001\u5931\u8d25\u72b6\u6001</li> <li>\u81ea\u5b9a\u4e49\u56fe\u6807: \ud83c\udfaf \ud83d\udcca \ud83d\ude80 \u7b49\uff0c\u6839\u636e\u5185\u5bb9\u9009\u62e9\u5408\u9002\u7684\u56fe\u6807</li> </ul>"},{"location":"zh/user-guide/card-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/card-widget/#1","title":"1. \u4ea7\u54c1\u5c55\u793a\u5361\u7247 \ud83c\udfaf EmailWidget Pro                  \u26a1 \u6838\u5fc3\u529f\u80fd","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CardWidget\nfrom email_widget.core.enums import StatusType, IconType\n\n# \u521b\u5efa\u4ea7\u54c1\u5c55\u793a\u90ae\u4ef6\nemail = Email(\"\u4ea7\u54c1\u5c55\u793a\")\n\n# \u4e3b\u8981\u4ea7\u54c1\u5361\u7247\nproduct_card = CardWidget()\nproduct_card.set_title(\"EmailWidget Pro\")\nproduct_card.set_content(\"\u4e13\u4e1a\u7684Python\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684UI\u7ec4\u4ef6\u548c\u5f3a\u5927\u7684\u90ae\u4ef6\u6e32\u67d3\u80fd\u529b\u3002\u652f\u6301\u591a\u79cd\u7ec4\u4ef6\u7c7b\u578b\uff0c\u5b8c\u7f8e\u9002\u914d\u5404\u79cd\u90ae\u4ef6\u5ba2\u6237\u7aef\u3002\")\nproduct_card.set_icon(\"\ud83c\udfaf\")\nproduct_card.set_status(StatusType.SUCCESS)\n\n# \u6dfb\u52a0\u4ea7\u54c1\u4fe1\u606f\nproduct_card.add_metadata(\"\u7248\u672c\", \"v2.1.0\")\nproduct_card.add_metadata(\"\u8bb8\u53ef\u8bc1\", \"MIT\")\nproduct_card.add_metadata(\"\u652f\u6301Python\", \"3.8+\")\nproduct_card.add_metadata(\"\u6700\u540e\u66f4\u65b0\", \"2024-01-15\")\n\nemail.add_widget(product_card)\n\n# \u529f\u80fd\u7279\u6027\u5361\u7247\nfeature_card = CardWidget()\nfeature_card.set_title(\"\u6838\u5fc3\u529f\u80fd\")\nfeature_card.set_content(\"\u63d0\u4f9b15+\u4e2a\u7cbe\u7f8e\u7ec4\u4ef6\uff0c\u652f\u6301\u8868\u683c\u3001\u56fe\u8868\u3001\u8fdb\u5ea6\u6761\u3001\u65f6\u95f4\u7ebf\u7b49\u591a\u79cd\u5c55\u793a\u65b9\u5f0f\uff0c\u6ee1\u8db3\u5404\u79cd\u90ae\u4ef6\u573a\u666f\u9700\u6c42\u3002\")\nfeature_card.set_icon(\"\u26a1\")\n\nemail.add_widget(feature_card)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"product_showcase.html\")\n</code></pre> \u4ea7\u54c1\u5c55\u793a \u4ea7\u54c1\u5c55\u793a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:21:21 \u4e13\u4e1a\u7684Python\u90ae\u4ef6\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684UI\u7ec4\u4ef6\u548c\u5f3a\u5927\u7684\u90ae\u4ef6\u6e32\u67d3\u80fd\u529b\u3002\u652f\u6301\u591a\u79cd\u7ec4\u4ef6\u7c7b\u578b\uff0c\u5b8c\u7f8e\u9002\u914d\u5404\u79cd\u90ae\u4ef6\u5ba2\u6237\u7aef\u3002 \u7248\u672c: v2.1.0                          \u8bb8\u53ef\u8bc1: MIT                          \u652f\u6301Python: 3.8+                          \u6700\u540e\u66f4\u65b0: 2024-01-15                          \u63d0\u4f9b15+\u4e2a\u7cbe\u7f8e\u7ec4\u4ef6\uff0c\u652f\u6301\u8868\u683c\u3001\u56fe\u8868\u3001\u8fdb\u5ea6\u6761\u3001\u65f6\u95f4\u7ebf\u7b49\u591a\u79cd\u5c55\u793a\u65b9\u5f0f\uff0c\u6ee1\u8db3\u5404\u79cd\u90ae\u4ef6\u573a\u666f\u9700\u6c42\u3002 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/card-widget/#2","title":"2. \u7528\u6237\u4fe1\u606f\u9762\u677f \ud83d\udc64 \u7528\u6237\u6863\u6848                  \ud83d\udee0\ufe0f \u6280\u80fd\u4e13\u957f","text":"Python<pre><code># \u521b\u5efa\u7528\u6237\u4fe1\u606f\u9762\u677f\u90ae\u4ef6\nemail = Email(\"\u7528\u6237\u4fe1\u606f\u9762\u677f\")\n\n# \u7528\u6237\u57fa\u672c\u4fe1\u606f\u5361\u7247\nuser_card = CardWidget()\nuser_card.set_title(\"\u7528\u6237\u6863\u6848\")\nuser_card.set_content(\"\u9ad8\u7ea7\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0c\u4e13\u6ce8\u4e8ePython\u540e\u7aef\u5f00\u53d1\u548c\u6570\u636e\u5206\u6790\u3002\u62e5\u67095\u5e74\u4ee5\u4e0a\u7684\u9879\u76ee\u7ecf\u9a8c\uff0c\u719f\u6089\u591a\u79cd\u5f00\u53d1\u6846\u67b6\u548c\u5de5\u5177\u3002\")\nuser_card.set_icon(\"\ud83d\udc64\")\nuser_card.set_status(StatusType.SUCCESS)\n\n# \u6dfb\u52a0\u7528\u6237\u8be6\u7ec6\u4fe1\u606f\nuser_card.add_metadata(\"\u59d3\u540d\", \"\u674e\u5f00\u53d1\")\nuser_card.add_metadata(\"\u804c\u4f4d\", \"\u9ad8\u7ea7\u5de5\u7a0b\u5e08\")\nuser_card.add_metadata(\"\u90e8\u95e8\", \"\u6280\u672f\u90e8\")\nuser_card.add_metadata(\"\u5165\u804c\u65f6\u95f4\", \"2019-03-15\")\nuser_card.add_metadata(\"\u90ae\u7bb1\", \"li.dev@example.com\")\n\nemail.add_widget(user_card)\n\n# \u6280\u80fd\u5c55\u793a\u5361\u7247\nskill_card = CardWidget()\nskill_card.set_title(\"\u6280\u80fd\u4e13\u957f\")\nskill_card.set_content(\"\u7cbe\u901aPython\u3001Django\u3001FastAPI\u7b49\u540e\u7aef\u6280\u672f\u6808\uff0c\u5177\u5907\u4e30\u5bcc\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\u548cAPI\u5f00\u53d1\u7ecf\u9a8c\u3002\")\nskill_card.set_icon(\"\ud83d\udee0\ufe0f\")\n\nskill_card.add_metadata(\"\u4e3b\u8981\u6280\u80fd\", \"Python, Django, FastAPI\")\nskill_card.add_metadata(\"\u6570\u636e\u5e93\", \"MySQL, PostgreSQL, Redis\")\nskill_card.add_metadata(\"\u9879\u76ee\u7ecf\u9a8c\", \"5\u5e74+\")\n\nemail.add_widget(skill_card)\n\nemail.export_html(\"user_profile.html\")\n</code></pre> \u7528\u6237\u4fe1\u606f\u9762\u677f \u7528\u6237\u4fe1\u606f\u9762\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:21:21 \u9ad8\u7ea7\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0c\u4e13\u6ce8\u4e8ePython\u540e\u7aef\u5f00\u53d1\u548c\u6570\u636e\u5206\u6790\u3002\u62e5\u67095\u5e74\u4ee5\u4e0a\u7684\u9879\u76ee\u7ecf\u9a8c\uff0c\u719f\u6089\u591a\u79cd\u5f00\u53d1\u6846\u67b6\u548c\u5de5\u5177\u3002 \u59d3\u540d: \u674e\u5f00\u53d1                          \u804c\u4f4d: \u9ad8\u7ea7\u5de5\u7a0b\u5e08                          \u90e8\u95e8: \u6280\u672f\u90e8                          \u5165\u804c\u65f6\u95f4: 2019-03-15                          \u90ae\u7bb1: li.dev@example.com                          \u7cbe\u901aPython\u3001Django\u3001FastAPI\u7b49\u540e\u7aef\u6280\u672f\u6808\uff0c\u5177\u5907\u4e30\u5bcc\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\u548cAPI\u5f00\u53d1\u7ecf\u9a8c\u3002 \u4e3b\u8981\u6280\u80fd: Python, Django, FastAPI                          \u6570\u636e\u5e93: MySQL, PostgreSQL, Redis                          \u9879\u76ee\u7ecf\u9a8c: 5\u5e74+                          <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/card-widget/#3","title":"3. \u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f \ud83d\udcca \u9879\u76ee\u8fdb\u5c55                  \ud83d\udc65 \u56e2\u961f\u72b6\u6001","text":"Python<pre><code># \u521b\u5efa\u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f\u90ae\u4ef6\nemail = Email(\"\u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f\")\n\n# \u9879\u76ee\u8fdb\u5c55\u5361\u7247\nproject_card = CardWidget()\nproject_card.set_title(\"\u9879\u76ee\u8fdb\u5c55\")\nproject_card.set_content(\"EmailWidget\u9879\u76ee\u5f00\u53d1\u8fdb\u5c55\u987a\u5229\uff0c\u76ee\u524d\u5df2\u5b8c\u6210\u6838\u5fc3\u529f\u80fd\u5f00\u53d1\uff0c\u6b63\u5728\u8fdb\u884c\u6d4b\u8bd5\u548c\u6587\u6863\u7f16\u5199\u9636\u6bb5\u3002\u9884\u8ba1\u672c\u6708\u5e95\u53d1\u5e03\u6b63\u5f0f\u7248\u672c\u3002\")\nproject_card.set_icon(\"\ud83d\udcca\")\nproject_card.set_status(StatusType.SUCCESS)\n\nproject_card.add_metadata(\"\u9879\u76ee\u540d\u79f0\", \"EmailWidget\")\nproject_card.add_metadata(\"\u5f53\u524d\u7248\u672c\", \"v2.1.0-beta\")\nproject_card.add_metadata(\"\u5b8c\u6210\u8fdb\u5ea6\", \"85%\")\nproject_card.add_metadata(\"\u9884\u8ba1\u53d1\u5e03\", \"2024-01-30\")\n\nemail.add_widget(project_card)\n\n# \u56e2\u961f\u72b6\u6001\u5361\u7247\nteam_card = CardWidget()\nteam_card.set_title(\"\u56e2\u961f\u72b6\u6001\")\nteam_card.set_content(\"\u5f00\u53d1\u56e2\u961f\u8fd0\u8f6c\u6b63\u5e38\uff0c\u6240\u6709\u6210\u5458\u79ef\u6781\u53c2\u4e0e\u9879\u76ee\u5f00\u53d1\u3002\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u6700\u540e\u7684\u6d4b\u8bd5\u548c\u4f18\u5316\u5de5\u4f5c\u3002\")\nteam_card.set_icon(\"\ud83d\udc65\")\n\nteam_card.add_metadata(\"\u56e2\u961f\u89c4\u6a21\", \"6\u4eba\")\nteam_card.add_metadata(\"\u5f00\u53d1\u4eba\u5458\", \"4\u4eba\")\nteam_card.add_metadata(\"\u6d4b\u8bd5\u4eba\u5458\", \"2\u4eba\")\n\nemail.add_widget(team_card)\n\nemail.export_html(\"project_dashboard.html\")\n</code></pre> \u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f \u9879\u76ee\u72b6\u6001\u4eea\u8868\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:21:21 EmailWidget\u9879\u76ee\u5f00\u53d1\u8fdb\u5c55\u987a\u5229\uff0c\u76ee\u524d\u5df2\u5b8c\u6210\u6838\u5fc3\u529f\u80fd\u5f00\u53d1\uff0c\u6b63\u5728\u8fdb\u884c\u6d4b\u8bd5\u548c\u6587\u6863\u7f16\u5199\u9636\u6bb5\u3002\u9884\u8ba1\u672c\u6708\u5e95\u53d1\u5e03\u6b63\u5f0f\u7248\u672c\u3002 \u9879\u76ee\u540d\u79f0: EmailWidget                          \u5f53\u524d\u7248\u672c: v2.1.0-beta                          \u5b8c\u6210\u8fdb\u5ea6: 85%                          \u9884\u8ba1\u53d1\u5e03: 2024-01-30                          \u5f00\u53d1\u56e2\u961f\u8fd0\u8f6c\u6b63\u5e38\uff0c\u6240\u6709\u6210\u5458\u79ef\u6781\u53c2\u4e0e\u9879\u76ee\u5f00\u53d1\u3002\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u6700\u540e\u7684\u6d4b\u8bd5\u548c\u4f18\u5316\u5de5\u4f5c\u3002 \u56e2\u961f\u89c4\u6a21: 6\u4eba                          \u5f00\u53d1\u4eba\u5458: 4\u4eba                          \u6d4b\u8bd5\u4eba\u5458: 2\u4eba                          <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/card-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_card</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\"\u5361\u7247\u6807\u9898\", \"\u5361\u7247\u5185\u5bb9\")\n\n# \u5e26\u56fe\u6807\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\"\u4ea7\u54c1\u4ecb\u7ecd\", \"\u8fd9\u662f\u4e00\u4e2a\u4f18\u79c0\u7684\u4ea7\u54c1\", icon=\"\ud83c\udfaf\")\n\n# \u5e26\u5143\u6570\u636e\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\n    title=\"\u7528\u6237\u4fe1\u606f\",\n    content=\"\u7528\u6237\u8be6\u7ec6\u4fe1\u606f\u5c55\u793a\",\n    metadata={\n        \"\u59d3\u540d\": \"\u5f20\u4e09\",\n        \"\u90e8\u95e8\": \"\u6280\u672f\u90e8\",\n        \"\u804c\u4f4d\": \"\u5de5\u7a0b\u5e08\"\n    }\n)\n\n# \u5e26\u72b6\u6001\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_card(\n    title=\"\u7cfb\u7edf\u72b6\u6001\",\n    content=\"\u7cfb\u7edf\u8fd0\u884c\u6b63\u5e38\",\n    status=StatusType.SUCCESS,\n    icon=IconType.SUCCESS\n)\n</code></pre>"},{"location":"zh/user-guide/card-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/card-widget/#q","title":"Q: \u5361\u7247\u5185\u5bb9\u8fc7\u957f\u65f6\u5982\u4f55\u5904\u7406\uff1f","text":"<p>A: CardWidget \u4f1a\u81ea\u52a8\u5904\u7406\u957f\u5185\u5bb9\u7684\u6362\u884c\u548c\u5e03\u5c40\u3002\u5efa\u8bae\u5c06\u8fc7\u957f\u7684\u5185\u5bb9\u62c6\u5206\u4e3a\u591a\u4e2a\u5361\u7247\u6216\u4f7f\u7528\u5143\u6570\u636e\u6765\u7ec4\u7ec7\u4fe1\u606f\u3002</p>"},{"location":"zh/user-guide/card-widget/#q_1","title":"Q: \u5982\u4f55\u81ea\u5b9a\u4e49\u5361\u7247\u7684\u6837\u5f0f\uff1f","text":"<p>A: \u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u7684StatusType\u6765\u6539\u53d8\u5361\u7247\u7684\u4e3b\u9898\u8272\u3002\u5982\u9700\u66f4\u591a\u81ea\u5b9a\u4e49\uff0c\u53ef\u4ee5\u901a\u8fc7CSS\u8986\u76d6\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002</p>"},{"location":"zh/user-guide/card-widget/#q_2","title":"Q: \u5143\u6570\u636e\u4fe1\u606f\u663e\u793a\u4e0d\u5168\u600e\u4e48\u529e\uff1f","text":"<p>A: \u68c0\u67e5\u5143\u6570\u636e\u7684\u952e\u503c\u662f\u5426\u8fc7\u957f\uff0c\u5efa\u8bae\u4f7f\u7528\u7b80\u77ed\u7684\u952e\u540d\u548c\u9002\u5f53\u7684\u503c\u957f\u5ea6\u3002\u5982\u679c\u4fe1\u606f\u8f83\u591a\uff0c\u53ef\u4ee5\u5206\u6210\u591a\u4e2a\u5361\u7247\u5c55\u793a\u3002</p>"},{"location":"zh/user-guide/card-widget/#q_3","title":"Q: \u5361\u7247\u5728\u67d0\u4e9b\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u663e\u793a\u5f02\u5e38\uff1f","text":"<p>A: CardWidget \u91c7\u7528\u4e86\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684\u5e03\u5c40\u65b9\u5f0f\u3002\u5982\u9047\u95ee\u9898\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7b80\u5316\u5361\u7247\u5185\u5bb9\u6216\u4f7f\u7528\u5176\u4ed6\u7ec4\u4ef6\u66ff\u4ee3\u3002</p>"},{"location":"zh/user-guide/card-widget/#q_4","title":"Q: \u5982\u4f55\u6279\u91cf\u7ba1\u7406\u591a\u4e2a\u5361\u7247\uff1f","text":"<p>A: \u53ef\u4ee5\u5c06\u5361\u7247\u4fe1\u606f\u7ec4\u7ec7\u6210\u5217\u8868\uff0c\u7136\u540e\u4f7f\u7528\u5faa\u73af\u6279\u91cf\u521b\u5efa\uff1a Python<pre><code>cards_data = [\n    {\"title\": \"\u5361\u72471\", \"content\": \"\u5185\u5bb91\"},\n    {\"title\": \"\u5361\u72472\", \"content\": \"\u5185\u5bb92\"}\n]\nfor data in cards_data:\n    email.add_card(data[\"title\"], data[\"content\"])\n</code></pre></p>"},{"location":"zh/user-guide/card-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>StatusWidget - \u7528\u4e8e\u663e\u793a\u7b80\u5355\u7684\u72b6\u6001\u4fe1\u606f</li> <li>AlertWidget - \u53ef\u4ee5\u5728\u5361\u7247\u4e2d\u6dfb\u52a0\u8b66\u544a\u4fe1\u606f</li> <li>TextWidget - \u7528\u4e8e\u5361\u7247\u4e2d\u7684\u8be6\u7ec6\u6587\u672c\u5185\u5bb9</li> <li>SeparatorWidget - \u7528\u4e8e\u5206\u9694\u4e0d\u540c\u7684\u5361\u7247\u7ec4</li> </ul>"},{"location":"zh/user-guide/chart-widget/","title":"ChartWidget \u56fe\u8868\u7ec4\u4ef6","text":"<p>ChartWidget \u4e13\u95e8\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u5c55\u793a\u5404\u79cd\u56fe\u8868\u548c\u6570\u636e\u53ef\u89c6\u5316\u5185\u5bb9\u3002\u5b83\u4e0d\u4ec5\u652f\u6301\u663e\u793a\u56fe\u7247\u683c\u5f0f\u7684\u56fe\u8868\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u914d\u7f6e\u9009\u9879\u6765\u589e\u5f3a\u56fe\u8868\u7684\u5c55\u793a\u6548\u679c\u3002</p>"},{"location":"zh/user-guide/chart-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c81. Chart Component Display","text":"Chart Component Preview Chart Component Preview Generated: July 12, 2025 00:02:23 2024 Annual Sales Performance <p>Quarterly sales comparison showing steady growth trend</p> <p>Generated by EmailWidget</p>"},{"location":"zh/user-guide/chart-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcca \u591a\u79cd\u56fe\u8868: \u652f\u6301\u7ebf\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u997c\u56fe\u7b49\u5404\u79cd\u56fe\u8868\u7c7b\u578b</li> <li>\ud83d\uddbc\ufe0f \u56fe\u7247\u5c55\u793a: \u652f\u6301\u7f51\u7edc\u56fe\u7247\u3001\u672c\u5730\u6587\u4ef6\u548cBase64\u7f16\u7801\u56fe\u7247</li> <li>\ud83d\udcdd \u8be6\u7ec6\u6807\u6ce8: \u652f\u6301\u6807\u9898\u3001\u63cf\u8ff0\u548c\u6570\u636e\u6458\u8981\u7b49\u8be6\u7ec6\u4fe1\u606f</li> <li>\ud83d\udcf1 \u54cd\u5e94\u5f0f: \u81ea\u52a8\u9002\u914d\u4e0d\u540c\u8bbe\u5907\u7684\u663e\u793a\u6548\u679c</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0 /</li> </ul>"},{"location":"zh/user-guide/chart-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/chart-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChartWidget\n\n# \u521b\u5efa\u57fa\u672c\u56fe\u8868\nemail = Email(\"\u6570\u636e\u62a5\u544a\")\n\nchart = ChartWidget()\nchart.set_image_url(\"https://example.com/sales_chart.png\")\nchart.set_title(\"\u6708\u5ea6\u9500\u552e\u8d8b\u52bf\")\nchart.set_description(\"\u663e\u793a\u6700\u8fd16\u4e2a\u6708\u7684\u9500\u552e\u6570\u636e\u53d8\u5316\")\n\nemail.add_widget(chart)\n</code></pre>"},{"location":"zh/user-guide/chart-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u5e26\u6570\u636e\u6458\u8981\u7684\u8be6\u7ec6\u56fe\u8868\nperformance_chart = ChartWidget()\nperformance_chart.set_image_url(\"performance_chart.png\")\nperformance_chart.set_title(\"\u7cfb\u7edf\u6027\u80fd\u76d1\u63a7\")\nperformance_chart.set_description(\"\u5c55\u793a\u7cfb\u7edf\u5173\u952e\u6027\u80fd\u6307\u6807\u7684\u5b9e\u65f6\u72b6\u6001\")\nperformance_chart.set_data_summary(\"\u5e73\u5747\u54cd\u5e94\u65f6\u95f4: 245ms | \u5cf0\u503cQPS: 12,500 | \u9519\u8bef\u7387: 0.02%\")\nperformance_chart.set_alt_text(\"\u7cfb\u7edf\u6027\u80fd\u76d1\u63a7\u56fe\u8868\")\nperformance_chart.set_max_width(\"800px\")\n\nemail.add_widget(performance_chart)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: ChartWidget API</p>"},{"location":"zh/user-guide/chart-widget/#_6","title":"\ud83d\udcca \u56fe\u8868\u7c7b\u578b\u793a\u4f8b","text":""},{"location":"zh/user-guide/chart-widget/#_7","title":"\u8d8b\u52bf\u7ebf\u56fe\u8868","text":"Python<pre><code>trend_chart = ChartWidget()\ntrend_chart.set_image_url(\"trend_line.png\")\ntrend_chart.set_title(\"\u7528\u6237\u589e\u957f\u8d8b\u52bf\")\ntrend_chart.set_description(\"\u663e\u793a\u8fc7\u53bb12\u4e2a\u6708\u7684\u7528\u6237\u6ce8\u518c\u548c\u6d3b\u8dc3\u7528\u6237\u6570\u91cf\u53d8\u5316\")\ntrend_chart.set_data_summary(\"\u65b0\u589e\u7528\u6237: +15% | \u6d3b\u8dc3\u7528\u6237: +8% | \u7559\u5b58\u7387: 76%\")\n</code></pre>"},{"location":"zh/user-guide/chart-widget/#_8","title":"\u67f1\u72b6\u56fe\u8868","text":"Python<pre><code>bar_chart = ChartWidget()\nbar_chart.set_image_url(\"sales_by_region.png\")\nbar_chart.set_title(\"\u5404\u5730\u533a\u9500\u552e\u5bf9\u6bd4\")\nbar_chart.set_description(\"\u5c55\u793a\u4e0d\u540c\u5730\u533a\u7684\u9500\u552e\u4e1a\u7ee9\u548c\u5e02\u573a\u5360\u6bd4\")\nbar_chart.set_data_summary(\"\u534e\u4e1c: 35% | \u534e\u5357: 28% | \u534e\u5317: 22% | \u5176\u4ed6: 15%\")\n</code></pre>"},{"location":"zh/user-guide/chart-widget/#_9","title":"\u997c\u56fe","text":"Python<pre><code>pie_chart = ChartWidget()\npie_chart.set_image_url(\"market_share.png\")\npie_chart.set_title(\"\u5e02\u573a\u4efd\u989d\u5206\u5e03\")\npie_chart.set_description(\"\u5404\u4ea7\u54c1\u7ebf\u5728\u603b\u8425\u6536\u4e2d\u7684\u5360\u6bd4\u60c5\u51b5\")\npie_chart.set_data_summary(\"\u4ea7\u54c1A: 45% | \u4ea7\u54c1B: 30% | \u4ea7\u54c1C: 15% | \u5176\u4ed6: 10%\")\n</code></pre>"},{"location":"zh/user-guide/chart-widget/#_10","title":"\ud83d\udd17 \u4e0e\u6570\u636e\u5206\u6790\u5e93\u96c6\u6210","text":""},{"location":"zh/user-guide/chart-widget/#matplotlib","title":"\u4e0eMatplotlib\u96c6\u6210","text":"Python<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nfrom email_widget import Email\nfrom email_widget.widgets import ChartWidget\n\n# \u751f\u6210\u6570\u636e\u5e76\u521b\u5efa\u56fe\u8868\nmonths = ['1\u6708', '2\u6708', '3\u6708', '4\u6708', '5\u6708', '6\u6708']\nsales = [120, 135, 148, 162, 178, 195]\n\nplt.figure(figsize=(10, 6))\nplt.plot(months, sales, marker='o', linewidth=2, markersize=8)\nplt.title('\u6708\u5ea6\u9500\u552e\u8d8b\u52bf', fontsize=16, fontweight='bold')\nplt.xlabel('\u6708\u4efd')\nplt.ylabel('\u9500\u552e\u989d(\u4e07\u5143)')\nplt.grid(True, alpha=0.3)\nplt.tight_layout()\n\n# \u4fdd\u5b58\u56fe\u8868\nchart_path = 'monthly_sales.png'\nplt.savefig(chart_path, dpi=300, bbox_inches='tight')\nplt.close()\n\n# \u5728\u90ae\u4ef6\u4e2d\u5c55\u793a\nemail = Email(\"\u9500\u552e\u6570\u636e\u62a5\u544a\")\nchart_widget = ChartWidget()\nchart_widget.set_image_url(chart_path)\nchart_widget.set_title(\"\u6708\u5ea6\u9500\u552e\u8d8b\u52bf\u5206\u6790\")\nchart_widget.set_description(\"\u5c55\u793a2024\u5e74\u4e0a\u534a\u5e74\u9500\u552e\u4e1a\u7ee9\u7684\u6301\u7eed\u589e\u957f\u6001\u52bf\")\nchart_widget.set_data_summary(f\"\u603b\u9500\u552e\u989d: {sum(sales)}\u4e07\u5143 | \u5e73\u5747\u589e\u957f\u7387: {((sales[-1]/sales[0])-1)*100:.1f}%\")\n\nemail.add_widget(chart_widget)\n</code></pre>"},{"location":"zh/user-guide/chart-widget/#_11","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/chart-widget/#1","title":"1. \u9009\u62e9\u5408\u9002\u7684\u56fe\u8868\u7c7b\u578b","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChartWidget\n\nemail = Email(\"\u6570\u636e\u53ef\u89c6\u5316\u6700\u4f73\u5b9e\u8df5\")\n\n# \u8d8b\u52bf\u6570\u636e -&gt; \u7ebf\u56fe\ntrend_chart = ChartWidget()\ntrend_chart.set_image_url(\"time_series.png\")\ntrend_chart.set_title(\"\u65f6\u95f4\u5e8f\u5217\u8d8b\u52bf\")\ntrend_chart.set_description(\"\u9002\u5408\u5c55\u793a\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6570\u636e\")\n\n# \u5206\u7c7b\u5bf9\u6bd4 -&gt; \u67f1\u72b6\u56fe  \ncomparison_chart = ChartWidget()\ncomparison_chart.set_image_url(\"category_comparison.png\")\ncomparison_chart.set_title(\"\u5206\u7c7b\u6570\u636e\u5bf9\u6bd4\")\ncomparison_chart.set_description(\"\u9002\u5408\u5c55\u793a\u4e0d\u540c\u7c7b\u522b\u4e4b\u95f4\u7684\u6bd4\u8f83\")\n\n# \u5360\u6bd4\u5173\u7cfb -&gt; \u997c\u56fe\nproportion_chart = ChartWidget()\nproportion_chart.set_image_url(\"proportion_chart.png\")\nproportion_chart.set_title(\"\u6bd4\u4f8b\u5206\u5e03\")\nproportion_chart.set_description(\"\u9002\u5408\u5c55\u793a\u90e8\u5206\u4e0e\u6574\u4f53\u7684\u5173\u7cfb\")\n\nemail.add_widgets([trend_chart, comparison_chart, proportion_chart])\n</code></pre> Chart Type Selection Guide Chart Type Selection Guide Generated: July 12, 2025 15:25:20 Time Series Trend Best for showing data changes over time - Website traffic over 6 months 25K 20K 15K 10K 5K 0 Jan Feb Mar Apr May Jun Category Comparison Best for comparing different categories - Regional sales performance 150M 120M 90M 60M 30M 0 120M East 85M South 150M North 95M West Proportion Distribution Best for showing part-to-whole relationships - Product sales breakdown Product A (45%) Product B (30%) Product C (15%) Others (10%) <p>Generated by EmailWidget</p>"},{"location":"zh/user-guide/chart-widget/#2","title":"2. \u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChartWidget, TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u4eea\u8868\u677f\u90ae\u4ef6\ndashboard = Email(\"\u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f\")\n\n# \u6dfb\u52a0\u6807\u9898\ntitle = TextWidget()\ntitle.set_content(\"\u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f\")\ntitle.set_type(TextType.TITLE_LARGE)\ntitle.set_align(\"center\")\ndashboard.add_widget(title)\n\n# \u521b\u5efa\u591a\u4e2a\u56fe\u8868\ncharts_data = [\n    {\n        'file': 'revenue_trend.png',\n        'title': '\u8425\u6536\u8d8b\u52bf',\n        'desc': '\u6708\u5ea6\u8425\u6536\u589e\u957f\u60c5\u51b5',\n        'summary': '\u540c\u6bd4\u589e\u957f: +23%'\n    },\n    {\n        'file': 'user_analytics.png', \n        'title': '\u7528\u6237\u5206\u6790',\n        'desc': '\u7528\u6237\u6d3b\u8dc3\u5ea6\u548c\u7559\u5b58\u5206\u6790',\n        'summary': '\u6708\u6d3b\u7528\u6237: 2.4M'\n    },\n    {\n        'file': 'product_performance.png',\n        'title': '\u4ea7\u54c1\u8868\u73b0', \n        'desc': '\u5404\u4ea7\u54c1\u7ebf\u4e1a\u7ee9\u5bf9\u6bd4',\n        'summary': '\u6838\u5fc3\u4ea7\u54c1\u5360\u6bd4: 68%'\n    }\n]\n\nfor chart_info in charts_data:\n    chart = ChartWidget()\n    chart.set_image_url(chart_info['file'])\n    chart.set_title(chart_info['title'])\n    chart.set_description(chart_info['desc'])\n    chart.set_data_summary(chart_info['summary'])\n    dashboard.add_widget(chart)\n</code></pre> Business Data Dashboard Business Data Dashboard Generated: July 12, 2025 15:07:30 \ud83d\udcca Business Data Dashboard \ud83d\udcc8Revenue Trends                  Monthly revenue growth - Shows revenue trend changes over the last 6 months 5M 4M 3M 2M 1M 0 Jan Feb Mar Apr May Jun \ud83d\udcca YoY Growth: +23% | MoM Growth: +8.5% | Annual Target: 67% \ud83d\udc65User Analytics                  User activity and retention analysis - Cross-platform user data comparison 3M 2.5M 2M 1.5M 1M 0.5M 0 2.8M Mobile 2.2M Desktop 3.2M Mini-app 2.5M H5 Page \ud83d\udc64 MAU: 2.4M | New Users: +45K | Retention Rate: 78.5% \ud83d\udcf1Product Performance                  Product line performance comparison - Product performance by revenue share Core Products 68% Premium Products 18% Basic Products 10% Other Products 4% \ud83c\udfaf Core Products: 68% | Premium Growth: +25% | Total Product Lines: 12 <p>Generated by EmailWidget</p>"},{"location":"zh/user-guide/chart-widget/#3","title":"3. \u5b8c\u6574\u4e1a\u52a1\u62a5\u544a","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChartWidget, TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u4e1a\u52a1\u62a5\u544a\nreport = Email(\"Q4\u4e1a\u52a1\u5206\u6790\u62a5\u544a\")\n\n# \u62a5\u544a\u6807\u9898\nreport_title = TextWidget()\nreport_title.set_content(\"\u7b2c\u56db\u5b63\u5ea6\u4e1a\u52a1\u5206\u6790\u62a5\u544a\")\nreport_title.set_type(TextType.TITLE_LARGE)\nreport_title.set_align(\"center\")\nreport_title.set_color(\"#0078d4\")\nreport.add_widget(report_title)\n\n# \u8425\u6536\u5206\u6790\u56fe\u8868\nrevenue_chart = ChartWidget()\nrevenue_chart.set_image_url(\"q4_revenue_analysis.png\")\nrevenue_chart.set_title(\"\u8425\u6536\u5206\u6790\")\nrevenue_chart.set_description(\"\u7b2c\u56db\u5b63\u5ea6\u5404\u6708\u8425\u6536\u60c5\u51b5\u53ca\u4e0e\u53bb\u5e74\u540c\u671f\u5bf9\u6bd4\")\nrevenue_chart.set_data_summary(\"Q4\u603b\u8425\u6536: \u00a518.5M | \u540c\u6bd4\u589e\u957f: +15.2% | \u73af\u6bd4\u589e\u957f: +8.7%\")\n\n# \u7528\u6237\u589e\u957f\u56fe\u8868  \ngrowth_chart = ChartWidget()\ngrowth_chart.set_image_url(\"user_growth_funnel.png\")\ngrowth_chart.set_title(\"\u7528\u6237\u589e\u957f\u6f0f\u6597\")\ngrowth_chart.set_description(\"\u4ece\u8bbf\u95ee\u5230\u8f6c\u5316\u7684\u7528\u6237\u6d41\u5931\u60c5\u51b5\u5206\u6790\")\ngrowth_chart.set_data_summary(\"\u8bbf\u95ee\u7528\u6237: 2.4M | \u6ce8\u518c\u8f6c\u5316: 12% | \u4ed8\u8d39\u8f6c\u5316: 3.2%\")\n\n# \u4ea7\u54c1\u8868\u73b0\u56fe\u8868\nproduct_chart = ChartWidget()\nproduct_chart.set_image_url(\"product_performance_matrix.png\") \nproduct_chart.set_title(\"\u4ea7\u54c1\u8868\u73b0\u77e9\u9635\")\nproduct_chart.set_description(\"\u5404\u4ea7\u54c1\u7ebf\u7684\u5e02\u573a\u8868\u73b0\u548c\u589e\u957f\u6f5c\u529b\u5206\u6790\")\nproduct_chart.set_data_summary(\"\u660e\u661f\u4ea7\u54c1: 3\u4e2a | \u95ee\u9898\u4ea7\u54c1: 1\u4e2a | \u73b0\u91d1\u725b\u4ea7\u54c1: 2\u4e2a\")\n\n# \u6dfb\u52a0\u5230\u62a5\u544a\nreport.add_widgets([revenue_chart, growth_chart, product_chart])\n</code></pre> Q4 Business Analysis Report Q4 Business Analysis Report Generated: July 12, 2025 15:09:45 Q4 Business Analysis Report Report Period: October 2024 - December 2024 \ud83d\udcb0Revenue Analysis                  Q4 monthly revenue comparison with year-over-year analysis, showing business growth trends and seasonal characteristics 20M 16M 12M 8M 4M 0 Oct Nov Dec Oct(LY) Nov(LY) Dec(LY) 1.2M 1.4M 1.85M 1.0M 1.3M 1.7M \ud83d\udcb9 Q4 Total Revenue: $18.5M | YoY Growth: +15.2% | QoQ Growth: +8.7% | Dec Record High \ud83d\udd04User Growth Funnel                  User conversion analysis from visit to purchase, identifying key bottlenecks and optimization opportunities Website Visitors - 2.4M Registered Users - 288K Active Users - 180K Paying Users - 76.8K Visit\u2192Register 12.0% Register\u2192Active 62.5% Active\u2192Paying 42.7% Total Conversion 3.2% \ud83c\udfaf Visitors: 2.4M | Registration Rate: 12% | Payment Rate: 3.2% | User LTV: $67 \ud83d\udcc8Product Performance Matrix                  Product line market performance and growth potential analysis using BCG matrix based on market share and growth rate Star Products Question Mark Dogs Cash Cow High Growth Low Growth Low Share High Share                              Core SaaS38%                                                       Mobile18%                                                       Enterprise30%                                                       API Service8%                                                       Trial4%                                                       Others2%                          Star Products (3) Cash Cow (2) Question Mark (1) \u2b50 Star Products: 3 | \ud83d\udcb0 Cash Cow: 2 | \u2753 Question Mark: 1 | \ud83d\udc15 Dogs: 0 <p>Generated by EmailWidget | Report by Business Analytics Team</p>"},{"location":"zh/user-guide/chart-widget/#_12","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_chart</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_chart(\n    image_url=\"sales_chart.png\",\n    title=\"\u9500\u552e\u56fe\u8868\"\n)\n\n# \u5e26\u8be6\u7ec6\u4fe1\u606f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_chart(\n    image_url=\"performance_chart.png\",\n    title=\"\u6027\u80fd\u76d1\u63a7\",\n    description=\"\u7cfb\u7edf\u5173\u952e\u6307\u6807\u5b9e\u65f6\u76d1\u63a7\",\n    data_summary=\"\u54cd\u5e94\u65f6\u95f4: 245ms | QPS: 12.5K\",\n    max_width=\"800px\"\n)\n</code></pre>"},{"location":"zh/user-guide/chart-widget/#_13","title":"\ud83c\udfaf \u6837\u5f0f\u548c\u5c3a\u5bf8\u63a7\u5236","text":""},{"location":"zh/user-guide/chart-widget/#_14","title":"\u56fe\u7247\u5c3a\u5bf8\u4f18\u5316","text":"Python<pre><code># \u8bbe\u7f6e\u6700\u5927\u5bbd\u5ea6\u907f\u514d\u56fe\u7247\u8fc7\u5927\nlarge_chart = ChartWidget()\nlarge_chart.set_image_url(\"wide_chart.png\")\nlarge_chart.set_max_width(\"800px\")\n\n# \u79fb\u52a8\u7aef\u81ea\u9002\u5e94\nresponsive_chart = ChartWidget()\nresponsive_chart.set_image_url(\"responsive_chart.png\")\nresponsive_chart.set_max_width(\"100%\")  # \u81ea\u52a8\u9002\u914d\u5bb9\u5668\u5bbd\u5ea6\n</code></pre>"},{"location":"zh/user-guide/chart-widget/#_15","title":"\u63d0\u4f9b\u6e05\u6670\u7684\u6807\u9898\u548c\u63cf\u8ff0","text":"Python<pre><code>chart = ChartWidget()\nchart.set_title(\"Q4\u8425\u6536\u5206\u6790\")  # \u7b80\u6d01\u660e\u786e\u7684\u6807\u9898\nchart.set_description(\"\u5c55\u793a\u7b2c\u56db\u5b63\u5ea6\u6708\u5ea6\u8425\u6536\u53d8\u5316\u53ca\u540c\u6bd4\u589e\u957f\u60c5\u51b5\")  # \u8be6\u7ec6\u8bf4\u660e\nchart.set_data_summary(\"\u603b\u8425\u6536: \u00a52.4M | \u589e\u957f\u7387: +15%\")  # \u5173\u952e\u6570\u636e\nchart.set_alt_text(\"Q4\u8425\u6536\u5206\u6790\u67f1\u72b6\u56fe\")  # \u65e0\u969c\u788d\u8bbf\u95ee\n</code></pre>"},{"location":"zh/user-guide/chart-widget/#_16","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/chart-widget/#q","title":"Q: \u56fe\u7247\u65e0\u6cd5\u663e\u793a\u600e\u4e48\u529e\uff1f","text":"<p>A: \u68c0\u67e5\u4ee5\u4e0b\u51e0\u70b9\uff1a - \u786e\u8ba4\u56fe\u7247URL\u662f\u5426\u6b63\u786e - \u9a8c\u8bc1\u56fe\u7247\u6587\u4ef6\u662f\u5426\u5b58\u5728 - \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\u548c\u8bbf\u95ee\u6743\u9650</p>"},{"location":"zh/user-guide/chart-widget/#q_1","title":"Q: \u5982\u4f55\u9009\u62e9\u5408\u9002\u7684\u56fe\u7247\u683c\u5f0f\uff1f","text":"<p>A: \u63a8\u8350\u4f7f\u7528PNG\u683c\u5f0f\u4ee5\u83b7\u5f97\u6700\u4f73\u517c\u5bb9\u6027\uff1a Python<pre><code>chart.set_image_url(\"chart.png\")  # \u2705 \u63a8\u8350\n# chart.set_image_url(\"chart.webp\")  # \u274c \u517c\u5bb9\u6027\u8f83\u5dee\n</code></pre></p>"},{"location":"zh/user-guide/chart-widget/#q_2","title":"Q: \u56fe\u8868\u5728\u79fb\u52a8\u7aef\u663e\u793a\u5f02\u5e38\uff1f","text":"<p>A: \u8bbe\u7f6e\u5408\u9002\u7684\u6700\u5927\u5bbd\u5ea6\uff1a Python<pre><code>chart.set_max_width(\"100%\")  # \u81ea\u52a8\u9002\u914d\nchart.set_max_width(\"600px\")  # \u9650\u5236\u6700\u5927\u5bbd\u5ea6\n</code></pre></p>"},{"location":"zh/user-guide/chart-widget/#q_3","title":"Q: \u5982\u4f55\u6dfb\u52a0\u6570\u636e\u6458\u8981\uff1f","text":"<p>A: \u4f7f\u7528<code>set_data_summary()</code>\u65b9\u6cd5\uff1a Python<pre><code>chart.set_data_summary(\"\u5173\u952e\u6307\u6807: \u8f6c\u5316\u7387 12% | ROI 3.2x | \u5ba2\u5355\u4ef7 \u00a5890\")\n</code></pre></p>"},{"location":"zh/user-guide/chart-widget/#_17","title":"\ud83d\udea8 \u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u56fe\u7247\u683c\u5f0f: \u63a8\u8350\u4f7f\u7528PNG\u683c\u5f0f\u4ee5\u83b7\u5f97\u6700\u4f73\u517c\u5bb9\u6027</li> <li>\u6587\u4ef6\u5927\u5c0f: \u63a7\u5236\u56fe\u7247\u6587\u4ef6\u5927\u5c0f\uff0c\u907f\u514d\u90ae\u4ef6\u8fc7\u5927</li> <li>\u7f51\u7edc\u8bbf\u95ee: \u786e\u4fdd\u7f51\u7edc\u56fe\u7247URL\u5728\u90ae\u4ef6\u53d1\u9001\u65f6\u53ef\u8bbf\u95ee</li> <li>\u66ff\u4ee3\u6587\u672c: \u4e3a\u6240\u6709\u56fe\u8868\u8bbe\u7f6e\u6709\u610f\u4e49\u7684alt_text</li> <li>\u79fb\u52a8\u9002\u914d: \u4f7f\u7528\u767e\u5206\u6bd4\u5bbd\u5ea6\u786e\u4fdd\u79fb\u52a8\u8bbe\u5907\u663e\u793a\u6b63\u5e38</li> </ol>"},{"location":"zh/user-guide/chart-widget/#_18","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>ImageWidget - \u57fa\u7840\u56fe\u7247\u5c55\u793a\u7ec4\u4ef6</li> <li>MetricWidget - \u6570\u636e\u6307\u6807\u5c55\u793a\u7ec4\u4ef6</li> <li>CardWidget - \u53ef\u4ee5\u5305\u542b\u56fe\u8868\u7684\u5361\u7247\u7ec4\u4ef6</li> <li>TextWidget - \u56fe\u8868\u6807\u9898\u548c\u8bf4\u660e\u6587\u5b57</li> </ul>"},{"location":"zh/user-guide/checklist-widget/","title":"ChecklistWidget \u6e05\u5355\u7ec4\u4ef6","text":"<p>ChecklistWidget \u662f\u4e00\u4e2a\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u521b\u5efa\u4efb\u52a1\u6e05\u5355\u3001\u5f85\u529e\u4e8b\u9879\u6216\u68c0\u67e5\u5217\u8868\u7684\u7ec4\u4ef6\u3002\u5b83\u652f\u6301\u591a\u79cd\u72b6\u6001\u663e\u793a\u3001\u8fdb\u5ea6\u7edf\u8ba1\u548c\u7075\u6d3b\u7684\u6837\u5f0f\u914d\u7f6e\uff0c\u5e2e\u52a9\u7528\u6237\u6e05\u6670\u5730\u5c55\u793a\u9879\u76ee\u8fdb\u5ea6\u548c\u4efb\u52a1\u5b8c\u6210\u60c5\u51b5\u3002</p>"},{"location":"zh/user-guide/checklist-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c81. \u6e05\u5355\u7ec4\u4ef6\u5c55\u793a","text":"\u6e05\u5355\u7ec4\u4ef6\u9884\u89c8 \u6e05\u5355\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:54:04 \u9879\u76ee\u5f00\u53d1\u6e05\u5355 \u5b8c\u6210\u8fdb\u5ea6 2/5 (40.0%)                      \u2713                  \u5b8c\u6210\u9879\u76ee\u9700\u6c42\u5206\u6790 \u5df2\u5b8c\u6210\u9700\u6c42\u8c03\u7814\u548c\u7528\u6237\u8bbf\u8c08 \u5b8c\u6210                      \u2713                  \u8bbe\u8ba1\u7cfb\u7edf\u67b6\u6784 \u5b8c\u6210\u6574\u4f53\u67b6\u6784\u8bbe\u8ba1\u548c\u6280\u672f\u9009\u578b \u5b8c\u6210                      \u25cb                  \u7f16\u5199\u6838\u5fc3\u4ee3\u7801 \u6b63\u5728\u5f00\u53d1\u6838\u5fc3\u529f\u80fd\u6a21\u5757                      \u25cb                  \u8fdb\u884c\u5355\u5143\u6d4b\u8bd5 \u7f16\u5199\u548c\u6267\u884c\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b                      \u2014                  \u7cfb\u7edf\u96c6\u6210\u6d4b\u8bd5 \u7b49\u5f85\u5f00\u53d1\u5b8c\u6210\u540e\u8fdb\u884c \u8df3\u8fc7                      \u25cb                  \u90e8\u7f72\u4e0a\u7ebf \u751f\u4ea7\u73af\u5883\u90e8\u7f72\u548c\u914d\u7f6e <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/checklist-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcdd \u591a\u79cd\u72b6\u6001: \u652f\u6301\u5df2\u5b8c\u6210\u3001\u672a\u5b8c\u6210\u3001\u8df3\u8fc7\u7b49\u591a\u79cd\u9879\u76ee\u72b6\u6001</li> <li>\ud83c\udfa8 \u72b6\u6001\u4e3b\u9898: \u57fa\u4e8eStatusType\u7684\u4e3b\u9898\u989c\u8272\u914d\u7f6e\uff0c\u5982\u6210\u529f\u3001\u8b66\u544a\u3001\u9519\u8bef\u7b49</li> <li>\ud83d\udcca \u8fdb\u5ea6\u7edf\u8ba1: \u53ef\u9009\u7684\u8fdb\u5ea6\u6761\u548c\u5b8c\u6210\u767e\u5206\u6bd4\u663e\u793a</li> <li>\ud83d\udd27 \u7075\u6d3b\u914d\u7f6e: \u652f\u6301\u7d27\u51d1\u6a21\u5f0f\u3001\u81ea\u5b9a\u4e49\u63cf\u8ff0\u3001\u72b6\u6001\u6587\u672c\u7b49</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/checklist-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/checklist-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ChecklistWidget\n\n# \u521b\u5efa\u57fa\u7840\u6e05\u5355\nchecklist = ChecklistWidget()\nchecklist.set_title(\"\u5f00\u53d1\u4efb\u52a1\")\nchecklist.add_item(\"\u5b8c\u6210\u9700\u6c42\u5206\u6790\", True)\nchecklist.add_item(\"\u8bbe\u8ba1\u6570\u636e\u5e93\", True)\nchecklist.add_item(\"\u7f16\u5199\u4ee3\u7801\", False)\n\nemail = Email(\"\u9879\u76ee\u8fdb\u5ea6\u62a5\u544a\")\nemail.add_widget(checklist)\n</code></pre>"},{"location":"zh/user-guide/checklist-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u5e26\u8fdb\u5ea6\u7edf\u8ba1\u548c\u72b6\u6001\u7684\u6e05\u5355\nchecklist = ChecklistWidget()\nchecklist.set_title(\"\u9879\u76ee\u91cc\u7a0b\u7891\")\nchecklist.add_item(\"\u9879\u76ee\u542f\u52a8\", True, \"success\", \"\u9879\u76ee\u5df2\u6b63\u5f0f\u542f\u52a8\")\nchecklist.add_item(\"\u9700\u6c42\u786e\u8ba4\", True, \"success\", \"\u6240\u6709\u9700\u6c42\u5df2\u786e\u8ba4\")\nchecklist.add_item(\"\u8bbe\u8ba1\u8bc4\u5ba1\", False, \"warning\", \"\u8bbe\u8ba1\u65b9\u6848\u5f85\u5ba1\u6838\")\nchecklist.add_item(\"\u5f00\u53d1\u5b9e\u65bd\", False, \"pending\", \"\u7b49\u5f85\u5f00\u53d1\u56e2\u961f\")\nchecklist.show_progress_stats(True)\nchecklist.set_compact_mode(True)\n\nemail.add_widget(checklist)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: ChecklistWidget API</p>"},{"location":"zh/user-guide/checklist-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/checklist-widget/#_7","title":"\u72b6\u6001\u7c7b\u578b\u548c\u4e3b\u9898\u989c\u8272","text":"<ul> <li>success: \u7eff\u8272 (#107c10) - \u5df2\u5b8c\u6210\u7684\u91cd\u8981\u4efb\u52a1</li> <li>warning: \u6a59\u8272 (#ff8c00) - \u9700\u8981\u6ce8\u610f\u7684\u9879\u76ee</li> <li>error: \u7ea2\u8272 (#d13438) - \u5931\u8d25\u6216\u963b\u585e\u7684\u4efb\u52a1</li> <li>info: \u84dd\u8272 (#0078d4) - \u4fe1\u606f\u6027\u6216\u53c2\u8003\u6027\u9879\u76ee</li> <li>primary: \u84dd\u8272 (#0078d4) - \u6b63\u5728\u8fdb\u884c\u7684\u91cd\u8981\u4efb\u52a1</li> </ul>"},{"location":"zh/user-guide/checklist-widget/#_8","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/checklist-widget/#1","title":"1. \u9879\u76ee\u7ba1\u7406\u6e05\u5355\u9879\u76ee\u91cc\u7a0b\u7891\u5f53\u524d\u51b2\u523a","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.checklist_widget import ChecklistWidget\n\n# \u521b\u5efa\u9879\u76ee\u7ba1\u7406\u62a5\u544a\u90ae\u4ef6\nemail = Email(\"\u9879\u76ee\u7ba1\u7406\u62a5\u544a\")\n\n# \u4e3b\u8981\u91cc\u7a0b\u7891\nchecklist1 = ChecklistWidget()\nchecklist1.set_title(\"\u9879\u76ee\u91cc\u7a0b\u7891\")\nchecklist1.add_item(\"\u9879\u76ee\u542f\u52a8\", True, \"success\")\nchecklist1.add_item(\"\u9700\u6c42\u5206\u6790\", True, \"success\")\nchecklist1.add_item(\"\u6982\u8981\u8bbe\u8ba1\", True, \"success\")\nchecklist1.add_item(\"\u8be6\u7ec6\u8bbe\u8ba1\", False, \"warning\")\nchecklist1.add_item(\"\u5f00\u53d1\u5b9e\u65bd\", False, \"pending\")\nchecklist1.show_progress_stats(True)\n\nemail.add_widget(checklist1)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"project_management_report.html\")\n</code></pre> \u9879\u76ee\u7ba1\u7406\u62a5\u544a \u9879\u76ee\u7ba1\u7406\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:12:22 \u5b8c\u6210\u8fdb\u5ea6 3/7 (42.9%)                      \u2713                  \u9879\u76ee\u542f\u52a8 \u5b8c\u6210                      \u2713                  \u9700\u6c42\u5206\u6790 \u5b8c\u6210                      \u2713                  \u6982\u8981\u8bbe\u8ba1 \u5b8c\u6210                      !                  \u8be6\u7ec6\u8bbe\u8ba1                      \u25cb                  \u5f00\u53d1\u5b9e\u65bd                      \u25cb                  \u6d4b\u8bd5\u9a8c\u6536                      \u25cb                  \u4e0a\u7ebf\u90e8\u7f72 \u5b8c\u6210\u8fdb\u5ea6 1/3 (33.3%)                      \u2713                  \u7528\u6237\u767b\u5f55\u529f\u80fd \u5df2\u901a\u8fc7\u4ee3\u7801\u5ba1\u67e5 \u5b8c\u6210                      !                  \u6570\u636e\u5bfc\u51fa\u529f\u80fd API\u8bbe\u8ba1\u5f85\u786e\u8ba4                      \u25cf                  \u90ae\u4ef6\u901a\u77e5\u529f\u80fd \u5f00\u53d1\u4e2d                      i                  \u6027\u80fd\u76d1\u63a7 \u4e0b\u4e2a\u51b2\u523a\u5904\u7406 \u4fe1\u606f <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/checklist-widget/#2","title":"2. \u7cfb\u7edf\u8fd0\u7ef4\u68c0\u67e5\u6e05\u5355\u7cfb\u7edf\u5065\u5eb7\u68c0\u67e5\u5b89\u5168\u68c0\u67e5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.checklist_widget import ChecklistWidget\n\n# \u521b\u5efa\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\")\n\n# \u65e5\u5e38\u68c0\u67e5\u6e05\u5355\nchecklist = ChecklistWidget()\nchecklist.set_title(\"\u7cfb\u7edf\u5065\u5eb7\u68c0\u67e5\")\nchecklist.add_item(\"\u670d\u52a1\u5668\u72b6\u6001\", True, \"success\")\nchecklist.add_item(\"\u6570\u636e\u5e93\u8fde\u63a5\", True, \"success\")\nchecklist.add_item(\"\u78c1\u76d8\u7a7a\u95f4\", False, \"warning\", \"\u9700\u8981\u5173\u6ce8\")\nchecklist.add_item(\"\u5185\u5b58\u4f7f\u7528\", True, \"success\")\nchecklist.add_item(\"\u7f51\u7edc\u8fde\u901a\", True, \"success\")\nchecklist.show_progress_stats(True)\n\nemail.add_widget(checklist)\n</code></pre> \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:12:42 \u5b8c\u6210\u8fdb\u5ea6 4/5 (80.0%)                      \u2713                  \u670d\u52a1\u5668\u72b6\u6001 \u5b8c\u6210                      \u2713                  \u6570\u636e\u5e93\u8fde\u63a5 \u5b8c\u6210                      !                  \u78c1\u76d8\u7a7a\u95f4 \u9700\u8981\u5173\u6ce8                      \u2713                  \u5185\u5b58\u4f7f\u7528 \u5b8c\u6210                      \u2713                  \u7f51\u7edc\u8fde\u901a \u5b8c\u6210 \u5b8c\u6210\u8fdb\u5ea6 2/4 (50.0%)                      \u2713                  SSL\u8bc1\u4e66 \u6709\u6548\u671f\u81f32024\u5e7412\u6708 \u5b8c\u6210                      \u2713                  \u9632\u706b\u5899\u89c4\u5219 \u5df2\u66f4\u65b0 \u5b8c\u6210                      !                  \u6f0f\u6d1e\u626b\u63cf \u53d1\u73b03\u4e2a\u4e2d\u7ea7\u6f0f\u6d1e                      \u2717                  \u8bbf\u95ee\u65e5\u5fd7 \u53d1\u73b0\u5f02\u5e38\u8bbf\u95ee <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/checklist-widget/#_9","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_checklist</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_checklist(\n    title=\"\u4efb\u52a1\u6e05\u5355\",\n    items=[\n        (\"\u4efb\u52a11\", True),\n        (\"\u4efb\u52a12\", False),\n        (\"\u4efb\u52a13\", False)\n    ],\n    show_progress=True,\n    compact_mode=True\n)\n</code></pre>"},{"location":"zh/user-guide/checklist-widget/#_10","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/checklist-widget/#q","title":"Q: \u5982\u4f55\u521b\u5efa\u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\uff1f","text":"<p>A: \u4f7f\u7528\u4e0d\u540c\u7684status_type\u6765\u8868\u793a\u4f18\u5148\u7ea7\uff1a Python<pre><code>checklist.add_item(\"\u9ad8\u4f18\u5148\u7ea7\", False, \"error\")    # \u7ea2\u8272-\u7d27\u6025\nchecklist.add_item(\"\u4e2d\u4f18\u5148\u7ea7\", False, \"warning\")  # \u6a59\u8272-\u91cd\u8981\nchecklist.add_item(\"\u4f4e\u4f18\u5148\u7ea7\", False, \"info\")     # \u84dd\u8272-\u666e\u901a\n</code></pre></p>"},{"location":"zh/user-guide/checklist-widget/#q_1","title":"Q: \u8df3\u8fc7\u72b6\u6001\u548c\u672a\u5b8c\u6210\u72b6\u6001\u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>A:  - \u672a\u5b8c\u6210 (False): \u8ba1\u5165\u603b\u8fdb\u5ea6\uff0c\u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1 - \u8df3\u8fc7 (None): \u4e0d\u8ba1\u5165\u8fdb\u5ea6\u7edf\u8ba1\uff0c\u88ab\u8df3\u8fc7\u7684\u4efb\u52a1</p>"},{"location":"zh/user-guide/checklist-widget/#q_2","title":"Q: \u8fdb\u5ea6\u6761\u4e3a\u4ec0\u4e48\u4e0d\u663e\u793a\uff1f","text":"<p>A: \u786e\u4fdd\u8c03\u7528\u4e86 <code>show_progress_stats(True)</code> \u65b9\u6cd5\u3002</p>"},{"location":"zh/user-guide/checklist-widget/#_11","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>ProgressWidget - \u5355\u9879\u8fdb\u5ea6\u663e\u793a</li> <li>StatusWidget - \u72b6\u6001\u4fe1\u606f\u5c55\u793a</li> <li>CardWidget - \u53ef\u4ee5\u5305\u542b\u6e05\u5355\u7684\u5361\u7247</li> <li>AlertWidget - \u53ef\u4e0e\u6e05\u5355\u914d\u5408\u4f7f\u7528\u7684\u63d0\u9192</li> </ul>"},{"location":"zh/user-guide/circular-progress-widget/","title":"CircularProgressWidget \u5706\u5f62\u8fdb\u5ea6\u7ec4\u4ef6","text":"<p>CircularProgressWidget\u662f\u4e00\u4e2a\u7528\u4e8e\u663e\u793a\u5706\u5f62\u8fdb\u5ea6\u6761\u7684\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u6bd4\u7ebf\u6027\u8fdb\u5ea6\u6761\u66f4\u7d27\u51d1\u7684\u89c6\u89c9\u6548\u679c\uff0c\u9002\u5408\u5728\u6709\u9650\u7a7a\u95f4\u5185\u5c55\u793a\u8fdb\u5ea6\u4fe1\u606f\u3002\u5b83\u652f\u6301\u591a\u79cd\u4e3b\u9898\u989c\u8272\u3001\u5c3a\u5bf8\u8bbe\u7f6e\u548c\u8fdb\u5ea6\u7ba1\u7406\u529f\u80fd\uff0c\u662f\u7cfb\u7edf\u76d1\u63a7\u548c\u4efb\u52a1\u8fdb\u5ea6\u5c55\u793a\u7684\u7406\u60f3\u9009\u62e9\u3002</p>"},{"location":"zh/user-guide/circular-progress-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c8","text":"\u2b55 \u5706\u5f62\u8fdb\u5ea6\u7ec4\u4ef6 75% \u4efb\u52a1\u8fdb\u5ea6 60% CPU\u4f7f\u7528\u7387 90% \u78c1\u76d8\u7a7a\u95f4 \u591a\u79cd\u4e3b\u9898 \u8fdb\u5ea6\u7ba1\u7406 \u6837\u5f0f\u5b9a\u5236"},{"location":"zh/user-guide/circular-progress-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83c\udfa8 \u591a\u79cd\u4e3b\u9898: \u652f\u6301PRIMARY\u3001SUCCESS\u3001WARNING\u3001ERROR\u3001INFO\u7b49\u4e3b\u9898\u989c\u8272</li> <li>\ud83d\udcca \u8fdb\u5ea6\u7ba1\u7406: \u652f\u6301\u6570\u503c\u8bbe\u7f6e\u3001\u589e\u51cf\u64cd\u4f5c\u3001\u5b8c\u6210\u91cd\u7f6e\u7b49\u4fbf\u6377\u529f\u80fd</li> <li>\ud83d\udd27 \u6837\u5f0f\u5b9a\u5236: \u7075\u6d3b\u7684\u5c3a\u5bf8\u63a7\u5236\u3001\u7ebf\u6761\u5bbd\u5ea6\u3001\u6807\u7b7e\u663e\u793a\u8bbe\u7f6e</li> <li>\ud83d\udcc8 \u975e\u767e\u5206\u6bd4: \u652f\u6301\u81ea\u5b9a\u4e49\u6700\u5927\u503c\uff0c\u4e0d\u9650\u4e8e\u767e\u5206\u6bd4\u663e\u793a</li> <li>\u26a1 \u4fbf\u6377\u64cd\u4f5c: \u63d0\u4f9bincrement\u3001decrement\u3001complete\u3001reset\u7b49\u5feb\u6377\u65b9\u6cd5</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/circular-progress-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/circular-progress-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CircularProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\n# \u521b\u5efa\u57fa\u7840\u5706\u5f62\u8fdb\u5ea6\u6761\nprogress = CircularProgressWidget()\nprogress.set_value(65)\nprogress.set_label(\"\u4e0b\u8f7d\u8fdb\u5ea6\")\nprogress.set_theme(ProgressTheme.PRIMARY)\n\nemail = Email(\"\u8fdb\u5ea6\u62a5\u544a\")\nemail.add_widget(progress)\n</code></pre>"},{"location":"zh/user-guide/circular-progress-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u7cfb\u7edf\u76d1\u63a7\u6307\u6807\u7ec4\u5408\nfrom email_widget.widgets import ColumnWidget\n\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u4eea\u8868\u677f\")\n\n# CPU\u4f7f\u7528\u7387\ncpu_progress = (CircularProgressWidget()\n                .set_value(35)\n                .set_label(\"CPU\u4f7f\u7528\u7387\")\n                .set_theme(ProgressTheme.SUCCESS)\n                .set_size(\"100px\")\n                .set_stroke_width(\"8px\"))\n\n# \u5185\u5b58\u4f7f\u7528\u7387\nmemory_progress = (CircularProgressWidget()\n                   .set_value(68)\n                   .set_label(\"\u5185\u5b58\u4f7f\u7528\u7387\")\n                   .set_theme(ProgressTheme.WARNING)\n                   .set_size(\"100px\")\n                   .set_stroke_width(\"8px\"))\n\n# \u78c1\u76d8\u4f7f\u7528\u7387\ndisk_progress = (CircularProgressWidget()\n                 .set_value(85)\n                 .set_label(\"\u78c1\u76d8\u4f7f\u7528\u7387\")\n                 .set_theme(ProgressTheme.ERROR)\n                 .set_size(\"100px\")\n                 .set_stroke_width(\"8px\"))\n\n# \u4f7f\u7528\u5217\u5e03\u5c40\u7ec4\u5408\ncolumn = ColumnWidget().set_columns(3)\ncolumn.add_widgets([cpu_progress, memory_progress, disk_progress])\nemail.add_widget(column)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: CircularProgressWidget API</p>"},{"location":"zh/user-guide/circular-progress-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/circular-progress-widget/#_7","title":"\u4e3b\u9898\u989c\u8272\u548c\u5e94\u7528\u573a\u666f","text":"<ul> <li>PRIMARY: \u84dd\u8272 (#0078d4) - \u4e3b\u8981\u8fdb\u5ea6\u3001\u91cd\u8981\u6307\u6807</li> <li>SUCCESS: \u7eff\u8272 (#107c10) - \u6b63\u5e38\u72b6\u6001\u3001\u6210\u529f\u5b8c\u6210</li> <li>WARNING: \u6a59\u8272 (#ff8c00) - \u9700\u8981\u6ce8\u610f\u3001\u63a5\u8fd1\u9608\u503c</li> <li>ERROR: \u7ea2\u8272 (#d13438) - \u9519\u8bef\u72b6\u6001\u3001\u8d85\u51fa\u9650\u5236</li> <li>INFO: \u84dd\u8272 (#0078d4) - \u4fe1\u606f\u5c55\u793a\u3001\u53c2\u8003\u6570\u636e</li> </ul>"},{"location":"zh/user-guide/circular-progress-widget/#_8","title":"\u5c3a\u5bf8\u89c4\u683c\u5efa\u8bae","text":"<ul> <li>\u5c0f\u578b\u6307\u6807: 60px - 80px\uff0c\u9002\u5408\u96c6\u6210\u663e\u793a</li> <li>\u5e38\u89c4\u6307\u6807: 100px - 120px\uff0c\u9002\u5408\u4e3b\u8981\u5c55\u793a</li> <li>\u91cd\u8981\u6307\u6807: 150px - 200px\uff0c\u9002\u5408\u7a81\u51fa\u663e\u793a</li> <li>\u7ebf\u6761\u5bbd\u5ea6: \u5c0f\u5c3a\u5bf8\u75284-6px\uff0c\u5927\u5c3a\u5bf8\u75288-12px</li> </ul>"},{"location":"zh/user-guide/circular-progress-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/circular-progress-widget/#1","title":"1. \u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CircularProgressWidget, ColumnWidget\nfrom email_widget.core.enums import ProgressTheme\n\nemail = Email(\"\u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7\")\n\n# \u6839\u636e\u6570\u503c\u9009\u62e9\u5408\u9002\u4e3b\u9898\ndef get_theme_by_value(value):\n    if value &lt; 50:\n        return ProgressTheme.SUCCESS\n    elif value &lt; 80:\n        return ProgressTheme.WARNING\n    else:\n        return ProgressTheme.ERROR\n\n# \u521b\u5efa\u76d1\u63a7\u6307\u6807\nmetrics = [\n    {\"label\": \"CPU\", \"value\": 45, \"size\": \"80px\"},\n    {\"label\": \"\u5185\u5b58\", \"value\": 72, \"size\": \"80px\"},\n    {\"label\": \"\u7f51\u7edc\", \"value\": 28, \"size\": \"80px\"},\n    {\"label\": \"\u78c1\u76d8\", \"value\": 91, \"size\": \"80px\"}\n]\n\nprogress_widgets = []\nfor metric in metrics:\n    progress = (CircularProgressWidget()\n                .set_value(metric[\"value\"])\n                .set_label(metric[\"label\"])\n                .set_theme(get_theme_by_value(metric[\"value\"]))\n                .set_size(metric[\"size\"])\n                .set_stroke_width(\"6px\"))\n    progress_widgets.append(progress)\n\n# \u4f7f\u75284\u5217\u5e03\u5c40\ndashboard = ColumnWidget().set_columns(4)\ndashboard.add_widgets(progress_widgets)\nemail.add_widget(dashboard)\n</code></pre> \u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7 \u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:54:12 45%                                      CPU                                  72%                                      \u5185\u5b58                                  28%                                      \u7f51\u7edc                                  91%                                      \u78c1\u76d8                                  \u81ea\u52a8\u4e3b\u9898\u9009\u62e9\u89c4\u5219\uff1a                      &lt;50% \u6b63\u5e38                                       50-80% \u8b66\u544a                                       &gt;80% \u9519\u8bef                                       \u5176\u4ed6\u4fe1\u606f                  <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/circular-progress-widget/#2","title":"2. \u9879\u76ee\u8fdb\u5ea6\u5c55\u793a","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CircularProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\nemail = Email(\"\u9879\u76ee\u8fdb\u5ea6\u62a5\u544a\")\n\n# \u4e3b\u8981\u9879\u76ee\u8fdb\u5ea6\nmain_progress = (CircularProgressWidget()\n                 .set_value(75)\n                 .set_label(\"\u9879\u76ee\u603b\u4f53\u8fdb\u5ea6\")\n                 .set_theme(ProgressTheme.INFO)\n                 .set_size(\"150px\")\n                 .set_stroke_width(\"12px\"))\n\nemail.add_widget(main_progress)\n\n# \u5404\u9636\u6bb5\u8fdb\u5ea6\nphases = [\n    {\"name\": \"\u9700\u6c42\u5206\u6790\", \"progress\": 100, \"theme\": ProgressTheme.SUCCESS},\n    {\"name\": \"\u7cfb\u7edf\u8bbe\u8ba1\", \"progress\": 100, \"theme\": ProgressTheme.SUCCESS},\n    {\"name\": \"\u5f00\u53d1\u5b9e\u65bd\", \"progress\": 80, \"theme\": ProgressTheme.WARNING},\n    {\"name\": \"\u6d4b\u8bd5\u9a8c\u6536\", \"progress\": 30, \"theme\": ProgressTheme.INFO}\n]\n\nphase_widgets = []\nfor phase in phases:\n    progress = (CircularProgressWidget()\n                .set_value(phase[\"progress\"])\n                .set_label(phase[\"name\"])\n                .set_theme(phase[\"theme\"])\n                .set_size(\"100px\")\n                .set_stroke_width(\"8px\"))\n    phase_widgets.append(progress)\n\nphases_column = ColumnWidget().set_columns(2)\nphases_column.add_widgets(phase_widgets)\nemail.add_widget(phases_column)\n</code></pre> \u9879\u76ee\u8fdb\u5ea6\u62a5\u544a \u9879\u76ee\u8fdb\u5ea6\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:55:03 \u9879\u76ee\u603b\u4f53\u8fdb\u5ea6 75% \u9879\u76ee\u603b\u4f53\u8fdb\u5ea6 \u5404\u9636\u6bb5\u8be6\u7ec6\u8fdb\u5ea6 100% \u9700\u6c42\u5206\u6790 \u5df2\u5b8c\u6210 100% \u7cfb\u7edf\u8bbe\u8ba1 \u5df2\u5b8c\u6210 80% \u5f00\u53d1\u5b9e\u65bd \u8fdb\u884c\u4e2d 30% \u6d4b\u8bd5\u9a8c\u6536 \u5df2\u5f00\u59cb <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/circular-progress-widget/#3","title":"3. \u975e\u767e\u5206\u6bd4\u8fdb\u5ea6","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import CircularProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\nemail = Email(\"\u6570\u636e\u5904\u7406\u8fdb\u5ea6\")\n\n# \u6587\u4ef6\u5904\u7406\u8fdb\u5ea6\uff08\u4ee5\u6587\u4ef6\u6570\u4e3a\u5355\u4f4d\uff09\nfile_progress = (CircularProgressWidget()\n                 .set_max_value(1000)      # \u603b\u51711000\u4e2a\u6587\u4ef6\n                 .set_value(750)           # \u5df2\u5904\u7406750\u4e2a\n                 .set_label(\"\u6587\u4ef6\u5904\u7406\")     # \u663e\u793a75%\n                 .set_theme(ProgressTheme.INFO)\n                 .set_size(\"120px\"))\n\nemail.add_widget(file_progress)\n\n# \u6570\u636e\u4e0b\u8f7d\u8fdb\u5ea6\uff08\u4ee5MB\u4e3a\u5355\u4f4d\uff09\ndownload_progress = (CircularProgressWidget()\n                     .set_max_value(500)      # \u603b\u5927\u5c0f500MB\n                     .set_value(350)          # \u5df2\u4e0b\u8f7d350MB\n                     .set_label(\"\u6570\u636e\u4e0b\u8f7d\")    # \u663e\u793a70%\n                     .set_theme(ProgressTheme.PRIMARY)\n                     .set_size(\"120px\"))\n\nemail.add_widget(download_progress)\n</code></pre> \u6570\u636e\u5904\u7406\u8fdb\u5ea6 \u6570\u636e\u5904\u7406\u8fdb\u5ea6 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:55:48 \u975e\u767e\u5206\u6bd4\u8fdb\u5ea6\u5c55\u793a                 \u4ee5\u4e0b\u8fdb\u5ea6\u6761\u5c55\u793a\u7684\u662f\u5177\u4f53\u7684\u6570\u503c\u5355\u4f4d\uff08\u6587\u4ef6\u6570\u3001\u6570\u636e\u5927\u5c0f\u7b49\uff09\uff0c\u800c\u975e\u4f20\u7edf\u7684\u767e\u5206\u6bd4\u5f62\u5f0f\uff0c\u63d0\u4f9b\u66f4\u76f4\u89c2\u7684\u8fdb\u5ea6\u4fe1\u606f\u3002                                               75% 750/1000 \u6587\u4ef6\u5904\u7406                              \u6b63\u5728\u5904\u7406\u6570\u636e\u6587\u4ef6\uff0c\u5df2\u5b8c\u6210750\u4e2a\u6587\u4ef6\uff0c\u51711000\u4e2a\u6587\u4ef6                          750 \u5df2\u5904\u7406 250 \u5269\u4f59 1000 \u603b\u8ba1                                  70% 350/500MB \u6570\u636e\u4e0b\u8f7d                              \u6b63\u5728\u4e0b\u8f7d\u6570\u636e\u5305\uff0c\u5df2\u4e0b\u8f7d350MB\uff0c\u603b\u5927\u5c0f500MB                          350MB \u5df2\u4e0b\u8f7d 150MB \u5269\u4f59 500MB \u603b\u8ba1 \u6280\u672f\u5b9e\u73b0\u8bf4\u660e                 \u901a\u8fc7\u8bbe\u7f6e <code>max_value</code> \u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u5355\u4f4d\u4f5c\u4e3a\u8fdb\u5ea6\u57fa\u51c6\uff1a                 <ul> <li>\u6587\u4ef6\u5904\u7406\uff1amax_value=1000\uff0c\u5f53\u524d\u503c750\uff0c\u663e\u793a75%</li> <li>\u6570\u636e\u4e0b\u8f7d\uff1amax_value=500\uff0c\u5f53\u524d\u503c350\uff0c\u663e\u793a70%</li> </ul> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/circular-progress-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_circular_progress</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_circular_progress(\n    value=75,\n    label=\"\u4efb\u52a1\u8fdb\u5ea6\",\n    theme=\"success\"\n)\n\n# \u5e26\u6837\u5f0f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_circular_progress(\n    value=68,\n    label=\"CPU\u4f7f\u7528\u7387\",\n    theme=\"warning\",\n    size=\"100px\",\n    stroke_width=\"8px\"\n)\n\n# \u975e\u767e\u5206\u6bd4\u8fdb\u5ea6\nemail.add_circular_progress(\n    value=750,\n    max_value=1000,\n    label=\"\u6587\u4ef6\u5904\u7406\",\n    theme=\"info\",\n    size=\"120px\"\n)\n</code></pre>"},{"location":"zh/user-guide/circular-progress-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/circular-progress-widget/#q","title":"Q: \u5982\u4f55\u6839\u636e\u6570\u503c\u81ea\u52a8\u9009\u62e9\u4e3b\u9898\uff1f","text":"<p>A: \u521b\u5efa\u4e3b\u9898\u9009\u62e9\u51fd\u6570\uff1a Python<pre><code>def auto_theme(value):\n    if value &lt; 50:\n        return ProgressTheme.SUCCESS\n    elif value &lt; 80:\n        return ProgressTheme.WARNING\n    else:\n        return ProgressTheme.ERROR\n\nprogress.set_theme(auto_theme(85))  # \u81ea\u52a8\u9009\u62e9ERROR\u4e3b\u9898\n</code></pre></p>"},{"location":"zh/user-guide/circular-progress-widget/#q_1","title":"Q: \u5982\u4f55\u5b9e\u73b0\u52a8\u6001\u8fdb\u5ea6\u66f4\u65b0\uff1f","text":"<p>A: \u4f7f\u7528increment\u548cdecrement\u65b9\u6cd5\uff1a Python<pre><code>progress = CircularProgressWidget().set_value(50)\nprogress.increment(10)  # \u589e\u52a0\u523060%\nprogress.decrement(5)   # \u51cf\u5c11\u523055%\nprogress.complete()     # \u8bbe\u7f6e\u4e3a100%\nprogress.reset()        # \u91cd\u7f6e\u4e3a0%\n</code></pre></p>"},{"location":"zh/user-guide/circular-progress-widget/#q_2","title":"Q: \u5706\u5f62\u8fdb\u5ea6\u6761\u592a\u5c0f\u6216\u592a\u5927\u600e\u4e48\u529e\uff1f","text":"<p>A: \u8c03\u6574\u5c3a\u5bf8\u548c\u7ebf\u6761\u5bbd\u5ea6\uff1a Python<pre><code># \u5c0f\u5c3a\u5bf8\nprogress.set_size(\"60px\").set_stroke_width(\"4px\")\n# \u5927\u5c3a\u5bf8\nprogress.set_size(\"200px\").set_stroke_width(\"15px\")\n</code></pre></p>"},{"location":"zh/user-guide/circular-progress-widget/#q_3","title":"Q: \u8fdb\u5ea6\u503c\u8d85\u51fa\u8303\u56f4\u4f1a\u600e\u6837\uff1f","text":"<p>A: \u503c\u4f1a\u81ea\u52a8\u9650\u5236\u57280\u5230max_value\u4e4b\u95f4\uff1a Python<pre><code>progress.set_max_value(100)\nprogress.set_value(150)  # \u81ea\u52a8\u9650\u5236\u4e3a100\nprogress.set_value(-10)  # \u81ea\u52a8\u9650\u5236\u4e3a0\n</code></pre></p>"},{"location":"zh/user-guide/circular-progress-widget/#q_4","title":"Q: \u5982\u4f55\u521b\u5efa\u591a\u4e2a\u76f8\u540c\u6837\u5f0f\u7684\u8fdb\u5ea6\u6761\uff1f","text":"<p>A: \u4f7f\u7528\u914d\u7f6e\u51fd\u6570\uff1a Python<pre><code>def create_standard_progress(value, label):\n    return (CircularProgressWidget()\n            .set_value(value)\n            .set_label(label)\n            .set_size(\"80px\")\n            .set_stroke_width(\"6px\")\n            .set_theme(get_theme_by_value(value)))\n\nprogress1 = create_standard_progress(60, \"CPU\")\nprogress2 = create_standard_progress(80, \"\u5185\u5b58\")\n</code></pre></p>"},{"location":"zh/user-guide/circular-progress-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>ProgressWidget - \u7ebf\u6027\u8fdb\u5ea6\u6761\u7ec4\u4ef6</li> <li>MetricWidget - \u6570\u636e\u6307\u6807\u5c55\u793a\u7ec4\u4ef6</li> <li>StatusWidget - \u72b6\u6001\u4fe1\u606f\u5c55\u793a\u7ec4\u4ef6</li> <li>CardWidget - \u53ef\u4ee5\u5305\u542b\u8fdb\u5ea6\u6761\u7684\u5361\u7247\u7ec4\u4ef6</li> <li>ColumnWidget - \u7528\u4e8e\u5e03\u5c40\u591a\u4e2a\u8fdb\u5ea6\u6761\u7ec4\u4ef6</li> </ul>"},{"location":"zh/user-guide/column-widget/","title":"ColumnWidget \u5217\u5e03\u5c40\u7ec4\u4ef6","text":"<p>ColumnWidget\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5e03\u5c40\u7ec4\u4ef6\uff0c\u7528\u4e8e\u521b\u5efa\u591a\u5217\u5e03\u5c40\uff0c\u5c06\u591a\u4e2aWidget\u6309\u5217\u6392\u5217\u3002\u5b83\u652f\u6301\u81ea\u52a8\u5217\u6570\u6a21\u5f0f\u548c\u624b\u52a8\u8bbe\u7f6e\u5217\u6570\uff0c\u4f7f\u7528table\u5e03\u5c40\u786e\u4fdd\u5728\u5404\u79cd\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u7684\u517c\u5bb9\u6027\uff0c\u662f\u6784\u5efa\u590d\u6742\u90ae\u4ef6\u5e03\u5c40\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002</p>"},{"location":"zh/user-guide/column-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c8","text":"\ud83d\udcd0 \u5217\u5e03\u5c40\u7ec4\u4ef6 \u5217 1 <p>\u7b2c\u4e00\u5217\u5185\u5bb9\u5c55\u793a</p> \u5217 2 <p>\u7b2c\u4e8c\u5217\u5185\u5bb9\u5c55\u793a</p> \u5217 3 <p>\u7b2c\u4e09\u5217\u5185\u5bb9\u5c55\u793a</p> \u591a\u5217\u5e03\u5c40 \u81ea\u52a8\u5217\u6570 \u90ae\u4ef6\u517c\u5bb9"},{"location":"zh/user-guide/column-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcd0 \u81ea\u52a8\u5e03\u5c40: \u6839\u636eWidget\u6570\u91cf\u81ea\u52a8\u8ba1\u7b97\u6700\u4f18\u5217\u6570</li> <li>\ud83d\udd27 \u624b\u52a8\u63a7\u5236: \u652f\u63011-4\u5217\u7684\u624b\u52a8\u8bbe\u7f6e</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528table\u5e03\u5c40\u786e\u4fdd\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u6027</li> <li>\ud83c\udfa8 \u7075\u6d3b\u914d\u7f6e: \u652f\u6301\u5217\u95f4\u8ddd\u8c03\u6574\u548c\u54cd\u5e94\u5f0f\u8bbe\u8ba1</li> <li>\u26a1 \u52a8\u6001\u7ba1\u7406: \u652f\u6301\u52a8\u6001\u6dfb\u52a0\u3001\u79fb\u9664\u548c\u66f4\u65b0Widget</li> <li>\ud83d\udcf1 \u54cd\u5e94\u5f0f: \u5728\u4e0d\u540c\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u4fdd\u6301\u826f\u597d\u663e\u793a</li> </ul>"},{"location":"zh/user-guide/column-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/column-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ColumnWidget, TextWidget\n\n# \u521b\u5efa\u5217\u5e03\u5c40\u7ec4\u4ef6\ncolumn = ColumnWidget()\n\n# \u521b\u5efa\u5b50\u7ec4\u4ef6\nwidget1 = TextWidget().set_content(\"\u7b2c\u4e00\u5217\u5185\u5bb9\")\nwidget2 = TextWidget().set_content(\"\u7b2c\u4e8c\u5217\u5185\u5bb9\")  \nwidget3 = TextWidget().set_content(\"\u7b2c\u4e09\u5217\u5185\u5bb9\")\n\n# \u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\uff083\u4e2aWidget\u81ea\u52a8\u4f7f\u75283\u5217\uff09\ncolumn.add_widgets([widget1, widget2, widget3])\n\nemail = Email(\"\u591a\u5217\u5e03\u5c40\u793a\u4f8b\")\nemail.add_widget(column)\n</code></pre>"},{"location":"zh/user-guide/column-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u56fa\u5b9a\u5217\u6570\u5e03\u5c40\ncolumn = ColumnWidget()\ncolumn.set_columns(2)  # \u56fa\u5b9a\u4f7f\u75282\u5217\ncolumn.set_gap(\"25px\")  # \u8bbe\u7f6e\u5217\u95f4\u8ddd\n\n# \u521b\u5efa\u591a\u4e2a\u7ec4\u4ef6\nfrom email_widget.widgets import StatusWidget, MetricWidget\n\nstatus = StatusWidget().set_title(\"\u7cfb\u7edf\u72b6\u6001\")\nstatus.add_status(\"CPU\", \"68%\", \"warning\")\nstatus.add_status(\"\u5185\u5b58\", \"4.2GB\", \"info\")\n\nmetric = MetricWidget().set_title(\"\u6838\u5fc3\u6307\u6807\")\nmetric.add_metric(\"\u7528\u6237\u6570\", 12345, \"\u4eba\", \"+15.6%\", \"success\")\n\ncolumn.add_widgets([status, metric])\nemail.add_widget(column)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: ColumnWidget API</p>"},{"location":"zh/user-guide/column-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/column-widget/#_7","title":"\u81ea\u52a8\u5217\u6570\u7b97\u6cd5","text":"Widget\u6570\u91cf \u81ea\u52a8\u5217\u6570 \u5e03\u5c40\u8bf4\u660e 1 1\u5217 \u5355\u5217\u5168\u5bbd\u663e\u793a 2 2\u5217 \u5de6\u53f3\u4e24\u5217\u5747\u5300\u5206\u5e03 3 3\u5217 \u4e09\u5217\u5747\u5300\u5206\u5e03 4 2\u5217 2\u00d72\u7f51\u683c\u5e03\u5c40 5-6 3\u5217 \u4e09\u5217\u5e03\u5c40\uff0c\u6700\u540e\u4e00\u884c\u53ef\u80fd\u4e0d\u6ee1 7-8 2\u5217 \u4e24\u5217\u5e03\u5c40\uff0c\u591a\u884c\u663e\u793a 9+ 3\u5217 \u4e09\u5217\u5e03\u5c40\uff0c\u591a\u884c\u663e\u793a"},{"location":"zh/user-guide/column-widget/#_8","title":"\u5217\u95f4\u8ddd\u5efa\u8bae","text":"<ul> <li>\u6587\u672c\u5185\u5bb9: 15px - 20px</li> <li>\u5361\u7247\u7ec4\u4ef6: 20px - 25px  </li> <li>\u56fe\u7247\u7ec4\u4ef6: 10px - 15px</li> <li>\u72b6\u6001\u7ec4\u4ef6: 20px - 30px</li> </ul>"},{"location":"zh/user-guide/column-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/column-widget/#1","title":"1. \u81ea\u52a8\u5217\u6570\u5e03\u5c40","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ColumnWidget, CardWidget\n\nemail = Email(\"\u4eea\u8868\u677f\u62a5\u544a\")\n\n# \u521b\u5efa\u81ea\u52a8\u5217\u6570\u5e03\u5c40\nauto_column = ColumnWidget()  # \u9ed8\u8ba4\u81ea\u52a8\u6a21\u5f0f\n\n# \u521b\u5efa\u591a\u4e2a\u5361\u7247\uff086\u4e2aWidget\u81ea\u52a8\u4f7f\u75283\u5217\uff09\ncards = []\nfor i in range(6):\n    card = CardWidget()\n    card.set_title(f\"\u6307\u6807 {i+1}\")\n    card.set_content(f\"\u8fd9\u662f\u7b2c{i+1}\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a\")\n    cards.append(card)\n\nauto_column.add_widgets(cards)\nemail.add_widget(auto_column)\n</code></pre> \u81ea\u52a8\u5217\u6570\u5e03\u5c40 \u4eea\u8868\u677f\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:50:45 \u6307\u6807 1                                      \u8fd9\u662f\u7b2c1\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     98.5% \u2197\ufe0f +2.3% \u6307\u6807 2                                      \u8fd9\u662f\u7b2c2\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     1,234 \u2197\ufe0f +15.6% \u6307\u6807 3                                      \u8fd9\u662f\u7b2c3\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     \u00a558.2K \u2197\ufe0f +8.9% \u6307\u6807 4                                      \u8fd9\u662f\u7b2c4\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     4,567 \u2197\ufe0f +12.1% \u6307\u6807 5                                      \u8fd9\u662f\u7b2c5\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     89.3% \u2197\ufe0f +5.7% \u6307\u6807 6                                      \u8fd9\u662f\u7b2c6\u4e2a\u6307\u6807\u7684\u6570\u636e\u5c55\u793a                                     \u00a592.1K \u2197\ufe0f +18.4% <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/column-widget/#2","title":"2. \u56fa\u5b9a\u5217\u6570\u5e03\u5c40","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ColumnWidget, StatusWidget\n\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\")\n\n# \u521b\u5efa\u56fa\u5b9a2\u5217\u5e03\u5c40\nfixed_column = ColumnWidget().set_columns(2)\nfixed_column.set_gap(\"30px\")\n\n# \u7cfb\u7edf\u72b6\u6001\u7ec4\u4ef6\nsystem_status = StatusWidget()\nsystem_status.set_title(\"\u7cfb\u7edf\u8d44\u6e90\")\nsystem_status.add_status(\"CPU\u4f7f\u7528\u7387\", \"68%\", \"success\")\nsystem_status.add_status(\"\u5185\u5b58\u4f7f\u7528\", \"85%\", \"warning\")\n\n# \u670d\u52a1\u72b6\u6001\u7ec4\u4ef6\nservice_status = StatusWidget()\nservice_status.set_title(\"\u670d\u52a1\u72b6\u6001\")\nservice_status.add_status(\"Web\u670d\u52a1\", \"\u8fd0\u884c\u4e2d\", \"success\")\nservice_status.add_status(\"\u6570\u636e\u5e93\", \"\u6b63\u5e38\", \"success\")\n\nfixed_column.add_widgets([system_status, service_status])\nemail.add_widget(fixed_column)\n</code></pre> \u56fa\u5b9a\u5217\u6570\u5e03\u5c40 \u7cfb\u7edf\u76d1\u63a7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:51:28 \u7cfb\u7edf\u8d44\u6e90 CPU\u4f7f\u7528\u7387 68% \u5185\u5b58\u4f7f\u7528 85% \u78c1\u76d8\u7a7a\u95f4 45% \u7f51\u7edc\u5ef6\u8fdf 12ms \u670d\u52a1\u72b6\u6001 Web\u670d\u52a1 \u8fd0\u884c\u4e2d \u6570\u636e\u5e93 \u6b63\u5e38 \u7f13\u5b58\u670d\u52a1 \u6b63\u5e38 \u6d88\u606f\u961f\u5217 \u7a7a\u95f2 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/column-widget/#3","title":"3. \u6df7\u5408\u7ec4\u4ef6\u5e03\u5c40","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import (\n    ColumnWidget, TextWidget, AlertWidget, \n    ProgressWidget, ImageWidget\n)\n\nemail = Email(\"\u7efc\u5408\u62a5\u544a\")\n\n# \u521b\u5efa\u6df7\u5408\u7ec4\u4ef6\u5e03\u5c40\nmixed_column = ColumnWidget().set_columns(3)\n\n# \u4e0d\u540c\u7c7b\u578b\u7684\u7ec4\u4ef6\ntext_widget = TextWidget().set_content(\"\u6b22\u8fce\u67e5\u770b\u672c\u6708\u62a5\u544a\")\nalert_widget = AlertWidget().set_content(\"\u6ce8\u610f\uff1a\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a\u7ef4\u62a4\").set_alert_type(\"warning\")\nprogress_widget = ProgressWidget().set_progress(75).set_label(\"\u9879\u76ee\u8fdb\u5ea6\")\n\nmixed_column.add_widgets([text_widget, alert_widget, progress_widget])\nemail.add_widget(mixed_column)\n</code></pre> \u6df7\u5408\u7ec4\u4ef6\u5e03\u5c40 \u7efc\u5408\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:52:12 <p>                                     \ud83d\udcca                                     \u6b22\u8fce\u67e5\u770b\u672c\u6708\u62a5\u544a                                 </p> <p> \u26a0\ufe0f                                     \u6ce8\u610f\uff1a\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a\u7ef4\u62a4                                 </p>                                      \u7ef4\u62a4\u65f6\u95f4\uff1a22:00 - 24:00                                  <p>\u9879\u76ee\u8fdb\u5ea6</p> <p>75% \u5b8c\u6210</p>                                      \u9884\u8ba1\u5b8c\u6210\u65f6\u95f4\uff1a\u672c\u6708\u5e95                                  <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/column-widget/#4","title":"4. \u54cd\u5e94\u5f0f\u5e03\u5c40","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ColumnWidget\n\ndef create_responsive_layout(widgets):\n    \"\"\"\u521b\u5efa\u54cd\u5e94\u5f0f\u5e03\u5c40\"\"\"\n    column = ColumnWidget()  # \u4f7f\u7528\u81ea\u52a8\u6a21\u5f0f\n\n    # \u6839\u636eWidget\u6570\u91cf\u8bbe\u7f6e\u95f4\u8ddd\n    if len(widgets) &lt;= 2:\n        column.set_gap(\"30px\")  # \u5c11\u91cfWidget\u65f6\u589e\u52a0\u95f4\u8ddd\n    elif len(widgets) &lt;= 4:\n        column.set_gap(\"20px\")  # \u4e2d\u7b49\u6570\u91cf\u4f7f\u7528\u9ed8\u8ba4\u95f4\u8ddd\n    else:\n        column.set_gap(\"15px\")  # \u5927\u91cfWidget\u65f6\u51cf\u5c11\u95f4\u8ddd\n\n    column.add_widgets(widgets)\n    return column\n\n# \u4f7f\u7528\u54cd\u5e94\u5f0f\u5e03\u5c40\nemail = Email(\"\u54cd\u5e94\u5f0f\u5e03\u5c40\u793a\u4f8b\")\nwidgets = [widget1, widget2, widget3, widget4]\nresponsive_layout = create_responsive_layout(widgets)\nemail.add_widget(responsive_layout)\n</code></pre> \u54cd\u5e94\u5f0f\u5e03\u5c40\u793a\u4f8b \u54cd\u5e94\u5f0f\u5e03\u5c40\u793a\u4f8b \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:52:55 \u54cd\u5e94\u5f0f\u5e03\u5c40\u81ea\u52a8\u8c03\u6574                 4\u4e2a\u7ec4\u4ef6\u81ea\u52a8\u4f7f\u75282x2\u7f51\u683c\u5e03\u5c40\uff0c\u95f4\u8ddd\u6839\u636e\u7ec4\u4ef6\u6570\u91cf\u667a\u80fd\u8c03\u6574\u4e3a20px              \ud83d\udcca \u9500\u552e\u6570\u636e                                      \u672c\u5b63\u5ea6\u9500\u552e\u4e1a\u7ee9\u7edf\u8ba1                                      \u00a51,245,670 \u603b\u9500\u552e\u989d \u2197\ufe0f +15.2% \ud83d\udc65 \u7528\u6237\u589e\u957f                                      \u6d3b\u8dc3\u7528\u6237\u6570\u91cf\u53d8\u5316                                      24,567 \u6708\u6d3b\u7528\u6237 \u2197\ufe0f +8.7% \ud83d\udcc8 \u8f6c\u5316\u7387                                      \u7f51\u7ad9\u8bbf\u95ee\u5230\u8d2d\u4e70\u8f6c\u5316                                      12.8% \u8f6c\u5316\u7387 \u2197\ufe0f +2.1% \u26a0\ufe0f \u7cfb\u7edf\u8d1f\u8f7d                                      \u670d\u52a1\u5668\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5                                      85.3% CPU\u4f7f\u7528\u7387 \u2197\ufe0f +5.2% <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/column-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_column</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u81ea\u52a8\u5217\u6570\u5feb\u6377\u65b9\u6cd5\nemail.add_column([widget1, widget2, widget3])\n\n# \u6307\u5b9a\u5217\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_column(\n    widgets=[widget1, widget2, widget3, widget4],\n    columns=2,\n    gap=\"25px\"\n)\n\n# \u54cd\u5e94\u5f0f\u5217\u5e03\u5c40\nemail.add_column(\n    widgets=[widget1, widget2, widget3],\n    auto_columns=True,\n    gap=\"20px\"\n)\n</code></pre>"},{"location":"zh/user-guide/column-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/column-widget/#q","title":"Q: \u5982\u4f55\u786e\u5b9a\u6700\u4f73\u7684\u5217\u6570\uff1f","text":"<p>A: \u5efa\u8bae\u4f7f\u7528\u81ea\u52a8\u6a21\u5f0f\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u5185\u5bb9\u6570\u91cf\u81ea\u52a8\u9009\u62e9\uff1a Python<pre><code>column = ColumnWidget()  # \u81ea\u52a8\u6a21\u5f0f\uff0c\u65e0\u9700\u8bbe\u7f6e\u5217\u6570\n</code></pre></p>"},{"location":"zh/user-guide/column-widget/#q_1","title":"Q: \u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u5982\u4f55\u663e\u793a\uff1f","text":"<p>A: \u90ae\u4ef6\u5ba2\u6237\u7aef\u901a\u5e38\u4f1a\u81ea\u52a8\u8c03\u6574\u4e3a\u5355\u5217\u663e\u793a\uff1a Python<pre><code># \u8bbe\u7f6e\u6700\u5927\u5bbd\u5ea6\u786e\u4fdd\u79fb\u52a8\u7aef\u9002\u914d\ncolumn.set_gap(\"15px\")  # \u8f83\u5c0f\u95f4\u8ddd\u9002\u5408\u79fb\u52a8\u7aef\n</code></pre></p>"},{"location":"zh/user-guide/column-widget/#q-widget","title":"Q: \u5982\u4f55\u5904\u7406\u4e0d\u540c\u9ad8\u5ea6\u7684Widget\uff1f","text":"<p>A: \u7ec4\u4ef6\u81ea\u52a8\u4f7f\u7528<code>vertical-align: top</code>\u786e\u4fdd\u9876\u90e8\u5bf9\u9f50\uff1a Python<pre><code># \u4e0d\u9700\u8981\u989d\u5916\u8bbe\u7f6e\uff0c\u7ec4\u4ef6\u4f1a\u81ea\u52a8\u5bf9\u9f50\ncolumn.add_widgets([tall_widget, short_widget])\n</code></pre></p>"},{"location":"zh/user-guide/column-widget/#q_2","title":"Q: \u5217\u95f4\u8ddd\u8fc7\u5927\u6216\u8fc7\u5c0f\u600e\u4e48\u529e\uff1f","text":"<p>A: \u4f7f\u7528<code>set_gap()</code>\u65b9\u6cd5\u8c03\u6574\uff1a Python<pre><code>column.set_gap(\"15px\")  # \u5c0f\u95f4\u8ddd\ncolumn.set_gap(\"25px\")  # \u5927\u95f4\u8ddd\n</code></pre></p>"},{"location":"zh/user-guide/column-widget/#q_3","title":"Q: \u5982\u4f55\u52a8\u6001\u66f4\u65b0\u5e03\u5c40\uff1f","text":"<p>A: \u4f7f\u7528\u52a8\u6001\u7ba1\u7406\u65b9\u6cd5\uff1a Python<pre><code># \u6e05\u7a7a\u540e\u91cd\u65b0\u6dfb\u52a0\ncolumn.clear_widgets()\ncolumn.add_widgets(new_widgets)\n\n# \u6216\u6309\u7d22\u5f15\u79fb\u9664\ncolumn.remove_widget_by_index(0)\n</code></pre></p>"},{"location":"zh/user-guide/column-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>CardWidget - \u5e38\u7528\u4e8e\u5217\u5e03\u5c40\u7684\u5361\u7247\u7ec4\u4ef6</li> <li>StatusWidget - \u9002\u5408\u591a\u5217\u5c55\u793a\u7684\u72b6\u6001\u7ec4\u4ef6</li> <li>MetricWidget - \u9002\u5408\u5e76\u6392\u663e\u793a\u7684\u6307\u6807\u7ec4\u4ef6</li> <li>TextWidget - \u57fa\u7840\u6587\u672c\u5e03\u5c40\u7ec4\u4ef6</li> <li>ImageWidget - \u56fe\u7247\u7f51\u683c\u5e03\u5c40\u7ec4\u4ef6</li> </ul>"},{"location":"zh/user-guide/core-classes/","title":"\u6838\u5fc3\u7c7b","text":"<p>EmailWidget \u7684\u6838\u5fc3\u67b6\u6784\u7531\u4e24\u4e2a\u4e3b\u8981\u7c7b\u7ec4\u6210\uff1a<code>Email</code> \u7c7b\u548c <code>BaseWidget</code> \u62bd\u8c61\u57fa\u7c7b\u3002\u7406\u89e3\u8fd9\u4e24\u4e2a\u7c7b\u662f\u638c\u63e1 EmailWidget \u7684\u5173\u952e\u3002</p>"},{"location":"zh/user-guide/core-classes/#email","title":"\ud83d\udce7 Email \u7c7b","text":"<p><code>Email</code> \u7c7b\u662f\u6574\u4e2a\u90ae\u4ef6System\u7684Container\uff0c\u8d1f\u8d23\u7ba1\u7406\u6240\u6709\u7684\u7ec4\u4ef6\uff08Widget\uff09\u5e76\u751f\u6210\u6700\u7ec8\u7684HTML\u90ae\u4ef6\u3002</p>"},{"location":"zh/user-guide/core-classes/#_2","title":"\ud83c\udfd7\ufe0f \u57fa\u672c\u7ed3\u6784","text":"Python<pre><code>from email_widget import Email\n\n# \u521b\u5efa\u90ae\u4ef6\u5bf9\u8c61\nemail = Email(title=\"\u6211\u7684\u90ae\u4ef6Title\")\n\n# \u8bbe\u7f6e\u526fTitle\u548c\u9875\u811a\nemail.set_subtitle(\"\u8fd9\u662f\u526fTitle\")\nemail.set_footer(\"\u81ea\u5b9a\u4e49\u9875\u811aInfo\")\n\n# \u751f\u6210HTML\nhtml_content = email.render_html()\n</code></pre>"},{"location":"zh/user-guide/core-classes/#_3","title":"\ud83d\udcdd \u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"zh/user-guide/core-classes/#_4","title":"\u521b\u5efa\u548c\u914d\u7f6e","text":"Python<pre><code># \u57fa\u672c\u521b\u5efa\nemail = Email(\"Data\u62a5\u544a\")\n\n# \u8bbe\u7f6e\u526fTitle\nemail.set_subtitle(\"2024\u5e74\u5ea6\u4e1a\u52a1Data\u5206\u6790\")\n\n# \u8bbe\u7f6e\u9875\u811aText\nemail.set_footer(\"\u672c\u62a5\u544a\u7531Data\u56e2\u961f\u751f\u6210 \u00a9 2024\")\n</code></pre>"},{"location":"zh/user-guide/core-classes/#_5","title":"\u6dfb\u52a0\u7ec4\u4ef6","text":"Python<pre><code>from email_widget.widgets import TextWidget, TableWidget\n\n# \u6dfb\u52a0\u5355\u4e2a\u7ec4\u4ef6\ntext_widget = TextWidget().set_content(\"\u6b22\u8fce\u67e5\u770b\u672c\u5468Data\")\nemail.add_widget(text_widget)\n\n# \u6dfb\u52a0\u591a\u4e2a\u7ec4\u4ef6\nwidgets = [\n    TextWidget().set_content(\"Title1\"),\n    TableWidget().set_headers([\"\u52171\", \"\u52172\"]),\n    TextWidget().set_content(\"\u603b\u7ed3\")\n]\nemail.add_widgets(widgets)\n\n# \u94fe\u5f0f\u8c03\u7528\nemail.add_widget(\n    TextWidget()\n    .set_content(\"\u91cd\u8981Notification\")\n    .set_text_type(TextType.SECTION_H2)\n    .set_color(\"#d13438\")\n)\n</code></pre>"},{"location":"zh/user-guide/core-classes/#_6","title":"\u6e32\u67d3\u548c\u8f93\u51fa","text":"Python<pre><code># \u6e32\u67d3\u4e3aHTML\u5b57\u7b26\u4e32\nhtml = email.render_html()\n\n# \u6e32\u67d3\u5e76\u4fdd\u5b58\u5230\u6587\u4ef6\nemail.render_to_file(\"report.html\")\n\n# \u6e32\u67d3\u5e76\u53d1\u9001\u90ae\u4ef6\nemail.render_and_send(\n    smtp_config={\n        \"host\": \"smtp.gmail.com\",\n        \"port\": 587,\n        \"username\": \"your@email.com\",\n        \"password\": \"your_password\"\n    },\n    to_emails=[\"recipient@email.com\"]\n)\n</code></pre>"},{"location":"zh/user-guide/core-classes/#_7","title":"\ud83c\udfa8 \u90ae\u4ef6\u6a21\u677f\u7ed3\u6784","text":"<p>Email \u7c7b\u4f7f\u7528\u5185\u7f6e\u7684HTML\u6a21\u677f\uff0c\u7ed3\u6784\u5982\u4e0b\uff1a</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-CN\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;{{ title }}&lt;/title&gt;\n    &lt;!-- \u5185\u8054CSS\u6837\u5f0f --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"email-container\"&gt;\n        &lt;!-- \u90ae\u4ef6\u5934\u90e8 --&gt;\n        &lt;div class=\"email-header\"&gt;\n            &lt;h1&gt;{{ title }}&lt;/h1&gt;\n            {{ subtitle }}\n        &lt;/div&gt;\n\n        &lt;!-- \u90ae\u4ef6\u4e3b\u4f53 --&gt;\n        &lt;div class=\"email-body\"&gt;\n            {{ widget_content }}\n        &lt;/div&gt;\n\n        &lt;!-- \u90ae\u4ef6\u9875\u811a --&gt;\n        &lt;div class=\"email-footer\"&gt;\n            {{ footer_text }}\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"zh/user-guide/core-classes/#basewidget","title":"\ud83e\udde9 BaseWidget \u62bd\u8c61\u57fa\u7c7b","text":"<p>\u6240\u6709\u7684\u7ec4\u4ef6\u90fd\u7ee7\u627f\u81ea <code>BaseWidget</code> \u62bd\u8c61\u57fa\u7c7b\uff0c\u5b83\u5b9a\u4e49\u4e86\u7ec4\u4ef6\u7684\u57fa\u672c\u884c\u4e3a\u548c\u63a5\u53e3\u3002</p>"},{"location":"zh/user-guide/core-classes/#_8","title":"\ud83c\udfd7\ufe0f \u57fa\u672c\u7279\u6027","text":"Python<pre><code>from email_widget.core.base import BaseWidget\n\nclass MyCustomWidget(BaseWidget):\n    # \u6a21\u677f\u5b9a\u4e49\n    TEMPLATE = \"\"\"\n    &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"padding: 16px; border: 1px solid #ccc;\"&gt;\n        &lt;h3&gt;{{ title }}&lt;/h3&gt;\n        &lt;p&gt;{{ content }}&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n    \"\"\"\n\n    def __init__(self, widget_id=None):\n        super().__init__(widget_id)\n        self._title = \"\"\n        self._content = \"\"\n\n    def get_template_context(self):\n        return {\n            'title': self._title,\n            'content': self._content\n        }\n\n    def set_title(self, title):\n        self._title = title\n        return self\n\n    def set_content(self, content):\n        self._content = content\n        return self\n</code></pre>"},{"location":"zh/user-guide/core-classes/#_9","title":"\ud83d\udd11 \u6838\u5fc3\u5c5e\u6027","text":""},{"location":"zh/user-guide/core-classes/#widget-id","title":"Widget ID","text":"<p>\u6bcf\u4e2aWidget\u90fd\u6709\u552f\u4e00\u7684ID\uff1a</p> Python<pre><code>widget = TextWidget()\nprint(widget.widget_id)  # \u8f93\u51fa: textwidget_a1b2c3d4\n\n# \u81ea\u5b9a\u4e49ID\nwidget = TextWidget(widget_id=\"my_text_widget\")\nprint(widget.widget_id)  # \u8f93\u51fa: my_text_widget\n</code></pre>"},{"location":"zh/user-guide/core-classes/#containerquote","title":"\u7236ContainerQuote","text":"<p>Widget\u53ef\u4ee5\u8bbf\u95ee\u5176\u7236EmailContainer\uff1a</p> Python<pre><code>email = Email(\"\u6d4b\u8bd5\u90ae\u4ef6\")\nwidget = TextWidget().set_content(\"\u6d4b\u8bd5\u5185\u5bb9\")\nemail.add_widget(widget)\n\nprint(widget.parent)  # \u8f93\u51fa: &lt;email_widget.email.Email object&gt;\nprint(widget.parent.title)  # \u8f93\u51fa: \u6d4b\u8bd5\u90ae\u4ef6\n</code></pre>"},{"location":"zh/user-guide/core-classes/#system","title":"\ud83c\udfa8 \u6a21\u677fSystem","text":"<p>\u6bcf\u4e2aWidget\u4f7f\u7528Jinja2\u6a21\u677f\u8fdb\u884c\u6e32\u67d3\uff1a</p>"},{"location":"zh/user-guide/core-classes/#_10","title":"\u6a21\u677f\u5b9a\u4e49","text":"Python<pre><code>class MyWidget(BaseWidget):\n    TEMPLATE = \"\"\"\n    &lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"{{ container_style }}\"&gt;\n        {% if title %}\n            &lt;h3 style=\"{{ title_style }}\"&gt;{{ title }}&lt;/h3&gt;\n        {% endif %}\n        {% for item in items %}\n            &lt;p&gt;{{ item.name }}: {{ item.value }}&lt;/p&gt;\n        {% endfor %}\n    &lt;/div&gt;\n&lt;/div&gt;\n    \"\"\"\n</code></pre>"},{"location":"zh/user-guide/core-classes/#data","title":"\u4e0a\u4e0b\u6587Data","text":"Python<pre><code>def get_template_context(self):\n    return {\n        'title': self._title,\n        'container_style': 'padding: 16px; border: 1px solid #e1dfdd;',\n        'title_style': 'color: #323130; font-weight: 600;',\n        'items': self._items\n    }\n</code></pre>"},{"location":"zh/user-guide/core-classes/#_11","title":"\ud83d\udee1\ufe0f \u9519\u8bef\u5904\u7406","text":"<p>BaseWidget \u63d0\u4f9b\u4e86\u5b8c\u5584\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff1a</p> Python<pre><code># \u5f53\u6e32\u67d3\u5931\u8d25\u65f6\uff0c\u4f1a\u663e\u793a\u9519\u8befInfo\u800c\u4e0d\u662f\u5d29\u6e83\ntry:\n    html = widget.render_html()\nexcept Exception as e:\n    # Widget\u4f1a\u81ea\u52a8\u5904\u7406\u9519\u8bef\uff0c\u8fd4\u56de\u9519\u8befTipHTML\n    print(\"Widget\u6e32\u67d3\u5931\u8d25\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u7ec4\u4ef6\")\n</code></pre> <p>\u9519\u8bef\u8f93\u51fa\u793a\u4f8b\uff1a HTML<pre><code>&lt;div class=\"email-preview-wrapper\"&gt;\n&lt;div style=\"border: 2px solid #d13438; background: #ffebee; color: #d13438; padding: 12px;\"&gt;\n    &lt;strong&gt;Widget\u6e32\u67d3\u9519\u8bef:&lt;/strong&gt; MyWidget (mywidget_a1b2c3d4)\n    &lt;br/&gt;\u9519\u8bef\u8be6\u60c5: \u6a21\u677f\u6e32\u67d3\u5931\u8d25\n&lt;/div&gt;\n&lt;/div&gt;\n</code></pre></p>"},{"location":"zh/user-guide/core-classes/#_12","title":"\ud83d\udd27 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/core-classes/#1-basewidget","title":"1. \u7ee7\u627fBaseWidget","text":"Python<pre><code>class CustomWidget(BaseWidget):\n    def __init__(self, widget_id=None):\n        super().__init__(widget_id)  # \u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u521d\u59cb\u5316\n        # \u521d\u59cb\u5316\u81ea\u5b9a\u4e49\u5c5e\u6027\n</code></pre>"},{"location":"zh/user-guide/core-classes/#2","title":"2. \u5b9e\u73b0\u5fc5\u9700\u65b9\u6cd5","text":"Python<pre><code>def get_template_context(self):\n    \"\"\"\u5fc5\u987b\u5b9e\u73b0\u6b64\u65b9\u6cd5\"\"\"\n    return {\n        'key': 'value'\n    }\n</code></pre>"},{"location":"zh/user-guide/core-classes/#3","title":"3. \u652f\u6301\u94fe\u5f0f\u8c03\u7528","text":"Python<pre><code>def set_property(self, value):\n    self._property = value\n    return self  # \u8fd4\u56deself\u652f\u6301\u94fe\u5f0f\u8c03\u7528\n</code></pre>"},{"location":"zh/user-guide/core-classes/#4","title":"4. \u8f93\u5165\u9a8c\u8bc1","text":"Python<pre><code>from email_widget.core.validators import NonEmptyStringValidator\n\ndef set_content(self, content):\n    validator = NonEmptyStringValidator()\n    if not validator.validate(content):\n        raise ValueError(f\"\u5185\u5bb9\u9a8c\u8bc1\u5931\u8d25: {validator.get_error_message(content)}\")\n    self._content = content\n    return self\n</code></pre>"},{"location":"zh/user-guide/core-classes/#_13","title":"\ud83d\udd04 \u7ec4\u4ef6\u751f\u547d\u5468\u671f","text":"<p>\u7406\u89e3\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u6709\u52a9\u4e8e\u66f4\u597d\u5730\u4f7f\u7528EmailWidget\uff1a</p> <ol> <li>\u521b\u5efa\u9636\u6bb5: <code>__init__()</code> - \u521d\u59cb\u5316\u7ec4\u4ef6\u5c5e\u6027</li> <li>\u914d\u7f6e\u9636\u6bb5: <code>set_*()</code> \u65b9\u6cd5 - \u8bbe\u7f6e\u7ec4\u4ef6\u5c5e\u6027</li> <li>\u6dfb\u52a0\u9636\u6bb5: <code>email.add_widget()</code> - \u6dfb\u52a0\u5230\u90ae\u4ef6Container</li> <li>\u6e32\u67d3\u9636\u6bb5: <code>render_html()</code> - \u751f\u6210HTML\u5185\u5bb9</li> </ol> Python<pre><code># 1. \u521b\u5efa\nwidget = TextWidget()\n\n# 2. \u914d\u7f6e  \nwidget.set_content(\"Hello\").set_color(\"#0078d4\")\n\n# 3. \u6dfb\u52a0\nemail.add_widget(widget)\n\n# 4. \u6e32\u67d3\nhtml = email.render_html()\n</code></pre>"},{"location":"zh/user-guide/core-classes/#_14","title":"\ud83d\udcca \u6027\u80fd\u8003\u8651","text":""},{"location":"zh/user-guide/core-classes/#_15","title":"\u6a21\u677f\u7f13\u5b58","text":"<ul> <li>\u6a21\u677f\u4f1a\u81ea\u52a8\u7f13\u5b58\uff0c\u91cd\u590d\u6e32\u67d3\u65f6\u6027\u80fd\u66f4\u597d</li> <li>\u5efa\u8bae\u590d\u7528Widget\u5b9e\u4f8b\u800c\u4e0d\u662f\u9891\u7e41\u521b\u5efa</li> </ul>"},{"location":"zh/user-guide/core-classes/#_16","title":"\u5185\u5b58\u7ba1\u7406","text":"<ul> <li>Widget\u4fdd\u6301\u5bf9\u7236Container\u7684\u5f31Quote\uff0c\u907f\u514d\u5faa\u73afQuote</li> <li>\u53ca\u65f6\u6e05\u7406\u4e0d\u9700\u8981\u7684WidgetQuote</li> </ul> <p>\u4e0b\u4e00\u6b65: \u4e86\u89e3 \u7ec4\u4ef6\u6982\u89c8 \u67e5\u770b\u6240\u6709\u53ef\u7528\u7684\u7ec4\u4ef6\u7c7b\u578b\u3002 </p>"},{"location":"zh/user-guide/image-widget/","title":"ImageWidget \u56fe\u7247\u7ec4\u4ef6","text":"<p>ImageWidget \u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u663e\u793a\u56fe\u7247\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u591a\u79cd\u56fe\u7247\u6765\u6e90\u5e76\u81ea\u52a8\u8f6c\u6362\u4e3a\u90ae\u4ef6\u517c\u5bb9\u683c\u5f0f\u3002\u5b83\u80fd\u591f\u5904\u7406\u672c\u5730\u6587\u4ef6\u3001\u7f51\u7edc\u56fe\u7247\u548cBase64\u6570\u636e\uff0c\u662f\u5c55\u793a\u62a5\u8868\u56fe\u8868\u3001\u4ea7\u54c1\u56fe\u7247\u548c\u89c6\u89c9\u5185\u5bb9\u7684\u91cd\u8981\u7ec4\u4ef6\u3002</p>"},{"location":"zh/user-guide/image-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c8","text":"\ud83d\udcf7 \u56fe\u7247\u7ec4\u4ef6        \u793a\u4f8b\u56fe\u7247      \u9500\u552e\u8d8b\u52bf\u56fe \u5c55\u793a\u4e862024\u5e74\u5404\u5b63\u5ea6\u7684\u9500\u552e\u6570\u636e\u5bf9\u6bd4 \u591a\u79cd\u6765\u6e90 \u81ea\u52a8\u8f6c\u6362 \u6837\u5f0f\u63a7\u5236"},{"location":"zh/user-guide/image-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcc1 \u591a\u79cd\u6765\u6e90: \u652f\u6301\u672c\u5730\u6587\u4ef6\u3001\u7f51\u7edcURL\u3001Base64\u6570\u636e\u7b49\u591a\u79cd\u56fe\u7247\u6765\u6e90</li> <li>\ud83d\udd04 \u81ea\u52a8\u8f6c\u6362: \u81ea\u52a8\u8f6c\u6362\u4e3a\u90ae\u4ef6\u517c\u5bb9\u7684base64\u5d4c\u5165\u683c\u5f0f</li> <li>\ud83c\udfa8 \u6837\u5f0f\u63a7\u5236: \u652f\u6301\u5c3a\u5bf8\u3001\u8fb9\u6846\u5706\u89d2\u3001\u6700\u5927\u5bbd\u5ea6\u7b49\u6837\u5f0f\u8bbe\u7f6e</li> <li>\ud83d\udcdd \u6807\u9898\u63cf\u8ff0: \u652f\u6301\u56fe\u7247\u6807\u9898\u548c\u8be6\u7ec6\u63cf\u8ff0\u5c55\u793a</li> <li>\u267f \u65e0\u969c\u788d\u8bbf\u95ee: \u652f\u6301\u66ff\u4ee3\u6587\u672c\uff0c\u786e\u4fdd\u65e0\u969c\u788d\u8bbf\u95ee</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/image-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/image-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ImageWidget\n\n# \u521b\u5efa\u57fa\u7840\u56fe\u7247\u7ec4\u4ef6\nimage = ImageWidget()\nimage.set_image_url(\"./charts/sales.png\")\nimage.set_title(\"\u9500\u552e\u6570\u636e\u56fe\u8868\")\nimage.set_description(\"2024\u5e74\u5404\u5b63\u5ea6\u9500\u552e\u6570\u636e\u5bf9\u6bd4\u5206\u6790\")\n\nemail = Email(\"\u6570\u636e\u62a5\u544a\")\nemail.add_widget(image)\n</code></pre>"},{"location":"zh/user-guide/image-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u5e26\u6837\u5f0f\u548c\u7f13\u5b58\u63a7\u5236\u7684\u56fe\u7247\nimage = (ImageWidget()\n         .set_image_url(\"https://example.com/chart.png\", cache=True)\n         .set_title(\"\u5728\u7ebf\u56fe\u8868\")\n         .set_size(width=\"600px\")\n         .set_border_radius(\"8px\")\n         .set_max_width(\"100%\")\n         .set_alt_text(\"\u9500\u552e\u8d8b\u52bf\u56fe\u8868\"))\n\nemail.add_widget(image)\n\n# \u672c\u5730\u6587\u4ef6\u56fe\u7247\nlocal_image = (ImageWidget()\n               .set_image_url(\"./reports/monthly_report.jpg\")\n               .set_title(\"\u6708\u5ea6\u62a5\u544a\")\n               .set_size(width=\"400px\", height=\"300px\"))\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: ImageWidget API</p>"},{"location":"zh/user-guide/image-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/image-widget/#_7","title":"\u56fe\u7247\u5c3a\u5bf8\u5efa\u8bae","text":"<ul> <li>\u5c0f\u56fe\u6807: 50px - 100px\uff0c\u9002\u5408\u72b6\u6001\u56fe\u6807</li> <li>\u5e38\u89c4\u56fe\u7247: 300px - 600px\uff0c\u9002\u5408\u5185\u5bb9\u5c55\u793a</li> <li>\u5927\u6a2a\u5e45: 800px+\uff0c\u9002\u5408\u4e3b\u8981\u5c55\u793a\u5185\u5bb9</li> <li>\u54cd\u5e94\u5f0f: \u4f7f\u7528<code>max_width=\"100%\"</code>\u786e\u4fdd\u90ae\u4ef6\u517c\u5bb9\u6027</li> </ul>"},{"location":"zh/user-guide/image-widget/#_8","title":"\u6587\u4ef6\u683c\u5f0f\u652f\u6301","text":"<ul> <li>PNG: \u6700\u4f73\u8d28\u91cf\uff0c\u652f\u6301\u900f\u660e\u80cc\u666f</li> <li>JPEG: \u9002\u5408\u7167\u7247\uff0c\u6587\u4ef6\u8f83\u5c0f</li> <li>GIF: \u652f\u6301\u52a8\u753b\u6548\u679c</li> <li>WebP: \u73b0\u4ee3\u683c\u5f0f\uff0c\u4f53\u79ef\u5c0f\u4f46\u517c\u5bb9\u6027\u8f83\u5dee</li> </ul>"},{"location":"zh/user-guide/image-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/image-widget/#1","title":"1. \u62a5\u8868\u56fe\u8868\u5c55\u793a","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ImageWidget\n\nemail = Email(\"\u4e1a\u52a1\u6570\u636e\u62a5\u544a\")\n\n# \u4e3b\u8981\u6570\u636e\u56fe\u8868\nmain_chart = (ImageWidget()\n              .set_image_url(\"./charts/sales_trend.png\")\n              .set_title(\"\u9500\u552e\u8d8b\u52bf\u5206\u6790\")\n              .set_description(\"\u8fc7\u53bb12\u4e2a\u6708\u7684\u9500\u552e\u6570\u636e\u53d8\u5316\u8d8b\u52bf\")\n              .set_size(width=\"700px\")\n              .set_border_radius(\"6px\"))\n\nemail.add_widget(main_chart)\n\n# \u8865\u5145\u56fe\u8868\nsupport_chart = (ImageWidget()\n                 .set_image_url(\"./charts/region_comparison.png\")\n                 .set_title(\"\u5730\u533a\u5bf9\u6bd4\")\n                 .set_description(\"\u5404\u5730\u533a\u9500\u552e\u8868\u73b0\u5bf9\u6bd4\")\n                 .set_size(width=\"500px\"))\n\nemail.add_widget(support_chart)\n</code></pre>"},{"location":"zh/user-guide/image-widget/#2","title":"2. \u4ea7\u54c1\u5c55\u793a","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import ImageWidget\n\nemail = Email(\"\u65b0\u54c1\u53d1\u5e03\")\n\n# \u4ea7\u54c1\u4e3b\u56fe\nproduct_image = (ImageWidget()\n                 .set_image_url(\"./products/new_product.jpg\")\n                 .set_title(\"\u65b0\u54c1\u5c55\u793a\")\n                 .set_description(\"\u6211\u4eec\u6700\u65b0\u63a8\u51fa\u7684\u9769\u547d\u6027\u4ea7\u54c1\")\n                 .set_size(width=\"400px\", height=\"300px\")\n                 .set_border_radius(\"10px\")\n                 .set_alt_text(\"\u65b0\u4ea7\u54c1\u5916\u89c2\u56fe\u7247\"))\n\nemail.add_widget(product_image)\n</code></pre>"},{"location":"zh/user-guide/image-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_image</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_image(\n    image_url=\"./charts/data.png\",\n    title=\"\u6570\u636e\u56fe\u8868\",\n    description=\"\u5173\u952e\u4e1a\u52a1\u6307\u6807\u5c55\u793a\"\n)\n\n# \u5e26\u6837\u5f0f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_image(\n    image_url=\"./assets/logo.png\",\n    title=\"\u516c\u53f8Logo\",\n    width=\"200px\",\n    border_radius=\"8px\",\n    alt_text=\"\u516c\u53f8\u6807\u5fd7\"\n)\n</code></pre>"},{"location":"zh/user-guide/image-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/image-widget/#q","title":"Q: \u56fe\u7247\u5728\u90ae\u4ef6\u4e2d\u4e0d\u663e\u793a\u600e\u4e48\u529e\uff1f","text":"<p>A: \u68c0\u67e5\u4ee5\u4e0b\u51e0\u70b9\uff1a - \u786e\u4fdd\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u6b63\u786e - \u7f51\u7edc\u56fe\u7247URL\u53ef\u8bbf\u95ee - \u56fe\u7247\u683c\u5f0f\u4e3a\u5e38\u89c1\u683c\u5f0f\uff08PNG\u3001JPEG\u7b49\uff09</p>"},{"location":"zh/user-guide/image-widget/#q_1","title":"Q: \u5982\u4f55\u63a7\u5236\u56fe\u7247\u5927\u5c0f\uff1f","text":"<p>A: \u4f7f\u7528<code>set_size()</code>\u548c<code>set_max_width()</code>\uff1a Python<pre><code>image.set_size(width=\"600px\").set_max_width(\"100%\")\n</code></pre></p>"},{"location":"zh/user-guide/image-widget/#q_2","title":"Q: \u652f\u6301\u52a8\u6001\u56fe\u7247\u5417\uff1f","text":"<p>A: \u652f\u6301\uff0c\u4f7f\u7528<code>cache=False</code>\u7981\u7528\u7f13\u5b58\uff1a Python<pre><code>image.set_image_url(\"./dynamic/chart.png\", cache=False)\n</code></pre></p>"},{"location":"zh/user-guide/image-widget/#q_3","title":"Q: \u5982\u4f55\u786e\u4fdd\u65e0\u969c\u788d\u8bbf\u95ee\uff1f","text":"<p>A: \u59cb\u7ec8\u8bbe\u7f6e\u6709\u610f\u4e49\u7684\u66ff\u4ee3\u6587\u672c\uff1a Python<pre><code>image.set_alt_text(\"2024\u5e74\u9500\u552e\u6570\u636e\u67f1\u72b6\u56fe\")\n</code></pre></p>"},{"location":"zh/user-guide/image-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>ChartWidget - \u4e13\u95e8\u7528\u4e8e\u663e\u793a\u56fe\u8868\u7684\u7ec4\u4ef6</li> <li>CardWidget - \u53ef\u4ee5\u5305\u542b\u56fe\u7247\u7684\u5361\u7247\u7ec4\u4ef6</li> <li>ColumnWidget - \u7528\u4e8e\u5e03\u5c40\u591a\u4e2a\u56fe\u7247\u7ec4\u4ef6</li> <li>TextWidget - \u53ef\u4e0e\u56fe\u7247\u914d\u5408\u4f7f\u7528\u7684\u6587\u672c\u7ec4\u4ef6</li> </ul>"},{"location":"zh/user-guide/log-widget/","title":"LogWidget \u65e5\u5fd7\u7ec4\u4ef6","text":"<p>LogWidget\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u65e5\u5fd7\u5c55\u793a\u7ec4\u4ef6\uff0c\u652f\u6301\u81ea\u52a8\u89e3\u6790loguru\u683c\u5f0f\u7684\u65e5\u5fd7\uff0c\u63d0\u4f9b\u7ea7\u522b\u8fc7\u6ee4\u3001\u6df1\u8272\u4e3b\u9898\u548c\u6eda\u52a8\u663e\u793a\u7b49\u529f\u80fd\u3002\u5b83\u662f\u5f00\u53d1\u8c03\u8bd5\u548c\u8fd0\u7ef4\u76d1\u63a7\u7684\u91cd\u8981\u5de5\u5177\uff0c\u80fd\u591f\u6e05\u6670\u5730\u5c55\u793a\u7cfb\u7edf\u8fd0\u884c\u72b6\u6001\u548c\u95ee\u9898\u6392\u67e5\u4fe1\u606f\u3002</p>"},{"location":"zh/user-guide/log-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c8","text":"\ud83d\udccb \u65e5\u5fd7\u5c55\u793a\u7ec4\u4ef6 \u5e94\u7528\u65e5\u5fd7 2024-01-15 10:30:25 [INFO] (app.py:main:15) \u5e94\u7528\u542f\u52a8\u6210\u529f 2024-01-15 10:30:26 [WARNING] (config.py:load:42) \u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u9ed8\u8ba4\u503c 2024-01-15 10:30:27 [ERROR] (db.py:connect:88) \u6570\u636e\u5e93\u8fde\u63a5\u5931\u8d25 \u65e5\u5fd7\u89e3\u6790 \u7ea7\u522b\u8fc7\u6ee4 \u6df1\u8272\u4e3b\u9898"},{"location":"zh/user-guide/log-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcdd \u65e5\u5fd7\u89e3\u6790: \u652f\u6301loguru\u6807\u51c6\u683c\u5f0f\u7684\u81ea\u52a8\u65e5\u5fd7\u89e3\u6790</li> <li>\ud83c\udfa8 \u7ea7\u522b\u8fc7\u6ee4: \u652f\u6301\u6309\u65e5\u5fd7\u7ea7\u522b\u8fc7\u6ee4\u663e\u793a\uff08DEBUG\u3001INFO\u3001WARNING\u3001ERROR\u3001CRITICAL\uff09</li> <li>\ud83c\udfad \u6df1\u8272\u4e3b\u9898: \u4e13\u4e1a\u7684\u6df1\u8272\u80cc\u666f\uff0c\u9002\u5408\u957f\u65f6\u95f4\u67e5\u770b</li> <li>\ud83d\udccf \u6eda\u52a8\u663e\u793a: \u53ef\u8bbe\u7f6e\u6700\u5927\u9ad8\u5ea6\uff0c\u8d85\u51fa\u90e8\u5206\u81ea\u52a8\u6eda\u52a8</li> <li>\u2699\ufe0f \u7075\u6d3b\u914d\u7f6e: \u53ef\u9009\u62e9\u663e\u793a\u65f6\u95f4\u6233\u3001\u7ea7\u522b\u6807\u8bc6\u3001\u6765\u6e90\u4fe1\u606f</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/log-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/log-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import LogWidget\nfrom email_widget.core.enums import LogLevel\n\n# \u521b\u5efa\u65e5\u5fd7\u7ec4\u4ef6\nlog = LogWidget()\nlog.set_title(\"\u5e94\u7528\u65e5\u5fd7\")\nlog.add_log_entry(\"\u5e94\u7528\u542f\u52a8\u6210\u529f\", LogLevel.INFO)\nlog.add_log_entry(\"\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u5b8c\u6210\", LogLevel.DEBUG)\nlog.add_log_entry(\"\u6570\u636e\u5e93\u8fde\u63a5\u5931\u8d25\", LogLevel.ERROR)\n\nemail = Email(\"\u7cfb\u7edf\u65e5\u5fd7\u62a5\u544a\")\nemail.add_widget(log)\n</code></pre>"},{"location":"zh/user-guide/log-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u89e3\u6790loguru\u683c\u5f0f\u65e5\u5fd7\nlog = LogWidget()\nlog.set_title(\"\u7cfb\u7edf\u8fd0\u884c\u65e5\u5fd7\")\n\n# loguru\u683c\u5f0f\u7684\u65e5\u5fd7\u5b57\u7b26\u4e32\nloguru_logs = [\n    \"2024-01-15 10:30:25.123 | DEBUG | app:main:15 - \u8c03\u8bd5\u4fe1\u606f\",\n    \"2024-01-15 10:30:26.456 | INFO | config:load:42 - \u914d\u7f6e\u52a0\u8f7d\u5b8c\u6210\",\n    \"2024-01-15 10:30:27.789 | WARNING | db:connect:88 - \u6570\u636e\u5e93\u8fde\u63a5\u6162\",\n    \"2024-01-15 10:30:28.012 | ERROR | api:request:156 - API\u8bf7\u6c42\u5931\u8d25\"\n]\n\nlog.set_logs(loguru_logs)\nlog.filter_by_level(LogLevel.WARNING)  # \u53ea\u663e\u793aWARNING\u53ca\u4ee5\u4e0a\u7ea7\u522b\nlog.show_timestamp(True)\nlog.set_max_height(\"400px\")\n\nemail.add_widget(log)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: LogWidget API</p>"},{"location":"zh/user-guide/log-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/log-widget/#_7","title":"\u65e5\u5fd7\u7ea7\u522b\u548c\u989c\u8272","text":"<ul> <li>DEBUG: \u7070\u8272 (#888888) - \u8c03\u8bd5\u4fe1\u606f\u3001\u8be6\u7ec6\u8ffd\u8e2a</li> <li>INFO: \u84dd\u8272 (#4fc3f7) - \u4e00\u822c\u4fe1\u606f\u3001\u6b63\u5e38\u6d41\u7a0b</li> <li>WARNING: \u6a59\u8272 (#ffb74d) - \u8b66\u544a\u4fe1\u606f\u3001\u9700\u8981\u6ce8\u610f</li> <li>ERROR: \u7ea2\u8272 (#f44336) - \u9519\u8bef\u4fe1\u606f\u3001\u529f\u80fd\u5f02\u5e38</li> <li>CRITICAL: \u6df1\u7ea2\u8272 (#d32f2f) - \u4e25\u91cd\u9519\u8bef\u3001\u7cfb\u7edf\u5d29\u6e83</li> </ul>"},{"location":"zh/user-guide/log-widget/#_8","title":"\u8fc7\u6ee4\u7ea7\u522b\u8bf4\u660e","text":"<p>\u8bbe\u7f6e\u8fc7\u6ee4\u7ea7\u522b\u4f1a\u663e\u793a\u8be5\u7ea7\u522b\u53ca\u4ee5\u4e0a\u7684\u6240\u6709\u65e5\u5fd7\uff1a - <code>LogLevel.DEBUG</code>: \u663e\u793a\u6240\u6709\u7ea7\u522b - <code>LogLevel.INFO</code>: \u663e\u793aINFO\u53ca\u4ee5\u4e0a\uff08INFO\u3001WARNING\u3001ERROR\u3001CRITICAL\uff09 - <code>LogLevel.WARNING</code>: \u663e\u793aWARNING\u53ca\u4ee5\u4e0a\uff08WARNING\u3001ERROR\u3001CRITICAL\uff09 - <code>LogLevel.ERROR</code>: \u53ea\u663e\u793aERROR\u548cCRITICAL</p>"},{"location":"zh/user-guide/log-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/log-widget/#1","title":"1. \u5e94\u7528\u542f\u52a8\u65e5\u5fd7","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import LogWidget\nfrom email_widget.core.enums import LogLevel\nfrom datetime import datetime\n\nemail = Email(\"\u5e94\u7528\u542f\u52a8\u62a5\u544a\")\n\n# \u542f\u52a8\u8fc7\u7a0b\u65e5\u5fd7\nstartup_log = LogWidget()\nstartup_log.set_title(\"\u5e94\u7528\u542f\u52a8\u65e5\u5fd7\")\nstartup_log.add_log_entry(\"\u5f00\u59cb\u542f\u52a8\u5e94\u7528\", LogLevel.INFO, datetime.now())\nstartup_log.add_log_entry(\"\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\", LogLevel.DEBUG, datetime.now())\nstartup_log.add_log_entry(\"\u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\", LogLevel.INFO, datetime.now())\nstartup_log.add_log_entry(\"\u542f\u52a8Web\u670d\u52a1\u5668\", LogLevel.INFO, datetime.now())\nstartup_log.add_log_entry(\"\u5e94\u7528\u542f\u52a8\u5b8c\u6210\", LogLevel.INFO, datetime.now())\nstartup_log.show_timestamp(True)\n\nemail.add_widget(startup_log)\n</code></pre> \u5e94\u7528\u542f\u52a8\u62a5\u544a \u5e94\u7528\u542f\u52a8\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 15:20:30 \u5e94\u7528\u542f\u52a8\u65e5\u5fd7 2024-01-15 10:30:00.123 | INFO | app:main:15 - \u5f00\u59cb\u542f\u52a8\u5e94\u7528 2024-01-15 10:30:00.456 | DEBUG | config:load:42 - \u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 config/app.yaml 2024-01-15 10:30:00.789 | DEBUG | env:parse:28 - \u89e3\u6790\u73af\u5883\u53d8\u91cf (12\u4e2a\u53d8\u91cf\u5df2\u52a0\u8f7d) 2024-01-15 10:30:01.012 | INFO | db:connect:88 - \u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5 (PostgreSQL 14.2) 2024-01-15 10:30:01.345 | DEBUG | db:pool:156 - \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u521b\u5efa\u6210\u529f (\u6700\u5927\u8fde\u63a5\u6570: 20) 2024-01-15 10:30:01.678 | INFO | web:server:200 - \u542f\u52a8Web\u670d\u52a1\u5668 (\u7aef\u53e3: 8080) 2024-01-15 10:30:01.901 | DEBUG | routes:register:45 - \u6ce8\u518c\u8def\u7531\u5904\u7406\u5668 (25\u4e2a\u8def\u7531\u5df2\u6ce8\u518c) 2024-01-15 10:30:02.234 | INFO | scheduler:start:78 - \u542f\u52a8\u540e\u53f0\u4efb\u52a1\u8c03\u5ea6\u5668 2024-01-15 10:30:02.567 | INFO | app:main:180 - \u5e94\u7528\u542f\u52a8\u5b8c\u6210 (\u603b\u8017\u65f6: 2.444\u79d2) 2024-01-15 10:30:02.890 | INFO | app:ready:185 - \u670d\u52a1\u5c31\u7eea\uff0c\u7b49\u5f85\u8bf7\u6c42\u5904\u7406... <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/log-widget/#2","title":"2. \u9519\u8bef\u65e5\u5fd7\u76d1\u63a7","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import LogWidget\nfrom email_widget.core.enums import LogLevel\n\nemail = Email(\"\u9519\u8bef\u65e5\u5fd7\u62a5\u544a\")\n\n# \u53ea\u663e\u793a\u9519\u8bef\u7ea7\u522b\u65e5\u5fd7\nerror_log = LogWidget()\nerror_log.set_title(\"\u9519\u8bef\u65e5\u5fd7\u76d1\u63a7\")\nerror_log.filter_by_level(LogLevel.ERROR)  # \u53ea\u663e\u793aERROR\u548cCRITICAL\n\n# \u6dfb\u52a0\u9519\u8bef\u65e5\u5fd7\nerror_log.add_log_entry(\"\u6570\u636e\u5e93\u8fde\u63a5\u8d85\u65f6\", LogLevel.ERROR, datetime.now(), \"database\", \"connect\", 88)\nerror_log.add_log_entry(\"API\u8bf7\u6c42\u5931\u8d25\", LogLevel.ERROR, datetime.now(), \"api\", \"request\", 156)\nerror_log.add_log_entry(\"\u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\", LogLevel.CRITICAL, datetime.now(), \"system\", \"memory\", 200)\n\nerror_log.show_timestamp(True)\nerror_log.show_source(True)\nerror_log.set_max_height(\"300px\")\n\nemail.add_widget(error_log)\n</code></pre> \u9519\u8bef\u65e5\u5fd7\u62a5\u544a \u9519\u8bef\u65e5\u5fd7\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 15:22:15 \ud83d\udcca \u9519\u8bef\u7edf\u8ba1\u6c47\u603b 3 ERROR\u7ea7\u522b 1 CRITICAL\u7ea7\u522b 4 \u603b\u9519\u8bef\u6570 \ud83d\udea8\u9519\u8bef\u65e5\u5fd7\u76d1\u63a7                      2024-01-15 16:45:23.789 | CRITICAL | system:memory:200 - \u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\uff0c\u53ef\u7528\u5185\u5b58\u4ec5\u5269158MB 2024-01-15 16:42:15.456 | ERROR | database:connect:88 - \u6570\u636e\u5e93\u8fde\u63a5\u8d85\u65f6\uff0c\u65e0\u6cd5\u5efa\u7acb\u8fde\u63a5 2024-01-15 16:38:47.123 | ERROR | api:request:156 - API\u8bf7\u6c42\u5931\u8d25\uff0c\u8fd4\u56de500\u5185\u90e8\u670d\u52a1\u5668\u9519\u8bef 2024-01-15 16:35:12.890 | ERROR | cache:redis:92 - Redis\u7f13\u5b58\u670d\u52a1\u4e0d\u53ef\u7528\uff0c\u5207\u6362\u5230\u672c\u5730\u7f13\u5b58 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210 | \ud83d\udea8 \u7d27\u6025\u95ee\u9898\u8bf7\u8054\u7cfb\u8fd0\u7ef4\u56e2\u961f</p>"},{"location":"zh/user-guide/log-widget/#3","title":"3. \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u5fd7","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import LogWidget\n\nemail = Email(\"\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\")\n\n# \u7cfb\u7edf\u4e8b\u4ef6\u65e5\u5fd7\nops_log = LogWidget()\nops_log.set_title(\"\u8fd0\u7ef4\u4e8b\u4ef6\u65e5\u5fd7\")\n\n# \u6279\u91cf\u8bbe\u7f6eloguru\u683c\u5f0f\u65e5\u5fd7\nops_logs = [\n    \"2024-01-15 08:00:00 | INFO | system:startup:10 - \u670d\u52a1\u5668\u542f\u52a8\u5b8c\u6210\",\n    \"2024-01-15 12:00:00 | INFO | backup:auto:25 - \u6570\u636e\u5e93\u81ea\u52a8\u5907\u4efd\u5b8c\u6210\",\n    \"2024-01-15 14:30:00 | WARNING | monitor:memory:45 - \u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523085%\",\n    \"2024-01-15 15:45:00 | ERROR | service:redis:88 - Redis\u8fde\u63a5\u8d85\u65f6\",\n    \"2024-01-15 16:15:00 | INFO | service:redis:92 - Redis\u670d\u52a1\u91cd\u542f\uff0c\u8fde\u63a5\u6062\u590d\"\n]\n\nops_log.set_logs(ops_logs)\nops_log.show_timestamps(True)\nops_log.set_reverse_order(True)  # \u6700\u65b0\u65e5\u5fd7\u5728\u524d\nops_log.set_max_height(\"500px\")\n\nemail.add_widget(ops_log)\n</code></pre> \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 15:23:00 99.9% \u7cfb\u7edf\u53ef\u7528\u6027 5 \u8fd0\u7ef4\u4e8b\u4ef6 1 \u544a\u8b66\u5904\u7406 16h \u8fd0\u884c\u65f6\u95f4 \u2699\ufe0f\u8fd0\u7ef4\u4e8b\u4ef6\u65e5\u5fd7                      2024-01-15 16:15:00.234 | INFO | service:redis:92 - Redis\u670d\u52a1\u91cd\u542f\uff0c\u8fde\u63a5\u6062\u590d\u6b63\u5e38 2024-01-15 15:45:00.123 | ERROR | service:redis:88 - Redis\u8fde\u63a5\u8d85\u65f6\uff0c\u5f00\u59cb\u6545\u969c\u8f6c\u79fb 2024-01-15 14:30:00.567 | WARNING | monitor:memory:45 - \u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523085%\uff0c\u89e6\u53d1\u76d1\u63a7\u544a\u8b66 2024-01-15 12:00:00.789 | INFO | backup:auto:25 - \u6570\u636e\u5e93\u81ea\u52a8\u5907\u4efd\u5b8c\u6210 (\u5907\u4efd\u5927\u5c0f: 2.4GB) 2024-01-15 08:00:00.012 | INFO | system:startup:10 - \u670d\u52a1\u5668\u542f\u52a8\u5b8c\u6210\uff0c\u6240\u6709\u670d\u52a1\u6b63\u5e38\u8fd0\u884c 2024-01-15 02:00:00.345 | INFO | cron:cleanup:30 - \u5b9a\u65f6\u6e05\u7406\u4efb\u52a1\u5b8c\u6210\uff0c\u91ca\u653e\u78c1\u76d8\u7a7a\u95f4: 1.2GB <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210 | \u8fd0\u7ef4\u56e2\u961f: ops@company.com</p>"},{"location":"zh/user-guide/log-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_log</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u5feb\u6377\u6dfb\u52a0\u65e5\u5fd7\u7ec4\u4ef6\nemail.add_log(\n    title=\"\u7cfb\u7edf\u65e5\u5fd7\",\n    logs=[\n        (\"\u5e94\u7528\u542f\u52a8\", \"info\"),\n        (\"\u914d\u7f6e\u52a0\u8f7d\", \"debug\"),\n        (\"\u8fde\u63a5\u5f02\u5e38\", \"error\")\n    ],\n    show_time=True,\n    max_height=\"400px\"\n)\n\n# \u6dfb\u52a0loguru\u683c\u5f0f\u65e5\u5fd7\nemail.add_log(\n    title=\"\u8fd0\u884c\u65e5\u5fd7\",\n    loguru_logs=[\n        \"2024-01-15 10:30:25 | INFO | app:main:15 - \u5e94\u7528\u8fd0\u884c\u6b63\u5e38\",\n        \"2024-01-15 10:30:26 | WARNING | db:query:42 - \u67e5\u8be2\u8017\u65f6\u8f83\u957f\"\n    ],\n    filter_level=\"warning\"\n)\n</code></pre>"},{"location":"zh/user-guide/log-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/log-widget/#q","title":"Q: \u5982\u4f55\u5904\u7406\u5927\u91cf\u65e5\u5fd7\u6570\u636e\uff1f","text":"<p>A: \u8bbe\u7f6e\u5408\u7406\u7684\u6700\u5927\u9ad8\u5ea6\u548c\u65e5\u5fd7\u6761\u76ee\u9650\u5236\uff1a Python<pre><code>log.set_max_height(\"400px\")\nlog.filter_by_level(LogLevel.WARNING)  # \u53ea\u663e\u793a\u91cd\u8981\u65e5\u5fd7\n</code></pre></p>"},{"location":"zh/user-guide/log-widget/#q_1","title":"Q: \u65e5\u5fd7\u65f6\u95f4\u683c\u5f0f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5417\uff1f","text":"<p>A: \u76ee\u524d\u4f7f\u7528\u56fa\u5b9a\u683c\u5f0f\uff0c\u53ef\u4ee5\u5728\u6dfb\u52a0\u65f6\u9884\u5148\u683c\u5f0f\u5316\uff1a Python<pre><code>formatted_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\nlog.add_log_entry(\"\u6d88\u606f\", LogLevel.INFO, formatted_time)\n</code></pre></p>"},{"location":"zh/user-guide/log-widget/#q_2","title":"Q: \u5982\u4f55\u5b9e\u73b0\u65e5\u5fd7\u7684\u5b9e\u65f6\u66f4\u65b0\uff1f","text":"<p>A: \u901a\u8fc7\u5b9a\u671f\u8c03\u7528\u6dfb\u52a0\u65b9\u6cd5\u6765\u5b9e\u73b0\uff1a Python<pre><code># \u5b9a\u671f\u6dfb\u52a0\u65b0\u65e5\u5fd7\nlog.add_log_entry(\"\u65b0\u4e8b\u4ef6\", LogLevel.INFO)\nlog.append_log(\"2024-01-15 10:30:25 | INFO | app:event:15 - \u65b0\u4e8b\u4ef6\u53d1\u751f\")\n</code></pre></p>"},{"location":"zh/user-guide/log-widget/#q_3","title":"Q: \u5982\u4f55\u641c\u7d22\u7279\u5b9a\u5185\u5bb9\u7684\u65e5\u5fd7\uff1f","text":"<p>A: \u5728\u6dfb\u52a0\u524d\u8fdb\u884c\u5185\u5bb9\u8fc7\u6ee4\uff1a Python<pre><code>keyword = \"\u6570\u636e\u5e93\"\nif keyword in log_message:\n    log.add_log_entry(log_message, LogLevel.INFO)\n</code></pre></p>"},{"location":"zh/user-guide/log-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>StatusWidget - \u7cfb\u7edf\u72b6\u6001\u4fe1\u606f\u5c55\u793a</li> <li>AlertWidget - \u91cd\u8981\u65e5\u5fd7\u63d0\u9192\u4fe1\u606f</li> <li>TextWidget - \u7b80\u5355\u6587\u672c\u65e5\u5fd7\u663e\u793a</li> <li>CardWidget - \u53ef\u4ee5\u5305\u542b\u65e5\u5fd7\u7684\u5361\u7247</li> <li>ColumnWidget - \u7528\u4e8e\u5e03\u5c40\u591a\u4e2a\u65e5\u5fd7\u7ec4\u4ef6</li> </ul>"},{"location":"zh/user-guide/metric-widget/","title":"MetricWidget \u6307\u6807\u7ec4\u4ef6","text":"<p>MetricWidget \u662f\u4e00\u4e2a\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u5c55\u793a\u5173\u952e\u6570\u636e\u6307\u6807\u7684\u7ec4\u4ef6\u3002\u5b83\u80fd\u591f\u663e\u793aKPI\u3001\u6570\u636e\u8d8b\u52bf\u3001\u4e1a\u52a1\u6307\u6807\u7b49\u4fe1\u606f\uff0c\u652f\u6301\u8d8b\u52bf\u5206\u6790\u3001\u6570\u5b57\u683c\u5f0f\u5316\u548c\u591a\u79cd\u5e03\u5c40\u914d\u7f6e\uff0c\u662f\u6570\u636e\u62a5\u544a\u548c\u4eea\u8868\u677f\u90ae\u4ef6\u7684\u7406\u60f3\u9009\u62e9\u3002</p>"},{"location":"zh/user-guide/metric-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c81. \u6307\u6807\u7ec4\u4ef6\u5c55\u793a","text":"\u6307\u6807\u7ec4\u4ef6\u9884\u89c8 \u6307\u6807\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:55:21 \u5173\u952e\u6307\u6807                      125,890\u2197 +15% \u603b\u7528\u6237\u6570 \u2014 success                      98,456\u2197 +8% \u6d3b\u8dc3\u7528\u6237 \u2014 success                      3.2%\u2198 -0.5% \u8f6c\u5316\u7387 \u2014 warning                      \u00a5458,290\u2197 +12% \u6536\u5165 \u2014 success                      215ms\u2197 +45ms \u54cd\u5e94\u65f6\u95f4 \u2014 error <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/metric-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcca \u6570\u636e\u5c55\u793a: \u652f\u6301\u6570\u503c\u3001\u5355\u4f4d\u3001\u8d8b\u52bf\u53d8\u5316\u7684\u5b8c\u6574\u6307\u6807\u5c55\u793a</li> <li>\ud83d\udcc8 \u8d8b\u52bf\u5206\u6790: \u81ea\u52a8\u8bc6\u522b\u8d8b\u52bf\u65b9\u5411\uff0c\u63d0\u4f9b\u89c6\u89c9\u5316\u7684\u8d8b\u52bf\u6307\u793a</li> <li>\ud83c\udfa8 \u72b6\u6001\u4e3b\u9898: \u57fa\u4e8eStatusType\u7684\u4e3b\u9898\u989c\u8272\u914d\u7f6e\uff0c\u5982\u6210\u529f\u3001\u8b66\u544a\u3001\u9519\u8bef\u7b49</li> <li>\ud83d\udcd0 \u5e03\u5c40\u9009\u62e9: \u652f\u6301\u6c34\u5e73\u548c\u5782\u76f4\u5e03\u5c40\uff0c\u9002\u5e94\u4e0d\u540c\u663e\u793a\u9700\u6c42</li> <li>\ud83d\udd22 \u6570\u5b57\u683c\u5f0f\u5316: \u81ea\u52a8\u683c\u5f0f\u5316\u5927\u6570\u5b57\uff0c\u4f7f\u7528K\u3001M\u7b49\u540e\u7f00\u7b80\u5316\u663e\u793a</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/metric-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/metric-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import MetricWidget\n\n# \u521b\u5efa\u57fa\u7840\u6307\u6807\u7ec4\u4ef6\nmetric = MetricWidget()\nmetric.set_title(\"\u6838\u5fc3\u6307\u6807\")\nmetric.add_metric(\"\u6d3b\u8dc3\u7528\u6237\", 12345, \"\u4eba\")\nmetric.add_metric(\"\u6708\u6536\u5165\", \"\u00a51,250,000\")\nmetric.add_metric(\"\u8f6c\u5316\u7387\", \"3.2\", \"%\")\n\nemail = Email(\"\u4e1a\u52a1\u6570\u636e\u62a5\u544a\")\nemail.add_widget(metric)\n</code></pre>"},{"location":"zh/user-guide/metric-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u521b\u5efa\u5e26\u8d8b\u52bf\u7684\u8be6\u7ec6\u6307\u6807\nmetric = MetricWidget()\nmetric.set_title(\"\u4e1a\u52a1\u5173\u952e\u6307\u6807\")\nmetric.add_metric(\"\u65b0\u7528\u6237\u6ce8\u518c\", 1567, \"\u4eba\", \"+15.6%\", \"success\", \"\u8f83\u4e0a\u6708\u589e\u957f\u663e\u8457\")\nmetric.add_metric(\"\u7528\u6237\u6d3b\u8dc3\u5ea6\", \"78.9\", \"%\", \"+2.3%\", \"success\", \"\u7528\u6237\u53c2\u4e0e\u5ea6\u63d0\u5347\")\nmetric.add_metric(\"\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\", \"156\", \"ms\", \"+12ms\", \"warning\", \"\u9700\u8981\u4f18\u5316\u6027\u80fd\")\nmetric.add_metric(\"\u9519\u8bef\u7387\", \"0.23\", \"%\", \"-0.1%\", \"success\", \"\u7cfb\u7edf\u7a33\u5b9a\u6027\u6539\u5584\")\nmetric.set_layout(\"horizontal\")\nmetric.show_trends(True)\n\nemail.add_widget(metric)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: MetricWidget API</p>"},{"location":"zh/user-guide/metric-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/metric-widget/#_7","title":"\u8d8b\u52bf\u72b6\u6001\u7c7b\u578b\u548c\u989c\u8272","text":"<ul> <li>success: \u7eff\u8272 (#107c10) - \u6b63\u5411\u589e\u957f\u3001\u8fbe\u6210\u76ee\u6807\u3001\u826f\u597d\u8868\u73b0</li> <li>warning: \u6a59\u8272 (#ff8c00) - \u9700\u8981\u5173\u6ce8\u3001\u8f7b\u5fae\u6076\u5316\u3001\u63a5\u8fd1\u9608\u503c</li> <li>error: \u7ea2\u8272 (#d13438) - \u8d1f\u5411\u53d8\u5316\u3001\u8d85\u51fa\u9608\u503c\u3001\u4e25\u91cd\u95ee\u9898</li> <li>info: \u84dd\u8272 (#0078d4) - \u4e2d\u6027\u4fe1\u606f\u3001\u5e38\u89c4\u6570\u636e\u3001\u53c2\u8003\u6307\u6807</li> <li>primary: \u84dd\u8272 (#0078d4) - \u91cd\u8981\u6307\u6807\u3001\u5173\u952e\u6570\u636e\u3001\u4e3b\u8981KPI</li> </ul>"},{"location":"zh/user-guide/metric-widget/#_8","title":"\u6570\u5b57\u683c\u5f0f\u5316\u89c4\u5219","text":"<ul> <li>1,000,000+: \u663e\u793a\u4e3a \"1M\"\u3001\"1.2M\"</li> <li>1,000+: \u663e\u793a\u4e3a \"1K\"\u3001\"5.3K\"</li> <li>\u5c0f\u4e8e1,000: \u663e\u793a\u539f\u6570\u5b57 \"123\"\u3001\"89.5\"</li> </ul>"},{"location":"zh/user-guide/metric-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/metric-widget/#1","title":"1. \u4e1a\u52a1\u4eea\u8868\u677f\u6838\u5fc3KPI\u8fd0\u8425\u6548\u7387","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.metric_widget import MetricWidget\n\n# \u521b\u5efa\u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f\u90ae\u4ef6\nemail = Email(\"\u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f\")\n\n# \u6838\u5fc3\u4e1a\u52a1\u6307\u6807\nmetric1 = MetricWidget()\nmetric1.set_title(\"\u6838\u5fc3KPI\")\nmetric1.add_metric(\"\u6708\u6d3b\u7528\u6237\", 125436, \"\u4eba\", \"+15.6%\", \"success\", \"\u7528\u6237\u589e\u957f\u5f3a\u52b2\")\nmetric1.add_metric(\"\u6708\u6536\u5165\", 2850000, \"\u5143\", \"+18.2%\", \"success\", \"\u6536\u5165\u521b\u5386\u53f2\u65b0\u9ad8\")\nmetric1.add_metric(\"\u8f6c\u5316\u7387\", \"4.23\", \"%\", \"+0.8%\", \"success\", \"\u8f6c\u5316\u6548\u679c\u63d0\u5347\")\nmetric1.add_metric(\"\u5ba2\u5355\u4ef7\", \"168.5\", \"\u5143\", \"-2.3%\", \"warning\", \"\u9700\u8981\u5173\u6ce8\u5b9a\u4ef7\u7b56\u7565\")\nmetric1.set_layout(\"horizontal\")\nmetric1.show_trends(True)\n\nemail.add_widget(metric1)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"business_dashboard.html\")\n</code></pre> \u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f \u4e1a\u52a1\u6570\u636e\u4eea\u8868\u677f \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:20:59                      125K\u4eba \u6708\u6d3b\u7528\u6237 \u2197 +15.6% \u7528\u6237\u589e\u957f\u5f3a\u52b2                      2M\u5143 \u6708\u6536\u5165 \u2197 +18.2% \u6536\u5165\u521b\u5386\u53f2\u65b0\u9ad8                      4.23% \u8f6c\u5316\u7387 \u2197 +0.8% \u8f6c\u5316\u6548\u679c\u63d0\u5347                      168.5\u5143 \u5ba2\u5355\u4ef7 \u2192 -2.3% \u9700\u8981\u5173\u6ce8\u5b9a\u4ef7\u7b56\u7565                      567K\u6b21 \u9875\u9762\u8bbf\u95ee\u91cf \u2197 +22.1%                      24.5% \u8df3\u51fa\u7387 \u2197 -3.2%                      3.8\u5206\u949f \u5e73\u5747\u505c\u7559 \u2192 +0.6\u5206\u949f                      12.3% \u6ce8\u518c\u8f6c\u5316 \u2197 +1.8% <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/metric-widget/#2","title":"2. \u7cfb\u7edf\u6027\u80fd\u76d1\u63a7\u7cfb\u7edf\u8d44\u6e90\u5e94\u7528\u6027\u80fd","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.metric_widget import MetricWidget\n\n# \u521b\u5efa\u7cfb\u7edf\u6027\u80fd\u62a5\u544a\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u6027\u80fd\u62a5\u544a\")\n\n# \u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\nmetric = MetricWidget()\nmetric.set_title(\"\u7cfb\u7edf\u8d44\u6e90\")\nmetric.add_metric(\"CPU\u4f7f\u7528\u7387\", \"45.2\", \"%\", \"+2.1%\", \"warning\", \"\u8d1f\u8f7d\u7565\u6709\u4e0a\u5347\")\nmetric.add_metric(\"\u5185\u5b58\u4f7f\u7528\u7387\", \"78.5\", \"%\", \"-1.3%\", \"success\", \"\u5185\u5b58\u4f7f\u7528\u6b63\u5e38\")\nmetric.add_metric(\"\u78c1\u76d8I/O\", \"234\", \"MB/s\", \"+45MB/s\", \"info\", \"\u8bfb\u5199\u9891\u7387\u589e\u52a0\")\nmetric.add_metric(\"\u7f51\u7edc\u5e26\u5bbd\", \"1.2\", \"GB/s\", \"+0.3GB/s\", \"info\", \"\u6d41\u91cf\u589e\u957f\u7a33\u5b9a\")\nmetric.set_layout(\"horizontal\")\n\nemail.add_widget(metric)\n</code></pre> \u7cfb\u7edf\u6027\u80fd\u62a5\u544a \u7cfb\u7edf\u6027\u80fd\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:21:24                      45.2% CPU\u4f7f\u7528\u7387 \u2192 +2.1% \u8d1f\u8f7d\u7565\u6709\u4e0a\u5347                      78.5% \u5185\u5b58\u4f7f\u7528\u7387 \u2197 -1.3% \u5185\u5b58\u4f7f\u7528\u6b63\u5e38                      234MB/s \u78c1\u76d8I/O \u2192 +45MB/s \u8bfb\u5199\u9891\u7387\u589e\u52a0                      1.2GB/s \u7f51\u7edc\u5e26\u5bbd \u2192 +0.3GB/s \u6d41\u91cf\u589e\u957f\u7a33\u5b9a                      156ms \u5e73\u5747\u54cd\u5e94\u65f6\u95f4 \u2192 +12ms \u54cd\u5e94\u65f6\u95f4\u7565\u6709\u589e\u52a0                      2456\u8bf7\u6c42/\u79d2 QPS \u2197 +234 \u5904\u7406\u80fd\u529b\u63d0\u5347                      0.23% \u9519\u8bef\u7387 \u2197 -0.1% \u7cfb\u7edf\u7a33\u5b9a\u6027\u6539\u5584                      99.95% \u53ef\u7528\u6027 \u2192 -0.02% \u53ef\u7528\u6027\u7565\u6709\u4e0b\u964d <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/metric-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_metric</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_metric(\n    title=\"\u6838\u5fc3\u6307\u6807\",\n    metrics=[\n        (\"\u6307\u68071\", 1234, \"\u5355\u4f4d\", \"+10%\", \"success\", \"\u63cf\u8ff0\"),\n        (\"\u6307\u68072\", \"5.6\", \"%\", \"-2%\", \"warning\"),\n        (\"\u6307\u68073\", \"\u00a51,250,000\", \"\", \"+15%\", \"success\")\n    ],\n    layout=\"horizontal\",\n    show_trends=True\n)\n</code></pre>"},{"location":"zh/user-guide/metric-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/metric-widget/#q","title":"Q: \u6c34\u5e73\u5e03\u5c40\u548c\u5782\u76f4\u5e03\u5c40\u7684\u9009\u62e9\u5efa\u8bae\uff1f","text":"<p>A:  - \u6c34\u5e73\u5e03\u5c40: \u9002\u54083-5\u4e2a\u6838\u5fc3\u6307\u6807\uff0c\u5728\u4e00\u884c\u5185\u5c55\u793a - \u5782\u76f4\u5e03\u5c40: \u9002\u5408\u8be6\u7ec6\u6307\u6807\u5217\u8868\uff0c\u6bcf\u4e2a\u6307\u6807\u5360\u4e00\u884c</p>"},{"location":"zh/user-guide/metric-widget/#q_1","title":"Q: \u5982\u4f55\u81ea\u5b9a\u4e49\u6570\u5b57\u683c\u5f0f\uff1f","text":"<p>A: \u4f20\u5165\u5df2\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3avalue\uff1a Python<pre><code>metric.add_metric(\"\u81ea\u5b9a\u4e49\", \"1,234.56\", \"\u4e07\u5143\")      # \u81ea\u5b9a\u4e49\u683c\u5f0f\nmetric.add_metric(\"\u767e\u5206\u6bd4\", \"99.95\", \"%\")            # \u4fdd\u7559\u5c0f\u6570\n</code></pre></p>"},{"location":"zh/user-guide/metric-widget/#q_2","title":"Q: \u8d8b\u52bf\u4e0d\u663e\u793a\u600e\u4e48\u529e\uff1f","text":"<p>A: \u786e\u4fdd\u8c03\u7528\u4e86 <code>show_trends(True)</code> \u65b9\u6cd5\u3002</p>"},{"location":"zh/user-guide/metric-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>ProgressWidget - \u8fdb\u5ea6\u6761\u5c55\u793a</li> <li>CircularProgressWidget - \u5706\u5f62\u8fdb\u5ea6\u6307\u6807</li> <li>StatusWidget - \u72b6\u6001\u4fe1\u606f\u5c55\u793a</li> <li>CardWidget - \u53ef\u4ee5\u5305\u542b\u6307\u6807\u7684\u5361\u7247</li> <li>TableWidget - \u8868\u683c\u5f62\u5f0f\u7684\u6570\u636e\u5c55\u793a</li> </ul>"},{"location":"zh/user-guide/progress-widget/","title":"ProgressWidget Progress\u6761\u7ec4\u4ef6","text":"<p>ProgressWidget \u662f\u4e00\u4e2a\u7ebf\u6027Progress\u6761\u7ec4\u4ef6\uff0c\u7528\u4e8e\u663e\u793aTask\u6216\u8fdb\u7a0b\u7684CompleteProgress\u3002\u5b83\u652f\u6301\u591a\u79cd\u4e3b\u9898\u989c\u8272\u3001Percentage\u663e\u793a\u3001\u4ee5\u53ca\u7075\u6d3b\u7684\u6837\u5f0f\u914d\u7f6e\uff0c\u9002\u5408\u7528\u4e8eDisplay\u5404\u79cdProgressInfo\u3002</p>"},{"location":"zh/user-guide/progress-widget/#_1","title":"\u7ec4\u4ef6\u9884\u89c8","text":"Project Completion Progress 75% Task Success Rate 92% Disk Usage 85%"},{"location":"zh/user-guide/progress-widget/#_2","title":"\u4e3b\u8981\u529f\u80fd","text":""},{"location":"zh/user-guide/progress-widget/#_3","title":"\ud83c\udfa8 \u591a\u79cd\u4e3b\u9898\u989c\u8272","text":"<ul> <li>PRIMARY (\u4e3b\u8272\u8c03): \u4e00\u822cProgress\u3001\u9ed8\u8ba4Status</li> <li>SUCCESS (\u6210\u529f\u7eff\u8272): \u6210\u529fProgress\u3001\u5065\u5eb7Status  </li> <li>WARNING (Alert\u6a59\u8272): AlertProgress\u3001\u6ce8\u610fStatus</li> <li>ERROR (\u9519\u8bef\u7ea2\u8272): \u9519\u8befProgress\u3001\u5371\u9669Status</li> <li>INFO (Info\u84dd\u8272): InfoProgress\u3001\u4e2d\u6027Status</li> </ul>"},{"location":"zh/user-guide/progress-widget/#progress","title":"\ud83d\udcca Progress\u7ba1\u7406","text":"<ul> <li>\u652f\u6301\u81ea\u5b9a\u4e49\u6700\u5927\u503c\u548c\u5f53\u524d\u503c</li> <li>\u81ea\u52a8\u8ba1\u7b97Percentage</li> <li>\u63d0\u4f9b\u589e\u91cf/\u51cf\u91cf\u64cd\u4f5c</li> <li>\u652f\u6301\u91cd\u7f6e\u548cComplete\u64cd\u4f5c</li> </ul>"},{"location":"zh/user-guide/progress-widget/#_4","title":"\u2699\ufe0f \u6837\u5f0f\u914d\u7f6e","text":"<ul> <li>\u53ef\u81ea\u5b9a\u4e49\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u3001\u5706\u89d2</li> <li>\u652f\u6301\u663e\u793a/\u9690\u85cfPercentageText</li> <li>\u53ef\u8bbe\u7f6e\u80cc\u666f\u989c\u8272</li> <li>\u652f\u6301\u6807\u7b7e\u663e\u793a</li> </ul>"},{"location":"zh/user-guide/progress-widget/#_5","title":"\u6838\u5fc3\u65b9\u6cd5","text":""},{"location":"zh/user-guide/progress-widget/#set_valuevalue-float","title":"<code>set_value(value: float)</code>","text":"<p>\u8bbe\u7f6e\u5f53\u524dProgress\u503c\u3002</p> Python<pre><code>from email_widget.widgets import ProgressWidget\n\nprogress = ProgressWidget().set_value(75.5)\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#set_max_valuemax_val-float","title":"<code>set_max_value(max_val: float)</code>","text":"<p>\u8bbe\u7f6e\u6700\u5927\u503c\uff0c\u9ed8\u8ba4\u4e3a100\u3002</p> Python<pre><code>progress = ProgressWidget().set_value(850).set_max_value(1000)  # 85%\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#set_labellabel-str","title":"<code>set_label(label: str)</code>","text":"<p>\u8bbe\u7f6eProgress\u6761\u6807\u7b7e\u3002</p> Python<pre><code>progress = (ProgressWidget()\n    .set_value(60)\n    .set_label(\"\u4e0b\u8f7dProgress\"))\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#set_themetheme-progresstheme","title":"<code>set_theme(theme: ProgressTheme)</code>","text":"<p>\u8bbe\u7f6eProgress\u6761\u4e3b\u9898\u989c\u8272\u3002</p> Python<pre><code>from email_widget.core.enums import ProgressTheme\n\n# \u4e0d\u540c\u4e3b\u9898\u7684Progress\u6761\nprimary = ProgressWidget().set_value(50).set_theme(ProgressTheme.PRIMARY)\nsuccess = ProgressWidget().set_value(95).set_theme(ProgressTheme.SUCCESS)\nwarning = ProgressWidget().set_value(80).set_theme(ProgressTheme.WARNING)\nerror = ProgressWidget().set_value(15).set_theme(ProgressTheme.ERROR)\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#show_percentageshow-bool-true","title":"<code>show_percentage(show: bool = True)</code>","text":"<p>\u63a7\u5236\u662f\u5426\u663e\u793aPercentageText\u3002</p> Python<pre><code># \u9690\u85cfPercentage\nprogress = (ProgressWidget()\n    .set_value(45)\n    .set_label(\"\u5904\u7406Progress\")\n    .show_percentage(False))\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#incrementamount-float-10","title":"<code>increment(amount: float = 1.0)</code>","text":"<p>\u589e\u52a0Progress\u503c\u3002</p> Python<pre><code>progress = ProgressWidget().set_value(50)\nprogress.increment(10)  # \u73b0\u5728\u662f60\nprogress.increment()    # \u73b0\u5728\u662f61\uff08\u9ed8\u8ba4\u589e\u52a01\uff09\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#decrementamount-float-10","title":"<code>decrement(amount: float = 1.0)</code>","text":"<p>\u51cf\u5c11Progress\u503c\u3002</p> Python<pre><code>progress = ProgressWidget().set_value(50)\nprogress.decrement(5)   # \u73b0\u5728\u662f45\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#reset","title":"<code>reset()</code>","text":"<p>\u91cd\u7f6eProgress\u4e3a0\u3002</p> Python<pre><code>progress = ProgressWidget().set_value(80)\nprogress.reset()  # \u73b0\u5728\u662f0\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#complete","title":"<code>complete()</code>","text":"<p>\u8bbe\u7f6e\u4e3aCompleteStatus\uff08100%\uff09\u3002</p> Python<pre><code>progress = ProgressWidget().set_value(80)\nprogress.complete()  # \u73b0\u5728\u662f100%\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#_6","title":"\u5b9e\u7528\u793a\u4f8b","text":""},{"location":"zh/user-guide/progress-widget/#_7","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget.widgets import ProgressWidget\nfrom email_widget.core.enums import ProgressTheme\n\n# \u57fa\u672cProgress\u6761\nbasic = (ProgressWidget()\n    .set_value(65)\n    .set_label(\"TaskComplete\u5ea6\")\n    .set_theme(ProgressTheme.PRIMARY))\n\n# \u6210\u529fStatusProgress\u6761\nsuccess = (ProgressWidget()\n    .set_value(95)\n    .set_label(\"\u6d4b\u8bd5\u901a\u8fc7\u7387\")\n    .set_theme(ProgressTheme.SUCCESS))\n\n# AlertStatusProgress\u6761\nwarning = (ProgressWidget()\n    .set_value(85)\n    .set_label(\"\u5185\u5b58\u4f7f\u7528\u7387\")\n    .set_theme(ProgressTheme.WARNING))\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#_8","title":"\u81ea\u5b9a\u4e49\u6837\u5f0f","text":"Python<pre><code># \u81ea\u5b9a\u4e49\u5c3a\u5bf8\u548c\u989c\u8272\ncustom = (ProgressWidget()\n    .set_value(70)\n    .set_label(\"\u81ea\u5b9a\u4e49Progress\u6761\")\n    .set_width(\"80%\")\n    .set_height(\"24px\")\n    .set_border_radius(\"12px\")\n    .set_background_color(\"#f0f0f0\"))\n\n# \u65e0Percentage\u663e\u793a\nno_percent = (ProgressWidget()\n    .set_value(40)\n    .set_label(\"\u9759\u9ed8Progress\")\n    .show_percentage(False)\n    .set_theme(ProgressTheme.INFO))\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#systemmonitor","title":"SystemMonitor\u573a\u666f","text":"Python<pre><code># CPU\u4f7f\u7528\u7387\ncpu_usage = (ProgressWidget()\n    .set_value(45)\n    .set_label(\"CPU\u4f7f\u7528\u7387\")\n    .set_theme(ProgressTheme.SUCCESS))\n\n# \u5185\u5b58\u4f7f\u7528\u7387\uff08AlertStatus\uff09\nmemory_usage = (ProgressWidget()\n    .set_value(78)\n    .set_label(\"\u5185\u5b58\u4f7f\u7528\u7387\")\n    .set_theme(ProgressTheme.WARNING))\n\n# \u78c1\u76d8\u4f7f\u7528\u7387\uff08\u5371\u9669Status\uff09\ndisk_usage = (ProgressWidget()\n    .set_value(92)\n    .set_label(\"\u78c1\u76d8\u4f7f\u7528\u7387\")\n    .set_theme(ProgressTheme.ERROR))\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#taskprogress","title":"TaskProgress\u7ba1\u7406","text":"Python<pre><code># ProjectProgress\nproject_progress = (ProgressWidget()\n    .set_value(0)\n    .set_label(\"Project\u603bProgress\")\n    .set_theme(ProgressTheme.PRIMARY))\n\n# \u6a21\u62dfTaskProgress\u66f4\u65b0\nproject_progress.increment(25)  # 25%\nproject_progress.increment(30)  # 55%\nproject_progress.increment(20)  # 75%\n\n# Data\u5904\u7406Progress\ndata_processing = (ProgressWidget()\n    .set_value(1250)\n    .set_max_value(2000)\n    .set_label(\"Data\u5904\u7406Progress\")\n    .set_theme(ProgressTheme.INFO))  # 62.5%\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#metricdisplay","title":"\u4e1a\u52a1MetricDisplay","text":"Python<pre><code># \u9500\u552e\u76ee\u6807Complete\u5ea6\nsales_target = (ProgressWidget()\n    .set_value(1250000)\n    .set_max_value(1000000)  # \u8d85\u989dComplete\n    .set_label(\"\u6708\u5ea6\u9500\u552e\u76ee\u6807\")\n    .set_theme(ProgressTheme.SUCCESS))  # 125%\n\n# \u7528\u6237\u6ee1\u610f\u5ea6\nsatisfaction = (ProgressWidget()\n    .set_value(88)\n    .set_label(\"\u7528\u6237\u6ee1\u610f\u5ea6\")\n    .set_theme(ProgressTheme.SUCCESS))\n\n# TaskComplete\u7387\ntask_completion = (ProgressWidget()\n    .set_value(156)\n    .set_max_value(200)\n    .set_label(\"\u672c\u5468TaskComplete\u7387\")\n    .set_theme(ProgressTheme.PRIMARY))  # 78%\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#progress_1","title":"Progress\u4e3b\u9898\u8be6\u89e3","text":""},{"location":"zh/user-guide/progress-widget/#progresstheme","title":"ProgressTheme \u679a\u4e3e\u503c","text":"\u4e3b\u9898 \u989c\u8272 \u5341\u516d\u8fdb\u5236 \u9002\u7528\u573a\u666f <code>PRIMARY</code> \u4e3b\u8272\u8c03\u84dd <code>#0078d4</code> \u4e00\u822cProgress\u3001\u9ed8\u8ba4Status\u3001ProjectProgress <code>SUCCESS</code> \u6210\u529f\u7eff\u8272 <code>#107c10</code> \u6210\u529fProgress\u3001\u5065\u5eb7Status\u3001\u9ad8Complete\u7387 <code>WARNING</code> Alert\u6a59\u8272 <code>#ff8c00</code> AlertProgress\u3001\u6ce8\u610fStatus\u3001\u4e2d\u7b49\u98ce\u9669 <code>ERROR</code> \u9519\u8bef\u7ea2\u8272 <code>#d13438</code> \u9519\u8befProgress\u3001\u5371\u9669Status\u3001\u9ad8\u98ce\u9669 <code>INFO</code> Info\u84dd\u8272 <code>#0078d4</code> InfoProgress\u3001\u4e2d\u6027Status\u3001DataDisplay"},{"location":"zh/user-guide/progress-widget/#_9","title":"\u4e3b\u9898\u9009\u62e9\u6307\u5357","text":"Python<pre><code># \u6839\u636eProgress\u503c\u9009\u62e9\u5408\u9002\u7684\u4e3b\u9898\ndef get_progress_theme(value, max_value=100):\n    percentage = (value / max_value) * 100\n\n    if percentage &gt;= 90:\n        return ProgressTheme.SUCCESS\n    elif percentage &gt;= 70:\n        return ProgressTheme.PRIMARY\n    elif percentage &gt;= 50:\n        return ProgressTheme.WARNING\n    else:\n        return ProgressTheme.ERROR\n\n# \u4f7f\u7528\u793a\u4f8b\nprogress_value = 85\ntheme = get_progress_theme(progress_value)\nprogress = ProgressWidget().set_value(progress_value).set_theme(theme)\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#_10","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/progress-widget/#1","title":"1. \u9009\u62e9\u5408\u9002\u7684\u4e3b\u9898","text":"Python<pre><code># \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u6839\u636eProgressStatus\u9009\u62e9\u4e3b\u9898\nlow_progress = ProgressWidget().set_value(25).set_theme(ProgressTheme.ERROR)\nmedium_progress = ProgressWidget().set_value(60).set_theme(ProgressTheme.WARNING)\nhigh_progress = ProgressWidget().set_value(90).set_theme(ProgressTheme.SUCCESS)\n\n# \u274c \u907f\u514d\uff1a\u6240\u6709Progress\u6761\u90fd\u4f7f\u7528\u540c\u4e00\u4e3b\u9898\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#2","title":"2. \u63d0\u4f9b\u6e05\u6670\u7684\u6807\u7b7e","text":"Python<pre><code># \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u63cf\u8ff0\u6027\u7684\u6807\u7b7e\nprogress = ProgressWidget().set_value(75).set_label(\"Data\u540c\u6b65Progress\")\n\n# \u274c \u907f\u514d\uff1a\u6a21\u7cca\u7684\u6807\u7b7e\nprogress = ProgressWidget().set_value(75).set_label(\"Progress\")\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#3","title":"3. \u5408\u7406\u8bbe\u7f6e\u6700\u5927\u503c","text":"Python<pre><code># \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u6839\u636e\u5b9e\u9645\u573a\u666f\u8bbe\u7f6e\u6700\u5927\u503c\nfile_progress = ProgressWidget().set_value(512).set_max_value(1024).set_label(\"\u6587\u4ef6\u4e0b\u8f7d\")  # MB\ntask_progress = ProgressWidget().set_value(8).set_max_value(10).set_label(\"TaskComplete\")      # \u4e2a\n\n# \u2705 \u597d\u7684\u505a\u6cd5\uff1aPercentage\u573a\u666f\u4f7f\u7528\u9ed8\u8ba4\u6700\u5927\u503c100\npercent_progress = ProgressWidget().set_value(85).set_label(\"Complete\u7387\")\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#4-percentage","title":"4. \u9002\u5f53\u663e\u793aPercentage","text":"Python<pre><code># \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u91cd\u8981Progress\u663e\u793aPercentage\nimportant = ProgressWidget().set_value(90).set_label(\"\u5173\u952eTask\").show_percentage(True)\n\n# \u2705 \u597d\u7684\u505a\u6cd5\uff1a\u88c5\u9970\u6027Progress\u9690\u85cfPercentage\ndecorative = ProgressWidget().set_value(60).set_label(\"\u6574\u4f53Status\").show_percentage(False)\n</code></pre>"},{"location":"zh/user-guide/progress-widget/#_11","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/progress-widget/#q-100progress","title":"Q: \u5982\u4f55\u5b9e\u73b0\u8d85\u8fc7100%\u7684Progress\uff1f","text":"<p>A: \u8bbe\u7f6e\u66f4\u5927\u7684\u6700\u5927\u503c\uff0c\u5982 <code>set_max_value(120)</code> \u7136\u540e <code>set_value(110)</code>\u3002</p>"},{"location":"zh/user-guide/progress-widget/#q-progress","title":"Q: Progress\u6761\u53ef\u4ee5\u663e\u793a\u8d1f\u503c\u5417\uff1f","text":"<p>A: \u4e0d\u53ef\u4ee5\uff0cProgress\u503c\u4f1a\u88ab\u9650\u5236\u57280\u5230\u6700\u5927\u503c\u4e4b\u95f4\u3002</p>"},{"location":"zh/user-guide/progress-widget/#q-progress_1","title":"Q: \u5982\u4f55\u5b9e\u73b0\u52a8\u6001\u66f4\u65b0Progress\uff1f","text":"<p>A: \u5728\u4ee3\u7801\u4e2d\u4f7f\u7528 <code>increment()</code> \u6216\u76f4\u63a5\u66f4\u65b0 <code>set_value()</code>\uff0c\u4f46\u9700\u8981\u91cd\u65b0\u6e32\u67d3\u90ae\u4ef6\u3002</p>"},{"location":"zh/user-guide/progress-widget/#q-progress_2","title":"Q: \u53ef\u4ee5\u81ea\u5b9a\u4e49Progress\u6761\u7684\u989c\u8272\u5417\uff1f","text":"<p>A: \u5f53\u524d\u7248\u672c\u53ea\u652f\u6301\u9884\u5b9a\u4e49\u76845\u79cd\u4e3b\u9898\uff0c\u4e0d\u652f\u6301\u5b8c\u5168\u81ea\u5b9a\u4e49\u989c\u8272\u3002</p>"},{"location":"zh/user-guide/progress-widget/#_12","title":"\u9002\u7528\u573a\u666f","text":""},{"location":"zh/user-guide/progress-widget/#systemmonitor_1","title":"\ud83d\udcca SystemMonitor","text":"<ul> <li>CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u4f7f\u7528\u7387</li> <li>\u7f51\u7edc\u5e26\u5bbd\u4f7f\u7528\u60c5\u51b5</li> <li>Service\u5065\u5eb7Status</li> </ul>"},{"location":"zh/user-guide/progress-widget/#task","title":"\ud83d\udccb Task\u7ba1\u7406","text":"<ul> <li>Project Completion Progress</li> <li>Task\u6267\u884cStatus</li> <li>\u5de5\u4f5c\u6d41Progress</li> </ul>"},{"location":"zh/user-guide/progress-widget/#metric","title":"\ud83d\udcc8 \u4e1a\u52a1Metric","text":"<ul> <li>\u9500\u552e\u76ee\u6807\u8fbe\u6210\u7387</li> <li>\u7528\u6237\u6ee1\u610f\u5ea6</li> <li>KPIComplete\u60c5\u51b5</li> </ul>"},{"location":"zh/user-guide/progress-widget/#metric_1","title":"\ud83d\udd27 \u6280\u672fMetric","text":"<ul> <li>\u4ee3\u7801\u8986\u76d6\u7387</li> <li>\u6d4b\u8bd5\u901a\u8fc7\u7387</li> <li>\u90e8\u7f72Progress</li> </ul>"},{"location":"zh/user-guide/progress-widget/#_13","title":"\u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>CircularProgressWidget - CircularProgress\u6761</li> <li>StatusWidget - StatusInfoDisplay</li> <li>CardWidget - CardContainer</li> </ul>"},{"location":"zh/user-guide/progress-widget/#_14","title":"\u4e0b\u4e00\u6b65","text":"<p>\u4e86\u89e3\u4e86ProgressWidget\u7684\u57fa\u672c\u7528\u6cd5\u540e\uff0c\u5efa\u8bae\u7ee7\u7eed\u5b66\u4e60\uff1a - CircularProgressWidget - \u5b66\u4e60CircularProgress\u6761\u7684\u4f7f\u7528 - StatusWidget - \u5b66\u4e60\u5982\u4f55Display\u591a\u4e2aStatus\u9879 </p>"},{"location":"zh/user-guide/quote-widget/","title":"QuoteWidget \u5f15\u7528\u7ec4\u4ef6","text":"<p>QuoteWidget \u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u5c55\u793a\u5f15\u7528\u5185\u5bb9\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u591a\u79cd\u5f15\u7528\u6837\u5f0f\u548c\u4e3b\u9898\u989c\u8272\u3002\u5b83\u80fd\u591f\u4f18\u96c5\u5730\u5c55\u793a\u540d\u4eba\u540d\u8a00\u3001\u7528\u6237\u53cd\u9988\u3001\u91cd\u8981\u58f0\u660e\u7b49\u5185\u5bb9\uff0c\u662f\u5185\u5bb9\u5c55\u793a\u7684\u91cd\u8981\u8865\u5145\u3002</p>"},{"location":"zh/user-guide/quote-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c81. \u5f15\u7528\u7ec4\u4ef6\u5c55\u793a","text":"\u5f15\u7528\u7ec4\u4ef6\u9884\u89c8 \u5f15\u7528\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:33:14 <p>\"\u6210\u529f\u4e0d\u662f\u7ec8\u70b9\uff0c\u5931\u8d25\u4e0d\u662f\u81f4\u547d\u7684\"</p> \u2014 \u4e18\u5409\u5c14 <p>\"\u6570\u636e\u662f\u65b0\u65f6\u4ee3\u7684\u77f3\u6cb9\"</p> \u2014 \u300a\u7ecf\u6d4e\u5b66\u4eba\u300b <p>\"\u4eba\u5de5\u667a\u80fd\u5c06\u5f7b\u5e95\u6539\u53d8\u6211\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\"</p> \u2014 \u6bd4\u5c14\u00b7\u76d6\u8328, \u300a\u672a\u6765\u4e4b\u8def\u300b <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/quote-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcac \u5f15\u7528\u5c55\u793a: \u652f\u6301\u5f15\u7528\u5185\u5bb9\u3001\u4f5c\u8005\u3001\u6765\u6e90\u7684\u5b8c\u6574\u5c55\u793a</li> <li>\ud83c\udfa8 \u591a\u79cd\u4e3b\u9898: \u652f\u6301INFO\u3001SUCCESS\u3001WARNING\u3001ERROR\u7b49\u4e3b\u9898\u989c\u8272</li> <li>\ud83d\udcdd \u7075\u6d3b\u914d\u7f6e: \u4f5c\u8005\u548c\u6765\u6e90\u4fe1\u606f\u90fd\u662f\u53ef\u9009\u7684\uff0c\u652f\u6301\u52a8\u6001\u66f4\u65b0</li> <li>\ud83c\udfaf \u7a81\u51fa\u663e\u793a: \u4f7f\u7528\u8fb9\u6846\u548c\u80cc\u666f\u8272\u7a81\u51fa\u663e\u793a\u5f15\u7528\u5185\u5bb9</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/quote-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/quote-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import QuoteWidget\n\n# \u521b\u5efa\u57fa\u7840\u5f15\u7528\nquote = QuoteWidget()\nquote.set_content(\"\u77e5\u8bc6\u5c31\u662f\u529b\u91cf\uff0c\u5b66\u4e60\u6c38\u65e0\u6b62\u5883\u3002\")\nquote.set_author(\"\u57f9\u6839\")\nquote.set_source(\"\u300a\u968f\u7b14\u96c6\u300b\")\n\nemail = Email(\"\u5f15\u7528\u793a\u4f8b\")\nemail.add_widget(quote)\n</code></pre>"},{"location":"zh/user-guide/quote-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u5e26\u4e3b\u9898\u7684\u5f15\u7528\nquote = QuoteWidget()\nquote.set_content(\"\u6210\u529f\u4e0d\u662f\u7ec8\u70b9\uff0c\u5931\u8d25\u4e0d\u662f\u81f4\u547d\u7684\uff0c\u91cd\u8981\u7684\u662f\u7ee7\u7eed\u524d\u8fdb\u7684\u52c7\u6c14\u3002\")\nquote.set_author(\"\u6e29\u65af\u987f\u00b7\u4e18\u5409\u5c14\")\nquote.set_theme(\"success\")\n\nemail.add_widget(quote)\n\n# \u4e00\u6b21\u6027\u8bbe\u7f6e\u6240\u6709\u4fe1\u606f\nquote2 = QuoteWidget()\nquote2.set_quote(\n    content=\"\u4ee3\u7801\u5982\u8bd7\uff0c\u7b80\u6d01\u800c\u4f18\u96c5\u3002\",\n    author=\"\u67d0\u4f4d\u7a0b\u5e8f\u5458\",\n    source=\"\u7f16\u7a0b\u611f\u609f\"\n)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: QuoteWidget API</p>"},{"location":"zh/user-guide/quote-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/quote-widget/#_7","title":"\u4e3b\u9898\u989c\u8272","text":"<ul> <li>info: \u84dd\u8272 (#0078d4) - \u4fe1\u606f\u6027\u5f15\u7528\u3001\u666e\u901a\u5f15\u8a00</li> <li>success: \u7eff\u8272 (#107c10) - \u6210\u529f\u6848\u4f8b\u3001\u6b63\u9762\u8bc4\u4ef7</li> <li>warning: \u6a59\u8272 (#ff8c00) - \u6ce8\u610f\u4e8b\u9879\u3001\u91cd\u8981\u63d0\u9192</li> <li>error: \u7ea2\u8272 (#d13438) - \u9519\u8bef\u8b66\u544a\u3001\u8d1f\u9762\u53cd\u9988</li> </ul>"},{"location":"zh/user-guide/quote-widget/#_8","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/quote-widget/#1","title":"1. \u7528\u6237\u53cd\u9988\u5c55\u793a","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import QuoteWidget\n\nemail = Email(\"\u7528\u6237\u53cd\u9988\u6c47\u603b\")\n\n# \u6b63\u9762\u53cd\u9988\npositive_quote = QuoteWidget()\npositive_quote.set_content(\"\u8fd9\u4e2a\u4ea7\u54c1\u771f\u7684\u5f88\u68d2\uff01\u754c\u9762\u7b80\u6d01\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u5b8c\u5168\u6ee1\u8db3\u4e86\u6211\u4eec\u7684\u9700\u6c42\u3002\")\npositive_quote.set_author(\"\u674e\u7ecf\u7406\")\npositive_quote.set_source(\"\u67d0\u516c\u53f8\u5ba2\u6237\")\npositive_quote.set_theme(\"success\")\n\nemail.add_widget(positive_quote)\n\n# \u6539\u8fdb\u5efa\u8bae\nsuggestion_quote = QuoteWidget()\nsuggestion_quote.set_content(\"\u4ea7\u54c1\u6574\u4f53\u4e0d\u9519\uff0c\u4f46\u662f\u5728\u79fb\u52a8\u7aef\u7684\u4f53\u9a8c\u8fd8\u6709\u63d0\u5347\u7a7a\u95f4\u3002\")\nsuggestion_quote.set_author(\"\u5f20\u603b\u76d1\")\nsuggestion_quote.set_source(\"\u7528\u6237\u8c03\u7814\")\nsuggestion_quote.set_theme(\"warning\")\n\nemail.add_widget(suggestion_quote)\n</code></pre> \u7528\u6237\u53cd\u9988\u5c55\u793a \u7528\u6237\u53cd\u9988\u5c55\u793a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:39:58 <p>\u7528\u6237\u53cd\u9988\u6c47\u603b</p> <p>\"EmailWidget\u771f\u7684\u5f88\u68d2\uff01\u5e2e\u6211\u4eec\u8282\u7701\u4e86\u5927\u91cf\u7684\u90ae\u4ef6\u5f00\u53d1\u65f6\u95f4\uff0c\u7ec4\u4ef6\u8bbe\u8ba1\u4e5f\u5f88\u7f8e\u89c2\u3002\"</p> \u2014 \u5f20\u5f00\u53d1, \u6280\u672f\u603b\u76d1 <p>\"\u5e0c\u671b\u80fd\u589e\u52a0\u66f4\u591a\u7684\u56fe\u8868\u7c7b\u578b\uff0c\u7279\u522b\u662f\u7518\u7279\u56fe\uff0c\u8fd9\u6837\u5c31\u80fd\u8986\u76d6\u6211\u4eec\u9879\u76ee\u7ba1\u7406\u7684\u6240\u6709\u9700\u6c42\u4e86\u3002\"</p> \u2014 \u674e\u4ea7\u54c1, \u4ea7\u54c1\u7ecf\u7406 <p>\"\u5f3a\u70c8\u63a8\u8350\u7ed9\u5176\u4ed6\u56e2\u961f\u4f7f\u7528\uff0cAPI\u8bbe\u8ba1\u5f88\u53cb\u597d\uff0c\u6587\u6863\u4e5f\u5f88\u5b8c\u6574\u3002\"</p> \u2014 \u738b\u67b6\u6784, \u67b6\u6784\u5e08 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/quote-widget/#2","title":"2. \u6587\u6863\u4e2d\u7684\u91cd\u8981\u58f0\u660e","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import QuoteWidget\n\nemail = Email(\"\u9879\u76ee\u6587\u6863\")\n\n# \u91cd\u8981\u58f0\u660e\nimportant_quote = QuoteWidget()\nimportant_quote.set_content(\"\u672c\u7cfb\u7edf\u6d89\u53ca\u654f\u611f\u6570\u636e\uff0c\u6240\u6709\u64cd\u4f5c\u4eba\u5458\u5fc5\u987b\u4e25\u683c\u9075\u5b88\u6570\u636e\u5b89\u5168\u89c4\u8303\u3002\")\nimportant_quote.set_author(\"\u6280\u672f\u90e8\")\nimportant_quote.set_source(\"\u5b89\u5168\u89c4\u8303\u6587\u6863\")\nimportant_quote.set_theme(\"error\")\n\nemail.add_widget(important_quote)\n</code></pre> \u91cd\u8981\u58f0\u660e \u91cd\u8981\u58f0\u660e \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:39:58 <p>\u670d\u52a1\u6761\u6b3e\u66f4\u65b0\u901a\u77e5</p> <p>\u6211\u4eec\u66f4\u65b0\u4e86\u670d\u52a1\u6761\u6b3e\uff0c\u4e3b\u8981\u53d8\u66f4\u5982\u4e0b\uff1a</p> <p>\"\u6211\u4eec\u627f\u8bfa\u4fdd\u62a4\u60a8\u7684\u9690\u79c1\u548c\u6570\u636e\u5b89\u5168\u3002\u65b0\u7684\u6761\u6b3e\u8fdb\u4e00\u6b65\u660e\u786e\u4e86\u6570\u636e\u5904\u7406\u7684\u900f\u660e\u5ea6\u548c\u7528\u6237\u6743\u5229\u3002\"</p> \u2014 EmailWidget\u56e2\u961f, \u5b98\u65b9\u58f0\u660e <p>\u8be6\u7ec6\u6761\u6b3e\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u5b98\u65b9\u7f51\u7ad9\u3002</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/quote-widget/#_9","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_quote</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_quote(\n    content=\"\u521b\u65b0\u662f\u4f01\u4e1a\u53d1\u5c55\u7684\u6e90\u52a8\u529b\",\n    author=\"\u67d0CEO\", \n    source=\"\u4f01\u4e1a\u5e74\u62a5\",\n    theme=\"info\"\n)\n</code></pre>"},{"location":"zh/user-guide/quote-widget/#_10","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/quote-widget/#q","title":"Q: \u53ef\u4ee5\u53ea\u8bbe\u7f6e\u5185\u5bb9\uff0c\u4e0d\u8bbe\u7f6e\u4f5c\u8005\u5417\uff1f","text":"<p>A: \u53ef\u4ee5\uff0c\u4f5c\u8005\u548c\u6765\u6e90\u90fd\u662f\u53ef\u9009\u7684\uff1a Python<pre><code>quote.set_content(\"\u8fd9\u662f\u4e00\u53e5\u6ca1\u6709\u7f72\u540d\u7684\u5f15\u7528\u3002\")\n</code></pre></p>"},{"location":"zh/user-guide/quote-widget/#q_1","title":"Q: \u5982\u4f55\u6e05\u9664\u5df2\u8bbe\u7f6e\u7684\u4f5c\u8005\u4fe1\u606f\uff1f","text":"<p>A: \u4f7f\u7528 <code>clear_author()</code> \u65b9\u6cd5\uff1a Python<pre><code>quote.clear_author()\nquote.clear_source()\n</code></pre></p>"},{"location":"zh/user-guide/quote-widget/#q-html","title":"Q: \u5f15\u7528\u5185\u5bb9\u53ef\u4ee5\u5305\u542bHTML\u5417\uff1f","text":"<p>A: \u652f\u6301\u57fa\u672c\u7684HTML\u6807\u7b7e\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528\u7b80\u5355\u7684\u683c\u5f0f\u4ee5\u786e\u4fdd\u90ae\u4ef6\u517c\u5bb9\u6027\u3002</p>"},{"location":"zh/user-guide/quote-widget/#q_2","title":"Q: \u4e0d\u540c\u4e3b\u9898\u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>A: \u4e3b\u8981\u662f\u8fb9\u6846\u989c\u8272\u548c\u80cc\u666f\u8272\u7684\u5dee\u5f02\uff0c\u7528\u4e8e\u8868\u8fbe\u4e0d\u540c\u7684\u60c5\u611f\u503e\u5411\u6216\u91cd\u8981\u7a0b\u5ea6\u3002</p>"},{"location":"zh/user-guide/quote-widget/#_11","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>AlertWidget - \u63d0\u9192\u4fe1\u606f\u5c55\u793a</li> <li>CardWidget - \u5305\u542b\u5f15\u7528\u7684\u5361\u7247</li> <li>TextWidget - \u57fa\u7840\u6587\u672c\u7ec4\u4ef6</li> <li>SeparatorWidget - \u5185\u5bb9\u5206\u9694</li> <li>StatusWidget - \u72b6\u6001\u4fe1\u606f\u5c55\u793a</li> </ul>"},{"location":"zh/user-guide/separator-widget/","title":"SeparatorWidget \u5206\u9694\u7b26\u7ec4\u4ef6","text":"<p>SeparatorWidget \u662f\u4e00\u4e2a\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u521b\u5efa\u89c6\u89c9\u5206\u9694\u7ebf\u7684\u7ec4\u4ef6\u3002\u5b83\u652f\u6301\u591a\u79cd\u6837\u5f0f\u7684\u5206\u9694\u7ebf\uff0c\u5305\u62ec\u5b9e\u7ebf\u3001\u865a\u7ebf\u548c\u70b9\u7ebf\uff0c\u5e2e\u52a9\u7ec4\u7ec7\u90ae\u4ef6\u5185\u5bb9\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u63d0\u5347\u53ef\u8bfb\u6027\u3002</p>"},{"location":"zh/user-guide/separator-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c8","text":"\u5206\u9694\u7b26\u7ec4\u4ef6\u9884\u89c8 \u5206\u9694\u7b26\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:24:49 1. \u5b9e\u7ebf\u5206\u9694\u7b26 (SOLID) 2. \u865a\u7ebf\u5206\u9694\u7b26 (DASHED) 3. \u70b9\u7ebf\u5206\u9694\u7b26 (DOTTED) <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/separator-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udccf \u591a\u79cd\u6837\u5f0f: \u652f\u6301\u5b9e\u7ebf\u3001\u865a\u7ebf\u3001\u70b9\u7ebf\u4e09\u79cd\u5206\u9694\u7b26\u6837\u5f0f</li> <li>\ud83c\udfa8 \u989c\u8272\u4e3b\u9898: \u652f\u6301\u57fa\u4e8eStatusType\u7684\u4e3b\u9898\u989c\u8272\u914d\u7f6e</li> <li>\ud83d\udd27 \u7075\u6d3b\u914d\u7f6e: \u53ef\u81ea\u5b9a\u4e49\u989c\u8272\u3001\u7c97\u7ec6\u3001\u5bbd\u5ea6\u548c\u8fb9\u8ddd</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684CSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/separator-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/separator-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import SeparatorWidget\nfrom email_widget.core.enums import SeparatorType, TextType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u5206\u9694\u7b26\u793a\u4f8b\")\n\n# \u6dfb\u52a0\u6807\u9898\nemail.add_text(\"\u5206\u9694\u7b26\u6f14\u793a\", TextType.TITLE_LARGE)\n\n# \u6dfb\u52a0\u5185\u5bb9\nemail.add_text(\"\u8fd9\u662f\u5206\u9694\u7b26\u4e0a\u65b9\u7684\u5185\u5bb9\")\n\n# \u521b\u5efa\u57fa\u7840\u5206\u9694\u7b26\nseparator = SeparatorWidget().set_type(SeparatorType.SOLID)\nemail.add_widget(separator)\n\n# \u6dfb\u52a0\u66f4\u591a\u5185\u5bb9\nemail.add_text(\"\u8fd9\u662f\u5206\u9694\u7b26\u4e0b\u65b9\u7684\u5185\u5bb9\")\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_separator()\n\n# \u5bfc\u51faHTML\nemail.export_html(\"separator_demo.html\")\n</code></pre>"},{"location":"zh/user-guide/separator-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import SeparatorWidget\nfrom email_widget.core.enums import SeparatorType, TextType\n\nemail = Email(\"\u81ea\u5b9a\u4e49\u5206\u9694\u7b26\u6837\u5f0f\")\n\n# \u521b\u5efa\u5e26\u6837\u5f0f\u7684\u865a\u7ebf\u5206\u9694\u7b26\nemail.add_text(\"\u865a\u7ebf\u5206\u9694\u7b26\u793a\u4f8b\", TextType.SECTION_H2)\ndashed_separator = (SeparatorWidget()\n    .set_type(SeparatorType.DASHED)\n    .set_color(\"#0078d4\")\n    .set_thickness(\"2px\")\n    .set_width(\"80%\")\n    .set_margin(\"20px\"))\n\nemail.add_widget(dashed_separator)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\u521b\u5efa\u70b9\u7ebf\u5206\u9694\u7b26\nemail.add_text(\"\u70b9\u7ebf\u5206\u9694\u7b26\u793a\u4f8b\", TextType.SECTION_H2)\nemail.add_separator(\n    separator_type=SeparatorType.DOTTED,\n    color=\"#ff8c00\",\n    thickness=\"3px\",\n    width=\"50%\"\n)\n\nemail.export_html(\"custom_separator_demo.html\")\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: SeparatorWidget API</p>"},{"location":"zh/user-guide/separator-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/separator-widget/#_7","title":"\u5206\u9694\u7b26\u7c7b\u578b","text":"<ul> <li>\u5b9e\u7ebf\u5206\u9694\u7b26 (SOLID): \u9002\u7528\u4e8e\u4e3b\u8981\u5185\u5bb9\u533a\u57df\u7684\u5206\u5272\u3001\u7ae0\u8282\u95f4\u7684\u6e05\u6670\u5206\u9694</li> <li>\u865a\u7ebf\u5206\u9694\u7b26 (DASHED): \u9002\u7528\u4e8e\u6b21\u8981\u5185\u5bb9\u7684\u5206\u5272\u3001\u76f8\u5173\u5185\u5bb9\u7684\u5206\u7ec4</li> <li>\u70b9\u7ebf\u5206\u9694\u7b26 (DOTTED): \u9002\u7528\u4e8e\u88c5\u9970\u6027\u5206\u5272\u3001\u8f7b\u91cf\u7ea7\u7684\u5185\u5bb9\u5206\u9694</li> </ul>"},{"location":"zh/user-guide/separator-widget/#_8","title":"\u63a8\u8350\u914d\u8272","text":""},{"location":"zh/user-guide/separator-widget/#_9","title":"\u4e3b\u9898\u8272\u7cfb","text":"<ul> <li>\u4e3b\u8981\u5206\u9694\u7b26: #0078d4 (\u84dd\u8272)</li> <li>\u6210\u529f\u5206\u9694\u7b26: #107c10 (\u7eff\u8272)</li> <li>\u8b66\u544a\u5206\u9694\u7b26: #ff8c00 (\u6a59\u8272)</li> <li>\u9519\u8bef\u5206\u9694\u7b26: #d13438 (\u7ea2\u8272)</li> </ul>"},{"location":"zh/user-guide/separator-widget/#_10","title":"\u4e2d\u6027\u8272\u7cfb","text":"<ul> <li>\u9ed8\u8ba4\u7070\u8272: #e1dfdd</li> <li>\u6df1\u7070\u8272: #8e8e93</li> <li>\u6d45\u7070\u8272: #f3f2f1</li> </ul>"},{"location":"zh/user-guide/separator-widget/#_11","title":"\u5c3a\u5bf8\u5efa\u8bae","text":""},{"location":"zh/user-guide/separator-widget/#_12","title":"\u7c97\u7ec6\u5efa\u8bae","text":"<ul> <li>\u7ec6\u5206\u9694\u7b26: 1px - \u9002\u7528\u4e8e\u5bc6\u96c6\u5185\u5bb9</li> <li>\u6807\u51c6\u5206\u9694\u7b26: 2px - \u901a\u7528\u573a\u666f</li> <li>\u7c97\u5206\u9694\u7b26: 3px - \u91cd\u8981\u5206\u5272</li> </ul>"},{"location":"zh/user-guide/separator-widget/#_13","title":"\u5bbd\u5ea6\u5efa\u8bae","text":"<ul> <li>\u5168\u5bbd\u5206\u9694\u7b26: 100%</li> <li>\u5c45\u4e2d\u5206\u9694\u7b26: 80%</li> <li>\u88c5\u9970\u6027\u5206\u9694\u7b26: 50%</li> </ul>"},{"location":"zh/user-guide/separator-widget/#_14","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/separator-widget/#1","title":"1. \u5185\u5bb9\u5c42\u6b21\u5206\u5272","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import SeparatorType, TextType\n\nemail = Email(\"\u5c42\u6b21\u5316\u5185\u5bb9\")\n\n# \u4e3b\u8981\u7ae0\u8282\u95f4\u7528\u7c97\u5b9e\u7ebf\nemail.add_text(\"\u7b2c\u4e00\u7ae0\", TextType.TITLE_LARGE)\nemail.add_text(\"\u7ae0\u8282\u5185\u5bb9...\")\nemail.add_separator(\n    separator_type=SeparatorType.SOLID,\n    thickness=\"2px\",\n    margin=\"30px\"\n)\n\n# \u5b50\u8282\u95f4\u7528\u7ec6\u865a\u7ebf\nemail.add_text(\"1.1 \u5c0f\u8282\", TextType.SECTION_H2)\nemail.add_text(\"\u5c0f\u8282\u5185\u5bb9...\")\nemail.add_separator(\n    separator_type=SeparatorType.DASHED,\n    thickness=\"1px\",\n    margin=\"20px\"\n)\n\nemail.export_html(\"hierarchical_content.html\")\n</code></pre> \u5c42\u6b21\u5316\u5185\u5bb9 \u5c42\u6b21\u5316\u5185\u5bb9 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:45:16 <p>\u7b2c\u4e00\u7ae0</p> <p>\u7ae0\u8282\u5185\u5bb9...</p> 1. 1.1 \u5c0f\u8282 <p>\u5c0f\u8282\u5185\u5bb9...</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/separator-widget/#2","title":"2. \u4e3b\u9898\u5316\u5206\u5272","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import SeparatorType, AlertType\n\nemail = Email(\"\u4e3b\u9898\u5316\u5206\u9694\u7b26\")\n\n# \u6210\u529f\u72b6\u6001\u540e\u7684\u5206\u9694\nemail.add_alert(\"\u4efb\u52a1\u5b8c\u6210\", AlertType.TIP)\nemail.add_separator(\n    separator_type=SeparatorType.SOLID,\n    color=\"#107c10\",\n    thickness=\"2px\"\n)\n\n# \u8b66\u544a\u72b6\u6001\u540e\u7684\u5206\u9694\nemail.add_alert(\"\u6ce8\u610f\u4e8b\u9879\", AlertType.WARNING)\nemail.add_separator(\n    separator_type=SeparatorType.DASHED,\n    color=\"#ff8c00\",\n    thickness=\"2px\"\n)\n\nemail.export_html(\"themed_separators.html\")\n</code></pre> \u4e3b\u9898\u5316\u5206\u9694\u7b26 \u4e3b\u9898\u5316\u5206\u9694\u7b26 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:45:16 \ud83d\udca1 \u63d0\u793a \u4efb\u52a1\u5b8c\u6210 \u26a0\ufe0f \u8b66\u544a \u6ce8\u610f\u4e8b\u9879 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/separator-widget/#3","title":"3. \u7cfb\u7edf\u76d1\u63a7\u90ae\u4ef6","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.core.enums import SeparatorType\n\nemail = Email(\"\u7cfb\u7edf\u72b6\u6001\u76d1\u63a7\")\n\n# \u6b63\u5e38\u670d\u52a1\nemail.add_text(\"Web\u670d\u52a1: \u6b63\u5e38\")\nemail.add_separator(\n    separator_type=SeparatorType.SOLID,\n    color=\"#107c10\",\n    thickness=\"1px\"\n)\n\n# \u8b66\u544a\u670d\u52a1\nemail.add_text(\"\u6570\u636e\u5e93: \u8b66\u544a\")\nemail.add_separator(\n    separator_type=SeparatorType.DASHED,\n    color=\"#ff8c00\",\n    thickness=\"2px\"\n)\n\n# \u9519\u8bef\u670d\u52a1\nemail.add_text(\"\u7f13\u5b58: \u6545\u969c\")\nemail.add_separator(\n    separator_type=SeparatorType.SOLID,\n    color=\"#d13438\",\n    thickness=\"2px\"\n)\n\nemail.export_html(\"system_monitoring.html\")\n</code></pre> \u7cfb\u7edf\u72b6\u6001\u76d1\u63a7 \u7cfb\u7edf\u72b6\u6001\u76d1\u63a7 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:39:58 <p>Web\u670d\u52a1: \u6b63\u5e38\u8fd0\u884c</p> <p>\u54cd\u5e94\u65f6\u95f4: 98ms</p> <p>\u6570\u636e\u5e93: \u8d1f\u8f7d\u8f83\u9ad8</p> <p>CPU\u4f7f\u7528\u7387: 78%</p> <p>\u7f13\u5b58: \u8fde\u63a5\u5931\u8d25</p> <p>\u9519\u8bef\u4ee3\u7801: TIMEOUT</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/separator-widget/#_15","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_separator</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_separator()\n\n# \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_separator(\n    separator_type=SeparatorType.DASHED,\n    color=\"#0078d4\",\n    thickness=\"2px\",\n    width=\"80%\",\n    margin=\"20px\"\n)\n</code></pre>"},{"location":"zh/user-guide/separator-widget/#_16","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/separator-widget/#q","title":"Q: \u5206\u9694\u7b26\u5728\u67d0\u4e9b\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u4e0d\u663e\u793a\uff1f","text":"<p>A: \u786e\u4fdd\u4f7f\u7528\u6807\u51c6\u7684 CSS \u8fb9\u6846\u6837\u5f0f\uff0c\u907f\u514d\u4f7f\u7528\u590d\u6742\u7684 CSS \u5c5e\u6027\u3002SeparatorWidget \u5df2\u7ecf\u9488\u5bf9\u4e3b\u6d41\u90ae\u4ef6\u5ba2\u6237\u7aef\u8fdb\u884c\u4e86\u4f18\u5316\u3002</p>"},{"location":"zh/user-guide/separator-widget/#q_1","title":"Q: \u5982\u4f55\u521b\u5efa\u6e10\u53d8\u8272\u5206\u9694\u7b26\uff1f","text":"<p>A: \u7531\u4e8e\u90ae\u4ef6\u5ba2\u6237\u7aef\u7684\u9650\u5236\uff0c\u5efa\u8bae\u4f7f\u7528\u7eaf\u8272\u3002\u5982\u679c\u9700\u8981\u89c6\u89c9\u5c42\u6b21\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u989c\u8272\u6df1\u6d45\u3002</p>"},{"location":"zh/user-guide/separator-widget/#q_2","title":"Q: \u5206\u9694\u7b26\u592a\u7ec6\u6216\u592a\u7c97\uff1f","text":"<p>A: \u8c03\u6574 <code>thickness</code> \u5c5e\u6027\uff0c\u63a8\u8350\u4f7f\u7528 1px-3px \u4e4b\u95f4\u7684\u503c\u4ee5\u786e\u4fdd\u826f\u597d\u7684\u663e\u793a\u6548\u679c\u3002</p>"},{"location":"zh/user-guide/separator-widget/#q_3","title":"Q: \u5982\u4f55\u8ba9\u5206\u9694\u7b26\u5c45\u4e2d\u663e\u793a\uff1f","text":"<p>A: \u5206\u9694\u7b26\u9ed8\u8ba4\u5c45\u4e2d\u663e\u793a\uff0c\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574 <code>width</code> \u5c5e\u6027\u6765\u63a7\u5236\u5bbd\u5ea6\uff0c\u5982 <code>set_width(\"80%\")</code> \u521b\u5efa\u5c45\u4e2d\u768480%\u5bbd\u5ea6\u5206\u9694\u7b26\u3002</p>"},{"location":"zh/user-guide/separator-widget/#_17","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>TextWidget - \u7528\u4e8e\u5206\u9694\u7b26\u524d\u540e\u7684\u6807\u9898\u6587\u5b57</li> <li>CardWidget - \u53ef\u4ee5\u5728\u5361\u7247\u95f4\u4f7f\u7528\u5206\u9694\u7b26</li> <li>ColumnWidget - \u7528\u4e8e\u591a\u5217\u5e03\u5c40\u4e2d\u7684\u5206\u9694</li> <li>AlertWidget - \u53ef\u4e0e\u5206\u9694\u7b26\u7ec4\u5408\u4f7f\u7528\u7684\u63d0\u793a\u4fe1\u606f</li> </ul>"},{"location":"zh/user-guide/status-widget/","title":"StatusWidget \u72b6\u6001\u7ec4\u4ef6","text":"<p>StatusWidget \u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u663e\u793a\u7cfb\u7edf\u72b6\u6001\u3001\u914d\u7f6e\u4fe1\u606f\u6216\u952e\u503c\u5bf9\u6570\u636e\u7684\u7ec4\u4ef6\u3002\u5b83\u652f\u6301\u591a\u79cd\u72b6\u6001\u7c7b\u578b\u7684\u989c\u8272\u6807\u8bc6\uff0c\u63d0\u4f9b\u7075\u6d3b\u7684\u5e03\u5c40\u9009\u9879\uff0c\u662f\u76d1\u63a7\u9762\u677f\u548c\u72b6\u6001\u62a5\u544a\u7684\u7406\u60f3\u9009\u62e9\u3002</p>"},{"location":"zh/user-guide/status-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c82. \u72b6\u6001\u7ec4\u4ef6\u5c55\u793a","text":"\u72b6\u6001\u7ec4\u4ef6\u9884\u89c8 \u72b6\u6001\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:33:14 Web\u670d\u52a1 \u8fd0\u884c\u6b63\u5e38 \u6570\u636e\u5e93 \u8fde\u63a5\u826f\u597d \u7f13\u5b58\u670d\u52a1 \u6027\u80fd\u4e0b\u964d \u5907\u4efd\u7cfb\u7edf \u79bb\u7ebf <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/status-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcca \u72b6\u6001\u5c55\u793a: \u652f\u6301\u952e\u503c\u5bf9\u5f62\u5f0f\u7684\u72b6\u6001\u4fe1\u606f\u5c55\u793a</li> <li>\ud83c\udfa8 \u72b6\u6001\u5206\u7c7b: \u652f\u6301SUCCESS\u3001WARNING\u3001ERROR\u3001INFO\u7b49\u72b6\u6001\u7c7b\u578b</li> <li>\ud83d\udcd0 \u5e03\u5c40\u9009\u62e9: \u652f\u6301\u5782\u76f4\u548c\u6c34\u5e73\u4e24\u79cd\u5e03\u5c40\u65b9\u5f0f</li> <li>\ud83d\udd04 \u52a8\u6001\u66f4\u65b0: \u652f\u6301\u52a8\u6001\u6dfb\u52a0\u3001\u66f4\u65b0\u548c\u79fb\u9664\u72b6\u6001\u9879</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/status-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/status-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import StatusWidget\n\n# \u521b\u5efa\u57fa\u7840\u72b6\u6001\u7ec4\u4ef6\nstatus = StatusWidget()\nstatus.set_title(\"\u7cfb\u7edf\u72b6\u6001\")\nstatus.add_status(\"CPU\u4f7f\u7528\u7387\", \"68%\")\nstatus.add_status(\"\u5185\u5b58\u4f7f\u7528\", \"4.2GB / 8GB\")\nstatus.add_status(\"\u78c1\u76d8\u7a7a\u95f4\", \"256GB / 512GB\")\n\nemail = Email(\"\u72b6\u6001\u62a5\u544a\")\nemail.add_widget(status)\n</code></pre>"},{"location":"zh/user-guide/status-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u5e26\u72b6\u6001\u7c7b\u578b\u7684\u8be6\u7ec6\u72b6\u6001\nstatus = StatusWidget()\nstatus.set_title(\"\u670d\u52a1\u76d1\u63a7\")\nstatus.add_status(\"API\u670d\u52a1\", \"\u8fd0\u884c\u4e2d\", \"success\")\nstatus.add_status(\"\u6570\u636e\u5e93\", \"\u8fde\u63a5\u6b63\u5e38\", \"success\")\nstatus.add_status(\"\u7f13\u5b58\u670d\u52a1\", \"\u54cd\u5e94\u6162\", \"warning\")\nstatus.add_status(\"\u7f51\u7edc\u72b6\u6001\", \"\u65ad\u5f00\u8fde\u63a5\", \"error\")\nstatus.set_layout(\"horizontal\")\n\nemail.add_widget(status)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: StatusWidget API</p>"},{"location":"zh/user-guide/status-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/status-widget/#_7","title":"\u72b6\u6001\u7c7b\u578b\u548c\u989c\u8272","text":"<ul> <li>success: \u7eff\u8272 (#107c10) - \u6b63\u5e38\u8fd0\u884c\u3001\u6210\u529f\u72b6\u6001</li> <li>warning: \u6a59\u8272 (#ff8c00) - \u9700\u8981\u6ce8\u610f\u3001\u6027\u80fd\u8b66\u544a</li> <li>error: \u7ea2\u8272 (#d13438) - \u9519\u8bef\u72b6\u6001\u3001\u670d\u52a1\u5f02\u5e38</li> <li>info: \u84dd\u8272 (#0078d4) - \u4fe1\u606f\u72b6\u6001\u3001\u914d\u7f6e\u9879</li> <li>neutral: \u7070\u8272 (#8e8e93) - \u4e2d\u6027\u72b6\u6001\u3001\u9ed8\u8ba4\u503c</li> </ul>"},{"location":"zh/user-guide/status-widget/#_8","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/status-widget/#1","title":"1. \u7cfb\u7edf\u76d1\u63a7\u72b6\u6001","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import StatusWidget\n\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\")\n\n# \u7cfb\u7edf\u8d44\u6e90\u72b6\u6001\nsystem_status = StatusWidget()\nsystem_status.set_title(\"\u7cfb\u7edf\u8d44\u6e90\")\nsystem_status.add_status(\"CPU\u4f7f\u7528\u7387\", \"68%\", \"success\")\nsystem_status.add_status(\"\u5185\u5b58\u4f7f\u7528\", \"85%\", \"warning\")\nsystem_status.add_status(\"\u78c1\u76d8\u7a7a\u95f4\", \"256GB / 512GB\", \"success\")\nsystem_status.add_status(\"\u7f51\u7edc\u72b6\u6001\", \"\u65ad\u5f00\u8fde\u63a5\", \"error\")\nsystem_status.set_layout(\"vertical\")\n\nemail.add_widget(system_status)\n\n# \u670d\u52a1\u72b6\u6001\nservice_status = StatusWidget()\nservice_status.set_title(\"\u670d\u52a1\u72b6\u6001\")\nservice_status.add_status(\"Web\u670d\u52a1\", \"\u8fd0\u884c\u4e2d\", \"success\")\nservice_status.add_status(\"\u6570\u636e\u5e93\", \"\u8fde\u63a5\u6b63\u5e38\", \"success\")\nservice_status.add_status(\"\u7f13\u5b58\u670d\u52a1\", \"\u54cd\u5e94\u6162\", \"warning\")\nservice_status.add_status(\"\u6d88\u606f\u961f\u5217\", \"\u961f\u5217\u79ef\u538b\", \"warning\")\n\nemail.add_widget(service_status)\n</code></pre> \u7cfb\u7edf\u76d1\u63a7\u72b6\u6001 \u7cfb\u7edf\u76d1\u63a7\u72b6\u6001 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 14:39:58 <p>\u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7</p> <p>CPU\u4f7f\u7528\u7387: 45% (\u6b63\u5e38)</p> <p>\u5185\u5b58\u4f7f\u7528: 2.8GB (\u6b63\u5e38)</p> <p>\u78c1\u76d8\u7a7a\u95f4: 85% (\u8b66\u544a)</p> <p>\u7f51\u7edc\u5ef6\u8fdf: 12ms (\u6b63\u5e38)</p> 1. \u670d\u52a1\u72b6\u6001 <p>Web\u670d\u52a1: \u8fd0\u884c\u4e2d</p> <p>\u6570\u636e\u5e93: \u8fd0\u884c\u4e2d</p> <p>\u7f13\u5b58: \u5f02\u5e38</p> <p>\u961f\u5217: \u8fd0\u884c\u4e2d</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/status-widget/#2","title":"2. \u9879\u76ee\u914d\u7f6e\u4fe1\u606f","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import StatusWidget\n\nemail = Email(\"\u9879\u76ee\u914d\u7f6e\u62a5\u544a\")\n\n# \u73af\u5883\u914d\u7f6e\nconfig_status = StatusWidget()\nconfig_status.set_title(\"\u73af\u5883\u914d\u7f6e\")\nconfig_status.add_status(\"\u73af\u5883\", \"\u751f\u4ea7\u73af\u5883\", \"info\")\nconfig_status.add_status(\"\u7248\u672c\", \"v2.1.0\", \"info\")\nconfig_status.add_status(\"\u90e8\u7f72\u65f6\u95f4\", \"2024-07-11 15:30\", \"info\")\nconfig_status.add_status(\"\u8d1f\u8d23\u4eba\", \"\u5f00\u53d1\u56e2\u961f\", \"info\")\nconfig_status.set_layout(\"horizontal\")\n\nemail.add_widget(config_status)\n</code></pre>"},{"location":"zh/user-guide/status-widget/#_9","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_status</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_status(\n    title=\"\u7cfb\u7edf\u72b6\u6001\",\n    statuses=[\n        (\"CPU\", \"68%\", \"success\"),\n        (\"\u5185\u5b58\", \"85%\", \"warning\"),\n        (\"\u78c1\u76d8\", \"50%\", \"success\")\n    ],\n    layout=\"vertical\"\n)\n</code></pre>"},{"location":"zh/user-guide/status-widget/#_10","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/status-widget/#q","title":"Q: \u5982\u4f55\u9009\u62e9\u5782\u76f4\u5e03\u5c40\u8fd8\u662f\u6c34\u5e73\u5e03\u5c40\uff1f","text":"<p>A:  - \u5782\u76f4\u5e03\u5c40: \u9002\u5408\u72b6\u6001\u9879\u8f83\u591a\u6216\u6807\u7b7e\u8f83\u957f\u7684\u60c5\u51b5 - \u6c34\u5e73\u5e03\u5c40: \u9002\u5408\u5feb\u901f\u6d4f\u89c8\u5173\u952e\u72b6\u6001\u4fe1\u606f</p>"},{"location":"zh/user-guide/status-widget/#q_1","title":"Q: \u5982\u4f55\u66f4\u65b0\u5df2\u5b58\u5728\u7684\u72b6\u6001\u9879\uff1f","text":"<p>A: \u4f7f\u7528 <code>update_status</code> \u65b9\u6cd5\uff1a Python<pre><code>status.update_status(\"CPU\u4f7f\u7528\u7387\", \"75%\", \"warning\")\n</code></pre></p>"},{"location":"zh/user-guide/status-widget/#q-html","title":"Q: \u72b6\u6001\u503c\u53ef\u4ee5\u5305\u542bHTML\u5417\uff1f","text":"<p>A: \u5efa\u8bae\u4f7f\u7528\u7eaf\u6587\u672c\uff0c\u4ee5\u786e\u4fdd\u5728\u6240\u6709\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u6b63\u786e\u663e\u793a\u3002</p>"},{"location":"zh/user-guide/status-widget/#_11","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>MetricWidget - \u6570\u636e\u6307\u6807\u5c55\u793a</li> <li>ProgressWidget - \u8fdb\u5ea6\u72b6\u6001\u663e\u793a</li> <li>AlertWidget - \u72b6\u6001\u63d0\u9192\u4fe1\u606f</li> <li>CardWidget - \u5305\u542b\u72b6\u6001\u7684\u5361\u7247</li> <li>TableWidget - \u8868\u683c\u5f62\u5f0f\u7684\u72b6\u6001\u5c55\u793a</li> </ul>"},{"location":"zh/user-guide/table-widget/","title":"\u8868\u683c\u7ec4\u4ef6 (TableWidget)","text":"<p>TableWidget \u662f\u7528\u4e8e\u5c55\u793a\u7ed3\u6784\u5316\u6570\u636e\u7684\u4e13\u4e1a\u7ec4\u4ef6\uff0c\u652f\u6301\u8868\u5934\u3001\u72b6\u6001\u5355\u5143\u683c\u3001\u6761\u7eb9\u6837\u5f0f\u3001\u7d22\u5f15\u5217\u7b49\u591a\u79cd\u529f\u80fd\uff0c\u662f\u6570\u636e\u62a5\u544a\u4e2d\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002</p>"},{"location":"zh/user-guide/table-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c81. \u8868\u683c\u7ec4\u4ef6\u5c55\u793a","text":"\u8868\u683c\u7ec4\u4ef6\u9884\u89c8 \u8868\u683c\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:59:55 \u9500\u552e\u6570\u636e\u7edf\u8ba1 \u4ea7\u54c1\u540d\u79f0 \u9500\u552e\u989d \u589e\u957f\u7387 \u72b6\u6001 \u624b\u673a \u00a51,250,000 +15.6% \u4f18\u79c0 \u7535\u8111 \u00a5890,000 +8.3% \u826f\u597d \u8033\u673a \u00a5345,000 -2.1% \u9700\u6539\u8fdb \u5145\u7535\u5668 \u00a5123,000 +25.4% \u4f18\u79c0 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/table-widget/#_2","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":"Python<pre><code>from email_widget.widgets import TableWidget\n\n# \u521b\u5efa\u57fa\u672c\u8868\u683c\ntable = TableWidget()\ntable.set_headers([\"\u59d3\u540d\", \"\u5e74\u9f84\", \"\u90e8\u95e8\"])\ntable.add_row([\"\u5f20\u4e09\", \"28\", \"\u6280\u672f\u90e8\"])\ntable.add_row([\"\u674e\u56db\", \"32\", \"\u9500\u552e\u90e8\"])\n</code></pre> Name Age Department John 28 Tech Jane 32 Sales"},{"location":"zh/user-guide/table-widget/#_3","title":"\ud83d\udcca \u57fa\u672c\u7528\u6cd5","text":""},{"location":"zh/user-guide/table-widget/#_4","title":"\u8bbe\u7f6e\u8868\u5934\u548c\u6570\u636e","text":"Python<pre><code># \u8bbe\u7f6e\u8868\u5934\ntable = TableWidget()\ntable.set_headers([\"\u9879\u76ee\", \"\u72b6\u6001\", \"\u8fdb\u5ea6\", \"\u8d1f\u8d23\u4eba\"])\n\n# \u6dfb\u52a0\u6570\u636e\u884c\ntable.add_row([\"\u7528\u6237\u7cfb\u7edf\", \"\u5f00\u53d1\u4e2d\", \"75%\", \"\u5f20\u5de5\"])\ntable.add_row([\"\u652f\u4ed8\u6a21\u5757\", \"\u6d4b\u8bd5\u4e2d\", \"90%\", \"\u674e\u5de5\"])\ntable.add_row([\"\u6570\u636e\u7edf\u8ba1\", \"\u5df2\u5b8c\u6210\", \"100%\", \"\u738b\u5de5\"])\n\n# \u6279\u91cf\u6dfb\u52a0\u884c\nrows_data = [\n    [\"\u9879\u76eeA\", \"\u8fdb\u884c\u4e2d\", \"60%\", \"\u5458\u5de5A\"],\n    [\"\u9879\u76eeB\", \"\u5df2\u5b8c\u6210\", \"100%\", \"\u5458\u5de5B\"],\n    [\"\u9879\u76eeC\", \"\u8ba1\u5212\u4e2d\", \"0%\", \"\u5458\u5de5C\"]\n]\ntable.add_rows(rows_data)\n</code></pre>"},{"location":"zh/user-guide/table-widget/#_5","title":"\u8bbe\u7f6e\u8868\u683c\u6807\u9898Project Progress Statistics","text":"Python<pre><code>table = TableWidget()\ntable.set_title(\"\u9879\u76ee\u8fdb\u5ea6\u7edf\u8ba1\u8868\")\ntable.set_headers([\"\u9879\u76ee\u540d\u79f0\", \"\u5b8c\u6210\u72b6\u6001\"])\ntable.add_row([\"\u9879\u76eeAlpha\", \"75%\"])\n</code></pre> Project Name Completion Status Project Alpha 75%"},{"location":"zh/user-guide/table-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u914d\u7f6e","text":""},{"location":"zh/user-guide/table-widget/#_7","title":"\u6761\u7eb9\u6837\u5f0f","text":"Python<pre><code># \u542f\u7528\u6761\u7eb9\u6837\u5f0f\ntable = TableWidget()\ntable.set_striped(True)\ntable.set_headers([\"\u5e8f\u53f7\", \"\u4ea7\u54c1\", \"\u9500\u91cf\"])\ntable.add_rows([\n    [\"1\", \"\u4ea7\u54c1A\", \"1,200\"],\n    [\"2\", \"\u4ea7\u54c1B\", \"980\"],\n    [\"3\", \"\u4ea7\u54c1C\", \"1,500\"],\n    [\"4\", \"\u4ea7\u54c1D\", \"750\"]\n])\n</code></pre> No. Product Sales 1 Product A 1,200 2 Product B 980 3 Product C 1,500 4 Product D 750"},{"location":"zh/user-guide/table-widget/#_8","title":"\u8fb9\u6846\u548c\u7d22\u5f15\u5217","text":"Python<pre><code># \u663e\u793a\u8fb9\u6846\u548c\u7d22\u5f15\u5217\ntable = TableWidget()\ntable.set_show_border(True)\ntable.set_show_index(True)\ntable.set_headers([\"\u4efb\u52a1\", \"\u72b6\u6001\"])\ntable.add_rows([\n    [\"\u6570\u636e\u5907\u4efd\", \"\u5b8c\u6210\"],\n    [\"\u7cfb\u7edf\u66f4\u65b0\", \"\u8fdb\u884c\u4e2d\"],\n    [\"\u5b89\u5168\u68c0\u67e5\", \"\u5f85\u5f00\u59cb\"]\n])\n</code></pre> Index Task Status 1 Data Backup Complete 2 System Update In Progress 3 Security Check Pending"},{"location":"zh/user-guide/table-widget/#_9","title":"\ud83c\udfaf \u72b6\u6001\u5355\u5143\u683c","text":"<p>TableWidget \u652f\u6301\u7279\u6b8a\u7684\u72b6\u6001\u5355\u5143\u683c\uff0c\u53ef\u4ee5\u663e\u793a\u5f69\u8272\u7684\u72b6\u6001\u4fe1\u606f\uff1a</p> Python<pre><code>from email_widget.widgets import TableWidget, TableCell\nfrom email_widget.core.enums import StatusType\n\ntable = TableWidget()\ntable.set_headers([\"\u670d\u52a1\", \"\u72b6\u6001\", \"\u54cd\u5e94\u65f6\u95f4\"])\ntable.add_row([\n    \"Web\u670d\u52a1\",\n    TableCell(\"\u6b63\u5e38\", StatusType.SUCCESS),\n    \"145ms\"\n])\ntable.add_row([\n    \"\u6570\u636e\u5e93\",\n    TableCell(\"\u8b66\u544a\", StatusType.WARNING),\n    \"892ms\"\n])\ntable.add_row([\n    \"\u7f13\u5b58\u670d\u52a1\",\n    TableCell(\"\u6545\u969c\", StatusType.ERROR),\n    \"\u8d85\u65f6\"\n])\n</code></pre> Service Status Response Time Web Service Normal 145ms Database Warning 892ms Cache Service Error Timeout"},{"location":"zh/user-guide/table-widget/#_10","title":"\u72b6\u6001\u7c7b\u578b\u8bf4\u660e","text":"\u72b6\u6001\u7c7b\u578b \u989c\u8272 \u9002\u7528\u573a\u666f <code>StatusType.SUCCESS</code> \u7eff\u8272 (#107c10) \u6210\u529f\u3001\u6b63\u5e38\u3001\u901a\u8fc7 <code>StatusType.WARNING</code> \u6a59\u8272 (#ff8c00) \u8b66\u544a\u3001\u6ce8\u610f\u3001\u5f85\u5904\u7406 <code>StatusType.ERROR</code> \u7ea2\u8272 (#d13438) \u9519\u8bef\u3001\u5931\u8d25\u3001\u5f02\u5e38 <code>StatusType.INFO</code> \u84dd\u8272 (#0078d4) \u4fe1\u606f\u3001\u63d0\u793a\u3001\u4e2d\u6027"},{"location":"zh/user-guide/table-widget/#_11","title":"\ud83d\udccb \u5b8c\u6574\u793a\u4f8b","text":""},{"location":"zh/user-guide/table-widget/#_12","title":"\u7cfb\u7edf\u76d1\u63a7\u8868\u683c","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TableWidget, TableCell\nfrom email_widget.core.enums import StatusType\n\n# \u521b\u5efa\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u76d1\u63a7\u62a5\u544a\")\n\n# \u521b\u5efa\u76d1\u63a7\u8868\u683c\nmonitor_table = TableWidget()\nmonitor_table.set_title(\"\u7cfb\u7edf\u670d\u52a1\u72b6\u6001\")\nmonitor_table.set_headers([\"\u670d\u52a1\u540d\u79f0\", \"\u72b6\u6001\", \"CPU\u4f7f\u7528\u7387\", \"\u5185\u5b58\u4f7f\u7528\u7387\", \"\u6700\u540e\u68c0\u67e5\u65f6\u95f4\"])\nmonitor_table.set_striped(True)\nmonitor_table.set_show_index(True)\n\n# \u6dfb\u52a0\u76d1\u63a7\u6570\u636e\nmonitor_table.add_rows([\n    [\"Web\u670d\u52a1\u5668\", TableCell(\"\u8fd0\u884c\", StatusType.SUCCESS), \"23%\", \"45%\", \"2024-01-15 10:30\"],\n    [\"\u6570\u636e\u5e93\", TableCell(\"\u8b66\u544a\", StatusType.WARNING), \"78%\", \"67%\", \"2024-01-15 10:29\"],\n    [\"Redis\u7f13\u5b58\", TableCell(\"\u6b63\u5e38\", StatusType.SUCCESS), \"12%\", \"34%\", \"2024-01-15 10:30\"],\n    [\"\u6d88\u606f\u961f\u5217\", TableCell(\"\u6545\u969c\", StatusType.ERROR), \"0%\", \"0%\", \"2024-01-15 09:45\"],\n    [\"\u6587\u4ef6\u670d\u52a1\", TableCell(\"\u6b63\u5e38\", StatusType.SUCCESS), \"15%\", \"28%\", \"2024-01-15 10:30\"]\n])\n\nemail.add_widget(monitor_table)\n</code></pre>"},{"location":"zh/user-guide/table-widget/#_13","title":"\u9500\u552e\u6570\u636e\u8868\u683c","text":"Python<pre><code># \u521b\u5efa\u9500\u552e\u6570\u636e\u8868\u683c\nsales_table = TableWidget()\nsales_table.set_title(\"\u6708\u5ea6\u9500\u552e\u6570\u636e\")\nsales_table.set_headers([\"\u4ea7\u54c1\u540d\u79f0\", \"\u9500\u552e\u6570\u91cf\", \"\u9500\u552e\u989d\", \"\u589e\u957f\u7387\", \"\u72b6\u6001\"])\nsales_table.set_show_border(True)\n\n# \u6dfb\u52a0\u9500\u552e\u6570\u636e\nsales_table.add_rows([\n    [\"\u667a\u80fd\u624b\u673a\", \"1,250\", \"\u00a52,500,000\", \"+15%\", TableCell(\"\u8d85\u989d\", StatusType.SUCCESS)],\n    [\"\u5e73\u677f\u7535\u8111\", \"680\", \"\u00a51,360,000\", \"+8%\", TableCell(\"\u8fbe\u6807\", StatusType.SUCCESS)],\n    [\"\u7b14\u8bb0\u672c\u7535\u8111\", \"420\", \"\u00a52,100,000\", \"-5%\", TableCell(\"\u5f85\u6539\u8fdb\", StatusType.WARNING)],\n    [\"\u667a\u80fd\u624b\u8868\", \"890\", \"\u00a51,780,000\", \"+25%\", TableCell(\"\u4f18\u79c0\", StatusType.SUCCESS)]\n])\n\nemail.add_widget(sales_table)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: TableWidget API</p>"},{"location":"zh/user-guide/table-widget/#_14","title":"\ud83c\udfaf \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/table-widget/#1","title":"1. \u5408\u7406\u4f7f\u7528\u72b6\u6001\u5355\u5143\u683c","text":"Python<pre><code># \u63a8\u8350\uff1a\u4e3a\u72b6\u6001\u76f8\u5173\u7684\u5217\u4f7f\u7528\u72b6\u6001\u5355\u5143\u683c\ntable.add_row([\n    \"\u4efb\u52a1\u540d\u79f0\",\n    TableCell(\"\u5df2\u5b8c\u6210\", StatusType.SUCCESS),  # \u72b6\u6001\u5217\n    \"2024-01-15\"  # \u666e\u901a\u6587\u672c\u5217\n])\n</code></pre>"},{"location":"zh/user-guide/table-widget/#2","title":"2. \u4fdd\u6301\u6570\u636e\u4e00\u81f4\u6027","text":"Python<pre><code># \u63a8\u8350\uff1a\u786e\u4fdd\u6bcf\u884c\u6570\u636e\u5217\u6570\u4e0e\u8868\u5934\u4e00\u81f4\nheaders = [\"\u59d3\u540d\", \"\u5e74\u9f84\", \"\u90e8\u95e8\"]\ntable.set_headers(headers)\ntable.add_row([\"\u5f20\u4e09\", \"28\", \"\u6280\u672f\u90e8\"])  # 3\u5217\u6570\u636e\u5339\u914d3\u4e2a\u8868\u5934\n</code></pre>"},{"location":"zh/user-guide/table-widget/#3","title":"3. \u9002\u5f53\u4f7f\u7528\u6837\u5f0f\u589e\u5f3a\u53ef\u8bfb\u6027","text":"Python<pre><code># \u63a8\u8350\uff1a\u5927\u6570\u636e\u8868\u683c\u4f7f\u7528\u6761\u7eb9\u6837\u5f0f\nlarge_table = TableWidget()\nlarge_table.set_striped(True)\nlarge_table.set_show_index(True)  # \u4fbf\u4e8e\u5f15\u7528\u7279\u5b9a\u884c\n</code></pre>"},{"location":"zh/user-guide/table-widget/#4","title":"4. \u63a7\u5236\u8868\u683c\u5bbd\u5ea6\u907f\u514d\u5e03\u5c40\u95ee\u9898","text":"Python<pre><code># \u63a8\u8350\uff1a\u4e3a\u5305\u542b\u5927\u91cf\u5217\u7684\u8868\u683c\u8bbe\u7f6e\u6700\u5927\u5bbd\u5ea6\nwide_table = TableWidget()\nwide_table.set_max_width(\"800px\")\n</code></pre>"},{"location":"zh/user-guide/table-widget/#_15","title":"\ud83d\udea8 \u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u5217\u6570\u4e00\u81f4\u6027: \u786e\u4fdd\u6bcf\u884c\u6570\u636e\u7684\u5217\u6570\u4e0e\u8868\u5934\u5217\u6570\u4e00\u81f4</li> <li>\u5185\u5bb9\u957f\u5ea6: \u907f\u514d\u5355\u5143\u683c\u5185\u5bb9\u8fc7\u957f\u5f71\u54cd\u5e03\u5c40</li> <li>\u72b6\u6001\u4f7f\u7528: \u5408\u7406\u4f7f\u7528\u72b6\u6001\u5355\u5143\u683c\uff0c\u4e0d\u8981\u6ee5\u7528\u989c\u8272</li> <li>\u6027\u80fd\u8003\u8651: \u5927\u6570\u636e\u91cf\u65f6\u8003\u8651\u5206\u9875\u6216\u5206\u8868\u663e\u793a</li> </ol> <p>\u4e0b\u4e00\u6b65: \u4e86\u89e3 \u56fe\u8868\u7ec4\u4ef6 \u5b66\u4e60\u5982\u4f55\u5c55\u793a\u53ef\u89c6\u5316\u6570\u636e\u3002 </p>"},{"location":"zh/user-guide/text-widget/","title":"TextWidget \u6587\u672c\u7ec4\u4ef6","text":"<p>TextWidget \u662f EmailWidget \u4e2d\u6700\u57fa\u7840\u4e5f\u662f\u6700\u5e38\u7528\u7684\u7ec4\u4ef6\uff0c\u7528\u4e8e\u663e\u793a\u5404\u79cd\u6587\u672c\u5185\u5bb9\u3002\u5b83\u652f\u6301\u591a\u79cd\u6587\u672c\u7c7b\u578b\u3001\u5bf9\u9f50\u65b9\u5f0f\u548c\u6837\u5f0f\u914d\u7f6e\uff0c\u662f\u6784\u5efa\u90ae\u4ef6\u5185\u5bb9\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002</p>"},{"location":"zh/user-guide/text-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c81. \u4e8c\u7ea7\u7ae0\u8282\u6807\u9898","text":"\u6587\u672c\u7ec4\u4ef6\u9884\u89c8 \u6587\u672c\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:24:49 <p>\u5927\u6807\u9898\u793a\u4f8b</p> <p>\u5c0f\u6807\u9898\u793a\u4f8b</p> 1.1. \u4e09\u7ea7\u7ae0\u8282\u6807\u9898 <p>\u8fd9\u662f\u6b63\u6587\u5185\u5bb9\uff0c\u5c55\u793a\u6807\u51c6\u7684\u6bb5\u843d\u6587\u5b57\u6837\u5f0f\u3002</p> <p>\u8fd9\u662f\u8bf4\u660e\u6587\u5b57\uff0c\u901a\u5e38\u7528\u4e8e\u56fe\u7247\u8bf4\u660e\u6216\u8865\u5145\u4fe1\u606f\u3002</p> 1.2. \u989c\u8272\u6837\u5f0f <p>\u84dd\u8272\u91cd\u8981\u6587\u672c</p> <p>\u7eff\u8272\u6210\u529f\u6587\u672c</p> <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/text-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\ud83d\udcdd \u591a\u79cd\u7c7b\u578b: \u652f\u6301\u6807\u9898\u3001\u6b63\u6587\u3001\u8bf4\u660e\u6587\u5b57\u7b49\u591a\u79cd\u6587\u672c\u7c7b\u578b</li> <li>\ud83c\udfa8 \u6837\u5f0f\u5b9a\u5236: \u652f\u6301\u989c\u8272\u3001\u5bf9\u9f50\u65b9\u5f0f\u3001\u5b57\u4f53\u6837\u5f0f\u7b49\u81ea\u5b9a\u4e49\u914d\u7f6e</li> <li>\ud83d\udcca \u81ea\u52a8\u7f16\u53f7: \u4e8c\u7ea7\u5230\u4e94\u7ea7\u6807\u9898\u81ea\u52a8\u663e\u793a\u6570\u5b57\u7f16\u53f7</li> <li>\ud83d\udd17 HTML\u652f\u6301: \u652f\u6301\u57fa\u672c\u7684HTML\u6807\u7b7e\u548c\u683c\u5f0f\u5316\u6587\u672c</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/text-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/text-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u57fa\u672c\u6587\u672c\ntext = TextWidget()\ntext.set_content(\"\u8fd9\u662f\u4e00\u6bb5\u666e\u901a\u6587\u672c\")\ntext.set_type(TextType.BODY)\n\nemail = Email(\"\u6587\u672c\u7ec4\u4ef6\u793a\u4f8b\")\nemail.add_widget(text)\n</code></pre>"},{"location":"zh/user-guide/text-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u94fe\u5f0f\u8c03\u7528\u8bbe\u7f6e\u6837\u5f0f\nstyled_text = (TextWidget()\n              .set_content(\"\u91cd\u8981\u6807\u9898\")\n              .set_type(TextType.SECTION_H2)\n              .set_color(\"#0078d4\")\n              .set_align(\"center\"))\n\nemail.add_widget(styled_text)\n\n# \u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\nemail.add_text(\"\u5feb\u6377\u65b9\u6cd5\u521b\u5efa\u7684\u6587\u672c\", TextType.BODY)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: TextWidget API</p>"},{"location":"zh/user-guide/text-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/text-widget/#_7","title":"\u6587\u672c\u7c7b\u578b\u548c\u5c42\u7ea7","text":"<ul> <li>TITLE_LARGE: \u5927\u6807\u9898 - \u7528\u4e8e\u90ae\u4ef6\u4e3b\u6807\u9898</li> <li>TITLE_SMALL: \u5c0f\u6807\u9898 - \u7528\u4e8e\u526f\u6807\u9898</li> <li>SECTION_H2: \u4e8c\u7ea7\u6807\u9898 - \u81ea\u52a8\u7f16\u53f7 (1. \u6807\u9898)</li> <li>SECTION_H3: \u4e09\u7ea7\u6807\u9898 - \u81ea\u52a8\u7f16\u53f7 (1.1. \u6807\u9898)</li> <li>SECTION_H4: \u56db\u7ea7\u6807\u9898 - \u81ea\u52a8\u7f16\u53f7 (1.1.1. \u6807\u9898)</li> <li>SECTION_H5: \u4e94\u7ea7\u6807\u9898 - \u81ea\u52a8\u7f16\u53f7 (1.1.1.1. \u6807\u9898)</li> <li>BODY: \u6b63\u6587 - \u6bb5\u843d\u5185\u5bb9</li> <li>CAPTION: \u8bf4\u660e\u6587\u5b57 - \u56fe\u7247\u8bf4\u660e\u3001\u8865\u5145\u4fe1\u606f</li> </ul>"},{"location":"zh/user-guide/text-widget/#_8","title":"\u989c\u8272\u5efa\u8bae","text":"<ul> <li>\u4e3b\u8981\u5185\u5bb9: #323130 (\u6df1\u7070\u8272)</li> <li>\u5f3a\u8c03\u5185\u5bb9: #0078d4 (\u84dd\u8272)</li> <li>\u6210\u529f\u4fe1\u606f: #107c10 (\u7eff\u8272)</li> <li>\u8b66\u544a\u4fe1\u606f: #ff8c00 (\u6a59\u8272)</li> <li>\u9519\u8bef\u4fe1\u606f: #d13438 (\u7ea2\u8272)</li> </ul>"},{"location":"zh/user-guide/text-widget/#_9","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/text-widget/#1","title":"1. \u6587\u6863\u7ed3\u6784\u5316\u5185\u5bb9","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.text_widget import TextWidget\nfrom email_widget.core.enums import TextType\n\n# \u521b\u5efa\u7ed3\u6784\u5316\u6587\u6863\nemail = Email(\"\u9879\u76ee\u62a5\u544a\")\n\n# \u4e3b\u6807\u9898\nemail.add_text(\"2024\u5e74Q1\u9879\u76ee\u8fdb\u5c55\u62a5\u544a\", TextType.TITLE_LARGE)\n\n# \u7ae0\u8282\u6807\u9898\nemail.add_text(\"\u9879\u76ee\u6982\u8ff0\", TextType.SECTION_H2)\nemail.add_text(\"\u672c\u5b63\u5ea6\u4e3b\u8981\u5b8c\u6210\u4e86\u7528\u6237\u7cfb\u7edf\u548c\u6570\u636e\u5206\u6790\u6a21\u5757\u7684\u5f00\u53d1\u5de5\u4f5c\u3002\", TextType.BODY)\n\n# \u5b50\u7ae0\u8282\nemail.add_text(\"\u7528\u6237\u7cfb\u7edf\u6a21\u5757\", TextType.SECTION_H3)\nemail.add_text(\"\u5b9e\u73b0\u4e86\u7528\u6237\u6ce8\u518c\u3001\u767b\u5f55\u3001\u6743\u9650\u7ba1\u7406\u7b49\u6838\u5fc3\u529f\u80fd\u3002\", TextType.BODY)\n\nemail.add_text(\"\u6570\u636e\u5206\u6790\u6a21\u5757\", TextType.SECTION_H3)\nemail.add_text(\"\u5b8c\u6210\u4e86\u6570\u636e\u91c7\u96c6\u3001\u6e05\u6d17\u548c\u57fa\u7840\u5206\u6790\u529f\u80fd\u3002\", TextType.BODY)\n\n# \u5bfc\u51fa\nemail.export_html(\"structured_document.html\")\n</code></pre>"},{"location":"zh/user-guide/text-widget/#2","title":"2. \u5f3a\u8c03\u548c\u683c\u5f0f\u5316\u6587\u672c","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.text_widget import TextWidget\nfrom email_widget.core.enums import TextType\n\nemail = Email(\"\u683c\u5f0f\u5316\u6587\u672c\u793a\u4f8b\")\n\n# \u5f3a\u8c03\u91cd\u8981\u4fe1\u606f\nimportant_text = (TextWidget()\n                 .set_content(\"\u91cd\u8981\u901a\u77e5\uff1a\u7cfb\u7edf\u5c06\u4e8e\u4eca\u665a\u8fdb\u884c\u7ef4\u62a4\")\n                 .set_type(TextType.BODY)\n                 .set_color(\"#d13438\")\n                 .set_align(\"center\"))\nemail.add_widget(important_text)\n\n# \u6210\u529f\u4fe1\u606f\nsuccess_text = (TextWidget()\n               .set_content(\"\u2705 \u9879\u76ee\u5df2\u6210\u529f\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\")\n               .set_type(TextType.BODY)\n               .set_color(\"#107c10\"))\nemail.add_widget(success_text)\n\n# HTML\u683c\u5f0f\u5316\nhtml_text = (TextWidget()\n            .set_content(\"\u652f\u6301 &lt;strong&gt;\u7c97\u4f53&lt;/strong&gt;\u3001&lt;em&gt;\u659c\u4f53&lt;/em&gt; \u548c &lt;u&gt;\u4e0b\u5212\u7ebf&lt;/u&gt;\")\n            .set_type(TextType.BODY))\nemail.add_widget(html_text)\n</code></pre>"},{"location":"zh/user-guide/text-widget/#_10","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_text</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u57fa\u7840\u5feb\u6377\u65b9\u6cd5\nemail.add_text(\"\u8fd9\u662f\u4e00\u6bb5\u6587\u672c\")\n\n# \u5e26\u7c7b\u578b\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_text(\"\u8fd9\u662f\u6807\u9898\", TextType.SECTION_H2)\n\n# \u5e26\u6837\u5f0f\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_text(\"\u5f3a\u8c03\u6587\u672c\", TextType.BODY, color=\"#0078d4\", align=\"center\")\n</code></pre>"},{"location":"zh/user-guide/text-widget/#_11","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/text-widget/#q","title":"Q: \u5982\u4f55\u521b\u5efa\u591a\u884c\u6587\u672c\uff1f","text":"<p>A: \u5728\u5185\u5bb9\u4e2d\u4f7f\u7528\u6362\u884c\u7b26\u6216HTML\u7684<code>&lt;br&gt;</code>\u6807\u7b7e\uff1a Python<pre><code>text.set_content(\"\u7b2c\u4e00\u884c\\n\u7b2c\u4e8c\u884c\\n\u7b2c\u4e09\u884c\")\n# \u6216\u8005\ntext.set_content(\"\u7b2c\u4e00\u884c&lt;br&gt;\u7b2c\u4e8c\u884c&lt;br&gt;\u7b2c\u4e09\u884c\")\n</code></pre></p>"},{"location":"zh/user-guide/text-widget/#q_1","title":"Q: \u6807\u9898\u7f16\u53f7\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f","text":"<p>A: \u4e8c\u7ea7\u5230\u4e94\u7ea7\u6807\u9898\u4f1a\u81ea\u52a8\u6309\u5c42\u7ea7\u7f16\u53f7\uff1a - H2: 1. \u6807\u9898 - H3: 1.1. \u6807\u9898 - H4: 1.1.1. \u6807\u9898 - H5: 1.1.1.1. \u6807\u9898</p>"},{"location":"zh/user-guide/text-widget/#q-html","title":"Q: \u652f\u6301\u54ea\u4e9bHTML\u6807\u7b7e\uff1f","text":"<p>A: \u652f\u6301\u57fa\u672c\u7684\u683c\u5f0f\u5316\u6807\u7b7e\u5982<code>&lt;strong&gt;</code>\u3001<code>&lt;em&gt;</code>\u3001<code>&lt;u&gt;</code>\u3001<code>&lt;br&gt;</code>\u7b49\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528\u7b80\u5355\u7684\u6807\u7b7e\u4ee5\u786e\u4fdd\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u6027\u3002</p>"},{"location":"zh/user-guide/text-widget/#_12","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>SeparatorWidget - \u5185\u5bb9\u5206\u9694\u7ebf</li> <li>AlertWidget - \u63d0\u9192\u4fe1\u606f\u6587\u672c</li> <li>CardWidget - \u5305\u542b\u6587\u672c\u7684\u5361\u7247</li> <li>QuoteWidget - \u5f15\u7528\u6587\u672c</li> <li>ButtonWidget - \u6309\u94ae\u6587\u672c</li> </ul>"},{"location":"zh/user-guide/timeline-widget/","title":"TimelineWidget \u65f6\u95f4\u7ebf\u7ec4\u4ef6","text":"<p>TimelineWidget \u662f\u4e00\u4e2a\u7528\u4e8e\u5728\u90ae\u4ef6\u4e2d\u5c55\u793a\u65f6\u95f4\u5e8f\u5217\u4e8b\u4ef6\u7684\u7ec4\u4ef6\u3002\u5b83\u80fd\u591f\u6309\u65f6\u95f4\u987a\u5e8f\u663e\u793a\u9879\u76ee\u8fdb\u5c55\u3001\u7cfb\u7edf\u65e5\u5fd7\u3001\u5386\u53f2\u8bb0\u5f55\u7b49\u4fe1\u606f\uff0c\u652f\u6301\u72b6\u6001\u6807\u8bb0\u3001\u65f6\u95f4\u6233\u663e\u793a\u548c\u7075\u6d3b\u7684\u6837\u5f0f\u914d\u7f6e\u3002</p>"},{"location":"zh/user-guide/timeline-widget/#_1","title":"\ud83c\udfaf \u7ec4\u4ef6\u9884\u89c81. \u65f6\u95f4\u7ebf\u7ec4\u4ef6\u5c55\u793a","text":"\u65f6\u95f4\u7ebf\u7ec4\u4ef6\u9884\u89c8 \u65f6\u95f4\u7ebf\u7ec4\u4ef6\u9884\u89c8 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670811\u65e5 23:54:51 \u9879\u76ee\u5f00\u53d1\u65f6\u95f4\u7ebf \u2713 2024-01-01 \u5b8c\u6210\u9879\u76ee\u7acb\u9879\u548c\u56e2\u961f\u7ec4\u5efa \u2713 2024-02-15 \u5b8c\u6210\u7528\u6237\u9700\u6c42\u8c03\u7814\u548c\u5206\u6790 \u2713 2024-03-01 \u5b8c\u6210UI/UX\u8bbe\u8ba1\u548c\u67b6\u6784\u8bbe\u8ba1 ! 2024-04-01 \u6b63\u5728\u8fdb\u884c\u6838\u5fc3\u529f\u80fd\u5f00\u53d1 i 2024-05-01 \u8ba1\u5212\u8fdb\u884c\u5168\u9762\u6d4b\u8bd5 i 2024-06-01 \u8ba1\u5212\u6b63\u5f0f\u4e0a\u7ebf\u53d1\u5e03 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/timeline-widget/#_2","title":"\u2728 \u6838\u5fc3\u7279\u6027","text":"<ul> <li>\u23f0 \u65f6\u95f4\u6392\u5e8f: \u81ea\u52a8\u6309\u65f6\u95f4\u987a\u5e8f\u6392\u5217\u4e8b\u4ef6\uff0c\u652f\u6301\u6b63\u5e8f\u548c\u5012\u5e8f</li> <li>\ud83c\udfa8 \u72b6\u6001\u4e3b\u9898: \u57fa\u4e8eStatusType\u7684\u4e3b\u9898\u989c\u8272\u914d\u7f6e\uff0c\u5982\u6210\u529f\u3001\u8b66\u544a\u3001\u9519\u8bef\u7b49</li> <li>\ud83d\udcc5 \u65f6\u95f4\u89e3\u6790: \u667a\u80fd\u89e3\u6790\u591a\u79cd\u65f6\u95f4\u683c\u5f0f\uff0c\u5305\u62ec\u65e5\u671f\u548c\u65f6\u95f4\u6233</li> <li>\u2699\ufe0f \u7075\u6d3b\u914d\u7f6e: \u652f\u6301\u663e\u793a/\u9690\u85cf\u65f6\u95f4\u6233\u3001\u5012\u5e8f\u6392\u5217\u7b49\u9009\u9879</li> <li>\ud83d\udce7 \u90ae\u4ef6\u517c\u5bb9: \u4f7f\u7528\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9\u7684HTML\u548cCSS\u5b9e\u73b0</li> </ul>"},{"location":"zh/user-guide/timeline-widget/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/user-guide/timeline-widget/#_4","title":"\u57fa\u7840\u7528\u6cd5","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets import TimelineWidget\n\n# \u521b\u5efa\u57fa\u7840\u65f6\u95f4\u7ebf\ntimeline = TimelineWidget()\ntimeline.set_title(\"\u9879\u76ee\u5386\u7a0b\")\ntimeline.add_event(\"\u9879\u76ee\u542f\u52a8\", \"2024-01-01\", \"\u9879\u76ee\u6b63\u5f0f\u5f00\u59cb\")\ntimeline.add_event(\"\u9700\u6c42\u786e\u8ba4\", \"2024-01-15\", \"\u5b8c\u6210\u9700\u6c42\u5206\u6790\")\ntimeline.add_event(\"\u8bbe\u8ba1\u8bc4\u5ba1\", \"2024-02-01\", \"UI\u8bbe\u8ba1\u901a\u8fc7\u8bc4\u5ba1\")\n\nemail = Email(\"\u9879\u76ee\u8fdb\u5c55\u62a5\u544a\")\nemail.add_widget(timeline)\n</code></pre>"},{"location":"zh/user-guide/timeline-widget/#_5","title":"\u8fdb\u9636\u7528\u6cd5","text":"Python<pre><code># \u5e26\u72b6\u6001\u548c\u65f6\u95f4\u6233\u7684\u8be6\u7ec6\u65f6\u95f4\u7ebf\ntimeline = TimelineWidget()\ntimeline.set_title(\"\u7cfb\u7edf\u76d1\u63a7\u65e5\u5fd7\")\ntimeline.add_event(\"\u7cfb\u7edf\u542f\u52a8\", \"2024-01-01 09:00:00\", \"\u670d\u52a1\u5668\u542f\u52a8\u6210\u529f\", \"success\")\ntimeline.add_event(\"\u7528\u6237\u767b\u5f55\", \"2024-01-01 09:15:30\", \"\u7ba1\u7406\u5458\u7528\u6237\u767b\u5f55\", \"info\")\ntimeline.add_event(\"\u53d1\u73b0\u8b66\u544a\", \"2024-01-01 10:30:00\", \"CPU\u4f7f\u7528\u7387\u8fc7\u9ad8\", \"warning\")\ntimeline.add_event(\"\u95ee\u9898\u89e3\u51b3\", \"2024-01-01 11:00:00\", \"\u7cfb\u7edf\u6027\u80fd\u6062\u590d\u6b63\u5e38\", \"success\")\ntimeline.show_timestamps(True)\ntimeline.set_reverse_order(True)\n\nemail.add_widget(timeline)\n</code></pre> <p>\ud83d\udcda \u5b8c\u6574API\u6587\u6863: TimelineWidget API</p>"},{"location":"zh/user-guide/timeline-widget/#_6","title":"\ud83c\udfa8 \u6837\u5f0f\u6307\u5357","text":""},{"location":"zh/user-guide/timeline-widget/#_7","title":"\u72b6\u6001\u7c7b\u578b\u548c\u4e3b\u9898\u989c\u8272","text":"<ul> <li>success: \u7eff\u8272 (#107c10) - \u6210\u529f\u5b8c\u6210\u7684\u4efb\u52a1\u3001\u91cc\u7a0b\u7891\u8fbe\u6210</li> <li>warning: \u6a59\u8272 (#ff8c00) - \u9700\u8981\u6ce8\u610f\u7684\u4e8b\u4ef6\u3001\u6027\u80fd\u8b66\u544a</li> <li>error: \u7ea2\u8272 (#d13438) - \u9519\u8bef\u3001\u6545\u969c\u3001\u5931\u8d25\u4e8b\u4ef6</li> <li>info: \u84dd\u8272 (#0078d4) - \u4fe1\u606f\u6027\u4e8b\u4ef6\u3001\u901a\u77e5\u3001\u53d1\u5e03</li> <li>primary: \u84dd\u8272 (#0078d4) - \u91cd\u8981\u4e8b\u4ef6\u3001\u5173\u952e\u8282\u70b9</li> </ul>"},{"location":"zh/user-guide/timeline-widget/#_8","title":"\ud83d\udcf1 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/user-guide/timeline-widget/#1","title":"1. \u9879\u76ee\u8fdb\u5c55\u65f6\u95f4\u7ebf\u9879\u76ee\u91cc\u7a0b\u7891\u672c\u5468\u8fdb\u5c55","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.timeline_widget import TimelineWidget\n\n# \u521b\u5efa\u9879\u76ee\u8fdb\u5c55\u62a5\u544a\u90ae\u4ef6\nemail = Email(\"\u9879\u76ee\u8fdb\u5c55\u62a5\u544a\")\n\n# \u9879\u76ee\u5173\u952e\u91cc\u7a0b\u7891\ntimeline1 = TimelineWidget()\ntimeline1.set_title(\"\u9879\u76ee\u91cc\u7a0b\u7891\")\ntimeline1.add_event(\"\u9879\u76ee\u542f\u52a8\", \"2024-01-01\", \"\u9879\u76ee\u6b63\u5f0f\u542f\u52a8\", \"success\")\ntimeline1.add_event(\"\u9700\u6c42\u786e\u8ba4\", \"2024-01-15\", \"\u9700\u6c42\u6587\u6863\u786e\u8ba4\u5b8c\u6210\", \"success\")\ntimeline1.add_event(\"\u8bbe\u8ba1\u8bc4\u5ba1\", \"2024-02-01\", \"\u6280\u672f\u67b6\u6784\u8bbe\u8ba1\u901a\u8fc7\", \"success\")\ntimeline1.add_event(\"\u5f00\u53d1\u9636\u6bb5\", \"2024-02-15\", \"\u8fdb\u5165\u5f00\u53d1\u9636\u6bb5\", \"info\")\ntimeline1.add_event(\"\u6d4b\u8bd5\u9636\u6bb5\", \"2024-03-15\", \"\u529f\u80fd\u6d4b\u8bd5\u5f00\u59cb\", \"warning\")\ntimeline1.show_timestamps(True)\n\nemail.add_widget(timeline1)\n\n# \u5bfc\u51faHTML\u6587\u4ef6\nemail.export_html(\"project_progress_report.html\")\n</code></pre> \u9879\u76ee\u8fdb\u5c55\u62a5\u544a \u9879\u76ee\u8fdb\u5c55\u62a5\u544a \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:16:19 \u2713 \u9879\u76ee\u542f\u52a8 2024-01-01 \u9879\u76ee\u6b63\u5f0f\u542f\u52a8 \u2713 \u9700\u6c42\u786e\u8ba4 2024-01-15 \u9700\u6c42\u6587\u6863\u786e\u8ba4\u5b8c\u6210 \u2713 \u8bbe\u8ba1\u8bc4\u5ba1 2024-02-01 \u6280\u672f\u67b6\u6784\u8bbe\u8ba1\u901a\u8fc7 i \u5f00\u53d1\u9636\u6bb5 2024-02-15 \u8fdb\u5165\u5f00\u53d1\u9636\u6bb5 ! \u6d4b\u8bd5\u9636\u6bb5 2024-03-15 \u529f\u80fd\u6d4b\u8bd5\u5f00\u59cb \u25cf \u4e0a\u7ebf\u90e8\u7f72 2024-04-01 \u9884\u8ba1\u4e0a\u7ebf\u65f6\u95f4 i \u96c6\u6210\u6d4b\u8bd5 2024-02-23 16:00 \u96c6\u6210\u6d4b\u8bd5\u8fdb\u884c\u4e2d ! BUG\u4fee\u590d 2024-02-22 10:15 \u4fee\u590d\u5bc6\u7801\u9a8c\u8bc1\u95ee\u9898 \u2713 \u4ee3\u7801\u5ba1\u67e5 2024-02-21 14:30 \u767b\u5f55\u6a21\u5757\u4ee3\u7801\u5ba1\u67e5\u901a\u8fc7 \u2713 \u529f\u80fd\u5f00\u53d1 2024-02-20 09:00 \u5b8c\u6210\u7528\u6237\u767b\u5f55\u6a21\u5757 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/timeline-widget/#2","title":"2. \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u5fd7\u7cfb\u7edf\u4e8b\u4ef6\u65e5\u5fd7\u90e8\u7f72\u8bb0\u5f55","text":"Python<pre><code>from email_widget import Email\nfrom email_widget.widgets.timeline_widget import TimelineWidget\n\n# \u521b\u5efa\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\u90ae\u4ef6\nemail = Email(\"\u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5\")\n\n# \u7cfb\u7edf\u4e8b\u4ef6\u65f6\u95f4\u7ebf\ntimeline = TimelineWidget()\ntimeline.set_title(\"\u7cfb\u7edf\u4e8b\u4ef6\u65e5\u5fd7\")\ntimeline.add_event(\"\u7cfb\u7edf\u542f\u52a8\", \"2024-01-01 08:00:00\", \"\u670d\u52a1\u5668\u91cd\u542f\u5b8c\u6210\", \"success\")\ntimeline.add_event(\"\u5b9a\u65f6\u5907\u4efd\", \"2024-01-01 12:00:00\", \"\u6570\u636e\u5e93\u81ea\u52a8\u5907\u4efd\", \"info\")\ntimeline.add_event(\"\u5185\u5b58\u8b66\u544a\", \"2024-01-01 14:30:00\", \"\u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523085%\", \"warning\")\ntimeline.add_event(\"\u670d\u52a1\u5f02\u5e38\", \"2024-01-01 15:45:00\", \"Redis\u8fde\u63a5\u8d85\u65f6\", \"error\")\ntimeline.add_event(\"\u95ee\u9898\u4fee\u590d\", \"2024-01-01 16:15:00\", \"Redis\u670d\u52a1\u91cd\u542f\uff0c\u8fde\u63a5\u6062\u590d\", \"success\")\ntimeline.show_timestamps(True)\ntimeline.set_reverse_order(True)\n\nemail.add_widget(timeline)\n</code></pre> \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u7cfb\u7edf\u8fd0\u7ef4\u65e5\u62a5 \u751f\u6210\u65f6\u95f4: 2025\u5e7407\u670812\u65e5 00:16:48 i \u6027\u80fd\u4f18\u5316 2024-01-01 18:00:00 \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2 \u2713 \u95ee\u9898\u4fee\u590d 2024-01-01 16:15:00 Redis\u670d\u52a1\u91cd\u542f\uff0c\u8fde\u63a5\u6062\u590d \u2717 \u670d\u52a1\u5f02\u5e38 2024-01-01 15:45:00 Redis\u8fde\u63a5\u8d85\u65f6 ! \u5185\u5b58\u8b66\u544a 2024-01-01 14:30:00 \u5185\u5b58\u4f7f\u7528\u7387\u8fbe\u523085% i \u5b9a\u65f6\u5907\u4efd 2024-01-01 12:00:00 \u6570\u636e\u5e93\u81ea\u52a8\u5907\u4efd \u2713 \u7cfb\u7edf\u542f\u52a8 2024-01-01 08:00:00 \u670d\u52a1\u5668\u91cd\u542f\u5b8c\u6210 \u2713 \u91cd\u65b0\u90e8\u7f72 2024-01-02 14:00 \u4fee\u590d\u540e\u91cd\u65b0\u90e8\u7f72v1.2.1 \u2717 \u56de\u6eda\u64cd\u4f5c 2024-01-02 10:00 \u56de\u6eda\u5230v1.1.9 ! \u70ed\u4fee\u590d 2024-01-02 09:30 \u4fee\u590d\u767b\u5f55\u95ee\u9898 \u2713 v1.2.0\u90e8\u7f72 2024-01-01 20:00 \u751f\u4ea7\u73af\u5883\u90e8\u7f72\u5b8c\u6210 <p>\u6b64\u90ae\u4ef6\u7531 EmailWidget \u81ea\u52a8\u751f\u6210</p>"},{"location":"zh/user-guide/timeline-widget/#_9","title":"\u26a1 \u5feb\u6377\u65b9\u6cd5","text":"<p>Email \u7c7b\u63d0\u4f9b\u4e86 <code>add_timeline</code> \u5feb\u6377\u65b9\u6cd5\uff1a</p> Python<pre><code># \u5e26\u53c2\u6570\u7684\u5feb\u6377\u65b9\u6cd5\nemail.add_timeline(\n    title=\"\u9879\u76ee\u65f6\u95f4\u7ebf\",\n    events=[\n        (\"\u4e8b\u4ef61\", \"2024-01-01\", \"\u63cf\u8ff01\"),\n        (\"\u4e8b\u4ef62\", \"2024-01-02\", \"\u63cf\u8ff02\", \"success\"),\n        (\"\u4e8b\u4ef63\", \"2024-01-03\", \"\u63cf\u8ff03\", \"warning\")\n    ],\n    show_time=True,\n    reverse_order=True\n)\n</code></pre>"},{"location":"zh/user-guide/timeline-widget/#_10","title":"\ud83d\udc1b \u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/user-guide/timeline-widget/#q","title":"Q: \u65f6\u95f4\u683c\u5f0f\u6709\u4ec0\u4e48\u8981\u6c42\uff1f","text":"<p>A: \u652f\u6301\u591a\u79cd\u65f6\u95f4\u683c\u5f0f\uff0c\u81ea\u52a8\u89e3\u6790\uff1a Python<pre><code>timeline.add_event(\"\u4e8b\u4ef61\", \"2024-01-01\")              # \u65e5\u671f\ntimeline.add_event(\"\u4e8b\u4ef62\", \"2024-01-01 15:30\")        # \u65e5\u671f\u65f6\u95f4\ntimeline.add_event(\"\u4e8b\u4ef63\", datetime.now())            # datetime\u5bf9\u8c61\n</code></pre></p>"},{"location":"zh/user-guide/timeline-widget/#q_1","title":"Q: \u5982\u4f55\u5904\u7406\u76f8\u540c\u65f6\u95f4\u7684\u4e8b\u4ef6\uff1f","text":"<p>A: \u76f8\u540c\u65f6\u95f4\u7684\u4e8b\u4ef6\u6309\u6dfb\u52a0\u987a\u5e8f\u6392\u5217\u3002</p>"},{"location":"zh/user-guide/timeline-widget/#q_2","title":"Q: \u5012\u5e8f\u548c\u6b63\u5e8f\u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>A:  - \u6b63\u5e8f (False): \u6700\u65e9\u4e8b\u4ef6\u5728\u4e0a\uff0c\u6700\u65b0\u4e8b\u4ef6\u5728\u4e0b - \u5012\u5e8f (True): \u6700\u65b0\u4e8b\u4ef6\u5728\u4e0a\uff0c\u6700\u65e9\u4e8b\u4ef6\u5728\u4e0b</p>"},{"location":"zh/user-guide/timeline-widget/#_11","title":"\ud83d\udd17 \u76f8\u5173\u7ec4\u4ef6","text":"<ul> <li>ChecklistWidget - \u4efb\u52a1\u8fdb\u5ea6\u5c55\u793a</li> <li>ProgressWidget - \u8fdb\u5ea6\u6761\u663e\u793a</li> <li>StatusWidget - \u72b6\u6001\u4fe1\u606f\u5c55\u793a</li> <li>LogWidget - \u65e5\u5fd7\u4fe1\u606f\u5c55\u793a</li> <li>CardWidget - \u53ef\u4ee5\u5305\u542b\u65f6\u95f4\u7ebf\u7684\u5361\u7247</li> </ul>"},{"location":"zh/user-guide/widget-overview/","title":"\u7ec4\u4ef6\u6982\u89c8","text":"<p>EmailWidget \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u7ec4\u4ef6\u5e93\uff0c\u6db5\u76d6\u4e86\u90ae\u4ef6\u4e2d\u5e38\u89c1\u7684\u5404\u79cd\u5185\u5bb9\u7c7b\u578b\u3002\u672c\u9875\u9762\u5c55\u793a\u4e86\u6240\u6709\u53ef\u7528\u7684\u7ec4\u4ef6\u53ca\u5176\u9884\u89c8\u6548\u679c\u3002</p> TextWidget \u6587\u672c\u7ec4\u4ef6 <p>\u7528\u4e8e\u663e\u793a\u5404\u79cd\u6587\u672c\u5185\u5bb9\uff0c\u652f\u6301\u591a\u79cd\u6837\u5f0f\u548c\u683c\u5f0f</p> \u8fd9\u662f\u4e00\u6bb5\u91cd\u8981\u6587\u672c \u6807\u9898 \u6b63\u6587 \u7ae0\u8282 TableWidget \u8868\u683c\u7ec4\u4ef6 <p>\u5c55\u793a\u7ed3\u6784\u5316\u6570\u636e\uff0c\u652f\u6301\u8868\u5934\u3001\u7d22\u5f15\u5217\u3001\u6761\u7eb9\u6837\u5f0f\u7b49</p> \u9879\u76ee \u72b6\u6001 \u7528\u6237\u6ce8\u518c \u6b63\u5e38 \u6570\u636e \u7edf\u8ba1 \u72b6\u6001 ImageWidget \u56fe\u7247\u7ec4\u4ef6 <p>\u5c55\u793a\u56fe\u7247\u5185\u5bb9\uff0c\u652f\u6301\u6807\u9898\u3001\u63cf\u8ff0\u548c\u591a\u79cd\u5e03\u5c40\u9009\u9879</p> \u6570\u636e\u8d8b\u52bf\u56fe                              [\u56fe\u7247\u5360\u4f4d\u7b26]                          <p>\u663e\u793a\u6700\u8fd130\u5929\u7684\u7528\u6237\u589e\u957f\u8d8b\u52bf</p> \u56fe\u7247 \u5c55\u793a \u8bf4\u660e ChartWidget \u56fe\u8868\u7ec4\u4ef6 <p>\u4e13\u95e8\u7528\u4e8e\u5c55\u793a\u56fe\u8868\uff0c\u652f\u6301\u591a\u79cd\u56fe\u8868\u7c7b\u578b\u548c\u6570\u636e\u6458\u8981</p> \u6708\u5ea6\u9500\u552e\u7edf\u8ba1                              [\u56fe\u8868\u5360\u4f4d\u7b26]                                                       \u603b\u9500\u552e\u989d: \u00a51,250,000                          \u56fe\u8868 \u6570\u636e \u53ef\u89c6\u5316 ProgressWidget \u8fdb\u5ea6\u6761 <p>\u663e\u793a\u4efb\u52a1\u6216\u8fdb\u7a0b\u7684\u5b8c\u6210\u8fdb\u5ea6\uff0c\u652f\u6301\u591a\u79cd\u4e3b\u9898</p> \u9879\u76ee\u5b8c\u6210\u8fdb\u5ea6 75% \u8fdb\u5ea6 \u72b6\u6001 \u767e\u5206\u6bd4 CircularProgressWidget \u5706\u5f62\u8fdb\u5ea6\u6761 <p>\u4ee5\u5706\u5f62\u65b9\u5f0f\u663e\u793a\u8fdb\u5ea6\uff0c\u9002\u5408\u5c55\u793a\u767e\u5206\u6bd4\u6570\u636e</p> 88% \u7cfb\u7edf\u6027\u80fd \u5706\u5f62 \u8fdb\u5ea6 KPI StatusWidget \u72b6\u6001\u4fe1\u606f <p>\u5c55\u793a\u591a\u4e2a\u72b6\u6001\u9879\u7684\u4fe1\u606f\uff0c\u652f\u6301\u6c34\u5e73\u548c\u5782\u76f4\u5e03\u5c40</p> \u7cfb\u7edf\u72b6\u6001 CPU\u4f7f\u7528\u7387 45% \u5185\u5b58\u4f7f\u7528\u7387 78% \u72b6\u6001 \u76d1\u63a7 \u7cfb\u7edf AlertWidget \u8b66\u544a\u7ec4\u4ef6 <p>\u663e\u793a\u5404\u79cd\u7c7b\u578b\u7684\u8b66\u544a\u4fe1\u606f\uff0c\u652f\u6301GitHub\u98ce\u683c\u7684\u63d0\u793a\u6846</p> \u2139\ufe0f \u6ce8\u610f \u8fd9\u662f\u4e00\u6761\u91cd\u8981\u7684\u63d0\u793a\u4fe1\u606f \u8b66\u544a \u63d0\u793a \u901a\u77e5 CardWidget \u5361\u7247\u7ec4\u4ef6 <p>\u5361\u7247\u5bb9\u5668\uff0c\u7528\u4e8e\u7ec4\u7ec7\u548c\u5c55\u793a\u76f8\u5173\u4fe1\u606f</p> \ud83d\udcca \u6570\u636e\u7edf\u8ba1                              \u672c\u6708\u65b0\u589e\u7528\u6237 1,234 \u4eba\uff0c\u540c\u6bd4\u589e\u957f 15.8%                          \u5361\u7247 \u5bb9\u5668 \u4fe1\u606f QuoteWidget \u5f15\u7528\u7ec4\u4ef6 <p>\u5c55\u793a\u5f15\u7528\u5185\u5bb9\uff0c\u652f\u6301\u4f5c\u8005\u548c\u6765\u6e90\u4fe1\u606f</p>                              \"\u4f18\u79c0\u7684\u4ee3\u7801\u662f\u5176\u81ea\u8eab\u6700\u597d\u7684\u6587\u6863\u3002\"                                                       \u2014 Steve McConnell                          \u5f15\u7528 \u6587\u672c \u4f5c\u8005 ButtonWidget \u6309\u94ae\u7ec4\u4ef6 <p>\u521b\u5efa\u53ef\u70b9\u51fb\u7684\u6309\u94ae\uff0c\u652f\u6301\u591a\u79cd\u6837\u5f0f\u548c\u90ae\u4ef6\u5ba2\u6237\u7aef\u517c\u5bb9</p>                              \u7acb\u5373\u5f00\u59cb                                                           \u8d2d\u4e70                                                               \u4e86\u89e3\u66f4\u591a                              \u6309\u94ae \u94fe\u63a5 \u4ea4\u4e92 ColumnWidget \u5217\u5e03\u5c40\u7ec4\u4ef6 <p>\u591a\u5217\u5e03\u5c40\u7ba1\u7406\u5668\uff0c\u652f\u6301\u54cd\u5e94\u5f0f\u5217\u5e03\u5c40</p>                                  \u5217 1                                                               \u5217 2                                                               \u5217 3                              \u5e03\u5c40 \u591a\u5217 \u54cd\u5e94\u5f0f ChecklistWidget \u6e05\u5355\u7ec4\u4ef6 <p>\u521b\u5efa\u4efb\u52a1\u6e05\u5355\u548c\u5f85\u529e\u4e8b\u9879\uff0c\u652f\u6301\u591a\u79cd\u72b6\u6001\u548c\u8fdb\u5ea6\u7edf\u8ba1</p> \u9879\u76ee\u8fdb\u5ea6\u6e05\u5355 \u5b8c\u6210\u8fdb\u5ea6 2/3 (66.7%) \u2713 \u9700\u6c42\u5206\u6790 \u5b8c\u6210 \u2713 \u8bbe\u8ba1\u8bc4\u5ba1 \u5b8c\u6210 \u25cb \u5f00\u53d1\u5b9e\u65bd \u5f85\u529e \u6e05\u5355 \u8fdb\u5ea6 \u4efb\u52a1 LogWidget \u65e5\u5fd7\u7ec4\u4ef6 <p>\u5c55\u793a\u65e5\u5fd7\u4fe1\u606f\uff0c\u652f\u6301\u4e0d\u540c\u7ea7\u522b\u7684\u65e5\u5fd7\u663e\u793a</p> [INFO] \u7cfb\u7edf\u542f\u52a8\u6210\u529f [WARN] \u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3 [ERROR] \u8fde\u63a5\u5931\u8d25 \u65e5\u5fd7 \u76d1\u63a7 \u8c03\u8bd5 SeparatorWidget \u5206\u9694\u7b26\u7ec4\u4ef6 <p>\u521b\u5efa\u89c6\u89c9\u5206\u9694\u7ebf\uff0c\u652f\u6301\u591a\u79cd\u6837\u5f0f\uff0c\u7528\u4e8e\u5206\u5272\u90ae\u4ef6\u5185\u5bb9\u533a\u5757</p> \u5b9e\u7ebf\u5206\u9694\u7b26 \u865a\u7ebf\u5206\u9694\u7b26 \u70b9\u7ebf\u5206\u9694\u7b26 \u5206\u9694 \u5e03\u5c40 \u5206\u5272 TimelineWidget \u65f6\u95f4\u7ebf\u7ec4\u4ef6 <p>\u5c55\u793a\u65f6\u95f4\u5e8f\u5217\u4e8b\u4ef6\uff0c\u652f\u6301\u72b6\u6001\u6807\u8bb0\u548c\u65f6\u95f4\u6233\u663e\u793a</p> \u9879\u76ee\u8fdb\u5c55 \u9879\u76ee\u542f\u52a8 \u9879\u76ee\u6b63\u5f0f\u5f00\u59cb \u9700\u6c42\u5206\u6790 \u5b8c\u6210\u9700\u6c42\u8c03\u7814 \u5f00\u53d1\u5b9e\u73b0 \u4ee3\u7801\u5f00\u53d1\u4e2d \u65f6\u95f4\u7ebf \u4e8b\u4ef6 \u8fdb\u5ea6 MetricWidget \u6307\u6807\u7ec4\u4ef6 <p>\u5c55\u793a\u5173\u952e\u6570\u636e\u6307\u6807\uff0c\u652f\u6301\u8d8b\u52bf\u5206\u6790\u548c\u591a\u79cd\u5e03\u5c40</p> \u6838\u5fc3\u6307\u6807 12K\u4eba \u6d3b\u8dc3\u7528\u6237 \u2197 +15.6% \u00a51.2M \u6708\u6536\u5165 \u2192 +8.2% 3.2% \u8f6c\u5316\u7387 \u25cf +0.3% \u6307\u6807 KPI \u8d8b\u52bf \u66f4\u591a\u7ec4\u4ef6 <p>\u66f4\u591a\u5f3a\u5927\u7684\u7ec4\u4ef6\u6b63\u5728\u5f00\u53d1\u4e2d...</p>                              \ud83d\udea7 \u656c\u8bf7\u671f\u5f85                                                       \u6211\u4eec\u6b63\u5728\u4e0d\u65ad\u6dfb\u52a0\u65b0\u7684\u7ec4\u4ef6                             \u4e3a\u60a8\u63d0\u4f9b\u66f4\u4e30\u5bcc\u7684\u90ae\u4ef6\u5185\u5bb9                          \u5f00\u53d1\u4e2d \u656c\u8bf7\u671f\u5f85"},{"location":"zh/user-guide/widget-overview/#_2","title":"\ud83c\udfaf \u6240\u6709\u7ec4\u4ef6\u9884\u89c8","text":""}]}